{"pageProps":{"questions":[{"id":"EW62WW9bPyHlQgMaJM3k","isMC":true,"answer":"B","question_images":[],"timestamp":"2023-09-28 08:57:00","unix_timestamp":1695884220,"answers_community":["B (100%)"],"answer_ET":"C","question_text":"Which of the following statements pertaining to software testing approaches is correct?","answer_images":[],"answer_description":"A bottom-up approach to testing begins testing of atomic units, such as programs or modules, and works upwards until a complete system testing has taken place.\nIt allows errors in critical modules to be found early. A top-down approach allows for early detection of interface errors and raises confidence in the system, as programmers and users actually see a working system. White box testing is predicated on a close examination of procedural detail. Black box testing examines some aspect of the system with little regard for the internal logical structure of the software.\nSource: Information Systems Audit and Control Association, Certified Information Systems Auditor 2002 review manual, Chapter 6: Business Application System\nDevelopment, Acquisition, Implementation and Maintenance (page 300).\nTop Down Testing: An approach to integration testing where the component at the top of the component hierarchy is tested first, with lower level components being simulated by stubs. Tested components are then used to test lower level components. The process is repeated until the lowest level components have been tested.\nBottom Up Testing: An approach to integration testing where the lowest level components are tested first, then used to facilitate the testing of higher level components. The process is repeated until the component at the top of the hierarchy is tested.\nBlack Box Testing: Testing based on an analysis of the specification of a piece of software without reference to its internal workings. The goal is to test how well the component conforms to the published requirements for the component.","topic":"2","discussion":[{"poster":"fa8df4c","content":"Top-down includes Modular errors, and Bottom-up includes interface errors. The answer is indeed \"C.\"","timestamp":"1720124520.0","comment_id":"1114105","upvote_count":"1"},{"poster":"formazionehs","timestamp":"1714486500.0","comment_id":"1058019","content":"The correct answer is C","upvote_count":"1"},{"upvote_count":"1","timestamp":"1711616220.0","content":"Selected Answer: B\nA top-down approach allows errors in critical modules to be detected earlier.\n\nIn software testing, a top-down approach typically starts with testing the higher-level or critical modules of a software system first. This approach allows for the early detection of errors or issues in these critical components. As testing progresses to lower-level modules, it's expected that the foundational parts of the system are stable and working correctly. By identifying issues in critical modules early in the testing process, organizations can address these problems before they potentially cascade into more complex issues later on.","poster":"Stevovo123","comment_id":"1019527"}],"choices":{"D":"Black box testing is predicated on a close examination of procedural detail.","B":"A top-down approach allows errors in critical modules to be detected earlier.","A":"A bottom-up approach allows interface errors to be detected earlier.","C":"The test plan and results should be retained as part of the system's permanent documentation."},"exam_id":189,"question_id":81,"url":"https://www.examtopics.com/discussions/isc/view/121643-exam-sscp-topic-2-question-140-discussion/"},{"id":"8uV5jWXD5gMe7Kbb2sBz","question_images":[],"answer_description":"The Product design phase deals with incorporating security specifications, adjusting test plans and data, determining access controls, design documentation, evaluating encryption options, and verification.\nImplementation is incorrect because it deals with Installing security software, running the system, acceptance testing, security software testing, and complete documentation certification and accreditation (where necessary).\nDetailed design is incorrect because it deals with information security policy, standards, legal issues, and the early validation of concepts. software plans and requirements is incorrect because it deals with addressesing threats, vulnerabilities, security requirements, reasonable care, due diligence, legal liabilities, cost/benefit analysis, level of protection desired, test plans.\nSources:\nKRUTZ, Ronald L. & VINES, Russel D., The CISSP Prep Guide: Mastering the Ten Domains of Computer Security, John Wiley & Sons, 2001, Chapter 7:\nApplications and Systems Development (page 252).\nKRUTZ, Ronald & VINES, Russel, The CISSP Prep Guide: Gold Edition, Wiley Publishing Inc., 2003, Chapter 7: Security Life Cycle Components, Figure 7.5\n(page 346).\nAt which of the basic phases of the System Development Life Cycle are security requirements formalized?\n\nA. Disposal -\n\nB. System Design Specifications -\nC. Development and Implementation\nD. Functional Requirements Definition\nDuring the Functional Requirements Definition the project management and systems development teams will conduct a comprehensive analysis of current and possible future functional requirements to ensure that the new system will meet end-user needs. The teams also review the documents from the project initiation phase and make any revisions or updates as needed. For smaller projects, this phase is often subsumed in the project initiation phase. At this point security requirements should be formalized.\nThe Development Life Cycle is a project management tool that can be used to plan, execute, and control a software development project usually called the\nSystems Development Life Cycle (SDLC).\nThe SDLC is a process that includes systems analysts, software engineers, programmers, and end users in the project design and development. Because there is no industry-wide SDLC, an organization can use any one, or a combination of SDLC methods.\nThe SDLC simply provides a framework for the phases of a software development project from defining the functional requirements to implementation. Regardless of the method used, the SDLC outlines the essential phases, which can be shown together or as separate elements. The model chosen should be based on the project.\nFor example, some models work better with long-term, complex projects, while others are more suited for short-term projects. The key element is that a formalized\nSDLC is utilized.\nThe number of phases can range from three basic phases (concept, design, and implement) on up.\nThe basic phases of SDLC are:\n\nProject initiation and planning -\nFunctional requirements definition\n\nSystem design specifications -\n\nDevelopment and implementation -\nDocumentation and common program controls\nTesting and evaluation control, (certification and accreditation)\nTransition to production (implementation)\nThe system life cycle (SLC) extends beyond the SDLC to include two additional phases:\nOperations and maintenance support (post-installation)\nRevisions and system replacement\n\nSystem Design Specifications -\nThis phase includes all activities related to designing the system and software. In this phase, the system architecture, system outputs, and system interfaces are designed. Data input, data flow, and output requirements are established and security features are designed, generally based on the overall security architecture for the company.\n\nDevelopment and Implementation -\nDuring this phase, the source code is generated, test scenarios and test cases are developed, unit and integration testing is conducted, and the program and system are documented for maintenance and for turnover to acceptance testing and production. As well as general care for software quality, reliability, and consistency of operation, particular care should be taken to ensure that the code is analyzed to eliminate common vulnerabilities that might lead to security exploits and other risks.\nDocumentation and Common Program Controls\nThese are controls used when editing the data within the program, the types of logging the program should be doing, and how the program versions should be stored. A large number of such controls may be needed, see the reference below for a full list of controls.\n\nAcceptance -\nIn the acceptance phase, preferably an independent group develops test data and tests the code to ensure that it will function within the organizations environment and that it meets all the functional and security requirements. It is essential that an independent group test the code during all applicable stages of development to prevent a separation of duties issue. The goal of security testing is to ensure that the application meets its security requirements and specifications. The security testing should uncover all design and implementation flaws that would allow a user to violate the software security policy and requirements. To ensure test validity, the application should be tested in an environment that simulates the production environment. This should include a security certification package and any user documentation.\nCertification and Accreditation (Security Authorization)\nCertification is the process of evaluating the security stance of the software or system against a predetermined set of security standards or policies. Certification also examines how well the system performs its intended functional requirements. The certification or evaluation document should contain an analysis of the technical and nontechnical security features and countermeasures and the extent to which the software or system meets the security requirements for its mission and operational environment.\nTransition to Production (Implementation)\nDuring this phase, the new system is transitioned from the acceptance phase into the live production environment. Activities during this phase include obtaining security accreditation; training the new users according to the implementation and training schedules; implementing the system, including installation and data conversions; and, if necessary, conducting any parallel operations.\nRevisions and System Replacement\nAs systems are in production mode, the hardware and software baselines should be subject to periodic evaluations and audits. In some instances, problems with the application may not be defects or flaws, but rather additional functions not currently developed in the application. Any changes to the application must follow the same SDLC and be recorded in a change management system. Revision reviews should include security planning and procedures to avoid future problems.\nPeriodic application audits should be conducted and include documenting security incidents when problems occur. Documenting system failures is a valuable resource for justifying future system enhancements.\nBelow you have the phases used by NIST in it's 800-63 Revision 2 document\nAs noted above, the phases will vary from one document to another one. For the purpose of the exam use the list provided in the official ISC2 Study book which is presented in short form above. Refer to the book for a more detailed description of activities at each of the phases of the SDLC.\n\nHowever, all references have very similar steps being used. As mentioned in the official book, it could be as simple as three phases in it's most basic version\n(concept, design, and implement) or a lot more in more detailed versions of the SDLC.\nThe key thing is to make use of an SDLC.\n\n\nSDLC phases -\nReference(s) used for this question:\nNIST SP 800-64 Revision 2 at http://csrc.nist.gov/publications/nistpubs/800-64-Rev2/SP800-64-Revision2.pdf and\nSchneiter, Andrew (2013-04-15). Official (ISC)2 Guide to the CISSP CBK, Third Edition: Software Development Security ((ISC)2 Press) (Kindle Locations 134-\n157). Auerbach Publications. Kindle Edition.","timestamp":"2020-12-21 06:57:00","answer_ET":"Answer: D","answer_images":["https://www.examtopics.com/assets/media/exam-media/02070/0031600001.jpg"],"question_text":"Which of the following phases of a software development life cycle normally incorporates the security specifications, determines access controls, and evaluates encryption options?","question_id":82,"unix_timestamp":1608530220,"choices":{"B":"Implementation","A":"Detailed design","C":"Product design","D":"Software plans and requirements"},"discussion":[{"upvote_count":"7","poster":"TheRock94","content":"Answer is C. Also read the explanation below there is another question in embedded in the details.","comment_id":"249083","timestamp":"1640066220.0"},{"content":"Selected Answer: A\nThe phase of a software development life cycle that typically incorporates security specifications, determines access controls, and evaluates encryption options is:\n\nA. Detailed design.\n\nDuring the Detailed Design phase, the software architecture and functionality are elaborated upon. This is where the security specifications, access controls, encryption methods, and other security-related details are integrated into the design. It involves determining how security measures will be implemented, defining access restrictions, and evaluating encryption techniques to ensure they align with the software's security requirements.","upvote_count":"1","comment_id":"1081743","timestamp":"1732723200.0","poster":"nanson"},{"upvote_count":"1","content":"Selected Answer: A\nA. Detailed design\n\nThe phase of a software development life cycle that normally incorporates security specifications, determines access controls, and evaluates encryption options is the \"Detailed design\" phase.\n\nDuring the detailed design phase, the software architecture and specifications are elaborated upon in greater detail. Security considerations, such as access controls and encryption, are typically addressed in this phase to ensure that the software is designed with security in mind. This phase involves defining the specifics of how the software will be implemented, including how data will be protected and access to the system will be controlled to meet security requirements.","comment_id":"1019539","timestamp":"1727506980.0","poster":"Stevovo123"},{"comment_id":"440409","upvote_count":"2","content":"C is correct","poster":"Yupata","timestamp":"1662476700.0"}],"isMC":true,"answers_community":["A (100%)"],"exam_id":189,"url":"https://www.examtopics.com/discussions/isc/view/40456-exam-sscp-topic-2-question-143-discussion/","topic":"2","answer":"A"},{"id":"pAxZA3lu0raNw3A1F42E","isMC":true,"answer":"A","exam_id":189,"question_id":83,"url":"https://www.examtopics.com/discussions/isc/view/30559-exam-sscp-topic-2-question-144-discussion/","timestamp":"2020-09-04 10:48:00","question_images":[],"answers_community":["A (75%)","C (25%)"],"answer_ET":"A","question_text":"Which of the following is less likely to be included in the change control sub-phase of the maintenance phase of a software product?","unix_timestamp":1599209280,"topic":"2","answer_images":[],"discussion":[{"content":"From the explanation, the right answer should be A","poster":"Staanlee","comment_id":"173255","timestamp":"1614854880.0","upvote_count":"8"},{"comment_id":"1189537","upvote_count":"1","poster":"e098e9c","content":"Selected Answer: A\nA based on the explanation","timestamp":"1728075000.0"},{"comment_id":"1177793","content":"Selected Answer: A\nbased on explaination A is correct","poster":"ram993","upvote_count":"1","timestamp":"1726778460.0"},{"content":"Selected Answer: C\nDetermining the interface that is presented to the user is less likely to be included in the change control sub-phase of the maintenance phase of a software product.","upvote_count":"1","poster":"Stevovo123","timestamp":"1711618380.0","comment_id":"1019572"},{"upvote_count":"1","poster":"sblacow","content":"Selected Answer: A\nThe correct answer is A","comment_id":"706529","timestamp":"1682691000.0"},{"poster":"Yupata","content":"The correct answer is A","comment_id":"440416","timestamp":"1646586480.0","upvote_count":"2"}],"answer_description":"","choices":{"B":"Recreating and analyzing the problem","C":"Determining the interface that is presented to the user","D":"Establishing the priorities of requests","A":"Estimating the cost of the changes requested"}},{"id":"F0CAm4hZkHUHrOrJv3tO","isMC":true,"timestamp":"2022-03-19 22:06:00","answer_ET":"D","question_images":[],"answer":"B","url":"https://www.examtopics.com/discussions/isc/view/72911-exam-sscp-topic-2-question-154-discussion/","answers_community":["B (100%)"],"unix_timestamp":1647723960,"question_id":84,"question_text":"Which of the following rules is least likely to support the concept of least privilege?","answer_images":[],"discussion":[{"timestamp":"1682199900.0","upvote_count":"6","comment_id":"590252","content":"answer is D, the explanation explains that an admin should use a less privileged act to do ordinary tasks.","poster":"robviplv"},{"upvote_count":"1","content":"Selected Answer: B\nThe concept of least privilege dictates that individuals, including administrators, should only have the minimum level of access and permissions required to perform their job functions effectively. While administrators typically have elevated privileges to manage and maintain systems, they should still follow the principle of least privilege by using their elevated accounts only when necessary for administrative tasks.","poster":"Stevovo123","timestamp":"1727581560.0","comment_id":"1020407"},{"content":"Selected Answer: B\nas per explanation its B","comments":[{"comment_id":"1073685","timestamp":"1731883140.0","upvote_count":"2","content":"Besides B being very likely to support least privilege per common sense and this explanation, the fact that D is a detractor makes it the least likely you knob","poster":"Narobi"}],"comment_id":"571274","upvote_count":"1","timestamp":"1679260020.0","poster":"Rongupta"},{"content":"as per explanation its B","upvote_count":"1","poster":"Rongupta","timestamp":"1679259960.0","comment_id":"571273"}],"topic":"2","answer_description":"Only data to and from critical systems and applications should be allowed through the firewall is a detractor. Critical systems or applications do not necessarily need to have traffic go through a firewall. Even if they did, only the minimum required services should be allowed. Systems that are not deemed critical may also need to have traffic go through the firewall.\nLeast privilege is a basic tenet of computer security that means users should be given only those rights required to do their jobs or tasks. Least privilege is ensuring that you have the minimum privileges necessary to do a task. An admin NOT using his admin account to check email is a clear example of this.\nReference(s) used for this question:\nNational Security Agency, Systems and Network Attack Center (SNAC), The 60 Minute Network Security Guide, February 2002, page 9.","choices":{"D":"Only data to and from critical systems and applications should be allowed through the firewall.","C":"Permissions on tools that are likely to be used by hackers should be as restrictive as possible.","B":"Administrators should use regular accounts when performing routine operations like reading mail.","A":"The number of administrative accounts should be kept to a minimum."},"exam_id":189},{"id":"RTti5dijjDlBjHpdY3YE","question_images":[],"discussion":[{"comment_id":"1205750","content":"Selected Answer: D\nD, This is not in reference to physical security.","timestamp":"1730576640.0","poster":"Trayvon","upvote_count":"1"},{"comment_id":"1000162","upvote_count":"4","timestamp":"1709706540.0","content":"Selected Answer: A\nA. Physical security complementing logical security measures.\n\nAdd-on security typically refers to physical security measures that complement or supplement logical security measures in an information system. While both physical and logical security are essential for overall security, add-on security specifically focuses on additional physical safeguards, such as biometric access controls, surveillance cameras, locked server rooms, and secure hardware tokens, to enhance the security of an information system. These physical measures are added to strengthen the overall security posture of the system beyond the purely logical or software-based security measures.","poster":"Stevovo123"}],"question_text":"Which of the following best defines add-on security?","exam_id":189,"isMC":true,"answer":"A","choices":{"C":"Layer security.","B":"Protection mechanisms implemented as an integral part of an information system.","A":"Physical security complementing logical security measures.","D":"Protection mechanisms implemented after an information system has become operational."},"topic":"2","question_id":85,"answer_images":[],"unix_timestamp":1693974540,"answers_community":["A (80%)","D (20%)"],"url":"https://www.examtopics.com/discussions/isc/view/120032-exam-sscp-topic-2-question-159-discussion/","answer_description":"","timestamp":"2023-09-06 06:29:00","answer_ET":"A"}],"exam":{"lastUpdated":"12 Apr 2025","isImplemented":true,"name":"SSCP","numberOfQuestions":161,"isMCOnly":true,"id":189,"isBeta":false,"provider":"Isc"},"currentPage":17},"__N_SSP":true}