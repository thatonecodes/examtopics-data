{"pageProps":{"questions":[{"id":"C0ewEFJMvffbvQYVhDNG","question_id":66,"isMC":true,"answer":"D","exam_id":281,"answer_description":"","answer_ET":"D","timestamp":"2024-03-22 03:33:00","discussion":[{"content":"Selected Answer: D\nThe CronJob controller is responsible for managing CronJobs and schedules Jobs based on the CronJob's schedule","upvote_count":"1","timestamp":"1740750960.0","poster":"shahy0","comment_id":"1363049"},{"upvote_count":"2","comment_id":"1282262","content":"CronJob Controller: The CronJob controller is responsible for managing CronJobs. It schedules Jobs based on the CronJob's schedule (e.g., every hour).\n\nJob Creation: When it's time for a CronJob to run, the CronJob controller creates a Job resource. This Job represents the workload that needs to be executed.\n\nJob Controller: Once the Job is created, the Job controller is responsible for managing this Job. It ensures that the Pods specified by the Job are created and completed successfully.\n\nPod Execution: The Job controller creates one or more Pods based on the Job specification. These Pods execute the tasks defined by the Job. The Job controller waits until the Pod(s) complete their execution.","poster":"Saireddybonthu","timestamp":"1726074000.0"},{"timestamp":"1711074780.0","comment_id":"1179792","content":"Selected Answer: D\nCorrect Answer: D","upvote_count":"2","poster":"JBangura"}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/136898-exam-kcna-topic-1-question-3-discussion/","answers_community":["D (100%)"],"answer_images":[],"question_images":[],"topic":"1","choices":{"A":"Kubelet watches API Server for CronJob objects. When it's time for a Job to run, it runs the Pod directly.","B":"Kube-scheduler watches API Server for CronJob objects, and this is why it's called kube-scheduler.","D":"CronJob controller component creates a Job. Then the Job controller creates a Pod and waits until it finishes to run.","C":"CronJob controller component creates a Pod and waits until it finishes to run."},"question_text":"A CronJob is scheduled to run by a user every one hour. What happens in the cluster when it's time for this CronJob to run?","unix_timestamp":1711074780},{"id":"0VgtQk2Bz0RjKWCscQk1","answer_description":"","question_id":67,"question_images":[],"discussion":[{"comment_id":"1363113","poster":"shahy0","content":"Selected Answer: A\nCloud native service discovery is best described as the process by which services in a cloud-native environment automatically discover and communicate with each other without requiring manual configuration.\nThese features enable services to discover and communicate with each other efficiently in dynamic and scalable cloud-native environments.","timestamp":"1740755220.0","upvote_count":"1"},{"timestamp":"1726980780.0","comment_id":"1179902","poster":"phcunha","content":"A. It's a mechanism for applications and microservices to locate each other on a network.\n\nExplanation:\nCloud native service discovery is a crucial aspect of distributed systems architecture, particularly in microservices environments. It enables applications and microservices to dynamically discover and communicate with each other without hardcoding IP addresses or relying on static configurations. This mechanism allows services to be scalable, resilient, and loosely coupled, facilitating efficient communication and interaction within the cloud environment.\n\nAn analogy for service discovery could be a directory in a large office building. Just as a directory helps individuals find the locations of various offices or departments within a building, service discovery enables components within a distributed system to locate and communicate with each other dynamically, regardless of their specific network locations or configurations.","upvote_count":"2"}],"question_text":"What best describes cloud native service discovery?","answer_ET":"A","answer":"A","answer_images":[],"unix_timestamp":1711090380,"isMC":true,"choices":{"C":"It's used for automatically assigning IP addresses to devices connected to the network.","A":"It's a mechanism for applications and microservices to locate each other on a network.","B":"It's a procedure for discovering a MAC address, associated with a given IP address.","D":"It's a protocol that turns human-readable domain names into IP addresses on the Internet."},"url":"https://www.examtopics.com/discussions/linux-foundation/view/136908-exam-kcna-topic-1-question-30-discussion/","timestamp":"2024-03-22 07:53:00","answers_community":["A (100%)"],"exam_id":281,"topic":"1"},{"id":"6oTVlmHC6V50X50QHrNy","answer_ET":"D","isMC":true,"choices":{"B":"circuit breaking and Pod scheduling","D":"service proxy and control plane","A":"tracing and log storage","C":"data plane and runtime plane"},"question_images":[],"answer":"D","answer_images":[],"unix_timestamp":1702629360,"answers_community":["D (100%)"],"discussion":[{"timestamp":"1740754980.0","content":"Selected Answer: D\nA service mesh typically includes the following common components:\n\nData Plane: Sidecar proxies for traffic management.\nControl Plane: Configuration management, service discovery, policy management, and telemetry.\nSecurity: mTLS, authentication, and authorization.\nTraffic Management: Routing, load balancing, retries, and timeouts.","poster":"shahy0","comment_id":"1363112","upvote_count":"1"},{"upvote_count":"2","comment_id":"1177743","poster":"EzBL","content":"Selected Answer: D\nIn a service mesh architecture, service proxies (such as Envoy, Linkerd proxy, or Istio sidecar) are deployed alongside each service instance to handle communication between services. The control plane consists of various components responsible for configuring, managing, and monitoring the behavior of the service proxies, including features like traffic routing, load balancing, encryption, authentication, and observability. Together, these components enable advanced traffic management, security, and observability capabilities in a distributed microservices environment.","timestamp":"1726773600.0"},{"timestamp":"1718433360.0","content":"I can confirn that D is the corrct answer, anyway the question is a bit tricky, because the data plan can be considered as the set of service proxies so even the C answer could be considered","poster":"PinkAndBlack","upvote_count":"3","comment_id":"1097122"}],"answer_description":"","url":"https://www.examtopics.com/discussions/linux-foundation/view/128626-exam-kcna-topic-1-question-31-discussion/","timestamp":"2023-12-15 09:36:00","topic":"1","question_id":68,"exam_id":281,"question_text":"What components are common in a service mesh?"},{"id":"s1WRT7tjZEhVylg20BQK","discussion":[{"content":"Selected Answer: A\nThe storage operator in Kubernetes that can help the system to self-scale, self-heal, and provide other advanced features is Rook.","timestamp":"1740754920.0","upvote_count":"1","poster":"shahy0","comment_id":"1363111"},{"comment_id":"1183776","timestamp":"1727392320.0","poster":"dadaarce","content":"Selected Answer: A\nRook provides features like self-scaling, self-healing, monitoring, and automation of storage management tasks. It abstracts the complexities of managing distributed storage systems and integrates them seamlessly with Kubernetes, enabling operators to deploy and manage storage clusters as easily as deploying other Kubernetes resources.","upvote_count":"3"}],"question_images":[],"exam_id":281,"question_id":69,"choices":{"C":"Helm","B":"Kubernetes","D":"Container Storage Interface (CSI)","A":"Rook"},"isMC":true,"answer_description":"","url":"https://www.examtopics.com/discussions/linux-foundation/view/137317-exam-kcna-topic-1-question-32-discussion/","answer_images":[],"topic":"1","unix_timestamp":1711501920,"answer_ET":"A","question_text":"Which storage operator in Kubernetes can help the system to self-scale, self-heal, etc?","answer":"A","answers_community":["A (100%)"],"timestamp":"2024-03-27 02:12:00"},{"id":"cFj7nPx1fkwYnSKdZDGI","timestamp":"2024-03-22 07:58:00","answer_description":"","answers_community":[],"exam_id":281,"isMC":true,"answer_images":[],"choices":{"A":"apiVersion, kind, metadata","D":"kind, metadata, data","B":"kind, namespace, data","C":"apiVersion, metadata, namespace"},"question_text":"What fields must exist in any Kubernetes object (e.g. YAML) file?","question_images":[],"question_id":70,"discussion":[{"upvote_count":"4","timestamp":"1726981080.0","poster":"phcunha","comment_id":"1179905","content":"A. apiVersion, kind, metadata\n\nExplanation:\nIn any Kubernetes object definition file, there are three mandatory fields that must exist:\n\napiVersion: Specifies the version of the Kubernetes API that the object uses. This field ensures compatibility and defines the structure of the object.\n\nkind: Specifies the type of Kubernetes object being defined, such as Pod, Service, Deployment, etc. This field determines the behavior and functionality of the object.\n\nmetadata: Contains metadata about the object, such as its name, namespace, labels, and annotations. This metadata is used by Kubernetes to identify and manage the object within the cluster.\n\nThese fields are essential for Kubernetes to interpret and process the object correctly. The other options do not include all three mandatory fields or contain fields that are not universally required in every Kubernetes object."}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/136909-exam-kcna-topic-1-question-33-discussion/","answer":"A","answer_ET":"A","unix_timestamp":1711090680,"topic":"1"}],"exam":{"name":"KCNA","lastUpdated":"12 Apr 2025","id":281,"isImplemented":true,"isMCOnly":true,"numberOfQuestions":138,"isBeta":false,"provider":"Linux-foundation"},"currentPage":14},"__N_SSP":true}