{"pageProps":{"questions":[{"id":"b2MTpL7LibJbs7eBNf6J","answers_community":[],"answer_ET":"B","topic":"1","answer_description":"","timestamp":"2024-03-22 08:00:00","discussion":[{"content":"Designing strategies for disaster recovery and fault tolerance: Just as the maintenance engineer creates contingency plans for breakdowns or accidents, the SRE devises plans for system failures or outages, ensuring that services can quickly recover and continue functioning.\n\nAnalyzing system performance metrics: Like reviewing maintenance logs and performance data for each truck, the SRE analyzes metrics from the application's monitoring systems to identify areas for improvement and optimize performance.\n\nBy considering the SRE's responsibilities in the context of managing a fleet of delivery trucks, we can draw parallels that illustrate the focus on reliability, efficiency, and proactive maintenance inherent in the role.","upvote_count":"1","timestamp":"1726981200.0","comment_id":"1179909","poster":"phcunha"}],"exam_id":281,"question_id":71,"isMC":true,"unix_timestamp":1711090800,"question_text":"Which of the following would fall under the responsibilities of an SRE?","answer":"B","answer_images":[],"choices":{"A":"Developing a new application feature.","B":"Creating a monitoring baseline for an application.","C":"Submitting a budget for running an application in a cloud.","D":"Writing policy on how to submit a code change."},"question_images":[],"url":"https://www.examtopics.com/discussions/linux-foundation/view/136911-exam-kcna-topic-1-question-34-discussion/"},{"id":"OddOobg7kuQHCtJfTbBN","isMC":true,"discussion":[{"comment_id":"1363124","upvote_count":"2","poster":"shahy0","timestamp":"1740756240.0","content":"Selected Answer: A\nB. default, system, kube-public\n\nIncorrect. The namespace \"system\" is not a standard namespace in Kubernetes.\nC. kube-default, kube-system, kube-main, kube-node-lease\n\nIncorrect. The namespaces \"kube-default\" and \"kube-main\" are not standard namespaces in Kubernetes.\nD. kube-default, system, kube-main, kube-primary\n\nIncorrect. The namespaces \"kube-default\", \"system\", \"kube-main\", and \"kube-primary\" are not standard namespaces in Kubernetes."},{"comment_id":"1134276","poster":"Error_2k","content":"correct:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","upvote_count":"2","timestamp":"1722177840.0"}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/132343-exam-kcna-topic-1-question-35-discussion/","answer_description":"","answer_images":[],"answer_ET":"A","exam_id":281,"timestamp":"2024-01-28 17:44:00","answers_community":["A (100%)"],"question_id":72,"question_text":"What are the initial namespaces that Kubernetes starts with?","topic":"1","unix_timestamp":1706460240,"answer":"A","question_images":[],"choices":{"D":"kube-default, system, kube-main, kube-primary","B":"default, system, kube-public","A":"default, kube-system, kube-public, kube-node-lease","C":"kube-default, kube-system, kube-main, kube-node-lease"}},{"id":"aFTkT3h4wdejFo7gFT9G","isMC":true,"discussion":[{"poster":"shahy0","content":"Selected Answer: C\nProbes are used to determine if a container is running correctly and if it is ready to serve traffic. Kubernetes supports three types of probes:\nLiveness Probe\nReadiness Probe\nStartup Probe","upvote_count":"1","comment_id":"1363127","timestamp":"1740756420.0"},{"poster":"SeaH0rse66","content":"Selected Answer: C\nWithin Kubernetes, a \"probe\" refers to a diagnostic mechanism used by the kubelet to check the health of containers running within pods.Probes are configured within the PodSpec of Kubernetes pods and are used to determine if the containers within the pod are healthy and ready to serve traffic. There are three types of probes:\n\nLiveness Probe: Determines if the container is still running and healthy. If the liveness probe fails, Kubernetes restarts the container.\n\nReadiness Probe: Determines if the container is ready to serve traffic. If the readiness probe fails, the pod is removed from load balancers, and no traffic is routed to it.\n\nStartup Probe: Similar to the liveness probe, but only runs during the initial startup of a container. It helps delay the liveness and readiness probes until the application inside the container has started.","comment_id":"1212919","upvote_count":"3","timestamp":"1731858840.0"},{"timestamp":"1726981380.0","comment_id":"1179910","poster":"phcunha","upvote_count":"1","content":"Think of a probe in Kubernetes like a heart rate monitor attached to a patient in a hospital. Just as the heart rate monitor continuously checks the patient's heart rate to ensure they are alive and functioning correctly, Kubernetes probes continuously monitor the health of containers to ensure they are running and capable of serving traffic. If the heart rate monitor detects irregularities or a lack of heartbeat, medical staff take action to revive or stabilize the patient. Similarly, if Kubernetes probes detect issues with a container, Kubernetes takes action to restart or replace the container, ensuring the application remains available and responsive."}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/136912-exam-kcna-topic-1-question-36-discussion/","answer_description":"","exam_id":281,"answer_images":[],"answer_ET":"C","timestamp":"2024-03-22 08:03:00","answers_community":["C (100%)"],"question_id":73,"question_text":"What is a probe within Kubernetes?","topic":"1","unix_timestamp":1711090980,"answer":"C","question_images":[],"choices":{"B":"A pre-operational scope issued by the kubectl agent.","C":"A diagnostic performed periodically by the kubelet on a container.","A":"A monitoring mechanism of the Kubernetes API.","D":"A logging mechanism of the Kubernetes API."}},{"id":"Z12gSA8LwcqhLvFgmtrL","exam_id":281,"answer_images":[],"answer":"D","topic":"1","timestamp":"2023-12-22 17:24:00","isMC":true,"unix_timestamp":1703262240,"answer_description":"","question_text":"Which Kubernetes feature would you use to guard against split brain scenarios with your distributed application?","answer_ET":"D","question_images":[],"answers_community":["D (56%)","B (44%)"],"question_id":74,"discussion":[{"poster":"shahy0","comment_id":"1363283","timestamp":"1740782940.0","upvote_count":"1","content":"Selected Answer: D\nA. Replication controllers: Manage the number of replicas of a pod but do not provide the stable network identities or ordered deployment required to prevent split-brain scenarios.\n\nB. Consensus protocols: While consensus protocols (like Raft or Paxos) are used within distributed systems to prevent split-brain, they are not a Kubernetes feature. They are implemented within the application itself.\n\nC. Rolling updates: Ensure that updates to applications are done gradually to avoid downtime, but they do not address the stable identities or ordered scaling needed to prevent split-brain scenarios.\n\nBy using StatefulSets, you can effectively manage stateful applications and guard against split-brain scenarios in your distributed applications running on Kubernetes."},{"upvote_count":"1","content":"Selected Answer: B\nThe answer is B","poster":"2211094","comment_id":"1349008","timestamp":"1738233360.0"},{"content":"Selected Answer: B\nB. Consensus protocols\n\nExplanation:\nSplit brain scenarios occur when nodes or components of a distributed application lose communication with each other, leading to conflicting or inconsistent states. To guard against split brain, distributed systems rely on consensus protocols to ensure that a majority of nodes agree on a consistent state, even in the presence of network partitions or failures","poster":"yoyo2424","upvote_count":"2","comment_id":"1347059","timestamp":"1737915480.0"},{"timestamp":"1734769680.0","comment_id":"1329886","upvote_count":"1","content":"Selected Answer: D\nQuestion clearly asks \"Which Kubernetes feature\". I don't think \"Consensus protocols\" are part of Kubernetes.","poster":"Jtrix88772"},{"upvote_count":"1","timestamp":"1726841100.0","content":"Selected Answer: D\nThe question says: \"with your distributed application\" so it is D.","poster":"Andrei_Z","comment_id":"1286886"},{"poster":"EzBL","content":"Selected Answer: B\nConsensus protocols, such as those provided by distributed systems like etcd or ZooKeeper, help prevent split-brain scenarios by ensuring that only one leader or primary instance is elected to make decisions or perform critical tasks within the distributed system at any given time. These protocols provide mechanisms for nodes to coordinate and agree on the state of the system, even in the presence of network partitions or failures, thereby mitigating the risk of conflicting or divergent states that could lead to split-brain scenarios. While Kubernetes itself does not provide consensus protocols directly, it often relies on external systems like etcd for managing cluster state and coordination.","timestamp":"1719528060.0","comment_id":"1238415","upvote_count":"2"},{"poster":"SeaH0rse66","comment_id":"1212923","upvote_count":"3","content":"Selected Answer: D\nD. StatefulSet\n\nWhile consensus protocols are generally used to prevent split brain scenarios in distributed systems, the provided information highlights that StatefulSets are specifically designed to ensure the stability and integrity of distributed and clustered applications. StatefulSets maintain \"at most one\" semantics, which helps prevent multiple instances of the same identity, reducing the risk of split brain scenarios and data loss in quorum-based systems.\n\nStatefulSets are well-suited for applications that require stable network identity and storage, providing mechanisms to manage pod identities, persistent storage, and ordered deployment and scaling. Therefore, StatefulSets are the most appropriate Kubernetes feature to mitigate the risk of split brain scenarios in this context.","timestamp":"1715954760.0"},{"comments":[{"timestamp":"1715954700.0","upvote_count":"1","content":"chatGPT is wrong...D. StatefulSet\n\nWhile consensus protocols are generally used to prevent split brain scenarios in distributed systems, the provided information highlights that StatefulSets are specifically designed to ensure the stability and integrity of distributed and clustered applications. StatefulSets maintain \"at most one\" semantics, which helps prevent multiple instances of the same identity, reducing the risk of split brain scenarios and data loss in quorum-based systems.\n\nStatefulSets are well-suited for applications that require stable network identity and storage, providing mechanisms to manage pod identities, persistent storage, and ordered deployment and scaling. Therefore, StatefulSets are the most appropriate Kubernetes feature to mitigate the risk of split brain scenarios in this context.","comment_id":"1212921","poster":"SeaH0rse66"}],"content":"Selected Answer: B\nguys, both copilot and ChatGPT says Consensus protocols.","poster":"hovnival","comment_id":"1204891","upvote_count":"2","timestamp":"1714545060.0"},{"content":"Think of StatefulSet in Kubernetes as a traffic control system at an intersection with multiple lanes. Just as the traffic control system manages the flow of vehicles through the intersection, ensuring that only one lane can proceed at a time to prevent collisions or gridlock, StatefulSet manages the deployment of stateful applications, ensuring that only one instance can be active or \"in charge\" at any given time to prevent conflicts or inconsistencies in distributed systems.","timestamp":"1711091040.0","comment_id":"1179913","poster":"phcunha","upvote_count":"1"},{"poster":"pulsefire","comment_id":"1167623","timestamp":"1709779500.0","upvote_count":"3","content":"Selected Answer: D\nhttps://kubernetes.io/docs/tasks/run-application/force-delete-stateful-set-pod/#:~:text=split%20brain%20scenario%20in%20quorum%2Dbased%20systems"},{"comment_id":"1120831","timestamp":"1705069500.0","poster":"sad_schedule","upvote_count":"1","content":"https://unofficial-kubernetes.readthedocs.io/en/latest/tasks/manage-stateful-set/upgrade-pet-set-to-stateful-set/#:~:text=StatefulSet%20guards%20against%20split%20brain,brain%20scenarios%20with%20distributed%20applications."},{"poster":"sadsak","comment_id":"1103495","upvote_count":"1","content":"Shouldn't this be Consensus protocols?","timestamp":"1703262240.0"}],"choices":{"B":"Consensus protocols","A":"Replication controllers","C":"Rolling updates","D":"StatefulSet"},"url":"https://www.examtopics.com/discussions/linux-foundation/view/129239-exam-kcna-topic-1-question-37-discussion/"},{"id":"vwxqB7bzPprbCUeW2At4","isMC":true,"answer_ET":"D","exam_id":281,"discussion":[{"comment_id":"1363285","content":"Selected Answer: D\nNetwork Policies are a Kubernetes feature that allows you to control the traffic flow to and from pods. They enable you to define rules for how pods can communicate with each other and with other network endpoints. This is essential for securing workloads and controlling specific traffic flows within a Kubernetes cluster.","timestamp":"1740783360.0","poster":"shahy0","upvote_count":"1"},{"comment_id":"1179914","poster":"phcunha","content":"Think of Network Policies in Kubernetes as security checkpoints at different entrances to a building. Just as security personnel at each entrance check IDs and verify permissions before allowing individuals to enter specific areas of the building, Network Policies control the flow of network traffic within the Kubernetes cluster, ensuring that only authorized Pods can communicate with each other and that access to sensitive services is restricted according to defined rules.","timestamp":"1726981560.0","upvote_count":"2"},{"comment_id":"1167625","upvote_count":"3","poster":"pulsefire","timestamp":"1725670020.0","content":"Selected Answer: D\nhttps://kubernetes.io/docs/concepts/services-networking/network-policies/#:~:text=Network%20Policies-,Network%20Policies,might%20consider%20using%20Kubernetes%20NetworkPolicies%20for%20particular%20applications%20in%20your%20cluster.,-NetworkPolicies%20are%20an"}],"unix_timestamp":1709779620,"answer_description":"","choices":{"B":"IP Address Management","D":"Network Policies","A":"Border Gateway Protocol","C":"Pod Security Policy"},"question_images":[],"question_id":75,"answer_images":[],"answer":"D","topic":"1","url":"https://www.examtopics.com/discussions/linux-foundation/view/135366-exam-kcna-topic-1-question-38-discussion/","question_text":"What feature must a CNI support to control specific traffic flows for workloads running in Kubernetes?","answers_community":["D (100%)"],"timestamp":"2024-03-07 03:47:00"}],"exam":{"id":281,"lastUpdated":"12 Apr 2025","isImplemented":true,"isMCOnly":true,"provider":"Linux-foundation","isBeta":false,"name":"KCNA","numberOfQuestions":138},"currentPage":15},"__N_SSP":true}