{"pageProps":{"questions":[{"id":"VejTeWKkvOrpHUEc0HNp","discussion":[{"content":"Selected Answer: D\nThe -f or --follow flag is used to stream the logs in real time.\n\nIf you want to specify a particular container within a pod, you can use the -c flag:","comment_id":"1363086","poster":"shahy0","upvote_count":"1","timestamp":"1740753300.0"},{"poster":"Ansaries","comment_id":"1342564","upvote_count":"1","timestamp":"1737213660.0","content":"Selected Answer: D\nkubectl logs -c container podname\nWill be the correct answer, but since it was not the option. So lets take container-1 to be the pod name then -f options looks more appropriate."},{"poster":"dadaarce","comment_id":"1183764","upvote_count":"2","content":"Selected Answer: D\nThe -f or --follow flag is used to stream logs in real time.","timestamp":"1727499360.0"},{"content":"D. kubectl logs -f test-container-1\n\nExplanation:\nThe -f flag in the kubectl logs command stands for \"follow,\" which allows you to continuously stream the logs in real-time as new log entries are added. This is useful for monitoring applications or troubleshooting issues as they occur.\n\nAn analogy for this command could be tuning in to a live radio broadcast. When you listen to a live radio show, you want to hear the content as it's being broadcasted, rather than just a recording of past broadcasts. Similarly, using kubectl logs -f lets you \"tune in\" to the ongoing activity of a container, receiving log updates in real-time.","timestamp":"1726979700.0","poster":"phcunha","upvote_count":"1","comment_id":"1179887"},{"poster":"nvtienanh","content":"Selected Answer: D\nD is correct","timestamp":"1712148540.0","comment_id":"1023945","upvote_count":"2"}],"question_images":[],"answer_ET":"D","url":"https://www.examtopics.com/discussions/linux-foundation/view/119241-exam-kcna-topic-1-question-20-discussion/","topic":"1","question_id":56,"question_text":"Which is the correct kubectl command to display logs in real time?","choices":{"A":"kubectl logs -p test-container-1","C":"kubectl logs -l test-container-1","D":"kubectl logs -f test-container-1","B":"kubectl logs -c test-container-1"},"timestamp":"2023-08-28 15:18:00","answers_community":["D (100%)"],"answer_images":[],"answer_description":"","answer":"D","unix_timestamp":1693228680,"exam_id":281,"isMC":true},{"id":"hQ2bzmog21EJgTX3FVR3","answer_description":"","answer":"A","timestamp":"2023-08-28 15:19:00","answers_community":["A (100%)"],"question_id":57,"question_images":[],"question_text":"How to load and generate data required before the Pod startup?","discussion":[{"upvote_count":"6","timestamp":"1726979760.0","comment_id":"1179888","content":"A. Use an init container with shared file storage.\n\nExplanation:\nInit containers are executed before the main containers in a Pod are started. They are designed to perform initialization tasks, such as loading and generating data required before the main containers start. Init containers can share file storage with the main containers in the Pod, allowing them to perform tasks like data loading or generation and then making that data available to the main containers.\n\nAn analogy for using an init container could be preparing ingredients before cooking a meal. Just as you might prepare ingredients like chopping vegetables or marinating meat before starting to cook, init containers prepare data or perform tasks necessary for the main containers to function properly before the main containers start running.","poster":"phcunha"},{"content":"Selected Answer: A\nInit Containers are specialized containers that run before the main application containers in a Pod","timestamp":"1740753960.0","upvote_count":"1","poster":"shahy0","comment_id":"1363092"},{"content":"Selected Answer: A\nA is correct","timestamp":"1709133540.0","comment_id":"992219","poster":"nvtienanh","upvote_count":"3"}],"answer_ET":"A","choices":{"B":"Use a PVC volume.","A":"Use an init container with shared file storage.","D":"Use another pod with a PVC.","C":"Use a sidecar container with shared volume."},"topic":"1","isMC":true,"url":"https://www.examtopics.com/discussions/linux-foundation/view/119242-exam-kcna-topic-1-question-21-discussion/","unix_timestamp":1693228740,"answer_images":[],"exam_id":281},{"id":"jpiTGninv89Qh98bhcyu","answer":"D","choices":{"B":"They replace human operations with an agent that tracks Git commands.","D":"They continuously compare the desired state in Git with the actual production state and notify or act upon differences.","A":"They track production changes made by a human in a Git repository and generate a human-readable audit trail.","C":"They automatically create pull requests when dependencies are outdated."},"unix_timestamp":1695045180,"question_id":58,"answer_ET":"D","discussion":[{"comment_id":"1363096","upvote_count":"1","content":"Selected Answer: D\nThe core functionality of GitOps tools like Argo CD and Flux is to enable continuous delivery and deployment of applications to Kubernetes clusters using Git as the single source of truth. These tools automate the process of synchronizing the desired state of the Kubernetes cluster, as defined in Git repositories, with the actual state of the cluster","timestamp":"1740754080.0","poster":"shahy0"},{"poster":"phcunha","comment_id":"1179893","content":"An analogy for this functionality could be a thermostat in a room. The desired temperature set on the thermostat represents the configuration defined in Git, while the actual temperature in the room represents the production state. If the actual temperature deviates from the desired temperature, the thermostat (GitOps tool) will automatically adjust the heating or cooling systems to bring the room temperature back to the desired level. Similarly, GitOps tools ensure that the production state of the cluster matches the desired state defined in Git.","upvote_count":"3","timestamp":"1726979940.0"},{"content":"D. They continuously compare the desired state in Git with the actual production state and notify or act upon differences.\n\nExplanation:\nGitOps tools like Argo CD and Flux are designed to manage Kubernetes clusters by using Git repositories as the source of truth for cluster configuration. The core functionality of these tools involves continuously comparing the desired state of the cluster, as defined in Git, with the actual state of the cluster running in production. If there are differences between the desired and actual states, these tools will automatically reconcile those differences by either updating the production state to match the desired state or notifying operators of any discrepancies.","upvote_count":"2","comment_id":"1179891","timestamp":"1726979880.0","poster":"phcunha"},{"comment_id":"1010654","poster":"nvtienanh","upvote_count":"2","content":"Selected Answer: D\nD look right","timestamp":"1710777180.0"}],"answer_images":[],"url":"https://www.examtopics.com/discussions/linux-foundation/view/120919-exam-kcna-topic-1-question-22-discussion/","timestamp":"2023-09-18 15:53:00","exam_id":281,"topic":"1","answers_community":["D (100%)"],"question_text":"What is the core functionality of GitOps tools like Argo CD and Flux?","question_images":[],"answer_description":"","isMC":true},{"id":"lT8M6LiA3OIcjTuxr6pQ","discussion":[{"upvote_count":"1","comment_id":"1363097","timestamp":"1740754140.0","poster":"shahy0","content":"Selected Answer: C\nA DaemonSet ensures that a copy of a Pod runs on all (or some) nodes in the Kubernetes cluster."},{"poster":"phcunha","comment_id":"1179894","upvote_count":"3","content":"C. DaemonSet\n\nExplanation:\nA DaemonSet ensures that all (or some) nodes run a copy of a Pod. It's typically used for system daemons or cluster services that must run on every node. Each node in the cluster will have exactly one instance of the Pod managed by the DaemonSet.\n\nAn analogy for a DaemonSet could be streetlights in a city. Just as streetlights are deployed at specific intervals along every street in a city to ensure adequate lighting, DaemonSets ensure that specific Pods are deployed on every node in a Kubernetes cluster to provide essential services or functionalities uniformly across the cluster.","timestamp":"1726980000.0"},{"timestamp":"1726979940.0","content":"An analogy for this functionality could be a thermostat in a room. The desired temperature set on the thermostat represents the configuration defined in Git, while the actual temperature in the room represents the production state. If the actual temperature deviates from the desired temperature, the thermostat (GitOps tool) will automatically adjust the heating or cooling systems to bring the room temperature back to the desired level. Similarly, GitOps tools ensure that the production state of the cluster matches the desired state defined in Git.","poster":"phcunha","upvote_count":"1","comment_id":"1179892"},{"content":"Selected Answer: C\nC is correct","comment_id":"992224","timestamp":"1709133660.0","poster":"nvtienanh","upvote_count":"2"}],"question_id":59,"answer_description":"","choices":{"D":"Deployment","C":"DaemonSet","A":"ReplicaSet","B":"StatefulSet"},"answer_images":[],"exam_id":281,"topic":"1","answer":"C","unix_timestamp":1693228860,"url":"https://www.examtopics.com/discussions/linux-foundation/view/119244-exam-kcna-topic-1-question-23-discussion/","timestamp":"2023-08-28 15:21:00","isMC":true,"answers_community":["C (100%)"],"question_images":[],"question_text":"Which Kubernetes resource workload ensures that all (or some) nodes run a copy of a Pod?","answer_ET":"C"},{"id":"teCBspDkF3dwY6Jk1r4r","url":"https://www.examtopics.com/discussions/linux-foundation/view/119245-exam-kcna-topic-1-question-24-discussion/","unix_timestamp":1693229460,"topic":"1","answer_ET":"A","discussion":[{"upvote_count":"1","comment_id":"1460913","content":"Selected Answer: A\nA is correct","timestamp":"1743761580.0","poster":"plawansai"},{"comment_id":"1179895","upvote_count":"4","timestamp":"1726980060.0","poster":"phcunha","content":"A. Custom Resource Definition\n\nExplanation:\nCRD stands for Custom Resource Definition. It's a Kubernetes extension mechanism that allows users to define their custom resources and their schema, effectively extending the Kubernetes API. Once defined, these custom resources can be managed and interacted with using standard Kubernetes API operations, just like built-in resources like Pods or Deployments.\n\nAn analogy for CRD could be creating a new type of item in a game. In a video game, developers might introduce custom items that players can collect or use within the game world. These custom items have their unique properties and behaviors, defined by the game developers. Similarly, with CRDs, Kubernetes users can define custom resources with specific properties and behaviors tailored to their application needs."},{"upvote_count":"2","content":"Selected Answer: A\nA is correct","comment_id":"992232","timestamp":"1709134260.0","poster":"nvtienanh"}],"question_id":60,"timestamp":"2023-08-28 15:31:00","question_images":[],"answer":"A","exam_id":281,"answer_images":[],"answer_description":"","isMC":true,"choices":{"C":"Customized RUST Definition","B":"Custom Restricted Definition","D":"Custom RUST Definition","A":"Custom Resource Definition"},"question_text":"We can extend the Kubernetes API with Kubernetes API Aggregation Layer and CRDs. What is CRD?","answers_community":["A (100%)"]}],"exam":{"isImplemented":true,"numberOfQuestions":138,"id":281,"isBeta":false,"isMCOnly":true,"lastUpdated":"12 Apr 2025","name":"KCNA","provider":"Linux-foundation"},"currentPage":12},"__N_SSP":true}