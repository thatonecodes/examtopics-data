{"pageProps":{"questions":[{"id":"WThGozbKedjdHfGBxXRm","question_id":16,"answer":"BC","topic":"1","url":"https://www.examtopics.com/discussions/linux-foundation/view/125837-exam-lfcs-topic-1-question-116-discussion/","unix_timestamp":1699788540,"choices":{"B":"chmod +t /tmp","C":"chmod 1775 /tmp","E":"chmod 2775 /tmp","D":"chmod 4775 /tmp","A":"chmod +s /tmp"},"question_images":[],"answer_description":"","question_text":"Which of the following commands set the sticky bit for the directory /tmp? (Choose TWO correct answers.)","exam_id":282,"answer_ET":"BC","answer_images":[],"isMC":true,"timestamp":"2023-11-12 12:29:00","discussion":[{"content":"Selected Answer: BD\nThe correct answers are:\nB. chmod +t /tmp\nD. chmod 4775 /tmp\n\nExplanation:\nThe sticky bit is a special permission flag that can be set on directories. When applied to a directory, it modifies the behavior of file deletion within that directory. Specifically, it restricts the deletion of files within the directory to:\n\nThe owner of the file\nThe owner of the directory\nThe superuser (root)\n\nThe correct commands:\nchmod +t /tmp: This uses the symbolic mode to add (+t) the sticky bit to the /tmp directory.\nchmod 4775 /tmp: This uses the octal mode representation, where 4 corresponds to the sticky bit (1000 in binary), and 775 are the standard permissions for the directory (rwxrwxr-x).\n\nIncorrect commands:\nA. chmod +s /tmp: This sets the setuid bit, not the sticky bit.\nC. chmod 1775 /tmp: This sets the sticky bit (1) but also the setuid bit (4), which is usually not desired for the /tmp directory.\nE. chmod 2775 /tmp: This sets the setgid bit (2), not the sticky bit.","timestamp":"1719304860.0","comment_id":"1236775","poster":"9866666","upvote_count":"1","comments":[{"poster":"9866666","comment_id":"1236776","content":"The correct answers are:\n\nB. chmod +t /tmp\nD. chmod 1777 /tmp\nThe sticky bit is represented by the octal digit 1 in the permissions, not 4 as I mistakenly stated.","timestamp":"1719304920.0","upvote_count":"1"}]},{"upvote_count":"1","timestamp":"1704328140.0","poster":"EliteAllen","comment_id":"1113239","content":"Selected Answer: BC\nB. chmod +t /tmp\nC. chmod 1775 /tmp\n\nThe sticky bit is a permission bit that makes a directory such that only the owner of the file within those directories can delete or rename the files. The symbolic method to set the sticky bit is with +t and the octal method is with a leading 1 in the four-digit octal representation."},{"content":"Selected Answer: BC\nchmod 1777 dir\n chmod +t dir","poster":"peppiniello","upvote_count":"1","timestamp":"1700500560.0","comment_id":"1075635"},{"upvote_count":"1","timestamp":"1699788540.0","poster":"ARH2023","content":"The correct commands to set the sticky bit for the directory /tmp are:\n\nC. chmod 1775 /tmp\nE. chmod 2775 /tmp\n\nBoth of these commands set the sticky bit on the /tmp directory. The sticky bit is represented by the number 1 in the first digit of the permission mode (i.e., as the most significant bit in the digit).\n\nOption A (chmod +s /tmp) sets the setuid (SUID) bit, not the sticky bit.\n\nOption B (chmod +t /tmp) is not a valid way to set the sticky bit.\n\nOption D (chmod 4775 /tmp) sets the SUID bit and the group-execute permission, but it doesn't set the sticky bit.\n\nSo, options C and E are the correct ones for setting the sticky bit on the /tmp directory.","comment_id":"1068469"}],"answers_community":["BC (67%)","BD (33%)"]},{"id":"QiXzIVcXxCPIVFH4DXAe","answer":"B","choices":{"D":"cp","B":"ls","C":"ln","A":"inode"},"timestamp":"2021-07-11 05:57:00","answer_description":"","question_images":[],"answer_ET":"B","unix_timestamp":1625975820,"topic":"1","answers_community":[],"discussion":[{"poster":"Ivandrago","upvote_count":"1","timestamp":"1718890800.0","content":"ls -i. correct","comment_id":"505522"},{"upvote_count":"1","poster":"rhylos","comment_id":"403663","content":"correct. Use ls -i , --inode to print the index number of each file","timestamp":"1704952620.0"}],"question_text":"Which of the following commands can be used to display the inode number of a given file?","answer_images":[],"exam_id":282,"url":"https://www.examtopics.com/discussions/linux-foundation/view/57597-exam-lfcs-topic-1-question-117-discussion/","question_id":17,"isMC":true},{"id":"zf8yVjoAcsC0sBEoTxj1","question_text":"Which of the following commands shows the definition of a given shell command?","timestamp":"2024-06-25 10:44:00","answers_community":["C (100%)"],"question_images":[],"answer_ET":"C","isMC":true,"choices":{"A":"where","B":"stat","C":"type","D":"case"},"topic":"1","question_id":18,"unix_timestamp":1719305040,"exam_id":282,"answer":"C","discussion":[{"upvote_count":"1","timestamp":"1719305040.0","comment_id":"1236778","content":"Selected Answer: C\nThe correct answer is C. type\n\nExplanation:\ntype: This command is a shell builtin that displays how the shell would interpret a given command. It will tell you whether the command is a shell builtin, an alias, a function, or an external command, and where the command is located if it's an external program.\n\nwhere: This command finds and displays the paths to executable files associated with a given command name. It's helpful for finding the location of external programs.\n\nstat: This command displays detailed information about a file or filesystem object, including its permissions, ownership, timestamps, and size.\n\ncase: This is a shell keyword used for conditional branching in shell scripts. It doesn't show command definitions.","poster":"9866666"}],"answer_description":"","url":"https://www.examtopics.com/discussions/linux-foundation/view/142899-exam-lfcs-topic-1-question-118-discussion/","answer_images":[]},{"id":"6SYrtaObbpNxa7LR1jx7","choices":{"D":"The command will be executed with the effective rights of the owner and group.","A":"The command is SetUID and it will be executed with the effective rights of the owner.","C":"The execute flag is not set for the owner. Therefore the SetUID flag is ignored.","B":"The command will be executed with the effective rights of the group instead of the owner."},"answer":"C","timestamp":"2023-04-17 02:32:00","isMC":true,"answers_community":["C (67%)","A (33%)"],"answer_description":"","exam_id":282,"question_text":"What do the permissions -rwSr-xr-x mean for a binary file when it is executed as a command?","answer_images":[],"url":"https://www.examtopics.com/discussions/linux-foundation/view/106449-exam-lfcs-topic-1-question-119-discussion/","answer_ET":"C","question_id":19,"discussion":[{"poster":"9866666","upvote_count":"1","content":"Selected Answer: C\nThe correct answer is: C. The execute flag is not set for the owner. Therefore the SetUID flag is ignored.\n\nHere's a more detailed explanation:\n\nSetUID (Set User ID): This bit allows a file to be executed with the permissions of the file owner, rather than the permissions of the user executing it. However, for this to work, the file must also have the execute permission set for the owner.\nExecute Permission: This permission allows a file to be executed as a program.\nIn the given permissions (-rwSr-xr-x), the execute permission is not set for the owner (indicated by the hyphen in the first position). Therefore, even though the SetUID bit is set (indicated by the 'S'), the command will not be executed with the effective rights of the owner. It will be executed with the permissions of the user who runs it.","timestamp":"1719305340.0","comment_id":"1236782"},{"poster":"EliteAllen","upvote_count":"1","content":"Selected Answer: C\nC. The execute flag is not set for the owner. Therefore the SetUID flag is ignored. \n\nThe S in the permissions indicates that the execute bit is not set; therefore, even though the SetUID bit is present, it will not have any effect when the command is executed.","comment_id":"1113242","timestamp":"1704328440.0"},{"upvote_count":"1","comments":[{"comment_id":"872255","poster":"rona962","content":"Option B is not correct because the group does not have any special permission set (e.g., SetGID bit is not set), and even if it had, it would not affect the SetUID bit. The SetUID bit only affects the permissions of the owner of the file, not the group.\n\nOption C is not correct because even though the execute flag is not set for the owner, the SetUID bit is still honored when the file is executed. The SetUID bit overrides the lack of execute permission for the owner.\n\nOption D is not correct because the group does not have any special permission set that would allow it to execute the file with elevated permissions. The command will only be executed with the effective rights of the owner due to the SetUID bit.","upvote_count":"1","timestamp":"1681691580.0"}],"content":"Selected Answer: A\nThe permissions -rwSr-xr-x for a binary file mean that the command is SetUID and it will be executed with the effective rights of the owner.\n\nThe capital \"S\" in the permissions indicates that the SetUID bit is set, which means that when the binary file is executed, it will run with the permissions of the owner of the file, rather than the permissions of the user executing the command.\n\nThe lowercase \"s\" in the permissions indicates that the SetGID bit is set, but since it is in the \"others\" category, it does not apply here.\n\nThe x flag is set for the group and others, which means that they have execute permission for the file. However, the owner of the file does not have execute permission, which means that they cannot execute the file directly, but they can still execute it through the SetUID mechanism.","timestamp":"1681691520.0","comment_id":"872254","poster":"rona962"}],"topic":"1","question_images":[],"unix_timestamp":1681691520},{"id":"qfdj5gB43Zk0UNP7scjC","choices":{"E":"/boot/init","B":"/sbin/init","A":"/lib/init.so","D":"/proc/sys/kernel/init","C":"/etc/rc.d/rcinit"},"answer":"B","timestamp":"2021-03-10 13:24:00","isMC":true,"answers_community":["B (100%)"],"answer_description":"","answer_images":[],"question_text":"What is the first program that is usually started, at boot time, by the Linux kernel when using SysV init?","exam_id":282,"url":"https://www.examtopics.com/discussions/linux-foundation/view/46314-exam-lfcs-topic-1-question-12-discussion/","answer_ET":"B","question_id":20,"discussion":[{"comments":[{"timestamp":"1719947220.0","poster":"Buruguduystunstugudunstuy","upvote_count":"1","comment_id":"763995","content":"Option C: /etc/rc.d/rcinit is not the first program that is started at boot time by the kernel. It is a script that may be used to perform additional tasks at boot time, but it is not the first program that is started.\n\nOption D: /proc/sys/kernel/init is not a program and is not executed by the kernel at boot time. It is a virtual file in the /proc filesystem that can be used to control certain aspects of the kernel's behavior.\n\nOption E: /boot/init is not the first program that is started at boot time by the kernel. It is a directory that may contain files used by the boot process, but it is not an executable program itself."}],"upvote_count":"1","content":"Selected Answer: B\nOption B. /sbin/init is the first program that is usually started, at boot time, by the Linux kernel when using SysV init.\n\nThe init program is the first process that is started by the kernel when the system boots up. It is responsible for starting and managing system services and daemons at boot time and during system operation. On systems using SysV init, the init program is typically located at /sbin/init.\n\nOption A: /lib/init.so is not the first program that is started at boot time by the kernel. It is a shared object file that may be used by other programs, but it is not an executable program itself.","timestamp":"1719947220.0","comment_id":"763994","poster":"Buruguduystunstugudunstuy"},{"timestamp":"1698948180.0","comment_id":"596109","upvote_count":"1","content":"...runs /sbin/init which is process number 1 (PID=1)...\nhttps://en.wikipedia.org/wiki/Linux_startup_process#cite_note-oldfield-6","poster":"Flubu"},{"timestamp":"1662805500.0","comment_id":"307149","upvote_count":"1","poster":"passnow","comments":[{"upvote_count":"1","timestamp":"1665565260.0","content":"Answer C is correct. /sbin/init\nhttps://www.thegeekstuff.com/2011/02/linux-boot-process/\nThis is the first process that is initiated by the Kernel.\nThe /etc/rc.d/ecint is initiated further down the line on the RunLevel.","poster":"Borbz","comment_id":"333816"}],"content":"i still think its /etc/rc.d/rcint / check the link https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/installation_guide/s2-boot-init-shutdown-init. When the init command starts, it becomes the parent or grandparent of all of the processes that start up automatically on the system. First, it runs the /etc/rc.d/rc.sysinit script,"},{"timestamp":"1662805440.0","poster":"passnow","comment_id":"307146","upvote_count":"1","content":"why not /etc/rc.d/rcinit?","comments":[{"comment_id":"325983","content":"it is /etc/rc.d/rcint http://www.qnx.com/developers/docs/qnxcar2/index.jsp?topic=%2Fcom.qnx.doc.neutrino.user_guide%2Ftopic%2Fstarting_rc.sysinit.html","upvote_count":"2","poster":"passnow","timestamp":"1664640300.0"}]}],"topic":"1","unix_timestamp":1615379040,"question_images":[]}],"exam":{"numberOfQuestions":140,"provider":"Linux-foundation","isMCOnly":false,"isImplemented":true,"name":"LFCS","isBeta":false,"lastUpdated":"12 Apr 2025","id":282},"currentPage":4},"__N_SSP":true}