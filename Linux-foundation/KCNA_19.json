{"pageProps":{"questions":[{"id":"XrMXf9sfxIwWHzbKlpEu","question_images":[],"timestamp":"2025-01-12 12:57:00","discussion":[{"poster":"shahy0","timestamp":"1740787380.0","upvote_count":"1","comment_id":"1363314","content":"Selected Answer: A\nPod Memory Requests: The scheduler considers the resource requests (CPU and memory) specified for the Pod to ensure that the node has sufficient resources to accommodate the Pod.\n\nNode Taints: Nodes can be tainted to repel certain Pods. The scheduler checks for taints on nodes and tolerations on Pods to determine if a Pod can be scheduled on a particular node.\n\nPod Affinity and Anti-Affinity: Pod affinity rules specify that certain Pods should be placed on the same node or close to each other, while anti-affinity rules specify that certain Pods should not be placed on the same node or close to each other. The scheduler considers these rules when making placement decisions."},{"upvote_count":"1","poster":"2211094","comment_id":"1339462","timestamp":"1736683020.0","content":"Selected Answer: A\nA. Pod memory requests, node taints, and Pod affinity.\n\nThe Kubernetes scheduler takes into account factors like memory and CPU requests/limits, node taints and tolerations, and Pod affinity and anti-affinity rules to decide where to place Pods."}],"exam_id":281,"url":"https://www.examtopics.com/discussions/linux-foundation/view/154426-exam-kcna-topic-1-question-52-discussion/","answer_description":"","question_text":"What factors influence the Kubernetes scheduler when it places Pods on nodes?","question_id":91,"unix_timestamp":1736683020,"answers_community":["A (100%)"],"topic":"1","choices":{"B":"Pod labels, node labels, and request labels.","C":"Node taints, node level, and Pod priority.","A":"Pod memory requests, node taints, and Pod affinity.","D":"Pod priority, container command, and node labels."},"answer":"A","answer_ET":"A","answer_images":[],"isMC":true},{"id":"27ozijfDts3eUmyK4Qlk","answer_images":[],"topic":"1","exam_id":281,"answer":"D","question_id":92,"answers_community":["D (100%)"],"answer_description":"","choices":{"C":"Histogram","B":"Counter","D":"Gauge","A":"Summary"},"timestamp":"2024-04-22 13:57:00","isMC":true,"url":"https://www.examtopics.com/discussions/linux-foundation/view/139361-exam-kcna-topic-1-question-53-discussion/","discussion":[{"content":"Selected Answer: D\nThe core metric type in Prometheus used to represent a single numerical value that can go up and down is a Gauge.","timestamp":"1740787440.0","poster":"shahy0","comment_id":"1363315","upvote_count":"1"},{"poster":"mc2301","content":"The Prometheus data model provides four core metrics:\n\nCounter: A value that increases, like a request or error count\nGauge: Values that increase or decrease, like memory size\nHistogram: A sample of observations, like request duration or response size\nSummary: Similar to a histogram, but also provides the total count of observations.\nSeems like \"up and down\" is the most exact match for \"increase and decrease\", hence D","upvote_count":"1","comment_id":"1290616","timestamp":"1727520960.0"},{"comment_id":"1200156","poster":"hovnival","timestamp":"1713787020.0","content":"Selected Answer: D\nCopilot says D.","upvote_count":"2"}],"unix_timestamp":1713787020,"question_images":[],"answer_ET":"D","question_text":"What is the core metric type in Prometheus used to represent a single numerical value that can go up and down?"},{"id":"BfoHUjOMInPJw20umIES","url":"https://www.examtopics.com/discussions/linux-foundation/view/135369-exam-kcna-topic-1-question-54-discussion/","choices":{"D":"Pod","C":"Label Selector","B":"Labels","A":"Custom Resources"},"answer_images":[],"answer_ET":"B","question_id":93,"isMC":true,"timestamp":"2024-03-07 04:57:00","discussion":[{"comment_id":"1363316","poster":"shahy0","timestamp":"1740788160.0","content":"Selected Answer: B\nLabels are the primary mechanism to identify and group objects in a Kubernetes cluster. Labels are key-value pairs that can be attached to Kubernetes objects such as Pods, Services, and Deployments. They are used to organize and select subsets of objects based on specific criteria.","upvote_count":"1"},{"comment_id":"1339463","content":"Selected Answer: B\nB. Labels\n\nLabels are the primary mechanism in Kubernetes to identify and group objects. They are key/value pairs that can be attached to objects such as Pods, Nodes, and Services to organize and select subsets of objects.","timestamp":"1736683200.0","poster":"2211094","upvote_count":"1"},{"timestamp":"1734453060.0","upvote_count":"3","comment_id":"1328041","content":"Selected Answer: B\nLabels are key-value pairs that you attach to Kubernetes objects. They define attributes and allow you to \"tag\" objects to group or identify them.\n\nLabel Selectors are used to query or filter objects that have certain labels. While selectors allow you to find or match objects based on labels, they don't define the labels themselves.\n\nLabels are the mechanism used to mark or identify objects. Without labels, there would be nothing for Label Selectors to query. Label Selectors are only tools to query/filter based on existing labels.","poster":"abitwrong"},{"comment_id":"1304744","poster":"yoyo2424","upvote_count":"2","timestamp":"1730241900.0","content":"correct answer B"},{"upvote_count":"1","comment_id":"1288067","timestamp":"1727090100.0","content":"Selected Answer: B\nThe correct answer is:\nB. Labels\nExplanation:\nLabels are the primary mechanism used to identify and group objects in a Kubernetes cluster. They are key-value pairs attached to objects (such as Pods, Services, etc.) and can be used to organize, select, and filter resources within the cluster.\n\nAlthough C. Label Selector is also used to query and select objects based on labels, the labels themselves (B) are the mechanism that allows objects to be grouped.","poster":"miskill"},{"upvote_count":"2","timestamp":"1719528420.0","content":"Selected Answer: C\nLabels: Labels are key-value pairs attached to various Kubernetes objects and act as a metadata mechanism. While essential for grouping, they are the attributes used for grouping, not the grouping mechanism itself.\nLabel Selectors, on the other hand, leverage the information provided by labels to create logical groupings:\n\n• Filtering based on Labels: They act as queries or expressions that filter objects based on their labels. You can define requirements that specify the label key and value combinations an object must possess to be considered part of the group.\n• Building Groups: By using label selectors, you can identify sets of objects that share specific characteristics defined by their labels. This essentially forms logical groups of objects within the cluster.","poster":"EzBL","comment_id":"1238416"},{"content":"Selected Answer: B\nLabels and label selectors work hand in hand to identify and group objects, so it's easy to see why it might seem tricky. Labels provide the metadata for identification and grouping, while label selectors enable users to query and select objects based on those labels. Both are essential components of Kubernetes's flexibility and functionality.","poster":"SeaH0rse66","comment_id":"1212965","timestamp":"1715963820.0","upvote_count":"3"},{"upvote_count":"2","poster":"hovnival","comment_id":"1200163","timestamp":"1713787500.0","content":"Selected Answer: C\nCopilot: Label selectors allow you to group and select objects based on labels, making them a fundamental part of Kubernetes resource management."},{"timestamp":"1711080780.0","comment_id":"1179843","poster":"JBangura","content":"Selected Answer: C\nCorrect Answer: C","upvote_count":"2"},{"upvote_count":"2","poster":"pulsefire","comment_id":"1167637","content":"Selected Answer: C\nshould be C, not B\n\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#:~:text=Via%20a%20label%20selector%2C%20the%20client/user%20can%20identify%20a%20set%20of%20objects.%20The%20label%20selector%20is%20the%20core%20grouping%20primitive%20in%20Kubernetes.","timestamp":"1709783820.0"}],"question_images":[],"exam_id":281,"answers_community":["B (56%)","C (44%)"],"topic":"1","question_text":"What is the primary mechanism to identify grouped objects in a Kubernetes cluster?","unix_timestamp":1709783820,"answer_description":"","answer":"B"},{"id":"qcFifKJjaMVoX2K1SAEe","isMC":true,"answer_description":"","url":"https://www.examtopics.com/discussions/linux-foundation/view/135370-exam-kcna-topic-1-question-55-discussion/","exam_id":281,"unix_timestamp":1709784000,"answer":"B","answer_images":[],"topic":"1","timestamp":"2024-03-07 05:00:00","question_text":"What is the name of the Kubernetes resource used to expose an application?","choices":{"D":"Deployment","C":"DNS","B":"Service","A":"Port"},"question_images":[],"answer_ET":"B","question_id":94,"answers_community":["B (100%)"],"discussion":[{"content":"Selected Answer: B\nA Service is the Kubernetes resource used to expose an application running on a set of Pods. It provides a stable endpoint, load balancing, and service discovery, making it an essential component for accessing applications within a Kubernetes cluster.","timestamp":"1740788280.0","poster":"shahy0","upvote_count":"1","comment_id":"1363317"},{"comment_id":"1167638","content":"Selected Answer: B\nhttps://kubernetes.io/docs/tutorials/kubernetes-basics/expose/expose-intro/#:~:text=Expose%20Your%20App-,Using%20a%20Service%20to%20Expose%20Your%20App,-Objectives","timestamp":"1725674400.0","upvote_count":"2","poster":"pulsefire"}]},{"id":"Ym2Ql6JUmSi12na29t1Y","choices":{"C":"It's a type of workload that needs to be run periodically on a given schedule.","A":"It's a type of workload that ensures a specific set of nodes run a copy of a Pod.","D":"It's a type of workload that provides guarantees about ordering, uniqueness, and identity of a set of Pods.","B":"It's a type of workload responsible for maintaining a stable set of replica Pods running in any node."},"topic":"1","exam_id":281,"unix_timestamp":1727521200,"answer":"A","isMC":true,"answers_community":["A (100%)"],"question_id":95,"url":"https://www.examtopics.com/discussions/linux-foundation/view/148291-exam-kcna-topic-1-question-56-discussion/","question_images":[],"answer_images":[],"answer_ET":"A","answer_description":"","timestamp":"2024-09-28 13:00:00","question_text":"What is a DaemonSet?","discussion":[{"timestamp":"1740788340.0","content":"Selected Answer: A\nA DaemonSet in Kubernetes is a type of workload that ensures a copy of a Pod runs on a specific set of nodes, typically all nodes in the cluster. DaemonSets are used for deploying system-level services that need to run on every node, such as log collectors, monitoring agents, or network plugins.","poster":"shahy0","upvote_count":"1","comment_id":"1363318"},{"poster":"2211094","content":"Selected Answer: A\nA. It's a type of workload that ensures a specific set of nodes run a copy of a Pod.\n\nA DaemonSet ensures that all (or some) nodes run a copy of a specific Pod. When a new node is added to the cluster, a Pod from the DaemonSet is automatically added to that node. When a node is removed from the cluster, the Pod is also removed.","upvote_count":"1","timestamp":"1736683680.0","comment_id":"1339466"},{"comment_id":"1290619","content":"DaemonSet ensures that a copy of a Pod runs on all (or some) nodes of your cluster. DaemonSets are perfect to run infrastructure-related workload, for example monitoring or logging tools.","timestamp":"1727521200.0","upvote_count":"1","poster":"mc2301"}]}],"exam":{"isImplemented":true,"numberOfQuestions":138,"lastUpdated":"12 Apr 2025","id":281,"isMCOnly":true,"name":"KCNA","isBeta":false,"provider":"Linux-foundation"},"currentPage":19},"__N_SSP":true}