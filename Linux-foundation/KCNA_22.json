{"pageProps":{"questions":[{"id":"QJhxeCbIzXFJARn2Pspx","answer_description":"","unix_timestamp":1709785740,"exam_id":281,"discussion":[{"timestamp":"1740798720.0","poster":"shahy0","comment_id":"1363358","upvote_count":"1","content":"Selected Answer: B\nThe correct statement about the Kubernetes network model is that Pods can communicate with all Pods without NAT. This principle ensures a flat network topology where direct communication between Pods is possible, simplifying network configuration and management within the Kubernetes cluster."},{"timestamp":"1736685360.0","poster":"2211094","comment_id":"1339480","content":"Selected Answer: B\nB. Pods can communicate with all Pods without NAT.\n\nIn the Kubernetes network model, each Pod has a unique IP address, and Pods can communicate with each other directly without needing Network Address Translation (NAT).","upvote_count":"1"},{"timestamp":"1725676140.0","poster":"pulsefire","upvote_count":"2","comment_id":"1167647","content":"Selected Answer: B\nB\nhttps://kubernetes.io/docs/concepts/services-networking/#:~:text=pods%20can%20communicate%20with%20all%20other%20pods%20on%20any%20other%20node%20without%20NAT"}],"answers_community":["B (100%)"],"timestamp":"2024-03-07 05:29:00","answer_ET":"B","isMC":true,"question_text":"Which statement about the Kubernetes network model is correct?","choices":{"D":"The Service IP is used for the communication between Services.","A":"Pods can only communicate with Pods exposed via a Service.","C":"The Pod IP is only visible inside a Pod.","B":"Pods can communicate with all Pods without NAT."},"answer":"B","topic":"1","url":"https://www.examtopics.com/discussions/linux-foundation/view/135374-exam-kcna-topic-1-question-66-discussion/","answer_images":[],"question_images":[],"question_id":106},{"id":"DKkwPOADUjrDxKPqq9NZ","answers_community":["A (100%)"],"question_images":[],"choices":{"B":"ContainerSet","A":"Pod","C":"ReplicaSet","D":"Deployment"},"isMC":true,"answer_ET":"A","exam_id":281,"topic":"1","timestamp":"2025-01-12 13:38:00","answer_description":"","answer_images":[],"answer":"A","unix_timestamp":1736685480,"question_text":"What is the resource type used to package sets of containers for scheduling in a cluster?","discussion":[{"poster":"2211094","content":"Selected Answer: A\nPod is the answer","upvote_count":"1","timestamp":"1736685480.0","comment_id":"1339482"}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/154428-exam-kcna-topic-1-question-67-discussion/","question_id":107},{"id":"OyiC6P1c8PGKXJLGCBcj","answers_community":["B (54%)","C (46%)"],"question_images":[],"choices":{"D":"No, because the only port you can expose is port number 443.","C":"Yes, the only requirement is to use different port numbers.","A":"No, you can only expose one port per each Service.","B":"Yes, but you must specify an unambiguous name for each port."},"isMC":true,"answer_ET":"B","exam_id":281,"topic":"1","timestamp":"2023-12-28 10:23:00","answer_images":[],"answer_description":"","answer":"B","question_text":"Can a Kubernetes Service expose multiple ports?","unix_timestamp":1703755380,"discussion":[{"timestamp":"1743275160.0","comment_id":"1411828","poster":"Matsuura","upvote_count":"1","content":"Selected Answer: C\nThis discussion is very divided. But in a multiport definition, the name is optional. \nBy networking logic, binding a port two times is not allowed."},{"poster":"shahy0","timestamp":"1740799380.0","content":"Selected Answer: B\na Service can expose multiple ports. When defining a Service with multiple ports, you must specify a unique name for each port to avoid ambiguity. This allows the Service to route traffic to different ports on the backend Pods.","upvote_count":"1","comment_id":"1363363"},{"timestamp":"1736685720.0","poster":"2211094","upvote_count":"1","comment_id":"1339485","content":"Selected Answer: B\nB. Yes, but you must specify an unambiguous name for each port.\n\nIn Kubernetes, a Service can expose multiple ports, but you need to assign a unique name to each port to avoid ambiguity."},{"comment_id":"1322834","timestamp":"1733502120.0","poster":"abitwrong","upvote_count":"2","content":"Selected Answer: B\nhttps://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services"},{"upvote_count":"3","comment_id":"1290636","timestamp":"1727523780.0","poster":"mc2301","content":"Multi-port Services\nFor some Services, you need to expose more than one port. Kubernetes lets you configure multiple port definitions on a Service object. When using multiple ports for a Service, you must give all of your ports names so that these are unambiguous. For example:\n\napiVersion: v1\nkind: Service\nmetadata:\n name: my-service\nspec:\n selector:\n app.kubernetes.io/name: MyApp\n ports:\n - name: http\n protocol: TCP\n port: 80\n targetPort: 9376\n - name: https\n protocol: TCP\n port: 443\n targetPort: 9377"},{"upvote_count":"3","timestamp":"1727090700.0","poster":"miskill","comment_id":"1288072","content":"Selected Answer: B\nB is correct: \nC suggests that only different port numbers are required, but it overlooks the need for a unique name to avoid confusion and conflicts, especially when multiple ports are involved.\nTherefore, B is correct because, in addition to different port numbers, a unique name for each port is required."},{"poster":"miskill","comment_id":"1279945","upvote_count":"1","timestamp":"1725699360.0","content":"Selected Answer: C\nist is correct"},{"content":"Selected Answer: C\nCopilot says C","upvote_count":"2","poster":"hovnival","timestamp":"1713863340.0","comment_id":"1200565"},{"poster":"pulsefire","content":"Selected Answer: C\nshould be C","upvote_count":"2","timestamp":"1709785800.0","comment_id":"1167649"},{"poster":"omerco61","comment_id":"1146304","timestamp":"1707568680.0","upvote_count":"2","content":"Option B is incorrect because, while you can name the ports for clarity, it is not a strict requirement. Correct C"},{"poster":"3c9bc24","comment_id":"1107632","upvote_count":"2","timestamp":"1703755380.0","content":"Isn't the correct answer C? I don't think it requires a name for each port"}],"url":"https://www.examtopics.com/discussions/linux-foundation/view/129528-exam-kcna-topic-1-question-68-discussion/","question_id":108},{"id":"pFJxjL1oNUu8LN4ofeEP","url":"https://www.examtopics.com/discussions/linux-foundation/view/154429-exam-kcna-topic-1-question-69-discussion/","timestamp":"2025-01-12 13:44:00","answers_community":["A (100%)"],"choices":{"D":"Quality Engineers","A":"Site Reliability Engineers","B":"Project Managers","C":"Application Developers"},"question_text":"Which persona is normally responsible for defining, testing, and running an incident management process?","discussion":[{"comment_id":"1363360","content":"Selected Answer: A\nSite Reliability Engineers (SREs) are normally responsible for defining, testing, and running an incident management process","upvote_count":"1","poster":"shahy0","timestamp":"1740799020.0"},{"timestamp":"1736685840.0","content":"Selected Answer: A\nA. Site Reliability Engineers\n\nSite Reliability Engineers (SREs) are typically responsible for defining, testing, and running incident management processes. They focus on ensuring the reliability and performance of systems, as well as handling operational issues and incidents.","comment_id":"1339488","upvote_count":"1","poster":"2211094"}],"isMC":true,"question_id":109,"answer_images":[],"answer_description":"","unix_timestamp":1736685840,"answer":"A","question_images":[],"answer_ET":"A","topic":"1","exam_id":281},{"id":"RJur9ICn0MGR5xYa6o35","url":"https://www.examtopics.com/discussions/linux-foundation/view/119235-exam-kcna-topic-1-question-7-discussion/","answer_description":"","question_text":"What is a Kubernetes service with no cluster IP address called?","discussion":[{"timestamp":"1741286040.0","upvote_count":"1","content":"Selected Answer: A\nAnswer A","comment_id":"1365977","poster":"jocasmen94"},{"upvote_count":"1","comment_id":"1363057","poster":"shahy0","timestamp":"1740751380.0","content":"Selected Answer: A\nA Kubernetes service with no cluster IP address is called a headless service.\n\nHeadless Service\nA headless service is created by setting the clusterIP field to None."},{"comment_id":"1174957","upvote_count":"4","timestamp":"1726483620.0","content":"A. Headless Service\n\nHere's why:\n\nHeadless Service: This type of service doesn't have a cluster IP address assigned. Instead, it maps directly to the pods it manages, allowing communication with individual pods using their unique IP addresses.\nNodeless Service: This term isn't commonly used in Kubernetes. Services can exist and function even without a dedicated node running them.\nIPLess Service: While this might seem like a logical term, \"Headless Service\" is the official designation in Kubernetes.\nSpecless Service: A service definition requires a specification file (usually YAML). A service without a spec wouldn't be a valid service at all","poster":"EzBL"}],"exam_id":281,"choices":{"B":"Nodeless Service","C":"IPLess Service","A":"Headless Service","D":"Specless Service"},"answer":"A","timestamp":"2023-08-28 15:02:00","question_id":110,"isMC":true,"answer_images":[],"answer_ET":"A","question_images":[],"answers_community":["A (100%)"],"unix_timestamp":1693227720,"topic":"1"}],"exam":{"lastUpdated":"12 Apr 2025","name":"KCNA","isImplemented":true,"isBeta":false,"numberOfQuestions":138,"isMCOnly":true,"id":281,"provider":"Linux-foundation"},"currentPage":22},"__N_SSP":true}