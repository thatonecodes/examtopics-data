{"pageProps":{"questions":[{"id":"reHxWehGKwYvlcJ0XndG","question_text":"DRAG DROP\n-\n\nDrag and drop the operations from the left into the order on the right to create a web dashboard that displays Cisco DNA Center data for an organization.\n\n//IMG//","answer":"","answer_images":["https://img.examtopics.com/350-901/image38-1.png"],"question_images":["https://img.examtopics.com/350-901/image38.png"],"answer_ET":"","answers_community":[],"question_id":181,"topic":"1","url":"https://www.examtopics.com/discussions/cisco/view/113994-exam-350-901-topic-1-question-261-discussion/","timestamp":"2023-07-03 09:54:00","isMC":false,"answer_description":"","discussion":[{"comment_id":"941607","upvote_count":"7","timestamp":"1719993240.0","content":"Given answer is correct","poster":"ThePokemonNuzlockingMaster"}],"exam_id":329,"unix_timestamp":1688370840},{"id":"o1s3RPdNkEsR8PK12lvh","question_text":"Which function does Fluentd fulfill for application logging in Kubernetes?","choices":{"A":"monitoring and log visualization","D":"backend time series database storage","B":"logging agent for distribution","C":"messaging/queueing infrastructure"},"answer_images":[],"answer_ET":"B","answers_community":[],"answer_description":"","discussion":[{"upvote_count":"9","comment_id":"778765","poster":"lznlxl","timestamp":"1721202960.0","content":"given answer is correct.\n\nWhat is Fluentd used for?\nFluentd is an open source data collector for building the unified logging layer. Once installed on a server, it runs in the background to collect, parse, transform, analyze and store various types of data."},{"upvote_count":"1","content":"distribute to a centralized logging platform like ElasticSearch or Splunk","comment_id":"1342621","poster":"samael666","timestamp":"1737222900.0"}],"isMC":true,"url":"https://www.examtopics.com/discussions/cisco/view/95680-exam-350-901-topic-1-question-262-discussion/","question_id":182,"answer":"B","topic":"1","timestamp":"2023-01-17 10:56:00","question_images":[],"exam_id":329,"unix_timestamp":1673949360},{"id":"7A3pSBYaqXDB9dFwfEsR","question_text":"//IMG//\nRefer to the exhibit. Which action resolves the error for the GitLab CI/CD pipeline execution?","exam_id":329,"isMC":true,"unix_timestamp":1673683680,"answer_ET":"C","answer_images":[],"answer_description":"","question_id":183,"timestamp":"2023-01-14 09:08:00","answer":"C","discussion":[{"comment_id":"1343451","upvote_count":"1","poster":"duracell","timestamp":"1737364320.0","content":"Selected Answer: D\nmost common issues with gitlab-runner not finding python3 are the variables in the OS env. not set."},{"comment_id":"1276173","content":"Selected Answer: D\nImage has python3, though the PATH is not known.","timestamp":"1725210060.0","poster":"Dreamnetdev","upvote_count":"1"},{"comment_id":"1233465","timestamp":"1718861160.0","content":"Selected Answer: D\nalpine:3.10 has python-3.7.3 installed:\nhttps://alpinelinux.org/posts/Alpine-3.10.0-released.html\n\nMust be D","poster":"andante","upvote_count":"1"},{"timestamp":"1674221100.0","comment_id":"782277","upvote_count":"4","content":"Answer C\nPython3 command is not recognised.\nLooks like Python3 not installed.\nYou must install python.\nBut because there is no answer to install, you need tu use a base image that has python installed.","poster":"fb48"},{"content":"Selected Answer: C\nPretty sure it's C.","timestamp":"1673870820.0","comment_id":"777618","upvote_count":"4","poster":"[Removed]"},{"poster":"fb48","content":"python3 command is not recognised by bash.\nTherefo the path must be added \n\nAnswer: D","upvote_count":"1","timestamp":"1673683680.0","comments":[{"comment_id":"799472","timestamp":"1675665300.0","content":"python3 is not installed on Docker Image alpine3.10. Therefore, Answer is C.","poster":"syauichi","upvote_count":"2"}],"comment_id":"775175"}],"choices":{"D":"Add the absolute path to the python3 executable.","C":"Use the python.3.9. 0a4-alpine3.10 Docker image.","B":"Download the correct artifacts by specifying them in GitLab.","A":"Install the missing python libraries via pip3."},"answers_community":["C (57%)","D (43%)"],"topic":"1","url":"https://www.examtopics.com/discussions/cisco/view/95157-exam-350-901-topic-1-question-263-discussion/","question_images":["https://img.examtopics.com/350-901/image39.png"]},{"id":"brqucCFUzqWpOtMz4QmE","url":"https://www.examtopics.com/discussions/cisco/view/95158-exam-350-901-topic-1-question-264-discussion/","answers_community":[],"answer_images":["https://img.examtopics.com/350-901/image40-1.png"],"answer":"","answer_description":"","unix_timestamp":1673683920,"exam_id":329,"discussion":[{"upvote_count":"12","timestamp":"1720937520.0","content":"correct","comment_id":"775178","poster":"fb48"}],"answer_ET":"","isMC":false,"timestamp":"2023-01-14 09:12:00","question_text":"DRAG DROP\n-\n\nA developer is creating a Python function that adds network engineers to a Webex room to troubleshoot after a monitoring alert. Drag and drop the code from the bottom onto the box where the code is missing in the Python function to add the engineers to the room. Not all options are used.\n\n//IMG//","question_id":184,"topic":"1","question_images":["https://img.examtopics.com/350-901/image40.png"]},{"id":"sUFLEjRoBnwzw2J8apLD","url":"https://www.examtopics.com/discussions/cisco/view/95825-exam-350-901-topic-1-question-265-discussion/","timestamp":"2023-01-18 12:24:00","topic":"1","unix_timestamp":1674041040,"answer_description":"","answer_ET":"C","answer":"C","answer_images":[],"question_id":185,"question_text":"How does the use of release packaging allow dependencies to be effectively managed during deployments?","isMC":true,"discussion":[{"comment_id":"1287749","poster":"Amycert","upvote_count":"1","timestamp":"1727013420.0","content":"Selected Answer: C\nI think C makes most sense. Dependencies are not \"staggered\" between releases, since each release can include new dependency version which would require a new installation.\nA and B make no sense."},{"upvote_count":"2","comment_id":"1078553","poster":"doble_h","timestamp":"1700755620.0","content":"Selected Answer: C\ntwelve-factor app methodology often involves bundling each release as an independent unit with all of its dependencies included"},{"upvote_count":"2","timestamp":"1690449600.0","content":"Selected Answer: A\nOption B, dependencies are tested after the release is deployed, is not a good way to manage dependencies. If there are any issues with the dependencies, the release will already be deployed and it will be difficult to roll back the deployment.\nOption C, designed to prevent any dependencies between release units, is not possible in most cases. There are always going to be dependencies between release units, even if they are not explicitly stated.\nOption D, dependencies are staggered between multiple releases, is not a good way to manage dependencies. This can lead to deployments that are not consistent and can make it difficult to track down problems","comment_id":"964537","poster":"johntermlen"},{"comment_id":"941970","upvote_count":"2","timestamp":"1688397360.0","poster":"ThePokemonNuzlockingMaster","content":"Selected Answer: C\nYeah I'm gonna go with C on this one as it related heavily to the 12-factor app"},{"comment_id":"791231","upvote_count":"4","timestamp":"1674951360.0","poster":"it0","content":"Answer is C:\n II. Dependencies\nExplicitly declare and isolate dependencies"},{"timestamp":"1674041040.0","comment_id":"779927","poster":"[Removed]","comments":[{"upvote_count":"1","content":"it also answered C:","comment_id":"933908","comments":[{"upvote_count":"2","poster":"i9t6","comment_id":"933911","content":"If the goal is to ensure strict isolation and minimize any interdependencies between release units, option C would be preferable. This approach promotes cleaner boundaries between units and simplifies the management and troubleshooting of the system.\n\nIf the deployment scenario requires a more flexible approach, with the ability to independently manage and test dependencies while allowing for gradual rollouts, option D could be a better choice. This approach acknowledges that dependencies may exist but seeks to control their introduction and impact.\n\nUltimately, the decision between option C and D should be based on factors such as the complexity of dependencies, the desired level of isolation, the deployment strategy, and the specific trade-offs and priorities of the project.","timestamp":"1687733340.0"}],"poster":"i9t6","timestamp":"1687732920.0"}],"content":"Selected Answer: D\nI asked ChatGPT and it gave this answer:\nD. dependencies are staggered between multiple releases\nHow confident are you in your answer?\nI am highly confident in my answer. Release packaging is a technique that allows for dependencies to be effectively managed during deployments by staggering them between multiple releases. This means that different components of a software system can be released at different times, rather than all at once, which allows for more control over the dependencies between those components. This approach allows the development team to test, validate and deploy each release unit separately, therefore, reducing the risk of failure and allowing for a more controlled and efficient deployment process.","upvote_count":"2"}],"answers_community":["C (56%)","A (22%)","D (22%)"],"exam_id":329,"question_images":[],"choices":{"B":"dependencies are tested after the release is deployed","C":"designed to prevent any dependencies between release units","A":"removal of release units if they have issues in testing","D":"dependencies are staggered between multiple releases"}}],"exam":{"isImplemented":true,"name":"350-901","isMCOnly":false,"provider":"Cisco","numberOfQuestions":383,"isBeta":false,"lastUpdated":"12 Apr 2025","id":329},"currentPage":37},"__N_SSP":true}