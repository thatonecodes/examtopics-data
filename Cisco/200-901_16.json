{"pageProps":{"questions":[{"id":"2AvpaGTduhFne4dc0Jou","url":"https://www.examtopics.com/discussions/cisco/view/69441-exam-200-901-topic-1-question-167-discussion/","question_id":76,"exam_id":291,"topic":"1","timestamp":"2022-01-04 12:56:00","answer":"","unix_timestamp":1641297360,"isMC":false,"answer_ET":"","discussion":[{"content":"All correct: \nls -t\nmkdir \ncp\ncd~\nexport\ncd/\nmv\ntouch\ncp -r\nls -l\nIn this link the answer is bad , such as the others post show them\nhttps://www.examtopics.com/discussions/cisco/view/23865-exam-200-901-topic-1-question-98-discussion/","poster":"aplicacion101","comment_id":"671042","timestamp":"1710621300.0","upvote_count":"3"},{"content":"All ok except for ls -l and ls -t","upvote_count":"2","comment_id":"618339","timestamp":"1702924740.0","poster":"macxsz"},{"poster":"aspod","content":"answer is correct except for ls -l and ls -t. swap the two around","upvote_count":"4","comments":[{"content":"nope, \"-t sort by time, newest first; see --time\"\nThe answers are correct as they are:\nhttps://man7.org/linux/man-pages/man1/ls.1.html","poster":"rtg2123","upvote_count":"1","comment_id":"839595","timestamp":"1726375140.0"}],"comment_id":"516631","timestamp":"1688469480.0"},{"content":"ls -t Sort by time modified (most recently modified first) before sorting the operands in lexicographical order.","upvote_count":"2","timestamp":"1688464560.0","poster":"sucre1","comment_id":"516547"}],"answers_community":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04301/0014900001.png"],"question_text":"DRAG DROP -\nDrag and drop the Bash commands from the left onto the related actions on the right.\nSelect and Place:\n//IMG//","answer_images":["https://www.examtopics.com/assets/media/exam-media/04301/0015000001.png"],"answer_description":""},{"id":"MAhraOqnIQ7Yh8NNoNJV","exam_id":291,"unix_timestamp":1606917660,"question_id":77,"timestamp":"2020-12-02 15:01:00","answer_ET":"See explanation below.","url":"https://www.examtopics.com/discussions/cisco/view/38478-exam-200-901-topic-1-question-168-discussion/","answer":"See explanation below.","answers_community":[],"discussion":[{"upvote_count":"34","poster":"valbonarexhepi","content":"ls\n$TARGET_DIR\nmv","timestamp":"1701543120.0","comment_id":"233304"},{"poster":"batmantm","comment_id":"233042","upvote_count":"8","content":"for f in : ls $TARGET_DIR mv","timestamp":"1701525660.0"},{"comment_id":"380766","content":"ls\n$TARGET_DIR\nmv \"","upvote_count":"2","timestamp":"1718242080.0","poster":"mtempeo"},{"timestamp":"1708626480.0","poster":"[Removed]","content":"ls \n$TARGET_DIR \nmv","upvote_count":"2","comment_id":"296839"},{"comments":[{"timestamp":"1707729120.0","comment_id":"288777","poster":"flox","content":"use ` instead '","upvote_count":"3"}],"timestamp":"1705303440.0","content":"for f in 'ls $TARGET_DIR' do mv..., not sure where it is correct, \nfrom my experience the most similar i can run is: for f in $(ls $TARGET_DIR) do mv....\ncan someone elaborate? thanks","comment_id":"267686","upvote_count":"1","poster":"blalw"},{"content":"$TARGET_DIR/*\nmv","comment_id":"237429","upvote_count":"5","poster":"Elvkoo","timestamp":"1701962220.0"},{"poster":"Sliking","comment_id":"237209","comments":[{"timestamp":"1708114620.0","comment_id":"292085","poster":"geex","upvote_count":"3","content":"Single quotes (') in this example most probably should be back-ticks (`). But essentially it comes down to:\n- list files in directory (eg. `ls $TARGET_DIR`)\n- move each file (eg. `mv $f `openssl....`)"}],"content":"I don't get this script...\nShouldn't it be something like this:\n\nfor f in *; do \nmv $f $(openssl sha256 -r < $f | cut -d \" \" -f 1); \ndone\n\nI tried with 'ls $TARGET_DIR' and it just prints the command which results in an error: \"mv: cannot stat 'ls': No such file or directory\"\n\nRegarding the cut command we can use either -f or -c according to documentation, why are they using both? Also the default delimiter is TAB which would result in the string having 'stdin' at the end. We need to change that with the -d option.","timestamp":"1701944640.0","upvote_count":"2"}],"isMC":false,"answer_images":[],"question_images":[],"answer_description":"TARGET_DIR=/usr/local/certs -\nfor f in '/usr/local/certs'; do\necho $f' openssl sha -sha256 -r < $f | cut -f1 -cl' ''","topic":"1","question_text":"FILL BLANK -\nFill in the blanks to complete the Bash script in which each file in a directory is renamed to its SHA256 hash?\n\nTARGET_DIR=/usr/local/certs -\nfor f in '__________ __________'; do\n__________ $f' openssl sha -sha256 -r < $f | cut -f1 -cl' ''"},{"id":"HFwdsgyBQBCc9uhus1Dc","answer":"B","answers_community":["B (100%)"],"question_text":"After a project is migrated to a new codebase, the `old_project` directory must be deleted. This directory has multiple read-only flies, and it must be deleted recursively without prompting for confirmation. Which Bash command must be used?","discussion":[{"timestamp":"1683026160.0","content":"B. is the correct answer. To remove non-empty directories and all the files without being prompted, use rm with the -r (recursive) and -f https://linuxize.com/post/how-to-remove-files-and-directories-using-linux-command-line/","comment_id":"347662","upvote_count":"8","poster":"DenskyDen"},{"upvote_count":"1","comment_id":"618346","content":"Selected Answer: B\nrm -rf to Remove forcefully","poster":"macxsz","timestamp":"1718729400.0"},{"comment_id":"613038","upvote_count":"1","timestamp":"1717814700.0","poster":"Toxkalcan","content":"Selected Answer: B\nsomehow C does the work as well"},{"content":"very easy , B is correct","comment_id":"455269","timestamp":"1696131540.0","poster":"Ram0n_Aya1a","upvote_count":"1"}],"unix_timestamp":1619954160,"question_id":78,"timestamp":"2021-05-02 13:16:00","choices":{"C":"rm -r old_project","B":"rm -rf old_project","A":"rmdir -p old_project","D":"rmdir old_project"},"exam_id":291,"answer_ET":"B","question_images":[],"isMC":true,"url":"https://www.examtopics.com/discussions/cisco/view/51533-exam-200-901-topic-1-question-169-discussion/","answer_images":[],"answer_description":"","topic":"1"},{"id":"kffmpCc1KQJeVkOaaPDx","question_id":79,"answer_ET":"BC","timestamp":"2020-06-07 20:12:00","answer_description":"","answers_community":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04301/0001200001.png","https://www.examtopics.com/assets/media/exam-media/04301/0001300001.png","https://www.examtopics.com/assets/media/exam-media/04301/0001300002.png","https://www.examtopics.com/assets/media/exam-media/04301/0001400001.png","https://www.examtopics.com/assets/media/exam-media/04301/0001400002.png","https://www.examtopics.com/assets/media/exam-media/04301/0001500001.png"],"url":"https://www.examtopics.com/discussions/cisco/view/22513-exam-200-901-topic-1-question-17-discussion/","answer":"BC","question_text":"Refer to the exhibit.\n//IMG//\n\nThe output of a unified diff when comparing two versions of a Python script is shown. Which two `single_request_timeout()` functions are defined in fish.py and cat.py? (Choose two.)\nA.\n//IMG//\n\nB.\n//IMG//\n\nC.\n//IMG//\n\nD.\n//IMG//\n\nE.\n//IMG//","topic":"1","isMC":false,"discussion":[{"comment_id":"104757","upvote_count":"40","timestamp":"1638907920.0","content":"BC imho","poster":"DavMan","comments":[{"poster":"Alan2036","content":"I also say BC","timestamp":"1639841820.0","upvote_count":"6","comment_id":"113200"},{"poster":"aprettyparrot","comments":[{"poster":"richard2865","upvote_count":"1","content":"I stared at this endlessly and cannot figure it out. Thanks for taking the time to actually try it. I am just going to have to figure a way to memorize the answer...","comment_id":"483387","timestamp":"1684675380.0"}],"upvote_count":"6","timestamp":"1668172200.0","content":"Its B+C, the answer of A+B didn't seem right so I just typed it out and actually did the diff.\n\nIts fish.py vs cat.py\ncat.py is missing the \"assert\" line, while fish.py has it. this is what gives it the \"-\"\nfish.py is missing the If statement, whereas cat.py has it, that is why its a \"+\"\n\nthe order of the files in the diff call is important.","comment_id":"354636"}]},{"upvote_count":"6","poster":"ReadTheDoc","comment_id":"114541","content":"B & C is the correct answer.","timestamp":"1639990920.0"},{"poster":"menote","content":"Hi Guys, \nTo be honest with you. For the the questions is not making sense. I did not get it. \nThe output of a unified diff when comparing two versions of a Python script is shown. Which two `single_request_timeout()` functions are defined in fish.py and cat.py? (Choose two.). \nI see the definition of single_request_timeout() in all the options provided. Maybe am missing something","timestamp":"1722854880.0","comment_id":"798820","upvote_count":"2"},{"timestamp":"1714372020.0","poster":"Pateras_","comment_id":"707025","comments":[{"poster":"tonko","comment_id":"814729","timestamp":"1724112360.0","content":"If you are talking about C and E, then the line numbers are different.","upvote_count":"2"}],"content":"C and D are the same, can someone explain to me the difference here. I think it may be a typo.","upvote_count":"2"},{"content":"BC for me and i think the C & D are the same, correct me if i'm wrong","timestamp":"1705583940.0","comment_id":"632981","upvote_count":"2","poster":"Router"},{"timestamp":"1701285300.0","poster":"macxsz","content":"B and C","upvote_count":"1","comment_id":"608859"},{"timestamp":"1696247820.0","comment_id":"579826","poster":"anonymous1966","content":"Correct question without special characters:\nWhich two “single_request_timeout()” functions are defined in fish.py and cat.py? (Choose two.)","upvote_count":"1"},{"timestamp":"1695742440.0","upvote_count":"1","comment_id":"575681","content":"Answer is BC - because lines starts at line 160","poster":"daloslav"},{"comment_id":"546834","timestamp":"1691967960.0","content":"The answer is B and C.\nEach changed line is prepended with either a \"+\" or a \"-\" symbol. A line that is prepended with a \"-\" sign comes from fish.py, while a line with a \"+\" sign comes from cat.py. In most cases, Git picks fish.py and cat.py in such a way that you can think of fish.py/- as \"old\" content and cat.py/+ as \"new\" content.\n\n160 - @single_request_timeout.setter\n161 - def single_request_timeout(self,value):\n162 - \"'''The timeout (seconds) for a single HTTP REST API request.\"\n163 - check_type(value, int, optional=True)\n\"-\" value = this line was deleted from fish.py 164 - assert value is None or value > 0\n\"+\" value = this line was added - 165 - if value is not None and value <= 0:\n\"+\" value = this line was added - 166 - raise ValueError(\"single_request_timeout must be positive integer\") self._single_request_timeout = value\n167 - self._ single_request_timeout = value","poster":"designated","upvote_count":"2"},{"content":"arggh. Correction to the third paragrapgh in my previous comment which *should* have read:\n\n[..]\nThen as you look at the unified output below, lines starting with a corresponding '-' reference text that exists uniquely in the '--- fish.py' file (ie: \"assert value is None or value > 0\") whereas the IF statement beginning \n\nif value is not None and value <= 0:\n\n..exists in '+++ cat.py' only.\n[..]","upvote_count":"1","poster":"intf_null0","timestamp":"1684793700.0","comment_id":"484643"},{"content":"The answer is B and C.\nThe first most important thing to note in output from a unified diff is which file is annotated with '---' versus '+++' - namely:\n\n--- fish.py\n+++ cat.py\n\nThen as you look at the unified output below, lines starting with a corresponding '-' reference text that exists uniquely in the '--- fish.py' file (ie: \"assert value is None or value > 0\") whereas the assert code exists in '+++ cat.py' only. \n\nSecondly, note the 3rd line of output: \"@@ -160,11 +160,12 @@\". \n\nThe -160,12 references lines in fish.py whereas +160,12 references lines in cat.py. This excludes answer E which shows output using line numbers 172 and above.","timestamp":"1684793280.0","upvote_count":"1","poster":"intf_null0","comment_id":"484638"},{"upvote_count":"2","timestamp":"1660622040.0","poster":"ensxu1214","comment_id":"291530","content":"from fish.py, \"-\" the sentences, and \"+\" the sentences, becomes cat.py."},{"comment_id":"248705","timestamp":"1655727000.0","poster":"uerdemk","upvote_count":"3","content":"Should be B&C"},{"timestamp":"1654660320.0","comment_id":"237934","content":"B & C. \nCreated two files cat.py (C) and fish.py(B) and run the diff command. The output is exactly the same as exhibit.","poster":"fakrulalam","upvote_count":"3"},{"poster":"Ruley13","upvote_count":"3","comment_id":"229002","content":"B & C","timestamp":"1653645960.0"},{"content":"B and C.","upvote_count":"3","timestamp":"1650753180.0","comment_id":"204852","poster":"bpbenabd"},{"upvote_count":"5","content":"B and C is the correct one","comment_id":"156336","timestamp":"1644669180.0","poster":"NitinPathak"},{"comment_id":"137108","content":"A minus (\"-\") sign at the beginning of the line refers to the state in your local repository, and a plus (\"+\") sign at the beginning of the line refers to currently made changes.","poster":"iwillpass","upvote_count":"1","timestamp":"1642426740.0"},{"poster":"peterxu2021","content":"what is the difference between C and E","timestamp":"1640256480.0","upvote_count":"6","comment_id":"117244","comments":[{"upvote_count":"15","poster":"jonasff","comment_id":"119456","timestamp":"1640444340.0","content":"The line number of file. As soon as we're comparing two files line by line, E are using 17X lines whereas C is using 16X lines which is the same for fish.py file."}]},{"timestamp":"1640173980.0","comment_id":"116265","content":"B and C","poster":"ananbini0035","upvote_count":"5"}],"exam_id":291,"unix_timestamp":1591553520,"answer_images":[]},{"id":"vfDa8aEmDrEr9mUIMY5s","discussion":[{"poster":"DenskyDen","comments":[{"content":"I'm going with D, simply because most Cisco material I've seen states better latency, not necessarily faster processing. The processing time will be the same, the latency for the data to travel a shorter distance will be less. Its a bad question regardless.","upvote_count":"2","comments":[{"comment_id":"635301","poster":"f4wk3ss","content":"You can have High availabilty without edge computing..... should be A.","timestamp":"1705951560.0","upvote_count":"1"}],"poster":"snowbow","comment_id":"377846","timestamp":"1670549460.0"}],"content":"Should be A. With edge computing, you let local processing of data occur closer to the actual\nsensors and devices where it can be acted on more quickly.","upvote_count":"33","timestamp":"1667395800.0","comment_id":"347672"},{"content":"This is such a stupid question, Cisco's own posts basically show that all of these options is correct: \nhttps://blogs.cisco.com/internet-of-things/edge-computing-benefits-and-iot-use-cases","upvote_count":"10","timestamp":"1670341740.0","comment_id":"376075","poster":"snowbow"},{"content":"Selected Answer: A\ncomp on the edge","comment_id":"784474","upvote_count":"2","timestamp":"1721657940.0","poster":"brunorpacheco"},{"content":"All of the options are correct.","poster":"mellohello","upvote_count":"1","comment_id":"757561","timestamp":"1719406260.0"},{"upvote_count":"1","poster":"aplicacion101","content":"A is correct.\nhttps://www.redhat.com/en/topics/edge-computing/iot-edge-computing-need-to-work-together\nEdge computing is a local source of processing and storage for the data and computing needs of IoT devices. Here are some of the benefits of using IoT and edge together: \n -Reduced latency of communication between IoT devices and the central IT networks.\n -Faster response times and increased operational efficiency.\n -Improved network bandwidth.\n -Continued systems operation offline when a network connection is lost.\n -Local data processing, aggregation, and rapid decision making via analytics algorithms and machine learning.","comment_id":"669114","timestamp":"1710434460.0"},{"upvote_count":"1","poster":"SierraSix","content":"The question should be “What is NOT…”","timestamp":"1707580200.0","comment_id":"645008"},{"comment_id":"618664","timestamp":"1702994160.0","content":"Selected Answer: A\nShould be A.\nD is referring to availability of parts which seems to be totally unrelated.\n\n\"With edge computing, you let local processing of data occur closer to the actual sensors and devices where it can be acted on more quickly\"","upvote_count":"2","poster":"macxsz"},{"poster":"[Removed]","content":"Weakness and Disadvantages of Edge-Based Computing\n- Expensive -> C) Low cost is not the answer \n- Limited Redundancy -> D) Not the answer\nI'm going with A) definitely","upvote_count":"2","comment_id":"573892","timestamp":"1695494400.0"},{"upvote_count":"2","content":"D is correct according to 200-901 cert guide: \"IoT is heavily reliant on sensors detecting and responding to events in real time. The edge computing model allows for centralized control of IoT sensors and real-time response because computing capabilities are closer to the sensor.\"","comment_id":"405652","poster":"khuiper","timestamp":"1673643240.0"},{"comment_id":"399415","timestamp":"1672955220.0","content":"It should be C the correct answer. https://www.cisco.com/c/en/us/solutions/service-provider/edge-computing.html#~build-your-edge","poster":"Grolos","upvote_count":"3"}],"question_text":"What is a benefit of using edge computing in an IoT implementation?","topic":"1","question_images":[],"url":"https://www.examtopics.com/discussions/cisco/view/51536-exam-200-901-topic-1-question-170-discussion/","unix_timestamp":1619955000,"timestamp":"2021-05-02 13:30:00","exam_id":291,"answer_images":[],"answers_community":["A (100%)"],"answer_ET":"A","choices":{"D":"high availability for network components","C":"low cost in network design","A":"high speed in data processing","B":"low network design complexity"},"answer_description":"","isMC":true,"answer":"A","question_id":80}],"exam":{"lastUpdated":"12 Apr 2025","isMCOnly":false,"provider":"Cisco","id":291,"isImplemented":true,"numberOfQuestions":558,"isBeta":false,"name":"200-901"},"currentPage":16},"__N_SSP":true}