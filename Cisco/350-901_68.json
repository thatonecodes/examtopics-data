{"pageProps":{"questions":[{"id":"JSkTAOXeVIJrWaddze7n","answer":"","answer_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005300001.jpg"],"question_text":"DRAG DROP -\n//IMG//\n\nRefer to the exhibit above and click on the resource tabs in the top left corner to view resources to help with this question. Python code that uses the UCS Python\nSDK is instantiating a service profile named `devcore-server-01` from service profile template `devcore_template`, then associating the service profile instance to blade 3 in chassis 7. Drag and drop the code snippets from the left onto the item numbers on the right that match the missing sections in the Python exhibit.\nSelect and Place:\n//IMG//","isMC":false,"answer_ET":"","unix_timestamp":1641808680,"answer_description":"","topic":"1","question_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005100001.png","https://www.examtopics.com/assets/media/exam-media/04118/0005200001.jpg"],"question_id":336,"timestamp":"2022-01-10 10:58:00","discussion":[{"timestamp":"1704880680.0","comment_id":"520775","poster":"dsizov","content":"UcsHandle\nlogin\nLsServer\nSP_FROM_TEMPLATE\nadd_mo\ncommit\nlogout","upvote_count":"18"},{"comment_id":"661675","content":"1. UCSHandle (user interface point for any UCS)\n2. login (initiates connection to the server referenced by the UCSHandle)\n3. LsServer (Service Profile / Template / Capabilities)\n4. SP_FROM_TEMPLATE (template created by LsServer)\n5. add_mo (add a managed object to the UCSHandle commit buffer)\n6. commit (commits the buffer to the server)\n7. logout (disconnect from the server referenced by the UCShandle)\nhttps://ciscoucs.github.io/ucsmsdk_docs/","timestamp":"1725661860.0","upvote_count":"10","poster":"designated"},{"upvote_count":"3","content":"UCSHandle\nlogin\nLsServer\nSP_FROM_Template\nadd_me\ncommit\nlogout","poster":"Teringzooi","comment_id":"678506","timestamp":"1727247300.0"},{"comment_id":"592138","upvote_count":"5","content":"The answer no sense.\nMy answer\nUCSHandle\nlogin\nLsServer\nSP_FROM_Template\nadd_me\ncommit\nlogout","poster":"ferock","timestamp":"1714113000.0"}],"url":"https://www.examtopics.com/discussions/cisco/view/69801-exam-350-901-topic-1-question-56-discussion/","exam_id":329,"answers_community":[]},{"id":"odwb8tB9j1B8F2EGz3R8","unix_timestamp":1629645060,"answers_community":[],"question_text":"DRAG DROP -\n//IMG//\n\nRefer to the exhibit above and click on the Meraki Resources tab in the top left corner to view Meraki documentation to help with this question. Drag and drop the parts of the Python code from the left onto the item numbers on the right that match the missing sections in the exhibit to enable an SSID. Not all code parts are used.\nSelect and Place:\n//IMG//","url":"https://www.examtopics.com/discussions/cisco/view/60262-exam-350-901-topic-1-question-57-discussion/","isMC":false,"answer":"","topic":"1","question_id":337,"answer_description":"","exam_id":329,"timestamp":"2021-08-22 17:11:00","answer_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005600001.jpg"],"answer_ET":"","discussion":[{"upvote_count":"22","comment_id":"429352","content":"The correct answer is:\nnetworks -> item1\nnetwork_id -> item2\nssids -> item3\nClick-through splash page -> item4\npsk -> item5\n192.168.0.1/32 -> item6\n5 GHz band only -> item7\n\nReference Meraki API Doc: https://developer.cisco.com/meraki/api-v1/#!update-network-wireless-ssid","timestamp":"1692717060.0","poster":"arturogonzalezgzz","comments":[{"content":"Correct! This link could be useful as well:\nhttps://documentation.meraki.com/General_Administration/Cross-Platform_Content/Splash_Page","timestamp":"1725641640.0","comment_id":"661474","poster":"designated","upvote_count":"2"},{"content":"Indeed, this seems to be the correct API call! One thing to note that threw me off is that the question is a little wrong and this will most likely fail if run because the actual API endpoint is \"/networks/{networkId}/wireless/ssids/{number}\" whereas in this question the options are to create base_url = \"/networks/{networkId}/ssids/0\" (note the omission of the \"ssids\" in the path)","upvote_count":"2","poster":"strongcloud","comments":[{"comment_id":"436211","upvote_count":"6","timestamp":"1693475280.0","content":"The API call should work because it is still using v0.\nv0: /networks/{networkId}/ssids/{number}\nv1: /networks/{networkId}/wireless/ssids/{number}\n\nBut indeed. Item 3 needs to be ssids","poster":"tswinn"}],"comment_id":"432321","timestamp":"1693054380.0"}]},{"timestamp":"1727248140.0","upvote_count":"1","comment_id":"678512","poster":"Teringzooi","content":"networks -> item1\nnetwork_id -> item2\nssids -> item3\nClick-through splash page -> item4\npsk -> item5\n192.168.0.1/32 -> item6\n5 GHz band only -> item7\n\nhttps://developer.cisco.com/meraki/api-v1/#!update-network-wireless-ssid"},{"timestamp":"1714114740.0","comment_id":"592154","content":"1. networks\n2. network_id\n3. ssids\n4. click-through\n5. psk\n6. 192.168.0.1/32\n7. 5GHz\n\nSource: Cisco DEVCOR 350-901 Study Guide\n\nbase_url = \"https://api.meraki.com/api/v0\"\n\n# get a list of the networks and\n nets = do_API_call(f\"organizations/{organizationId}/networks\")\n\n# get a list of all SSIDs for the network\n ssids = do_API_call(f\"networks/{networkId}/ssids\")\n\n#Read the specific ssid\nssid_state = do_API_call(f\"networks/{my_network_id}/ssids/{my_ssid_number}\")","upvote_count":"1","poster":"ferock"},{"timestamp":"1711569120.0","upvote_count":"2","content":"does anyone know if in the real exam they would provide supporting material that allows one to infer what is the correct URL path? Cause there is no way in hell I will remember a freaking Cisco product specific url... there's simply no point in doing so and expecting an engineer to know that from the top of his/her head.","poster":"__al__","comment_id":"576367"}],"question_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005400001.png","https://www.examtopics.com/assets/media/exam-media/04118/0005500001.jpg"]},{"id":"bGfc0sbzM3eEuIHhMlhc","url":"https://www.examtopics.com/discussions/cisco/view/60257-exam-350-901-topic-1-question-58-discussion/","unix_timestamp":1629639840,"answer":"","answer_ET":"","exam_id":329,"discussion":[{"comment_id":"433097","poster":"anon1","upvote_count":"8","timestamp":"1693141620.0","content":"Duplicate of question #27..."},{"upvote_count":"3","poster":"Teringzooi","comment_id":"678515","timestamp":"1727248260.0","content":"Answer:\nif = status == 201\nelse\n\nAnd duplicate of question 27."},{"content":"Duplicated #42\n- The body of if is executed only if this evaluates to create the route or if the status is equal to 201\nif = status == 201 (HTTP 201 is CREATED) = correct\n- So, if the route is I52not be created, the body of else is executed \nelse: = correct\nNote: if-else statement evaluates the Boolean expression. If the condition is TRUE then, the code present in the “ if “ block will be executed otherwise the code of the “else“ block will be executed\nWrong\nif response == 601 = there is no 6xx HTTP code\nelif is used to include multiple conditional (and it is not this case)\nwhen is used to run a block of code whenever, during the execution of the program, a condition is met or related to an event (and it is not this case)","comment_id":"645964","timestamp":"1723478820.0","poster":"designated","upvote_count":"2"},{"timestamp":"1702147500.0","comment_id":"497971","poster":"[Removed]","upvote_count":"4","content":"if status==201\nelse"},{"comment_id":"429309","poster":"lente_kriebels","timestamp":"1692711840.0","content":"Answer is correct. only like this it will not work. you will need indents behind the if else","upvote_count":"1"}],"topic":"1","isMC":false,"answers_community":[],"answer_description":"","question_id":338,"question_text":"DRAG DROP -\nDrag and drop the expressions from below onto the code to implement error handling. Not all options are used.\nSelect and Place:\n//IMG//","timestamp":"2021-08-22 15:44:00","question_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005700001.jpg"],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005800001.jpg"]},{"id":"eFTBkqS2DJ7I2hkSxXPr","url":"https://www.examtopics.com/discussions/cisco/view/60237-exam-350-901-topic-1-question-59-discussion/","exam_id":329,"isMC":true,"answers_community":["B (100%)"],"timestamp":"2021-08-22 13:22:00","question_images":["https://www.examtopics.com/assets/media/exam-media/04118/0005900001.png"],"question_text":"//IMG//\nRefer to the exhibit. An application's REST API GET call is tested to the inventory database.\nWhich missing code must be included to limit the number of values that are returned from the query to 20?","answer_ET":"B","answer":"B","topic":"1","question_id":339,"unix_timestamp":1629631320,"discussion":[{"timestamp":"1692703320.0","content":"B is correct","poster":"lente_kriebels","comment_id":"429228","upvote_count":"10"},{"comment_id":"678516","timestamp":"1727248320.0","poster":"Teringzooi","upvote_count":"1","content":"Selected Answer: B\ninventory?limit=20\nCorrect"},{"upvote_count":"2","timestamp":"1723479120.0","content":"Selected Answer: B\nThe correct answer is B\n\ninventory?limit=20\n\npath = inventory\nquery = ? \noffset or limit = limit\nequal = =\nquery number = 20","poster":"designated","comment_id":"645967"}],"choices":{"C":"limit=?20","B":"inventory?limit=20","A":"?inventory=20","D":"inventory=limit?20"},"answer_images":[],"answer_description":""},{"id":"Rhl3fAwvGXiob6IyzlE8","unix_timestamp":1593375240,"timestamp":"2020-06-28 22:14:00","exam_id":329,"question_text":"How should a web application be designed to work on a platform where up to 1000 requests per second can be served?","url":"https://www.examtopics.com/discussions/cisco/view/24302-exam-350-901-topic-1-question-6-discussion/","answers_community":["B (100%)"],"answer_ET":"B","question_images":[],"discussion":[{"upvote_count":"15","comments":[{"upvote_count":"1","content":"You are assuming a queue is necessary. It was just an example for the rate limiting. All APIs should have reasonable rate limiting. A developer would want the API call to be declined rather than waiting an indeterminate amount of time for it to be finished.","comment_id":"1276780","poster":"thedes","timestamp":"1725285900.0"}],"content":"I would have to disagree with everyone saying B.\nB won't work if there is 2000 users registerd and then have rate-limit on 2req/sec for each user.\nThat would mean a cap on 1000 and the rest of the request wouldn't be serverd. That's why we have RabbitMQ, which is placing the Request in a que which workers handles when there is time.\n\nD is the right answer for this.","timestamp":"1603887060.0","comment_id":"207748","poster":"goodguy123"},{"content":"B. Makes the most sense to me.","timestamp":"1593375240.0","poster":"FR99","comment_id":"122147","upvote_count":"9"},{"poster":"designated","timestamp":"1661815920.0","content":"Selected Answer: B\nI think B is the best answer here - rate-limit.\n\nMany APIs have built-in denial-of-service functionality that limits the number of requests per time interval, or they use throttling for some customer tiers (for example, one request per second for a free tier and unlimited for the paid one). \nYou can use two approaches to handle rate-limiting restrictions for a specific API:\n\n- Perform requests as normal. If an HTTP 429 response is received, make a pause (the duration may be hinted at in the response, depending on API) and then continue with a retry.\n\n- Find out API restrictions and limit the rate of your requests, thus preventing an HTTP 429 error.","upvote_count":"4","comment_id":"653697"},{"upvote_count":"1","poster":"bluesky2022","comment_id":"641668","content":"Logging all the sessions requests will timeout and create DDoS situation. It needs rate limiting.","timestamp":"1659508860.0"},{"poster":"blurain","comment_id":"604830","content":"Selected Answer: B\nD is not a correct answer because usually you want to get a number of requests, see if you can aggregate them and then serve the users.\nC is about the user connections, not about the requests per second.\nA RED is an algorithm used in networking\n\nB makes the most sense and would achieve the described requirement.","timestamp":"1653130800.0","upvote_count":"2"},{"poster":"__al__","comment_id":"571171","content":"Selected Answer: B\nB sounds partially correct, but everything else is simply dumb. So B","timestamp":"1647709200.0","comments":[{"upvote_count":"2","comment_id":"571172","content":"I changed my mind... I think D would be more correct (but still dumb). The question proposes a design constraint of Requests/Min. It doesn't say anything about security. IRL, we would actually do both things: have some sort of throttling mechanism per user as well as a global req/sec cap.","poster":"__al__","timestamp":"1647709380.0"}],"upvote_count":"2"},{"poster":"dexilec82","upvote_count":"1","comment_id":"548178","timestamp":"1644972060.0","content":"It says 1000 requests must be served per second, does not say to drop or limit the exceeding requests but from a design and a client/perspective would it not be nice to have all those requests process eventually of course we are not taking into consideration any DOS or malicious attach, the question is just merely asking how would you design an app that can served 1000 requests per second."},{"upvote_count":"2","timestamp":"1642599600.0","poster":"beariver","content":"Read the question, it is a design parameter, 1000 requests should be received, there is no requirement about limiting anything, it is D","comment_id":"527538"},{"comment_id":"451054","upvote_count":"2","timestamp":"1632509040.0","poster":"garcesdavid88","content":"Why not C??"},{"timestamp":"1627644480.0","upvote_count":"2","comment_id":"417341","poster":"Npirate","content":"It totaly depends what kind of customers you have. You can have a waiting que to serve users later. If it's a API there should be a rate-limit such as answer B implies. \n\nThe API requestor can have a handler that does a re-try every x amount of seconds still serving every customer. \n\nIf you want to make it customer friendely you apply the D rule. But that only work with GUI based users they will wait just as with ticket sales, that will not work for API requests."},{"poster":"phc1978","comment_id":"360400","content":"either it could be A or C \nwhy not B - if i have 1000 customer and each customer requested 5 times, then it becomes 5000 session , but here we are talkng about 1000 request/sec.\nwhy not D - what if malicious attacker sends 2000 request , then server will process one by one then it will become busy in serving malicious attackers requests.","timestamp":"1621336200.0","upvote_count":"1"},{"timestamp":"1621251660.0","upvote_count":"2","content":"What about C?\n\n A. Use algorithms like random early detection to deny excessive requests.\n Easily discarded, RED is a routing congestion avoidance mechanism.\n \n B. Set a per-user limit (for example, 5 requests/minute/user) and deny the requests from the users who have reached the limit.\n This would be a case of Token Bucket, but Question does not mention the amount of users per second, so whatever we can think of here may not avoid hitting the platform below 1000 requests/second\n \n C. Only 1000 user connections are allowed; further connections are denied so that all connected users can be served.\n It looks to me a case of Sliding Window since it says the platform supports up to 1000 requests/second. That means when the app receives a new request it must check how many have been made in the last second; if 1000 have already been mande the new request should be rejected. \n \n D. All requests are saved and processed one by one so that all users can be served eventually.\n Similar to option \"B\" question does not mention that we have resources to queue requests.. This would be a case of Leaky Bucket where you also need to specify the capacity for queing requests.","comment_id":"359494","poster":"architect_"},{"upvote_count":"3","poster":"B3nd3cida","comment_id":"350955","content":"I will go with B. Since all Cisco API material and courses usually highlight the importance of rate limiting: based on Numbers of request, user actions, server traffic and concurrency.","timestamp":"1620300840.0"},{"poster":"Kaddi","upvote_count":"1","content":"B is the right answer as Throttling the requests is the best method to serve all users efficiently","timestamp":"1603213800.0","comment_id":"203331"},{"comment_id":"172629","timestamp":"1599135240.0","upvote_count":"5","content":"I'll Go with B too:\nExplanation:\nWhen providing an API service, we need to ensure fair usage for every user so that the system resources are effectively and fairly serving all. We need to apply restrictions to make sure that all majority of users are satisfied. The way to do that is to set a limit per user. For example, we can limit the number of requests per user to be no more than 100 per second.","poster":"blezzzo"}],"topic":"1","answer_description":"","choices":{"C":"Only 1000 user connections are allowed; further connections are denied so that all connected users can be served.","D":"All requests are saved and processed one by one so that all users can be served eventually.","B":"Set a per-user limit (for example, 5 requests/minute/user) and deny the requests from the users who have reached the limit.","A":"Use algorithms like random early detection to deny excessive requests."},"answer":"B","answer_images":[],"question_id":340,"isMC":true}],"exam":{"numberOfQuestions":383,"provider":"Cisco","name":"350-901","isMCOnly":false,"id":329,"isImplemented":true,"isBeta":false,"lastUpdated":"12 Apr 2025"},"currentPage":68},"__N_SSP":true}