{"pageProps":{"questions":[{"id":"POrejD614xW9E2ODqrj9","answers_community":["A (69%)","C (18%)","13%"],"discussion":[{"timestamp":"1705672020.0","poster":"datapassionate","content":"Selected Answer: A\nto detect average noise levels from sensors, the best approach is to use session windows with a 15-minute gap duration (Option A). Session windows are ideal for cases like this where the events (sensor data) are sporadic. They group events that occur within a certain time interval (15 minutes in your case) and a new window is started if no data is received for the duration of the gap. This matches your requirement to end the window when no data is received for 15 minutes, ensuring that the average noise level is calculated over periods of continuous data","comment_id":"1126707","upvote_count":"11","comments":[{"upvote_count":"2","content":"But you are not fulfilling this requirement \"You need to detect the average noise level from a sensor when data is received for a duration of more than 30 minutes\". I would say C","timestamp":"1708117020.0","poster":"ashdam","comment_id":"1152223"}]},{"upvote_count":"10","poster":"saschak94","content":"Selected Answer: A\nYou need a window that start when data for a sensor arrives and end when there's a gap in data. That would rule out hopping and tumbling windows. \n\n- > Windows need to stay open as long as there's data arriving - 30+ mins\n-> Window Should close when no data has been received for 15 mins -> Gap 15 mins","comment_id":"1144622","timestamp":"1707405780.0"},{"timestamp":"1736417340.0","poster":"Pime13","comment_id":"1338284","content":"Selected Answer: D\nD for me, clearly stated on example: https://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#hopping-windows","upvote_count":"1"},{"timestamp":"1724516820.0","poster":"shanks_t","upvote_count":"3","content":"Selected Answer: A\nThe problem requires detecting average noise levels when data is received for more than 30 minutes, but the window should end when no data has been received for 15 minutes.\nSession windows are ideal for this scenario because:\nThey are designed to capture bursts of activity followed by periods of inactivity.\nThey dynamically size based on the data received, which fits well with the variable duration of noise events.\nThe gap duration can be set to define when a session ends.\nThe 15-minute gap duration aligns perfectly with the requirement to end the window when no data has been received for 15 minutes.\nSession windows will naturally extend beyond 30 minutes if data keeps coming in, satisfying the requirement to detect levels for durations of more than 30 minutes.","comment_id":"1271741"},{"content":"Selected Answer: D\nD. Using a 15-minute window with a 15-minute tumbling window withAllowedLateness is the most suitable option for the following reasons:\n\nFlexibility: By allowing a 15-minute delay, it can accommodate various situations such as network latency or sensor failures.\nProcessing efficiency: Using a fixed window improves processing efficiency.\nCompliance with conditions: The window ends if no data is received for 15 minutes, meeting the specified condition.\nImplementation points:\n\n.withAllowedLateness: This operator allows delayed events to be included in the current window.\nTrigger: When 30 minutes of data is collected, a trigger event is generated, and the average value is calculated based on this event.\nWatermark: By setting a watermark, processing of old data can be terminated.","poster":"viciousjpjp","timestamp":"1723848660.0","comment_id":"1267360","upvote_count":"1"},{"comment_id":"1261139","timestamp":"1722879480.0","poster":"JamesKarianis","upvote_count":"3","content":"Selected Answer: A\nWithout a doubt A: https://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#session-windows"},{"comment_id":"1260013","poster":"iooj","upvote_count":"1","timestamp":"1722628560.0","content":"Selected Answer: A\nThe requirements are\n- recieve data for a duration of MORE than 30 minutes\n- end the window based on inactivity"},{"upvote_count":"3","comment_id":"1213921","poster":"josech","timestamp":"1716142800.0","content":"Correct answer: A.\nUse a session Window to cature data and create an aggregation when the Session is larger than 30 minutes. \nhttps://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#session-windows\nhttps://beam.apache.org/releases/javadoc/2.6.0/org/apache/beam/sdk/transforms/windowing/Sessions.html"},{"comment_id":"1213609","content":"Selected Answer: C\nC- Running average: https://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#hopping-windows","poster":"f74ca0c","upvote_count":"1","timestamp":"1716095100.0"},{"content":"Guys, I think its B. I was considering C, but C is calculating every 30 min, the 15min window gap data.Thats not what the questions wants. The questions wants a solution to get the average data of a 30 min window. So Its B.\n\nLook at this relating to C:\n\"Use hopping windows with a 15-minute window, and a thirty-minute period\" --> Wrong\n(IS DIFFERENT THEN)\n\"Use hopping windows with a 30-minute window, and a 15-minute period\" --> Right.\n\nThats why I think the B is the right answer.","upvote_count":"2","poster":"joao_01","comments":[{"comment_id":"1198392","content":"Actually I think with B, the window will never be closed because the probability of having a period of inactivity of 30 minutes is very low. In that case I think the option A is the more correct one.","timestamp":"1713510600.0","upvote_count":"1","poster":"joao_01"}],"comment_id":"1190843","timestamp":"1712476260.0"},{"timestamp":"1709787840.0","upvote_count":"1","poster":"342f1c6","content":"Selected Answer: C\nTo take running averages of data, use hopping windows. You can use one-minute hopping windows with a thirty-second period to compute a one-minute running average every thirty seconds.","comment_id":"1167664"},{"timestamp":"1708864200.0","poster":"kck6ra4214wm","comment_id":"1158699","upvote_count":"3","content":"Selected Answer: A\nhttps://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#session-windows\nA session window contains elements within a gap duration of another element. The gap duration is an interval between new data in a data stream. If data arrives after the gap duration, the data is assigned to a new window.\nSo, we need"},{"timestamp":"1706199060.0","comment_id":"1131837","upvote_count":"1","content":"Selected Answer: C\nhttps://cloud.google.com/dataflow/docs/concepts/streaming-pipelines#hopping-windows To take running averages of data, use hopping windows. You can use one-minute hopping windows with a thirty-second period to compute a one-minute running average every thirty seconds.","poster":"imiu"},{"timestamp":"1705158120.0","upvote_count":"2","content":"Selected Answer: D\nOption D to me, It aligns with the specified criteria for detecting the average noise level within a 30-minute duration and handling the end of the window when no data is received for 15 minutes.","comments":[{"comment_id":"1130667","content":"Agree D.\nData comes -> 30 mts duration.\nData didn't come in 15 mts -> 15 mts duration","timestamp":"1706104440.0","upvote_count":"1","poster":"AllenChen123"}],"poster":"Matt_108","comment_id":"1121771"},{"timestamp":"1704947880.0","content":"Selected Answer: D\nOPTION D is correct for the specific scenario where we want to detect the average noise level for a duration of more than 30 minutes but end the window when no data has been received for 15 minutes.\n\nExplanation:\n\n- Tumbling windows are non-overlapping windows, and in this case, you want to capture data continuously for 30-minute intervals.\n\n- Using a tumbling window with a 15-minute window size aligns with your requirement to detect the average noise level for a duration of more than 30 minutes.\n\n- Adding a .withAllowedLateness operator with a duration of fifteen minutes ensures that the window will still consider late-arriving data within that time frame. After fifteen minutes of no data, the window will be closed, and any late-arriving data will not be considered.\n\nOption A and B invalid as they capture fixed logic with 15 or 30 mins. Option C captures only 15 min average with 30 min trigger hence not suitable.","upvote_count":"2","comment_id":"1119356","poster":"BIGQUERY_ALT_ALT"},{"upvote_count":"2","timestamp":"1704805320.0","content":"Selected Answer: C\nHopping windows (called sliding windows in Apache Beam).\nTo take running averages of data, use hopping windows.","comment_id":"1117492","poster":"Sofiia98"},{"poster":"scaenruy","timestamp":"1704302580.0","content":"Selected Answer: C\nC. Use hopping windows with a 15-minute window, and a thirty-minute period.","comment_id":"1112964","upvote_count":"3"}],"exam_id":11,"unix_timestamp":1704302580,"question_images":[],"question_id":186,"topic":"1","choices":{"C":"Use hopping windows with a 15-minute window, and a thirty-minute period.","B":"Use session windows with a 30-minute gap duration.","A":"Use session windows with a 15-minute gap duration.","D":"Use tumbling windows with a 15-minute window and a fifteen-minute .withAllowedLateness operator."},"url":"https://www.examtopics.com/discussions/google/view/130217-exam-professional-data-engineer-topic-1-question-266/","timestamp":"2024-01-03 18:23:00","answer_description":"","answer_images":[],"answer":"A","isMC":true,"question_text":"You are building a streaming Dataflow pipeline that ingests noise level data from hundreds of sensors placed near construction sites across a city. The sensors measure noise level every ten seconds, and send that data to the pipeline when levels reach above 70 dBA. You need to detect the average noise level from a sensor when data is received for a duration of more than 30 minutes, but the window ends when no data has been received for 15 minutes. What should you do?","answer_ET":"A"},{"id":"BhUNUX1QVi4OV7Gv5q6Y","unix_timestamp":1704302820,"isMC":true,"answers_community":["A (100%)"],"answer_description":"","answer_ET":"A","exam_id":11,"timestamp":"2024-01-03 18:27:00","choices":{"B":"Create a sales_transaction table that holds the sales_transaction_header and sales_transaction_line information as rows, duplicating the sales_transaction_header data for each line.","A":"Create a sales_transaction table that holds the sales_transaction_header information as rows and the sales_transaction_line rows as nested and repeated fields.","D":"Create separate sales_transaction_header and sales_transaction_line tables and, when querying, specify the sales_transaction_line first in the WHERE clause.","C":"Create a sales_transaction table that stores the sales_transaction_header and sales_transaction_line data as a JSON data type."},"question_images":[],"url":"https://www.examtopics.com/discussions/google/view/130218-exam-professional-data-engineer-topic-1-question-267/","question_id":187,"discussion":[{"comment_id":"1114654","timestamp":"1720190160.0","upvote_count":"6","poster":"raaad","content":"Selected Answer: A\n- In BigQuery, nested and repeated fields can significantly improve performance for certain types of queries, especially joins, because the data is co-located and can be read efficiently. - - This approach is often used in data warehousing scenarios where query performance is a priority, and the data relationships are immutable and rarely modified."},{"poster":"josech","timestamp":"1732048080.0","upvote_count":"2","content":"Selected Answer: A\nOption A https://cloud.google.com/bigquery/docs/best-practices-performance-nested","comment_id":"1213928"},{"upvote_count":"1","comment_id":"1175605","timestamp":"1726544460.0","poster":"hanoverquay","content":"Selected Answer: A\noptional A"},{"poster":"JyoGCP","comment_id":"1155160","upvote_count":"1","content":"Selected Answer: A\nOption A","timestamp":"1724199300.0"},{"upvote_count":"1","content":"Selected Answer: A\nOption A","comment_id":"1121776","timestamp":"1720876020.0","poster":"Matt_108"},{"upvote_count":"1","content":"Selected Answer: A\nA. Create a sales_transaction table that holds the sales_transaction_header information as rows and the sales_transaction_line rows as nested and repeated fields.","poster":"scaenruy","comment_id":"1112968","timestamp":"1720020420.0"}],"question_text":"You are creating a data model in BigQuery that will hold retail transaction data. Your two largest tables, sales_transaction_header and sales_transaction_line, have a tightly coupled immutable relationship. These tables are rarely modified after load and are frequently joined when queried. You need to model the sales_transaction_header and sales_transaction_line tables to improve the performance of data analytics queries. What should you do?","answer":"A","topic":"1","answer_images":[]},{"id":"vcgN2YIGy1tpzbigfYvE","unix_timestamp":1704303060,"isMC":true,"answers_community":["C (88%)","12%"],"answer_description":"","answer_ET":"C","choices":{"D":"Cancel the old pipeline, then start the new pipeline.","C":"Drain the old pipeline, then start the new pipeline.","A":"Update the old pipeline with the new pipeline code.","B":"Snapshot the old pipeline, stop the old pipeline, and then start the new pipeline from the snapshot."},"exam_id":11,"timestamp":"2024-01-03 18:31:00","question_images":[],"url":"https://www.examtopics.com/discussions/google/view/130219-exam-professional-data-engineer-topic-1-question-268/","question_id":188,"discussion":[{"poster":"raaad","upvote_count":"8","content":"Selected Answer: C\n- Graceful Data Transition: Draining the old pipeline ensures it processes all existing data in its buffers and watermarks before shutting down, preventing data loss or inconsistencies.\n- Minimal Latency Increase: The latency increase will be limited to the amount of time it takes to drain the old pipeline, typically within the acceptable 10-minute threshold.","comment_id":"1114680","timestamp":"1704474240.0"},{"comment_id":"1147610","poster":"AlizCert","upvote_count":"6","timestamp":"1707679920.0","comments":[{"comment_id":"1305178","timestamp":"1730322120.0","content":"we don't restart the drained pipeline.","upvote_count":"1","poster":"SamuelTsch"},{"content":"So why not B it is the better choice to save intermediate state and easy to use","comment_id":"1181875","poster":"d11379b","timestamp":"1711299960.0","upvote_count":"2"}],"content":"I don't think C is correct, as it will immediately fire the window:\n\"Draining can result in partially filled windows. In that case, if you restart the drained pipeline, the same window might fire a second time, which can cause issues with your data. \"\nhttps://cloud.google.com/dataflow/docs/guides/stopping-a-pipeline#effects\n\nMaybe \"A\" means launching a replacement job?\nhttps://cloud.google.com/dataflow/docs/guides/updating-a-pipeline#Launching"},{"timestamp":"1732396140.0","poster":"petulda","content":"Why not B?\nhttps://cloud.google.com/dataflow/docs/guides/upgrade-guide#stop-and-replace","upvote_count":"1","comment_id":"1316803"},{"comment_id":"1261692","poster":"STEVE_PEGLEG","timestamp":"1722952680.0","upvote_count":"1","content":"Selected Answer: C\nThere is requirement to avoid data loss.\n\nhttps://cloud.google.com/dataflow/docs/guides/upgrade-guide#stop-and-replace\n\"To avoid data loss, in most cases, draining is the preferred action.\""},{"upvote_count":"2","content":"Selected Answer: C\n- Draining the old pipeline ensures that it finishes processing all in-flight data before stopping, which prevents data loss and inconsistencies.\n- After draining, you can start the new pipeline, which will begin processing new data from where the old pipeline left off.\n- This approach maintains a smooth transition between the old and new versions, minimizing latency increases and avoiding data gaps or overlaps.\n\n==> Other options, such as updating, snapshotting, or canceling, might not provide the same level of consistency and could lead to data loss or increased latency beyond the acceptable 10-minute window. Draining is the safest method to ensure a seamless transition.","timestamp":"1718182680.0","poster":"Ouss_123","comment_id":"1228910"},{"poster":"d11379b","upvote_count":"2","content":"Selected Answer: B\nI would choose B as mentioned by Alizcert, a simple drain may cause problem \nDataflow snapshots save the state of a streaming pipeline, which lets you start a new version of your Dataflow job without losing state. Snapshots are useful for backup and recovery, testing and rolling back updates to streaming pipelines, and other similar scenarios.","comment_id":"1181876","timestamp":"1711300140.0"},{"poster":"hanoverquay","comment_id":"1174782","content":"Selected Answer: C\nC option","timestamp":"1710570600.0","upvote_count":"1"},{"poster":"Matt_108","upvote_count":"1","content":"Selected Answer: C\nOption C, draining the old pipeline solves all requests","timestamp":"1705158540.0","comment_id":"1121779"},{"poster":"scaenruy","upvote_count":"2","comment_id":"1112973","timestamp":"1704303060.0","content":"Selected Answer: C\nC. Drain the old pipeline, then start the new pipeline."}],"question_text":"You created a new version of a Dataflow streaming data ingestion pipeline that reads from Pub/Sub and writes to BigQuery. The previous version of the pipeline that runs in production uses a 5-minute window for processing. You need to deploy the new version of the pipeline without losing any data, creating inconsistencies, or increasing the processing latency by more than 10 minutes. What should you do?","answer":"C","topic":"1","answer_images":[]},{"id":"eZ1MuLx9X0PVKyZWBecx","discussion":[{"timestamp":"1704474480.0","upvote_count":"13","comment_id":"1114681","comments":[{"timestamp":"1705814160.0","upvote_count":"4","poster":"AllenChen123","comment_id":"1127636","content":"Agree. https://cloud.google.com/data-catalog/docs/concepts/overview#catalog-non-google-cloud-assets"}],"content":"Selected Answer: B\n- It utilizes Data Catalog's native support for both BigQuery datasets and Pub/Sub topics. \n- For PostgreSQL tables running on a Compute Engine instance, you'd use Data Catalog APIs to create custom entries, as Data Catalog does not automatically discover external databases like PostgreSQL.","poster":"raaad"},{"timestamp":"1706516640.0","comments":[{"content":"I agree. On the linked page:\nIf you can't find a connector for your data source, you can still manually integrate it by creating entry groups and custom entries.\nAs we can find a connector there, it should be used.","upvote_count":"1","poster":"7787de3","comment_id":"1283155","timestamp":"1726230180.0"},{"timestamp":"1706780880.0","comment_id":"1137469","content":"Agree. If it doesn't have a connector, it must be manually built on the Data Catalog API.\nAs PostgreSQL already has a connector it's the best option is C","poster":"tibuenoc","upvote_count":"4"}],"poster":"datapassionate","comment_id":"1134752","upvote_count":"12","content":"Selected Answer: C\nData Catalog is the best choice. But for catalogging PostgreSQL it is better to use a connector when available, instead of using API. \nhttps://cloud.google.com/data-catalog/docs/integrate-data-sources#integrate_unsupported_data_sources"},{"timestamp":"1743085260.0","content":"Selected Answer: C\nWhy C is Correct?\nBigQuery datasets → ✅ Automatically cataloged in Data Catalog\n\nPub/Sub topics → ✅ Automatically cataloged in Data Catalog\n\nPostgreSQL on Compute Engine → ❌ Not automatically cataloged\n\nRequires a custom connector to extract metadata and push it to Data Catalog.\n\nOption B (using Data Catalog APIs manually) is not enough because PostgreSQL metadata isn’t natively supported.\n\nWhy Not B?\nOption B suggests using Data Catalog APIs manually for PostgreSQL.\n\nHowever, Data Catalog does not natively support PostgreSQL metadata extraction.\n\nYou need a custom connector to first extract PostgreSQL schema information, then push it to Data Catalog.","upvote_count":"1","comment_id":"1410923","poster":"Abizi"},{"upvote_count":"1","timestamp":"1736173800.0","content":"Selected Answer: A\nhttps://cloud.google.com/data-catalog/docs/concepts/overview#automatic_cataloging_of_assets\nhttps://cloud.google.com/data-catalog/docs/concepts/overview#catalog-non-google-cloud-assets","comment_id":"1337181","poster":"Pime13"},{"poster":"AWSandeep","content":"Selected Answer: B\nThis section explains it clearly: https://cloud.google.com/data-catalog/docs/integrate-data-sources#integrate_unsupported_data_sources.","upvote_count":"1","comment_id":"1330621","timestamp":"1734911760.0"},{"comment_id":"1294639","content":"Selected Answer: C\nThis is C. To clarify some issues below with B, the links provided by supporters of B actually do say that it's preferable to use a community connector where available, and to only use the API when the case is genuinely not supported by community connectors. \nIn this case it's Postgresql, so it's supported, see here for full list: https://cloud.google.com/data-catalog/docs/integrate-data-sources#integrate_on-premises_data_sources\n\nSo this would be B if it was something like Q+ or some genuinely unsupported database, but postgres is supported for community connector.","timestamp":"1728375660.0","poster":"baimus","upvote_count":"3"},{"timestamp":"1724517300.0","upvote_count":"2","comment_id":"1271742","content":"Selected Answer: B\nData Catalog automatically catalogs metadata from Google Cloud sources such as BigQuery, Vertex AI, Pub/Sub, Spanner, Bigtable, and more.\n\nTo catalog metadata from non-Google Cloud systems in your organization, you can use the following:\n\nCommunity-contributed connectors to multiple popular on-premises data sources\nManually build on the Data Catalog APIs for custom entries","poster":"shanks_t","comments":[{"poster":"shanks_t","content":"C. While similar to B, using custom connectors for PostgreSQL might involve more development effort than using the Data Catalog APIs directly.","comment_id":"1271744","upvote_count":"1","timestamp":"1724517420.0"}]},{"comment_id":"1263405","timestamp":"1723281840.0","upvote_count":"1","content":"raaad mostly correct and we can check his description supporting his answer so we can go with it .Cheers mate","poster":"meh_33"},{"upvote_count":"2","content":"Selected Answer: C\nI’m voting for C because the documentation states that Postgres is a custom connector developed by the community.","poster":"987af6b","comment_id":"1256420","comments":[{"upvote_count":"1","comment_id":"1256788","timestamp":"1722170280.0","poster":"987af6b","content":"Changed my mind. B.\n-This is not on premise, so the custom connector should not be applicable\n-Question says keep manual dev and config to a minimum"}],"timestamp":"1722105420.0"},{"comment_id":"1231691","timestamp":"1718595420.0","content":"Selected Answer: B\nBigQuery Datasets and Pub/Sub Topics: Google Data Catalog can automatically catalog metadata from BigQuery and Pub/Sub, making it easy to discover and manage these data assets without additional development effort.\n\nPostgreSQL Tables: While Data Catalog does not have built-in connectors for PostgreSQL, you can use the Data Catalog APIs to manually catalog the PostgreSQL tables. This requires some custom development but is manageable compared to creating custom connectors for everything.","poster":"fitri001","upvote_count":"3"},{"timestamp":"1716375900.0","content":"Selected Answer: B\nB. Use Data Catalog to automatically catalog BigQuery datasets and Pub/Sub topics. Use Data Catalog APIs to manually catalog PostgreSQL tables.","upvote_count":"1","poster":"virat_kohli","comment_id":"1215683"},{"upvote_count":"1","poster":"Cassim","comment_id":"1211340","content":"Selected Answer: B\nOption B leverages Data Catalog to automatically catalog BigQuery datasets and Pub/Sub topics, which streamlines the process and reduces manual effort. Using Data Catalog APIs to manually catalog PostgreSQL tables ensures consistency across all data assets while minimizing development and configuration efforts.","timestamp":"1715683860.0"},{"timestamp":"1714022400.0","comment_id":"1201758","content":"Selected Answer: C\nI vote for c as per Integrate on-premises data sources\nTo integrate on-premises data sources, you can use the corresponding Python connectors contributed by the community:\n\nunder the link\n\nhttps://cloud.google.com/data-catalog/docs/integrate-data-sources","upvote_count":"3","poster":"LaxmanTiwari","comments":[{"poster":"LaxmanTiwari","timestamp":"1714022520.0","comment_id":"1201759","upvote_count":"1","content":"data catalog api will come into effect if custom connectors are not available via community repos."}]},{"upvote_count":"3","timestamp":"1712478240.0","content":"In the opction C, the expression \"Use custom connectors to manually catalog PostgreSQL tables.\" is refering to the use case of Google when you want to use \"Community-contributed connectors to multiple popular on-premises data sources\". As you can see, this connectors are for ON-PREMISSES data sources ONLY. In this case the Postgres is in a VM in the cloud. Thus, the option correct is B.","comments":[{"poster":"joao_01","timestamp":"1712478240.0","comment_id":"1190851","content":"Link: https://cloud.google.com/data-catalog/docs/concepts/overview#catalog-non-google-cloud-assets","upvote_count":"1"}],"poster":"joao_01","comment_id":"1190850"},{"poster":"hanoverquay","timestamp":"1710570420.0","comments":[{"timestamp":"1711301280.0","comment_id":"1181886","content":"I think “custom connector” here may just infer that this is not official tools? as the doc mentioned “ connectors contributed by the community” \nAnd should not be B as “manually catalog by API “ this is a way even more basic than using connector","poster":"d11379b","upvote_count":"1"}],"comment_id":"1174778","upvote_count":"1","content":"Selected Answer: B\noption B, there's no need to build a custom connector now, postgreSQL is now supported\nhttps://github.com/GoogleCloudPlatform/datacatalog-connectors-rdbms/tree/master/google-datacatalog-postgresql-connector"},{"timestamp":"1710328800.0","poster":"Y___ash","content":"Selected Answer: B\nUse Data Catalog to automatically catalog BigQuery datasets and Pub/Sub topics. Use Data Catalog APIs to manually catalog PostgreSQL tables.","upvote_count":"1","comment_id":"1172481"},{"timestamp":"1708962600.0","content":"Selected Answer: B\nDatacatalog API contain the connector for postgresql with using it developer don't have to create the custom connectors","comment_id":"1159898","poster":"Harshzh12","upvote_count":"1"},{"comment_id":"1152871","content":"Selected Answer: C\nGoogle Recommendation: If you can't find a connector for your data source, you can still manually integrate it by creating entry groups and custom entries. To do that, you can:\n- Use one of the Data Catalog Client Libraries in one of the following languages: C#, Go, Java, Node.js, PHP, Python, or Ruby.\n- Or manually build on the Data Catalog API.\n\nHowever, there is a connector for PostgreSQL, so option C.","timestamp":"1708207980.0","poster":"ML6","upvote_count":"5"},{"comment_id":"1145329","upvote_count":"3","content":"Selected Answer: C\nIf you can't find a connector for your data source, you can still manually integrate it by creating entry groups and custom entries. To do that, you can:\n\n- Manually build on the Data Catalog API.","timestamp":"1707467160.0","poster":"saschak94"},{"comment_id":"1121783","upvote_count":"3","content":"Selected Answer: B\nOption B - Data Catalog automatically maps out GCP resources and dev efforts are minimized by leveraging the data catalog API to do the same for postgresql db","poster":"Matt_108","timestamp":"1705158780.0"},{"content":"B.\n-- Looks much better option as needed low development efforts. \n-- C not looking right as it will need lot of dev efforts for custom connectors.","poster":"GCP001","comment_id":"1117038","timestamp":"1704750480.0","upvote_count":"2"}],"url":"https://www.examtopics.com/discussions/google/view/130424-exam-professional-data-engineer-topic-1-question-269/","isMC":true,"answer_ET":"C","answer_images":[],"question_text":"Your organization's data assets are stored in BigQuery, Pub/Sub, and a PostgreSQL instance running on Compute Engine. Because there are multiple domains and diverse teams using the data, teams in your organization are unable to discover existing data assets. You need to design a solution to improve data discoverability while keeping development and configuration efforts to a minimum. What should you do?","answer":"C","answer_description":"","topic":"1","question_images":[],"question_id":189,"exam_id":11,"choices":{"D":"Use customer connectors to manually catalog BigQuery datasets, Pub/Sub topics, and PostgreSQL tables.","B":"Use Data Catalog to automatically catalog BigQuery datasets and Pub/Sub topics. Use Data Catalog APIs to manually catalog PostgreSQL tables.","C":"Use Data Catalog to automatically catalog BigQuery datasets and Pub/Sub topics. Use custom connectors to manually catalog PostgreSQL tables.","A":"Use Data Catalog to automatically catalog BigQuery datasets. Use Data Catalog APIs to manually catalog Pub/Sub topics and PostgreSQL tables."},"answers_community":["C (51%)","B (47%)","2%"],"timestamp":"2024-01-05 18:08:00","unix_timestamp":1704474480},{"id":"8QzDp9drLnigQGxU2Bzy","answer":"B","url":"https://www.examtopics.com/discussions/google/view/16969-exam-professional-data-engineer-topic-1-question-27/","isMC":true,"answer_description":"","answer_images":[],"answer_ET":"B","answers_community":["B (91%)","9%"],"question_id":190,"timestamp":"2020-03-19 10:54:00","discussion":[{"poster":"[Removed]","upvote_count":"34","comment_id":"68552","timestamp":"1601192460.0","content":"Answer: B\nDescription: Best Choice out of given options."},{"content":"Should be B","upvote_count":"17","poster":"[Removed]","timestamp":"1600502040.0","comment_id":"65944"},{"comment_id":"1340408","poster":"sofiane_kihal","upvote_count":"1","content":"Selected Answer: B\nI think the best option is B.\nD could be an option but what if the feature is very correlated to the result ?","timestamp":"1736868420.0"},{"upvote_count":"1","poster":"mark1223jkh","timestamp":"1731825780.0","content":"B: combine the dependent features. It is more like PCA (principal component analysis). \nD: could be the answer, but what if that feature is very important, or how often do you get a feature with more than 50% NULL values?","comment_id":"1212699"},{"comment_id":"1076366","poster":"axantroff","upvote_count":"2","timestamp":"1716294300.0","content":"Selected Answer: B\nI am not into ML, to be honest, so I will rely on community opinion and choose B"},{"timestamp":"1713787740.0","content":"Selected Answer: B\nB. Combine highly co-dependent features into one representative feature.\n\nCombining highly correlated features into a single representative feature can reduce the dimensionality of your dataset, making the training process faster while preserving relevant information. This approach often helps eliminate redundancy in the input data.\n\nOption A (eliminating features that are highly correlated to the output labels) can be counterproductive, as you want to maintain features that are informative for your prediction task. Removing features that are correlated with the output may reduce model accuracy.\n\nOption C (averaging feature values in batches of 3) is not a common technique for reducing dimensionality, and it could lead to loss of important information.\n\nOption D (removing features with null values for more than 50% of training records) can help reduce the dimensionality and may be useful if you have a large number of features with missing data, but it may not necessarily address co-dependency among features.","comment_id":"1050535","upvote_count":"6","poster":"rtcpost"},{"content":"Selected Answer: B\nB. Combine highly co-dependent features into one representative feature.\nThis is the best choice.","timestamp":"1710555060.0","comment_id":"1008767","poster":"suku2","upvote_count":"1"},{"upvote_count":"1","poster":"WillemHendr","timestamp":"1699517100.0","comment_id":"892818","content":"\"D\" is wrong, and very dangerous. For instance, it might represent modern measurements only installed in <50% of weather stations, but very very precise and valuable. \n\nNulls are not a problem for models, out-of-the-box or with transformations models can handle nulls just fine."},{"upvote_count":"1","timestamp":"1692588420.0","comments":[{"upvote_count":"2","poster":"jin0","timestamp":"1692589080.0","content":"B. Combine highly co-dependent features into one representative feature.\n-> Explainable feature should be dependent from each other feature. expecially not deep leanring. so, in this case normally eliminated or combined\n\nD. Remove the features that have null values for more than 50% of the training records.\n-> it's too large null data in the feature. normally the feature should be removed because it's too hard to fill up replacing data","comment_id":"816236"}],"poster":"jin0","content":"Selected Answer: D\nwrong question. there are two answers B, D","comment_id":"816228"},{"content":"Answer is Combine highly co-dependent features into one representative feature.\n\nA: correlated to output means that feature can contribute a lot to the model. so not a good idea.\nC: you need to run with almost same number, but you will iterate twice, once for averaging and second time to feed the averaged value.\nD: removing features even if it 50% nulls is not good idea, unless you prove that it is not at all correlated to output. But this is nowhere so can remove.","upvote_count":"1","comments":[{"upvote_count":"2","comment_id":"816220","timestamp":"1692587820.0","poster":"jin0","content":"But, if there are null datas more than 50% then, it should be eliminated because there are two ways to train the model. first, remove records containing having null but in this case there are too many records should be removed and second, replace null to other data but in this case cause of it's too large data having null then It's literally hard to replace. so normally the feature having too many null data should be removed. So, there are two answer in this question B, D I think"}],"poster":"AzureDP900","comment_id":"766082","timestamp":"1688497020.0"},{"upvote_count":"2","timestamp":"1684648800.0","comment_id":"723259","poster":"Thasni","content":"I have a doubt, instead of combining highly corelated features why cant we remove corelated features which may give much more simplified dataset?"},{"timestamp":"1671142860.0","content":"Selected Answer: B\nAnswer: B\n\nData that is co-dependent is high corelated is some kind of reduldant information in some cases. If the features x1, x2 and x3 are x2 = x1 + 1 and x3 = 2*x1, for example, x2 and x3 are reduldant because can be explained with x1 feature, so can be excluded of the the model. Other option is to group this features. There is a lot of ways to resolve, but the main ideia is to use data engineer in co-depedent features to reduce the number of features in the model","upvote_count":"2","comment_id":"616947","poster":"noob_master"},{"upvote_count":"1","comment_id":"612754","timestamp":"1670423820.0","poster":"Ishiske","content":"Selected Answer: B\nThis method is called Data Engineering, that you combine two or more values to get a custom info, this will avoid that the model read an extra column on the training and probably increase it's accuracy."},{"upvote_count":"1","content":"Answer: B","timestamp":"1668349380.0","comment_id":"601150","poster":"Yad_datatonic"},{"poster":"alecuba16","content":"Selected Answer: B\nCo-dependent -> correlated -> correlated info = already present info in other variable.","upvote_count":"2","timestamp":"1666265460.0","comment_id":"588599"},{"upvote_count":"7","comment_id":"544536","timestamp":"1660128780.0","poster":"pamepadero","comments":[{"comment_id":"606417","upvote_count":"2","content":"Yes. But nearly 50% of the non-null data still seems to be a lot to ignore.","poster":"Dayashankar_H_A","timestamp":"1669263120.0"}],"content":"Trying to find a reason why it is B and not D, found this and it seems the answer is D.\nhttps://cloud.google.com/architecture/data-preprocessing-for-ml-with-tf-transform-pt1\nFeature selection. Selecting a subset of the input features for training the model, and ignoring the irrelevant or redundant ones, using filter or wrapper methods. This can also involve simply dropping features if the features are missing a large number of values."},{"content":"Selected Answer: B\nB\nnull values can have many meanings and need different approach to handle, otherwise it causes inaccurate model, so not D","upvote_count":"4","poster":"exnaniantwort","comment_id":"529764","timestamp":"1658480160.0"},{"timestamp":"1657992240.0","comment_id":"525204","poster":"ZIMARAKI","upvote_count":"1","content":"Selected Answer: B\nFor me the best option is B"},{"poster":"aet2123","upvote_count":"1","timestamp":"1655595960.0","comment_id":"504572","content":"Selected Answer: B\nB is the correct option"},{"content":"Selected Answer: D\nD is correct","upvote_count":"1","poster":"BigQuery","comments":[{"content":"Sorry B is correct. ignore my previous comment","timestamp":"1654327320.0","upvote_count":"3","poster":"BigQuery","comment_id":"493614"}],"timestamp":"1654327260.0","comment_id":"493613"},{"poster":"anji007","comment_id":"461151","timestamp":"1649779320.0","content":"Ans: B\nA: correlated to output means that feature can contribute a lot to the model. so not a good idea.\nC: you need to run with almost same number, but you will iterate twice, once for averaging and second time to feed the averaged value.\nD: removing features even if it 50% nulls is not good idea, unless you prove that it is not at all correlated to output. But this is nowhere so can remove.","upvote_count":"8"},{"content":"Vote for 'B'\n\ncombining features to createte a new feature is a step of \"Feature construction\"\nor\ndecomposing or splitting features to create new features.\n\nIdeally, PCA should be apply if we want to reduce the dimension.\n\nRemoving those columns / features - where Data is miss > 50% (may improve the speed) - but will decrease the accuracy as well. So instead of dropping features where we have missing data, we need to impute something","poster":"sumanshu","timestamp":"1640540700.0","comment_id":"391374","upvote_count":"6","comments":[{"poster":"awssp12345","upvote_count":"1","comments":[{"comment_id":"401841","comments":[{"poster":"sumanshu","upvote_count":"2","timestamp":"1641647820.0","content":"Otheriwse...we need to manually check all columns (using plotting the graphs) or using mathematical formula..","comment_id":"401842"}],"content":"PCA (principal component analysis) - a decomosition tehcnique apply on numerical data....this algo automatically check which features (columns) are more related with output and which are less related...and it keep only related one....(i.e. reduce dimension) or number of features...generally applied...when we have thouusands of columns (features)","timestamp":"1641647760.0","poster":"sumanshu","upvote_count":"2"}],"content":"What is PCA?","comment_id":"397195","timestamp":"1641173460.0"},{"timestamp":"1640540820.0","poster":"sumanshu","comment_id":"391376","upvote_count":"2","content":"'D\" could not be the answer - If There is NO missing value OR if all features have missing values > 50% does it means we drop everything - NO , right ?.\n\nSo, B is more appropriate"}]},{"upvote_count":"1","content":"Answer: A\n\ndirectly eliminate redundant feature","comments":[{"poster":"moonlightbeamer","content":"sorry, change mind, B. if corelated to other feature, can remove, but A is corelate to label...","timestamp":"1640051220.0","upvote_count":"2","comment_id":"386630"}],"timestamp":"1640051040.0","comment_id":"386628","poster":"moonlightbeamer"},{"content":"Correct B","timestamp":"1628265360.0","upvote_count":"3","comment_id":"285005","poster":"naga"},{"comment_id":"274531","content":"Feature selection. Selecting a subset of the input features for training the model, and ignoring the irrelevant or redundant ones, using filter or wrapper methods. This can also involve simply dropping features if the features are missing a large number of values","poster":"[Removed]","timestamp":"1627032720.0","upvote_count":"2"},{"upvote_count":"5","comment_id":"243358","timestamp":"1623648780.0","content":"Should be B","poster":"NamitSehgal"},{"comment_id":"223436","upvote_count":"1","timestamp":"1621493820.0","poster":"Erso","content":"The answer is D, read this article https://towardsdatascience.com/7-ways-to-handle-missing-values-in-machine-learning-1a6326adf79e"},{"comment_id":"194028","upvote_count":"4","poster":"Mushuskath","content":"Should be B. Remember that combining three features doesn’t necessarily mean taking an average. While option number D is quite tempting, we must remember that null values do not mean missing values.","timestamp":"1617689460.0"},{"upvote_count":"2","timestamp":"1615980960.0","content":"Answer should be B. While option D seems to be logical but we can not decide on dropping a column unless we know exactly what information that column holds.","comment_id":"180804","poster":"SteelWarrior"},{"comment_id":"159733","poster":"bkcs","upvote_count":"3","content":"Answer D:\nRefer Feature Selection point here : https://cloud.google.com/solutions/machine-learning/data-preprocessing-for-ml-with-tf-transform-pt1#preprocessing_operations","timestamp":"1613554860.0"},{"content":"If three features are combined to one feature, you will still need all 3 features to transform in your scoring datasets to predict i.e. you have not removed them just transformed","comments":[{"comment_id":"194024","poster":"Mushuskath","timestamp":"1617689280.0","upvote_count":"3","content":"Goal is to speed up training."}],"timestamp":"1610168700.0","poster":"Ankit267","comment_id":"130292","upvote_count":"1"},{"comment_id":"127661","content":"This is a Question with very clear answer which is D, The first thing to do to reduce dimentionality is to remove features with more than 50% missing values , If we have two co-dependent variables we drop one ,","poster":"kaush","comments":[{"comment_id":"194025","poster":"Mushuskath","content":"Null does not mean missing","upvote_count":"3","timestamp":"1617689340.0"},{"comment_id":"149516","poster":"YuriP","timestamp":"1612334760.0","content":"Null may be how the i.e. weather station reports mm of rainfall. It's unknown, so you can't drop it.","upvote_count":"2"}],"timestamp":"1609935360.0","upvote_count":"2"},{"comments":[{"content":"Why it's incorrect? we did both things, i.e. convert single feature to multiple and vice-versa as well","poster":"sumanshu","comment_id":"391380","upvote_count":"1","timestamp":"1640540940.0"}],"comment_id":"127652","timestamp":"1609935060.0","poster":"kaush","content":"Should be D , its is correct to eliminate co-dependent features but its incorrect to transform to single feature","upvote_count":"2"}],"question_text":"You are building a model to predict whether or not it will rain on a given day. You have thousands of input features and want to see if you can improve training speed by removing some features while having a minimum effect on model accuracy. What can you do?","topic":"1","choices":{"B":"Combine highly co-dependent features into one representative feature.","D":"Remove the features that have null values for more than 50% of the training records.","C":"Instead of feeding in each feature individually, average their values in batches of 3.","A":"Eliminate features that are highly correlated to the output labels."},"unix_timestamp":1584611640,"question_images":[],"exam_id":11}],"exam":{"lastUpdated":"11 Apr 2025","isMCOnly":true,"isBeta":false,"isImplemented":true,"provider":"Google","id":11,"numberOfQuestions":319,"name":"Professional Data Engineer"},"currentPage":38},"__N_SSP":true}