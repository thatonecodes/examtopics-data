{"pageProps":{"questions":[{"id":"S81mSfNzf8HsIoo4UBxS","choices":{"D":"Create an attestation for the builds that pass the load test by requiring the lead quality assurance engineer to sign the attestation by using a key stored in Cloud Key Management Service (Cloud KMS).","A":"Create an attestation for the builds that pass the load test by requiring the lead quality assurance engineer to sign the attestation by using their personal private key.","C":"Create an attestation for the builds that pass the load test by using a private key stored in Cloud Key Management Service (Cloud KMS) authenticated through Workload Identity.","B":"Create an attestation for the builds that pass the load test by using a private key stored in Cloud Key Management Service (Cloud KMS) with a service account JSON key stored as a Kubernetes Secret."},"answer":"C","unix_timestamp":1698516660,"answers_community":["C (100%)"],"url":"https://www.examtopics.com/discussions/google/view/124849-exam-professional-cloud-devops-engineer-topic-1-question-149/","answer_description":"","answer_images":[],"exam_id":6,"timestamp":"2023-10-28 20:11:00","isMC":true,"topic":"1","question_images":[],"discussion":[{"upvote_count":"2","timestamp":"1733640240.0","content":"Selected Answer: C\nVote (option C).\n\nThis option involves creating an attestation for the builds that pass the load test using a private key stored in Cloud Key Management Service (Cloud KMS) authenticated through Workload Identity.\n\nWorkload Identity allows you to securely authenticate to Google Cloud services from your GKE clusters without the need for storing and managing service account keys.\n\nBy using Cloud KMS for key storage and Workload Identity for authentication, you enhance the security of your pipeline.\n\nThis approach aligns with Google's best practices for managing cryptographic keys and ensures a more secure and manageable setup for attesting builds before deployment to the production GKE environment.","poster":"xhilmi","comment_id":"1090822"},{"comment_id":"1086123","content":"Selected Answer: C\nVote C","upvote_count":"1","poster":"nqthien041292","timestamp":"1733138880.0"},{"poster":"mshafa","comment_id":"1062715","content":"Selected Answer: C\nWorkload Identity allows workloads in your GKE clusters to impersonate Identity and Access Management (IAM) service accounts to access Google Cloud services.\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity","upvote_count":"2","timestamp":"1730794800.0"},{"comment_id":"1060206","poster":"lelele2023","upvote_count":"2","content":"Selected Answer: C\n\"you're configuring your CI/CD pipeline natively on Google Cloud\", natively hints to use workload identity which is similar to ec2 instance profile.","timestamp":"1730515800.0"},{"comment_id":"1056372","content":"Selected Answer: C\nWorkload Identity\nhttps://cloud.google.com/iam/docs/best-practices-for-using-workload-identity-federation","upvote_count":"3","poster":"koo_kai","timestamp":"1730146260.0"}],"answer_ET":"C","question_id":56,"question_text":"You are configuring your CI/CD pipeline natively on Google Cloud. You want builds in a pre-production Google Kubernetes Engine (GKE) environment to be automatically load-tested before being promoted to the production GKE environment. You need to ensure that only builds that have passed this test are deployed to production. You want to follow Google-recommended practices. How should you configure this pipeline with Binary Authorization?"},{"id":"KuFAu5HYGo3jeuKBrOE6","topic":"1","timestamp":"2021-06-02 17:26:00","question_id":57,"answers_community":["B (100%)"],"isMC":true,"answer_description":"","question_text":"Your product is currently deployed in three Google Cloud Platform (GCP) zones with your users divided between the zones. You can fail over from one zone to another, but it causes a 10-minute service disruption for the affected users. You typically experience a database failure once per quarter and can detect it within five minutes. You are cataloging the reliability risks of a new real-time chat feature for your product. You catalog the following information for each risk:\n* Mean Time to Detect (MTTD) in minutes\n* Mean Time to Repair (MTTR) in minutes\n* Mean Time Between Failure (MTBF) in days\n* User Impact Percentage\nThe chat feature requires a new database system that takes twice as long to successfully fail over between zones. You want to account for the risk of the new database failing in one zone. What would be the values for the risk of database failover with the new system?","discussion":[{"comment_id":"393262","poster":"Charun","timestamp":"1640734440.0","content":"B 100%","upvote_count":"18"},{"poster":"rinkeshgala1","content":"B\nMTR will increase to 20","timestamp":"1638812820.0","comment_id":"376174","upvote_count":"11"},{"timestamp":"1722253260.0","poster":"alpha_canary","content":"Selected Answer: B\nPretty simple maths:\nMTTD stays 5 as no change in it\nMTTR doubles to 20 minutes because question says \"a new database system that takes twice as long to successfully fail over between zones.\"\nMTBF stays the same i.e., once per quarter (90 days)\nImpact: 33% because if one zone fails, only users in that zone is affeted and we have users spread over 3 zones.","upvote_count":"4","comment_id":"1135000"},{"content":"option B","timestamp":"1717301580.0","comment_id":"1085743","poster":"jomonkp","upvote_count":"2"},{"timestamp":"1702193820.0","upvote_count":"2","comment_id":"919819","content":"Selected Answer: B\nImpact would be 33% since failure is one zone out of three zones (1/3)","poster":"Cassim"},{"poster":"jaykumarjkd99","timestamp":"1690722420.0","upvote_count":"1","content":"B 100%","comment_id":"792956"},{"timestamp":"1689045540.0","content":"Selected Answer: B\nThe correct answer would be B. MTTD: 5 MTTR: 20 MTBF: 90 Impact: 33%.","poster":"JonathanSJ","comment_id":"772048","upvote_count":"1"},{"comment_id":"765272","poster":"taqihurr","timestamp":"1688441040.0","upvote_count":"1","content":"Selected Answer: B\nB 100%"},{"content":"I was struggling between B and D as I couldn't find any information that indicate the impact of users. After checking out the discussion here most of people say it's B because there are 3 zones. If this is the case, there is a typo in the question: \"Your product is currently deployed in three Google Cloud Platform (GCP) zones with your users divided between \"the\"(three) zones\". So it should be B.","timestamp":"1688100720.0","comment_id":"762519","upvote_count":"4","comments":[{"comment_id":"921269","content":"You are right. There is a typo in the question. Nowhere does it say three zones.","upvote_count":"1","timestamp":"1702378500.0","poster":"run4fun"}],"poster":"Greg123123"},{"poster":"floppino","comment_id":"755466","timestamp":"1687670280.0","content":"Selected Answer: B\nAns: B\n\nExam passed and taken on 19/12/2022, 50/50 from this dump without buying the full access and looking for 'devops' word here: https://www.examtopics.com/discussions/google/1/","upvote_count":"1"},{"comment_id":"727812","poster":"DoodleDo","content":"Can someone give a explanation on why MTTR will be 20 mins?","upvote_count":"1","comments":[{"content":"Because \"The chat feature requires a new database system that takes twice as long to successfully fail over between zones.\" which is 2x10min","comment_id":"734530","timestamp":"1685798220.0","poster":"chelbsik","upvote_count":"6"}],"timestamp":"1685126880.0"},{"content":"Selected Answer: B\nB is the answer.","poster":"zellck","upvote_count":"1","timestamp":"1682342760.0","comment_id":"703052"},{"poster":"[Removed]","comment_id":"639331","comments":[{"comment_id":"732525","upvote_count":"1","timestamp":"1685610180.0","poster":"leandrojpg","content":"You complained about the wrong item, but there was no response. This does not really help anyone who wants to learn, what is your response?"}],"upvote_count":"4","timestamp":"1675018440.0","content":"Why there are so many questions using a wrong item as \"correct answer\" ? Where the value came from, so confuse :("},{"poster":"GCP72","upvote_count":"2","content":"Selected Answer: B\nB is correct","comment_id":"635919","timestamp":"1674553860.0"},{"poster":"Bill831231","content":"not sure should be \"B\" or \"D\", since description like \"between Zones\" and \"fail from one to another\" indicate that there are only 2 zones","comment_id":"633085","timestamp":"1674065160.0","upvote_count":"1"},{"upvote_count":"1","poster":"Ananda","content":"Selected Answer: B\nSubmit B in exam","timestamp":"1668015840.0","comment_id":"599120"},{"poster":"PhilipKoku","content":"Selected Answer: B\nB is the answer:\nMTTD: 5 minutes\nMTTR: 20 minutes (twice the time)\nImpact: 33% (1 of 3 zones impacted)","timestamp":"1660294020.0","comments":[{"comment_id":"707464","timestamp":"1682799060.0","poster":"AzureDP900","upvote_count":"1","content":"B is right"}],"upvote_count":"8","comment_id":"545762"},{"poster":"alaahakim","comment_id":"494310","timestamp":"1654423740.0","upvote_count":"3","content":"Ans : B"},{"timestamp":"1646659500.0","comments":[{"upvote_count":"3","content":"Because of 3 zones, one zone fail is 33%","comment_id":"471163","timestamp":"1651397700.0","poster":"MF2C"}],"upvote_count":"2","poster":"MF2C","comment_id":"440875","content":"How to cal User Impact Percentage?"},{"upvote_count":"3","content":"B\nhttps://www.atlassian.com/incident-management/kpis/common-metrics\nhttps://linkedin.github.io/school-of-sre/","timestamp":"1646291400.0","poster":"TNT87","comment_id":"438275"},{"comment_id":"386526","content":"I think its B\nbecause the impacted users should be the same 33%","timestamp":"1640032740.0","upvote_count":"4","poster":"francisco_guerra"},{"comment_id":"372826","timestamp":"1638465960.0","poster":"devopsbatch","content":"i think A","upvote_count":"2","comments":[{"comment_id":"376679","upvote_count":"5","content":"Why A? \n\"the new database system that takes twice as long to successfully fail over between zones\" so it takes 20 minutes to recover. MTTR=20, three zones means 33% of involved users. For me it's B.","timestamp":"1638879120.0","poster":"syslog"},{"content":"as it is 3 zones?","upvote_count":"1","poster":"DucLee3110","timestamp":"1638605040.0","comment_id":"374112"}]}],"answer_images":[],"answer":"B","choices":{"D":"MTTD: 5 MTTR: 20 MTBF: 90 Impact: 50%","B":"MTTD: 5 MTTR: 20 MTBF: 90 Impact: 33%","C":"MTTD: 5 MTTR: 10 MTBF: 90 Impact: 50%","A":"MTTD: 5 MTTR: 10 MTBF: 90 Impact: 33%"},"question_images":[],"url":"https://www.examtopics.com/discussions/google/view/54242-exam-professional-cloud-devops-engineer-topic-1-question-15/","exam_id":6,"answer_ET":"B","unix_timestamp":1622647560},{"id":"MW8eORpVxTJWyJkuzUlB","question_images":[],"topic":"1","answer_ET":"B","timestamp":"2023-10-27 21:13:00","answers_community":["B (89%)","11%"],"isMC":true,"choices":{"C":"Use Cloud Build to add your password into the application container at build time. Ensure that Artifact Registry is secured from public access.","D":"Store the password directly in the code. Use Cloud Build to rebuild and deploy the application each time the password changes.","A":"Store the password in Secret Manager and send the secret to the application by using environment variables.","B":"Store the password in Secret Manager and mount the secret as a volume within the application."},"question_text":"You are deploying an application to Cloud Run. The application requires a password to start. Your organization requires that all passwords are rotated every 24 hours, and your application must have the latest password. You need to deploy the application with no downtime. What should you do?","url":"https://www.examtopics.com/discussions/google/view/124745-exam-professional-cloud-devops-engineer-topic-1-question-150/","exam_id":6,"question_id":58,"answer_images":[],"unix_timestamp":1698433980,"answer":"B","answer_description":"","discussion":[{"timestamp":"1730516040.0","poster":"lelele2023","content":"Selected Answer: B\nAnswer is B: https://cloud.google.com/run/docs/configuring/services/secrets\n\"Mount each secret as a volume, which makes the secret available to the container as files. Reading a volume always fetches the secret value from Secret Manager, so it can be used with the latest version. This method also works well with secret rotation.\"","comment_id":"1060207","upvote_count":"10"},{"content":"Selected Answer: B\n(Option B) \n\nBy storing the password in Secret Manager and mounting the secret as a volume within the application, you can achieve password rotation without causing downtime. This allows you to update the password in Secret Manager, and Cloud Run can dynamically mount the latest version of the secret without requiring a redeployment of the application. \n\nThis approach ensures that the application always has access to the latest password without interrupting its availability, providing a seamless and secure way to manage password rotation in a Cloud Run environment. Storing sensitive information like passwords in Secret Manager enhances security and separation of concerns.","comment_id":"1090823","poster":"xhilmi","timestamp":"1733640720.0","upvote_count":"1"},{"comment_id":"1071538","poster":"TereRolon","content":"I think is B for this \n\"Mount each secret as a volume, which makes the secret available to the container as files. Reading a volume always fetches the secret value from Secret Manager, so it can be used with the latest version. This method also works well with secret rotation.\nPass a secret using environment variables. Environment variables are resolved at instance startup time, so if you use this method, Google recommends that you pin the secret to a particular version rather than using latest.\"\n\nhttps://cloud.google.com/run/docs/configuring/services/secrets","upvote_count":"2","timestamp":"1731680640.0"},{"upvote_count":"3","comment_id":"1062453","poster":"mshafa","content":"Selected Answer: B\nYou can make a secret available to your containers in either of two ways:\n\nMount each secret as a volume, which makes the secret available to the container as files. Reading a volume always fetches the secret value from Secret Manager, so it can be used with the latest version. This method also works well with secret rotation.\nPass a secret using environment variables. Environment variables are resolved at instance startup time, so if you use this method, Google recommends that you pin the secret to a particular version rather than using latest.\nhttps://cloud.google.com/run/docs/configuring/services/secrets","timestamp":"1730760780.0"},{"upvote_count":"1","timestamp":"1730196120.0","comment_id":"1056725","poster":"khoukha","content":"answer is A:\nIf you are exposing the secret as an environment variable:\nSupply the Name of the variable and select the secret version, or latest to always use the current secret version."},{"comment_id":"1056004","upvote_count":"2","poster":"Billbalaji","timestamp":"1730104620.0","content":"Selected Answer: A\nAnswer is A\n\nThe best solution is to store the password in Secret Manager and send the secret to the application by using environment variables. This will allow you to rotate the password without having to rebuild and deploy the application each time."},{"timestamp":"1730063580.0","upvote_count":"3","content":"Selected Answer: B\nAnswer is B\nhttps://cloud.google.com/run/docs/configuring/services/secrets","comment_id":"1055794","poster":"ABZ10"}]},{"id":"J0GxNLsVvTVjY6nZTaPo","exam_id":6,"isMC":true,"timestamp":"2023-10-21 23:03:00","answer_ET":"A","question_id":59,"question_images":[],"answer_description":"","unix_timestamp":1697922180,"answers_community":["A (90%)","10%"],"answer_images":[],"topic":"1","discussion":[{"poster":"poplot321","content":"Selected Answer: B\nB is the correct answer here because it talks about GitOps and Infrastructure as Code without Kubernetes CRDs: https://cloud.google.com/docs/terraform/resource-management/managing-infrastructure-as-code\n\nIf CRDs are mentioned, then it would be Config Connector: https://cloud.google.com/config-connector/docs/overview","upvote_count":"1","comment_id":"1399651","timestamp":"1742217600.0"},{"timestamp":"1723555500.0","comment_id":"1265180","content":"B. So they can only create with pipeline.","upvote_count":"1","poster":"6a8c7ad"},{"timestamp":"1708068120.0","comment_id":"1151792","upvote_count":"2","poster":"Xoxoo","content":"Selected Answer: A\nConfig Connector allows you to manage Google Cloud resources through Kubernetes-style declarative configuration. By installing and configuring Config Connector in GKE, you can define and manage cloud resources using Kubernetes manifests, ensuring that infrastructure configurations are reconciled periodically to avoid configuration drift"},{"upvote_count":"2","comment_id":"1090826","content":"Selected Answer: A\nOption A is the recommended approach for managing infrastructure as code and avoiding configuration drift in a Google Kubernetes Engine (GKE) environment while following Google-recommended practices.\n\nConfig Connector is a Kubernetes extension that allows you to manage Google Cloud resources as Kubernetes objects. By installing and configuring Config Connector in GKE, you can declare your cloud resources as Kubernetes CustomResourceDefinitions (CRDs) and have them managed by Kubernetes controllers.\n\nThis ensures that the desired state of your infrastructure is continuously reconciled with the actual state, helping to prevent configuration drift. Config Connector aligns with the GitOps methodology, providing a declarative way to manage cloud resources and maintain consistency in your environment.","poster":"xhilmi","timestamp":"1702018800.0"},{"content":"Selected Answer: A\nConfig Connector's controllers eventually reconcile your environment with your desired state.\nhttps://cloud.google.com/config-connector/docs/overview","timestamp":"1699138140.0","upvote_count":"3","poster":"mshafa","comment_id":"1062448"},{"upvote_count":"2","timestamp":"1698896580.0","poster":"lelele2023","comment_id":"1060219","comments":[{"comment_id":"1060223","timestamp":"1698896880.0","content":"plus 'Google-recommended practices'","poster":"lelele2023","upvote_count":"1"}],"content":"Selected Answer: A\nWhy not A? https://cloud.google.com/blog/products/containers-kubernetes/anthos-config-management-config-controller-available-on-gke\nConfig controller leverages config connector, config controller includes config-synct/gcp-cloud-resource-creation/policy-sync, it 'gitops', 'reconcile', 'taking-care-of-gcp-cloud-resource'"},{"content":"I also vote for B","timestamp":"1698248040.0","upvote_count":"1","poster":"Mar_Mar","comment_id":"1053837"},{"comment_id":"1049824","poster":"activist","timestamp":"1697922180.0","upvote_count":"2","content":"I think the answer B is correct."}],"choices":{"A":"Install and configure Config Connector in Google Kubernetes Engine (GKE).","B":"Configure Cloud Build with a Terraform builder to execute terraform plan and terraform apply commands.","D":"Create a Job resource with a Terraform docker image to execute terraform plan and terraform apply commands.","C":"Create a Pod resource with a Terraform docker image to execute terraform plan and terraform apply commands."},"question_text":"Your company runs applications in Google Kubernetes Engine (GKE) that are deployed following a GitOps methodology. Application developers frequently create cloud resources to support their applications. You want to give developers the ability to manage infrastructure as code, while ensuring that you follow Google-recommended practices. You need to ensure that infrastructure as code reconciles periodically to avoid configuration drift. What should you do?","answer":"A","url":"https://www.examtopics.com/discussions/google/view/124264-exam-professional-cloud-devops-engineer-topic-1-question-151/"},{"id":"eP80izhuPd5pvGDEHtma","answer_description":"","answer":"A","exam_id":6,"question_text":"You are designing a system with three different environments: development, quality assurance (QA), and production. Each environment will be deployed with Terraform and has a Google Kubernetes Engine (GKE) cluster created so that application teams can deploy their applications. Anthos Config Management will be used and templated to deploy infrastructure level resources in each GKE cluster. All users (for example, infrastructure operators and application owners) will use GitOps. How should you structure your source control repositories for both Infrastructure as Code (IaC) and application code?","isMC":true,"unix_timestamp":1698897840,"question_images":[],"answers_community":["A (61%)","B (28%)","11%"],"answer_images":[],"answer_ET":"A","timestamp":"2023-11-02 05:04:00","topic":"1","choices":{"C":"• Cloud Infrastructure (Terraform) repository is shared: different branches are different environments\n• GKE Infrastructure (Anthos Config Management Kustomize manifests) repository is shared: different overlay directories are different environments\n• Application (app source code) repository is shared: different directories are different features","A":"• Cloud Infrastructure (Terraform) repository is shared: different directories are different environments\n• GKE Infrastructure (Anthos Config Management Kustomize manifests) repository is shared: different overlay directories are different environments\n• Application (app source code) repositories are separated: different branches are different features","D":"• Cloud Infrastructure (Terraform) repositories are separated: different branches are different environments\n• GKE Infrastructure (Anthos Config Management Kustomize manifests) repositories are separated: different overlay directories are different environments\n• Application (app source code) repositories are separated: different branches are different","B":"• Cloud Infrastructure (Terraform) repository is shared: different directories are different environments\n• GKE Infrastructure (Anthos Config Management Kustomize manifests) repositories are separated: different branches are different environments\n• Application (app source code) repositories are separated: different branches are different features"},"question_id":60,"discussion":[{"content":"Selected Answer: A\nA. This follows best practices for structuring repositories in a GitOps workflow while maintaining clear separation between infrastructure and application code.\n\n- Cloud Infrastructure (Terraform) repository is shared with different directories for different environments. This ensures all infrastructure is managed from a single place while maintaining separation for different environments.\n- GKE Infrastructure (Anthos Config Management Kustomize manifests) repository is shared with different overlay directories for different environments. Kustomize overlays are the recommended way to manage configuration differences across environments.\n- Application repositories are separated, with different branches representing different features. This allows application teams to work independently while maintaining best practices for Git-based development.","comment_id":"1361430","upvote_count":"1","comments":[{"content":"Why not the other options?\nB – Using separate repositories for GKE infrastructure per environment makes it harder to manage and track changes across environments. The best practice is to use a shared repository with overlays for different environments.\n\nC – Using branches instead of directories for different environments in Terraform is not ideal. Branching is better suited for version control rather than environment separation. Additionally, sharing an application repository and managing features via directories is not a common practice.\n\nD – Keeping separate Terraform repositories per environment leads to duplication and makes it harder to enforce consistency. Separate GKE infrastructure repositories also complicate GitOps workflows.","upvote_count":"1","comment_id":"1361431","poster":"cachopo","timestamp":"1740486780.0"}],"timestamp":"1740486660.0","poster":"cachopo"},{"comment_id":"1151982","timestamp":"1723803600.0","poster":"alpha_canary","upvote_count":"2","content":"Selected Answer: A\nWhy?\n\"Cloud Infrastructure (Terraform) repository is shared: different directories are different environments\"\n\nFor GitOps, Google recommends: Use folders for variants of the configuration instead of branches. With folders, you can use the tree command to see variants. For example, with branches, you can't tell if the delta between a prod and stage branch is an upcoming change in configuration or a permanent difference between what stage and prod should look like.\nhttps://cloud.google.com/anthos-config-management/docs/concepts/gitops-best-practices#use-folders\n\n\n\"GKE Infrastructure (Anthos Config Management Kustomize manifests) repository is shared: different overlay directories are different environments\"\nhttps://cloud.google.com/anthos-config-management/docs/tutorials/multiple-environments-config-sync#repository_architecture"},{"upvote_count":"2","comment_id":"1108240","timestamp":"1719619080.0","content":"Selected Answer: A\nthis is the logial folder structure when dealing with multiple environments of tf, gke\ncreating folders for separate environments, creating branches for releases","poster":"kish18"},{"content":"Selected Answer: B\nThe best structure for source control repositories in this scenario is Option B. It keeps the Cloud Infrastructure (Terraform) in a shared repository with different directories for different environments, separates GKE Infrastructure repositories by environments using different branches, and keeps Application code repositories separated with different branches for different features.","poster":"MFay","upvote_count":"1","comment_id":"1107573","comments":[{"content":"for GKE we create the specific overlay folder for separate environments not branches","comment_id":"1108238","timestamp":"1719618900.0","upvote_count":"1","poster":"kish18"}],"timestamp":"1719557220.0"},{"comment_id":"1101246","content":"Selected Answer: A\nhttps://cloud.google.com/anthos-config-management/docs/concepts/gitops-best-practices#use-folders","timestamp":"1718852880.0","poster":"Afonya","upvote_count":"2"},{"upvote_count":"1","comment_id":"1095852","poster":"edd004","timestamp":"1718308620.0","content":"Selected Answer: A\nI agree with @YushiSato, Terraform and Kustomize would be best practice to represent environments by a directory.\n\nhttps://cloud.google.com/anthos-config-management/docs/tutorials/multiple-environments-config-sync#repository_architecture"},{"comment_id":"1090829","content":"Selected Answer: B\nChoose B\n\nCloud Infrastructure (Terraform) repository is shared:\nAllows you to manage the IaC for different env same repo, with different directories representing different env. This makes it easy to maintain and update common IaC across env.\n\nGKE Infrastructure (Anthos Config Management Kustomize manifests) repositories are separated:\nEach env GKE configuration is kept in a separate repo, using different branches for different env. This separation ensures that the GKE configurations for different env are distinct and can be managed independently.\n\nApplication (app source code) repositories are separated:\nEach application has its own repo, and different branches can be used for different features or env. This separation allows application owners to manage their code independently and follow GitOps principles for application deployment.","timestamp":"1717823520.0","upvote_count":"1","poster":"xhilmi"},{"timestamp":"1715028360.0","upvote_count":"3","comment_id":"1064316","comments":[{"upvote_count":"1","comment_id":"1064326","content":"https://cloud.google.com/anthos-config-management/docs/concepts/gitops-best-practices#use-folders","poster":"YushiSato","timestamp":"1715029140.0"}],"content":"Selected Answer: A\nI think A is correct.\nIn both Terraform and Kustomize, it would be common to represent the environment by a directory.","poster":"YushiSato"},{"upvote_count":"3","poster":"mshafa","content":"Selected Answer: B\nNot sure, but I think it's better option.","timestamp":"1714855440.0","comment_id":"1062443"},{"timestamp":"1714615440.0","upvote_count":"2","comment_id":"1060229","poster":"lelele2023","content":"Selected Answer: C\nIt is recommended to use kustomize+ACM to manage multi environments using overlay+share-repo approach hence this narrows down to be either A or C. https://cloud.google.com/anthos-config-management/docs/tutorials/multiple-environments-config-sync#repository_architecture\n\nFor app repo it should be shared therefore C is the right answer."}],"url":"https://www.examtopics.com/discussions/google/view/125154-exam-professional-cloud-devops-engineer-topic-1-question-152/"}],"exam":{"provider":"Google","isImplemented":true,"name":"Professional Cloud DevOps Engineer","numberOfQuestions":196,"lastUpdated":"11 Apr 2025","isMCOnly":true,"isBeta":false,"id":6},"currentPage":12},"__N_SSP":true}