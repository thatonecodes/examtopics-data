{"pageProps":{"questions":[{"id":"R8DK16pAQFOLCaX1MGET","question_id":156,"answer_ET":"C","choices":{"B":"1. Leave the network configuration of the VMs in scope unchanged.\n2. Enable Cloud NAT for “dev-vpc” and restrict the target range in Cloud NAT to 10.58.5.0/24.","C":"1. Attach external IP addresses to the VMs in scope.\n2. Define and apply a hierarchical firewall policy on folder level to deny all egress connections and to allow egress to IP range 10.58.5.0/24 from network dev-vpc.","A":"1. Leave the network configuration of the VMs in scope unchanged.\n2. Create a new project including a new VPC network “new-vpc”.\n3. Deploy a network appliance in “new-vpc” to filter access requests and only allow egress connections from “dev-vpc” to 10.58.5.0/24.","D":"1. Attach external IP addresses to the VMs in scope.\n2. Configure a VPC Firewall rule in “dev-vpc” that allows egress connectivity to IP range 10.58.5.0/24 for all source addresses in this network."},"question_text":"You control network traffic for a folder in your Google Cloud environment. Your folder includes multiple projects and Virtual Private Cloud (VPC) networks. You want to enforce on the folder level that egress connections are limited only to IP range 10.58.5.0/24 and only from the VPC network “dev-vpc”. You want to minimize implementation and maintenance effort.\n\nWhat should you do?","isMC":true,"url":"https://www.examtopics.com/discussions/google/view/126778-exam-professional-cloud-security-engineer-topic-1-question/","answer_description":"","discussion":[{"comment_id":"1320344","content":"Selected Answer: C\nHierarchical Firewall Policy:\n\nThese policies are defined at the organization or folder level and are inherited by all projects under the folder.\nYou can use this to enforce a rule that allows egress traffic only to the specific IP range (10.58.5.0/24) from the dev-vpc network while blocking all other egress traffic.\nThis minimizes ongoing maintenance because the policy applies automatically to all resources in the folder.\nExternal IP Addresses:\n\nBy attaching external IP addresses to the VMs, you ensure they can communicate outside the VPC, subject to the egress policies defined at the folder level.","upvote_count":"2","timestamp":"1732991580.0","poster":"BPzen"},{"timestamp":"1732697520.0","comment_id":"1318521","upvote_count":"1","poster":"MoAk","content":"Selected Answer: C\nhmm this is a tricky one. between B and C i am leaning more towards C but only because of the wording in the Q itself, specifically 'enforce on the folder level'. \n\nFor me all options are pants but I feel the Q is intending to test the knowledge about hierarchical firewall policies. Further, cloud NAT itself would not be a selected product to 'enforce' controls intended by the use case in this Q."},{"upvote_count":"1","poster":"Mr_MIXER007","content":"Selected Answer: C\nCloud NAT is primarily for providing internet access to instances in private subnets. It doesn't offer the granular control needed to restrict egress traffic based on source VPC networks","timestamp":"1725869520.0","comment_id":"1280793"},{"content":"Selected Answer: C\nApplying a hierarchical firewall policy at the folder level ensures centralized control of egress traffic across all networks and projects within the folder, minimizing implementation and maintenance efforts while enforcing the required network traffic constraints.","poster":"3d9563b","upvote_count":"1","comment_id":"1253462","timestamp":"1721718900.0"},{"poster":"pico","content":"Selected Answer: B\nBut I'm not agree 100% with any of them. B & C are the less worst but not the good ones.\n\nC is not complain with: on the folder level \nB is not complain with: minimize implementation and maintenance effort because of the add external ip addresses to the VMs step","timestamp":"1716044160.0","comment_id":"1213356","upvote_count":"1"},{"upvote_count":"1","comment_id":"1189002","timestamp":"1712191440.0","poster":"Bettoxicity","content":"Selected Answer: C\n-Folder-Level Policy: A hierarchical firewall policy applied at the folder level ensures consistent enforcement across all VPC networks within that folder. This simplifies management compared to individual project or VPC configurations.\n-Deny All Egress with Allow Rule: Setting a \"deny all egress\" rule as the default policy at the folder level strengthens security by explicitly blocking outbound traffic. A separate rule specifically allows egress to the desired IP range (10.58.5.0/24) from the \"dev-vpc\" network, meeting your requirements.\n-No VM Configuration Changes: This approach avoids modifying individual VM network configurations, reducing complexity and potential errors."},{"upvote_count":"2","timestamp":"1710002760.0","content":"Selected Answer: B\nallowing egress to the entire 10.58.5.0/24 network does not make any sense,\nenabling Cloud NAT for \"dev-vpc\" with the target range restricted to 10.58.5.0/24 provides a straightforward and efficient way to enforce egress connections on the folder level, meeting your criteria of minimal implementation and maintenance effort.","poster":"dija123","comment_id":"1169660"},{"content":"Selected Answer: C\nIn my opinion the less worth option is C.\nA is wrong because use an other VPC in other Network cannot help to filter egress access\nB is wrong for me because NAT doesn't allow us to limit access even NAT is could be make between VPC.\nD by default all egress connections are allow add a rule make no change for me.\n\nin C you make a rule applie on all folder that deny egress by default and allow the source network as expected. I don't understand the fact of add a public ip adress that don't help for me but it is not blocking.","upvote_count":"1","timestamp":"1707665940.0","poster":"adb4007","comment_id":"1147404"},{"comments":[{"upvote_count":"3","timestamp":"1707054660.0","comment_id":"1140173","content":"But mentioned IP range is internal, so why we need External IP ? In my opinion all answers are bad","poster":"b6f53d8","comments":[{"poster":"winston9","comment_id":"1145541","content":"NAT can be used to route internal traffic to other VPCs also. \nCloud NAT lets certain resources in Google Cloud create outbound connections to the internet or to other Virtual Private Cloud (VPC) networks.\nhttps://cloud.google.com/nat/docs/overview","upvote_count":"2","timestamp":"1707488160.0"}]}],"timestamp":"1707054480.0","comment_id":"1140168","upvote_count":"3","content":"Selected Answer: B\nWhy not B ?","poster":"b6f53d8"},{"content":"Selected Answer: C\n\nhttps://cloud.google.com/firewall/docs/firewall-policies-examples","upvote_count":"1","timestamp":"1702360680.0","poster":"NaikMN","comment_id":"1094164"},{"content":"Selected Answer: C\nThe correct answer is C. 1. Attach external IP addresses to the VMs in scope. 2. Define and apply a hierarchical firewall policy on folder level to deny all egress connections and to allow egress to IP range 10.58.5.0/24 from network dev-vpc.\n\nThis approach allows you to control network traffic at the folder level. By attaching external IP addresses to the VMs in scope, you can ensure that the VMs have a unique, routable IP address for outbound connections. Then, by defining and applying a hierarchical firewall policy at the folder level, you can enforce that egress connections are limited to the specified IP range and only from the specified VPC network.","upvote_count":"1","comment_id":"1076760","poster":"MisterHairy","timestamp":"1700604120.0"}],"answers_community":["C (57%)","B (43%)"],"answer":"C","exam_id":9,"question_images":[],"answer_images":[],"timestamp":"2023-11-21 23:02:00","topic":"1","unix_timestamp":1700604120},{"id":"pIhee0hPFMKJxUp3CHbl","answer":"C","question_text":"A company's application is deployed with a user-managed Service Account key. You want to use Google-recommended practices to rotate the key.\nWhat should you do?","answer_ET":"C","discussion":[{"timestamp":"1639163520.0","comment_id":"379176","poster":"mdc","content":"C is correct. As explained, You can rotate a key by creating a new key, updating applications to use the new key, and deleting the old key. Use the serviceAccount.keys.create() method and serviceAccount.keys.delete() method together to automate the rotation.\n\nhttps://cloud.google.com/iam/docs/creating-managing-service-account-keys#deleting_service_account_keys","upvote_count":"11"},{"timestamp":"1710019980.0","upvote_count":"1","content":"B is correct. for C creating a new key and deleting the old one from the Service Account, is not recommended. Deleting the old key without replacing it could prevent your application from authenticating and accessing resources.","poster":"aliounegdiop","comment_id":"1003464","comments":[{"timestamp":"1710020220.0","comments":[{"content":"If you keep the old key active, then your rotate is worthless (because anyone could still use the old key)\n\nC is the solution: rotate and destroy the previous key","upvote_count":"3","timestamp":"1729930740.0","comment_id":"1202468","poster":"eeghai7thioyaiR4"}],"poster":"aliounegdiop","comment_id":"1003470","content":"my bad it should D. having a backup key in cae of problem with the new key","upvote_count":"1"}]},{"upvote_count":"3","comment_id":"957901","poster":"[Removed]","timestamp":"1705794000.0","content":"Selected Answer: C\n\"C\" appears to be the most accurate.\n\nhttps://cloud.google.com/iam/docs/key-rotation#process"},{"timestamp":"1705793880.0","poster":"[Removed]","content":"\"C\" appears to be the most accurate.\nhttps://cloud.google.com/iam/docs/key-rotation","comment_id":"957899","comments":[{"content":"Specifically: https://cloud.google.com/iam/docs/key-rotation#process","poster":"[Removed]","upvote_count":"1","comment_id":"957900","timestamp":"1705793880.0"}],"upvote_count":"2"},{"content":"Selected Answer: C\nC it is the ans","timestamp":"1703861100.0","upvote_count":"1","poster":"megalucio","comment_id":"938108"},{"timestamp":"1703848440.0","upvote_count":"1","poster":"amanshin","comment_id":"937834","content":"The correct answer is C. Create a new key, and use the new key in the application. Delete the old key from the Service Account.\n\nGoogle recommends that you rotate user-managed service account keys every 90 days or less. This helps to reduce the risk of unauthorized access to your resources if the key is compromised."},{"poster":"gcpengineer","comments":[{"upvote_count":"1","content":"https://cloud.google.com/iam/docs/best-practices-for-managing-service-account-keys#rotate-keys","poster":"gcpengineer","timestamp":"1700998200.0","comment_id":"907241"}],"comment_id":"907240","content":"Selected Answer: C\nC is the ans","upvote_count":"1","timestamp":"1700998140.0"},{"comment_id":"870712","content":"Selected Answer: D\nThe recommended practice to rotate a user-managed Service Account key in GCP is to create a new key and use it in the application while keeping the old key for a specified period as a backup key. This helps to ensure that the application's service account always has a valid key and that there is no service disruption during the key rotation process. Therefore, the correct answer is option D.","timestamp":"1697352600.0","upvote_count":"3","poster":"aashissh"},{"upvote_count":"2","poster":"GCP72","comment_id":"653025","content":"Selected Answer: C\nThe correct answer is C","timestamp":"1677606840.0"},{"comment_id":"614860","upvote_count":"1","content":"c of course","timestamp":"1670747340.0","poster":"absipat"},{"comment_id":"318383","content":"Ans : C","poster":"DebasishLowes","upvote_count":"2","timestamp":"1632415440.0"},{"timestamp":"1619793420.0","comment_id":"209432","poster":"[Removed]","content":"Ans - C \nhttps://cloud.google.com/iam/docs/understanding-service-accounts#managing_service_account_keys","upvote_count":"4"},{"timestamp":"1613716200.0","comment_id":"161236","content":"C is the right choice for me","poster":"ArizonaClassics","upvote_count":"4"},{"poster":"aiwaai","timestamp":"1613709060.0","upvote_count":"2","content":"Correct Answer: C","comment_id":"161198"}],"question_id":157,"answer_images":[],"exam_id":9,"unix_timestamp":1597804260,"answer_description":"","isMC":true,"choices":{"A":"Open Cloud Shell and run gcloud iam service-accounts enable-auto-rotate --iam-account=IAM_ACCOUNT.","D":"Create a new key, and use the new key in the application. Store the old key on the system as a backup key.","B":"Open Cloud Shell and run gcloud iam service-accounts keys rotate --iam-account=IAM_ACCOUNT --key=NEW_KEY.","C":"Create a new key, and use the new key in the application. Delete the old key from the Service Account."},"timestamp":"2020-08-19 04:31:00","question_images":[],"answers_community":["C (70%)","D (30%)"],"topic":"1","url":"https://www.examtopics.com/discussions/google/view/29020-exam-professional-cloud-security-engineer-topic-1-question/"},{"id":"rzgJe5u4twogrpnO0I0y","exam_id":9,"question_images":[],"url":"https://www.examtopics.com/discussions/google/view/126780-exam-professional-cloud-security-engineer-topic-1-question/","answers_community":["B (83%)","C (17%)"],"topic":"1","answer_description":"","unix_timestamp":1700604240,"answer_images":[],"choices":{"B":"Use a subordinate CA in the Google Certificate Authority Service from the on-premises PKI system to issue certificates for the load balancers.","D":"Use the web applications with PKCS12 certificates issued from subordinate CA based on OpenSSL on-premises. Use the gcloud tool for importing. Use the External TCP/UDP Network load balancer instead of an external HTTP Load Balancer.","C":"Use Certificate Manager to import certificates issued from on-premises PKI and for the frontends. Leverage the gcloud tool for importing.","A":"Use Certificate Manager to issue Google managed public certificates and configure it at HTTP the load balancers in your infrastructure as code (IaC)."},"timestamp":"2023-11-21 23:04:00","isMC":true,"question_text":"Your customer has an on-premises Public Key Infrastructure (PKI) with a certificate authority (CA). You need to issue certificates for many HTTP load balancer frontends. The on-premises PKI should be minimally affected due to many manual processes, and the solution needs to scale.\n\nWhat should you do?","discussion":[{"content":"Selected Answer: B\nThe correct answer is B. Use a subordinate CA in the Google Certificate Authority Service from the on-premises PKI system to issue certificates for the load balancers.\n\nThis approach allows you to leverage your existing on-premises PKI infrastructure while minimizing its impact and manual processes. By creating a subordinate CA in Google’s Certificate Authority Service, you can automate the process of issuing certificates for your HTTP load balancer frontends. This solution scales well as the number of load balancers increases.","comment_id":"1076763","upvote_count":"7","poster":"MisterHairy","timestamp":"1700604240.0"},{"upvote_count":"2","poster":"Mr_MIXER007","timestamp":"1725870060.0","comment_id":"1280799","content":"Selected Answer: B\n!!!!B. Use a subordinate CA in the Google Certificate Authority Service from the on-premises PKI system to issue certificates for the load balancers"},{"content":"Selected Answer: C\nUse Certificate Manager to import certificates issued from on-premises PKI and for the frontends. Leverage the gcloud tool for importing","comment_id":"1280797","timestamp":"1725870000.0","poster":"Mr_MIXER007","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nUse a subordinate CA in the Google Certificate Authority Service from the on-premises PKI system to issue certificates for the load balancers.","comment_id":"1144662","poster":"mjcts","timestamp":"1707407400.0"},{"content":"Selected Answer: C\nimporting existing certificates into Certificate Manager using the gcloud tool presents the most efficient and scalable solution with minimal impact on the customer's existing on-premises PKI system","poster":"winston9","upvote_count":"1","comment_id":"1130388","timestamp":"1706084820.0"}],"answer_ET":"B","question_id":158,"answer":"B"},{"id":"YwuEsfuEKyaRcNRAgDXe","answer_description":"","choices":{"D":"1. Create a general service account “g-sa” to orchestrate the batch jobs.\n2. Create one service account per batch job “b-sa-[1-5]”, and grant only the permissions required to run the individual batch jobs to the service accounts.\n3. Grant the Service Account Token Creator role to g-sa. Use g-sa to obtain short-lived access tokens for b-sa-[1-5] and to execute the batch jobs with the permissions of b-sa-[1-5].","A":"1. Create a general service account “g-sa” to orchestrate the batch jobs.\n2. Create one service account per batch job ‘b-sa-[1-5]’. Grant only the permissions required to run the individual batch jobs to the service accounts and generate service account keys for each of these service accounts.\n3. Store the service account keys in Secret Manager. Grant g-sa access to Secret Manager and run the batch jobs with the permissions of b-sa-[1-5].","C":"1. Create a workload identity pool and configure workload identity pool providers for each batch job.\n2. Assign the workload identity user role to each of the identities configured in the providers.\n3. Create one service account per batch job “b-sa-[1-5]”, and grant only the permissions required to run the individual batch jobs to the service accounts.\n4. Generate credential configuration files for each of the providers. Use these files to execute the batch jobs with the permissions of b-sa-[1-5].","B":"1. Create a general service account “g-sa” to execute the batch jobs.\n2. Grant the permissions required to execute the batch jobs to g-sa.\n3. Execute the batch jobs with the permissions granted to g-sa."},"answer_ET":"D","answer":"D","answers_community":["D (100%)"],"timestamp":"2023-11-21 23:07:00","isMC":true,"exam_id":9,"answer_images":[],"topic":"1","discussion":[{"poster":"pfilourenco","content":"Selected Answer: D\nD is correct.","timestamp":"1718207520.0","comment_id":"1229291","upvote_count":"1"},{"timestamp":"1714439460.0","comment_id":"1204270","upvote_count":"1","poster":"chaoslinux","content":"I picked D over B. \"least privilege\""},{"upvote_count":"1","content":"Which is correct, B or D?","comment_id":"1142838","timestamp":"1707262380.0","poster":"TM19860801"},{"timestamp":"1700604420.0","poster":"MisterHairy","content":"Selected Answer: D\nThe correct answer is D. 1. Create a general service account “g-sa” to orchestrate the batch jobs. 2. Create one service account per batch job “b-sa-[1-5]”, and grant only the permissions required to run the individual batch jobs to the service accounts. 3. Grant the Service Account Token Creator role to g-sa. Use g-sa to obtain short-lived access tokens for b-sa-[1-5] and to execute the batch jobs with the permissions of b-sa-[1-5].\n\nThis approach adheres to the principle of least privilege by ensuring that each batch job has only the permissions it needs to run. The general service account “g-sa” is used to orchestrate the batch jobs, and the Service Account Token Creator role allows it to obtain short-lived access tokens for the batch job service accounts “b-sa-[1-5]”. This setup allows the batch jobs to be executed with the permissions of the respective service accounts.","upvote_count":"4","comment_id":"1076764"}],"question_images":[],"question_id":159,"question_text":"You are developing a new application that uses exclusively Compute Engine VMs. Once a day, this application will execute five different batch jobs. Each of the batch jobs requires a dedicated set of permissions on Google Cloud resources outside of your application. You need to design a secure access concept for the batch jobs that adheres to the least-privilege principle.\n\nWhat should you do?","url":"https://www.examtopics.com/discussions/google/view/126781-exam-professional-cloud-security-engineer-topic-1-question/","unix_timestamp":1700604420},{"id":"sQ36M2pEx7n6dSF22zFY","isMC":true,"answer_description":"","unix_timestamp":1700604540,"exam_id":9,"question_images":[],"answer_ET":"D","topic":"1","question_text":"Your Google Cloud environment has one organization node, one folder named “Apps”, and several projects within that folder. The organizational node enforces the constraints/iam.allowedPolicyMemberDomains organization policy, which allows members from the terramearth.com organization. The “Apps” folder enforces the constraints/iam.allowedPolicyMemberDomains organization policy, which allows members from the flowlogistic.com organization. It also has the inheritFromParent: false property.\n\nYou attempt to grant access to a project in the “Apps” folder to the user testuser@terramearth.com.\n\nWhat is the result of your action and why?","answer_images":[],"timestamp":"2023-11-21 23:09:00","choices":{"B":"The action succeeds and the new member is successfully added to the project's Identity and Access Management (IAM) policy because all policies are inherited by underlying folders and projects.","D":"The action fails because a constraints/iam.allowedPolicyMemberDomains organization policy is in place and only members from the flowlogistic.com organization are allowed.","C":"The action fails because a constraints/iam.allowedPolicyMemberDomains organization policy must be defined on the current project to deactivate the constraint temporarily.","A":"The action succeeds because members from both organizations, terramearth.com or flowlogistic.com, are allowed on projects in the “Apps” folder."},"url":"https://www.examtopics.com/discussions/google/view/126782-exam-professional-cloud-security-engineer-topic-1-question/","question_id":160,"answer":"D","answers_community":["D (100%)"],"discussion":[{"poster":"Mr_MIXER007","content":"Selected Answer: D\nThe action fails because a constraints/iam.allowedPolicyMemberDomains organization policy is in place and only members from the flowlogistic.com organization are allowed","upvote_count":"1","timestamp":"1725870900.0","comment_id":"1280808"},{"comment_id":"1093743","timestamp":"1702319580.0","content":"Selected Answer: D\nWill fail because of the inheritFromParent: false option. Even if the level above has the right permissions, it will not inherit into the lower levels.","poster":"JoaquinJimenezGarcia","upvote_count":"4"},{"timestamp":"1702113660.0","comment_id":"1091676","poster":"[Removed]","content":"Selected Answer: D\nhttps://cloud.google.com/resource-manager/reference/rest/v1/Policy#listpolicy","upvote_count":"3"},{"content":"Selected Answer: D\nThe correct answer is D. The action fails because a constraints/iam.allowedPolicyMemberDomains organization policy is in place and only members from the flowlogistic.com organization are allowed.\n\nThe inheritFromParent: false property on the “Apps” folder means that it does not inherit the organization policy from the organization node. Therefore, only the policy set at the folder level applies, which allows only members from the flowlogistic.com organization. As a result, the attempt to grant access to the user testuser@terramearth.com fails because this user is not a member of the flowlogistic.com organization.","upvote_count":"3","comment_id":"1076768","timestamp":"1700604540.0","poster":"MisterHairy"}]}],"exam":{"isImplemented":true,"name":"Professional Cloud Security Engineer","numberOfQuestions":321,"lastUpdated":"11 Apr 2025","isMCOnly":false,"isBeta":false,"id":9,"provider":"Google"},"currentPage":32},"__N_SSP":true}