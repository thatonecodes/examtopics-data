{"pageProps":{"questions":[{"id":"wQR64pbQfaBvV7QZKPIv","answer_description":"","answer":"AB","answer_images":[],"unix_timestamp":1574112000,"exam_id":4,"timestamp":"2019-11-18 22:20:00","question_text":"For this question, refer to the Mountkirk Games case study. Mountkirk Games wants to design their solution for the future in order to take advantage of cloud and technology improvements as they become available. Which two steps should they take? (Choose two.)","isMC":true,"answers_community":["AB (55%)","BC (27%)","Other"],"question_id":251,"answer_ET":"AB","topic":"6","question_images":[],"choices":{"D":"Adopt a schema versioning tool to reduce downtime when adding new game features that require storing additional player data in the database.","E":"Implement a weekly rolling maintenance process for the Linux virtual machines so they can apply critical kernel patches and package updates and reduce the risk of 0-day vulnerabilities.","A":"Store as much analytics and game activity data as financially feasible today so it can be used to train machine learning models to predict user behavior in the future.","C":"Set up a CI/CD pipeline using Jenkins and Spinnaker to automate canary deployments and improve development velocity.","B":"Begin packaging their game backend artifacts in container images and running them on Google Kubernetes Engine to improve the ability to scale up or down based on game activity."},"url":"https://www.examtopics.com/discussions/google/view/8501-exam-professional-cloud-architect-topic-6-question-3/","discussion":[{"upvote_count":"80","poster":"dabrat","timestamp":"1605734400.0","comment_id":"22557","content":"A+B)\n =>as well as other metrics that provide deeper insight into usage patterns so we can adapt the game to target users. \n\n environment that provides autoscaling, low latency load balancing, and frees us up from managing physical servers.","comments":[{"comment_id":"229675","comments":[{"content":"Hi techalik,\nI googled right now and could not finde \" By retaining as much real data as financially feasible, you are in the best position to take advantage of AI improvements in the future.\" - from an economic perspective that makes no sense or the wording in the question is very \"dirty\". What is financially feasible? For me that means invest every cent you have into data - that cannot be the right approach. \nI vote for B+C.","poster":"XDevX","upvote_count":"8","comments":[{"timestamp":"1673976600.0","upvote_count":"1","poster":"kkhurana","content":"I agree .Me too for BC","comment_id":"525971"}],"timestamp":"1656666960.0","comment_id":"395758"},{"content":"please see the solution requirements section please","poster":"ArtistS","upvote_count":"1","comment_id":"1074358","timestamp":"1731973560.0"},{"timestamp":"1649524980.0","content":"As they want to take advantage of cloud, it is better to choose Cloud Build which is from GCP's service to build CI/CD.\nAB is the choice","comment_id":"332077","upvote_count":"9","poster":"tzKhalil"}],"timestamp":"1638111360.0","content":"Enable CI/CD integration to improve deployment velocity, agility and reaction to change. is the right answer.\n\nHaving a CI/CD pipeline means you can deploy changes to environments faster. Does this help you take advantage of cloud and technology improvements as they become available in the future? Yes. When new features become available, you can incorporate them into your application and deploy them to test/production environments easily/efficiently and decrease the time to go live.\n\n\nStore more data and use it as training data for machine learning. is the right answer.\n\nThe more data you, the better you can train your AI model. The better the trained model, the better the prediction service can perform. By retaining as much real data as financially feasible, you are in the best position to take advantage of AI improvements in the future.\n\nRef: https://cloud.google.com/ai-platform\n\nAC","upvote_count":"17","poster":"techalik"},{"comment_id":"303877","content":"AC makes sense in respect to this question.","timestamp":"1646449440.0","poster":"nitinz","upvote_count":"6"},{"timestamp":"1628659140.0","upvote_count":"21","comments":[{"timestamp":"1635787020.0","upvote_count":"8","comment_id":"210619","content":"AC make sense.","poster":"kumarp6"}],"comment_id":"155107","poster":"tartar","content":"AB is ok"}]},{"upvote_count":"25","timestamp":"1622209500.0","comments":[{"comment_id":"653680","upvote_count":"2","poster":"ShadowLord","content":"Say if there proposed feature are in BigQuery , DataFlow or some other GCP service... how will just doing B help ..... C can help","timestamp":"1693349880.0"}],"comment_id":"97596","poster":"AD2AD4","content":"Final Decision to go with Option AB"},{"comment_id":"1332148","poster":"rrope","content":"Selected Answer: BD\noptions B (containers and Kubernetes) and D (schema versioning) best represent a future strategy for Mountkirk Games, focusing on scalability, agility and efficient infrastructure and database management. . Option A, while relevant in a general data analytics context, does not focus on future-proofing infrastructure as B and D do.","upvote_count":"1","timestamp":"1735256760.0"},{"poster":"Jconnor","upvote_count":"1","timestamp":"1733258280.0","content":"I do not understand B. what does it mean begin packaging? either implemented or not implemented, begin has no value today or in the future. A and E has they use Linux today.","comment_id":"1087106"},{"poster":"odacir","content":"Selected Answer: BC\nCloud future prove mean container and CI/CD\nB. Begin packaging their game backend artifacts in container images and running them on Google Kubernetes Engine to improve the ability to scale up or down based on game activity. Most Voted\nC. Set up a CI/CD pipeline using Jenkins and Spinnaker to automate canary deployments and improve development velocity.","comment_id":"1074632","timestamp":"1732023000.0","upvote_count":"5"},{"timestamp":"1719676200.0","upvote_count":"3","comment_id":"938334","content":"Selected Answer: BC\nB & C - C beause: \"Mountkirk Games wants to design their solution for the future in order to take advantage of cloud and technology improvements as they become available\". Spinnaker makes it easy to use new features as they become available: https://console.cloud.google.com/marketplace/product/google-cloud-platform/spinnaker?pli=1 - Pre-integrated with Google Cloud Platform\n\nSpinnaker for Google Cloud Platform is pre-configured to work with GCP products like Cloud Build, Compute Engine, App Engine, Google Kubernetes Engine, and Stackdriver.","poster":"sampon279"},{"comment_id":"926787","content":"I can see why C & D are the given correct answers.\nThey objectively allow you to quickly incorporate tech improvements.\n\nA. Would help with possible machine learning models in the future.\nB. Makes use of an existing technology\nD. Makes use of an existing technology\n\nI chose A & E but I think C & E probably what Google are after.","poster":"BiddlyBdoyng","upvote_count":"1","timestamp":"1718727060.0"},{"poster":"Atanu","comment_id":"922159","upvote_count":"2","timestamp":"1718275980.0","content":"Selected Answer: BC\nB+C looks promising"},{"timestamp":"1716491580.0","content":"Selected Answer: CE\nFuture is the key word.","comment_id":"905170","upvote_count":"1","poster":"Murmure"},{"timestamp":"1713879900.0","comment_id":"878417","poster":"medi01","content":"Selected Answer: AC\nHigher velocity (C) = adopt new features fast.\nA bodes well with the statement that they are missing a lot of data/insights.","upvote_count":"1"},{"content":"This is annoying\nA, B and C seem correct.......... But only two......?","timestamp":"1710448860.0","comment_id":"839260","upvote_count":"2","poster":"rr4444"},{"content":"In a GCP exam, non GCP products(as per C) is rarely the correct answer!","timestamp":"1710442860.0","comment_id":"839161","upvote_count":"5","poster":"BeCalm"},{"comment_id":"839159","content":"Selected Answer: AB\nA = ML = future stuff\nB = containers = portability (since current platform runs on VM's)","timestamp":"1710442740.0","upvote_count":"3","poster":"BeCalm"},{"poster":"SandipGhosal","timestamp":"1709271300.0","comment_id":"825541","upvote_count":"1","content":"In technical and business requirement of the case study it mentioned about Analytics, not machine learning. So A seems not a correct answer here. D is very generic as OS upgrade and patches could be done outside GCP. I would go with B and C."},{"poster":"telp","upvote_count":"3","comment_id":"809877","timestamp":"1708025160.0","content":"Selected Answer: AB\nAnswer AB\nCloud Build is the Google Solution for CI/CD than other third party sofware can't be used for CI/CD in a certification examen."},{"timestamp":"1703837520.0","comment_id":"760764","poster":"sameer2803","content":"A&B is correct\nrest of the improvements can be made without being on a cloud platform as well.","upvote_count":"1"},{"upvote_count":"3","content":"A. Store as much analytics and game activity data as financially feasible today so it can be used to train machine learning models to predict user behavior in the future. Storing as much data as possible will allow Mountkirk Games to use machine learning models to analyze and predict user behavior, which can help them adapt the game to target users and improve the user experience.\n\nB. Begin packaging their game backend artifacts in container images and running them on Google Kubernetes Engine to improve the ability to scale up or down based on game activity. Containerization allows Mountkirk Games to package their game backend and dependencies into a single unit that can be easily deployed and run on any platform. By using Google Kubernetes Engine (GKE), Mountkirk Games can take advantage of GKE's autoscaling and load balancing features to ensure that their game backend can scale up or down based on game activity. This will help Mountkirk Games improve uptime and reduce latency to all customers, as well as increase the efficiency of their cloud resources.","poster":"omermahgoub","timestamp":"1703767560.0","comment_id":"759824"},{"content":"Selected Answer: AB\nA, B is the correct answer","poster":"surajkrishnamurthy","timestamp":"1702804320.0","upvote_count":"2","comment_id":"747918"},{"timestamp":"1701159300.0","content":"Ans : AB","comment_id":"728873","upvote_count":"1","poster":"moustaoui"},{"poster":"megumin","upvote_count":"2","content":"Selected Answer: AB\nok for AB","comment_id":"712381","timestamp":"1699282320.0"},{"content":"Selected Answer: AB\nI think the answers are A & B. \n\nA: It makes sense to collected as much data points in order to have adquate data for ML models \nB: Google recommends microservices & having containerized images , if they already have containre images , it would be easier to push to gcr & then run on GKE\nC:Cloud Build is the Google Solution for CI/CD and requires Dockerfile , hence CI/CD piepline code for Jenkins\nwill not be useful in futire\nD: schema versioning tool is not related for future google services\nE: Google does the patching on all VMS so its not relevant","timestamp":"1695307560.0","poster":"muneebarshad","upvote_count":"4","comment_id":"675227"},{"content":"Selected Answer: AB\nAB best answer","upvote_count":"2","timestamp":"1695290100.0","poster":"EricG77","comment_id":"674982"},{"poster":"Nirca","comment_id":"665988","content":"Selected Answer: AB\nFinal Decision to go with Option AB","timestamp":"1694425320.0","upvote_count":"3"},{"poster":"shekarcfc","content":"Selected Answer: AB\nAB, jenkins like open-sources tools might not be recommended, as its for GCP certification and expectation will be to use GCP services","timestamp":"1694172540.0","upvote_count":"3","comment_id":"663552"},{"comment_id":"649824","content":"Selected Answer: BC\nB+C is the answer","upvote_count":"1","poster":"JohnPi","timestamp":"1692636360.0","comments":[]},{"upvote_count":"1","comment_id":"646468","content":"B+C others answers dont make sense. No one stores as much data as you can afford - dumb. D does not make sense either","poster":"chickennuggets","timestamp":"1691970060.0"},{"comment_id":"644726","poster":"procloudengineer","timestamp":"1691628360.0","upvote_count":"1","content":"I think CE is correct. Noticed that the question ask for solution that can be used in the future as becoming available. AB are already available. But CE both focus on some updates in the future."},{"poster":"deenee","timestamp":"1690009200.0","upvote_count":"2","content":"Selected Answer: AC\nA: Financially feasible doesn't mean invest whatever you have! Its up to organization to decide how much they can afford. As much data as possible for AI seems correct answer as question is related to the future tech improvement- so by retaining as much real data as financially feasible, will contribute to AI improvements in the future.\n\nC: CICD will help in less time to go live with new features (As and when available in future)","comment_id":"635050"},{"content":"Selected Answer: BC\nI think the answer should be B+C.\nA - doesn't make business sense, would be shot down by sensible management\nD - nonsense\nE - security is not a high priority","comment_id":"618634","timestamp":"1687170900.0","upvote_count":"2","poster":"JoeThach"},{"content":"Selected Answer: A\nA+B) for sure","poster":"H_S","upvote_count":"1","timestamp":"1686579240.0","comment_id":"615360"},{"timestamp":"1683991500.0","upvote_count":"1","content":"Selected Answer: AE\nfuture ready a n e","poster":"amxexam","comment_id":"601225"},{"timestamp":"1674008460.0","poster":"sjmsummer","upvote_count":"1","content":"AB. C seems to be good but it can be used for now with GCE application.","comment_id":"526249"},{"content":"Selected Answer: AB\nA: keyword financially feasible?, on premise -> hardware cost will be alot to setup \nB. Because of one of the technical requirement in case study.","upvote_count":"2","poster":"kongae","comment_id":"524688","timestamp":"1673851860.0"},{"content":"Selected Answer: CD\nA - does not makes sense. They can run analytics today\nB - this is improvement of today\nC - higher dev velocity means better ability to introduce new features. YES!\nD - since is transactional DB, they need this to be able to introduce quick changes to the DB. Yes\nE - this is security oriented, so no.","comment_id":"521812","timestamp":"1673478360.0","poster":"pddddd","upvote_count":"1"},{"comment_id":"519314","content":"Selected Answer: BC\nkey is to take advantage of cloud tech, A is anything specific to cloud or GCP? I can do A with on-prem. So answer are B and C. \nC- Jenkins works with Spinnaker, as mentioned in GCP DevOps course.","timestamp":"1673153340.0","upvote_count":"1","poster":"MF2C"},{"upvote_count":"1","poster":"ABO_Doma","comment_id":"506389","content":"Selected Answer: AC\nE)It's a good idea, but does this help you take advantage of cloud and technology improvements as they become available in the future? No.\nThe more data you store, the better you can train your AI model. The better the trained model, the better the prediction service can perform. By retaining as much real data as financially feasible, you are in the best position to take advantage of AI improvements in the future.","comments":[{"timestamp":"1672442880.0","content":"AB mostly. C has both Jenkins and Spinnaker, not sure both are needed as they are for same purpose.","poster":"SanLi","upvote_count":"1","comment_id":"513778"}],"timestamp":"1671650580.0"},{"comment_id":"487819","content":"Selected Answer: AB\nvote AB","timestamp":"1669518300.0","poster":"joe2211","upvote_count":"4"},{"poster":"[Removed]","upvote_count":"3","comment_id":"467546","timestamp":"1666714140.0","content":"For business perspective A and B are right.\nA. Store as much analytics and game activity data as financially feasible today so it can be used to train machine learning models to predict user behavior in the future.\nB. Begin packaging their game backend artifacts in container images and running them on Google Kubernetes Engine to improve the ability to scale up or down based on game activity.\n\nHowever, C and E are good for future build and deployment process. As per business objective A and B make more weight to consider."},{"upvote_count":"1","timestamp":"1666592460.0","comment_id":"466847","content":"A – store as much as analytics and game activity data … (covers future cloud improvement)\nE – implement weekly rolling maintenance process for Linux VMs … (covers future technology improvement)","poster":"MaxNRG"},{"poster":"BrijMohan08","upvote_count":"3","content":"As per the executive statement \"last successful game did not scale well\" which will be addressed by option B\nAnd A will enable them to analyze the game data. \n\nA and B address their pain points.","timestamp":"1664759340.0","comment_id":"456316"},{"comment_id":"455020","timestamp":"1664554200.0","poster":"Roncy","content":"I support AC, as they are already want to use kubernetes for new game, this way they will migrate to container anyways. The question is talking about future prospective hence, will choose AC option.","upvote_count":"1"},{"content":"Answer is A,B","timestamp":"1657211340.0","upvote_count":"5","comment_id":"401075","comments":[{"comment_id":"406526","content":"AC, only these options talk about future","upvote_count":"3","timestamp":"1657834380.0","poster":"RKS_2021","comments":[{"timestamp":"1660355640.0","upvote_count":"4","poster":"rnv64","content":"B is about the future too.\nand C is not really a cloud advantage - cicd tools can be used onprem.\nso AB.","comment_id":"424013"}]}],"poster":"MamthaSJ"},{"timestamp":"1656686640.0","content":"I think it is b + c.\nSee following links:\nhttps://cloud.google.com/architecture/continuous-delivery-toolchain-spinnaker-cloud\nhttps://cloud.google.com/architecture/automated-canary-analysis-kubernetes-engine-spinnaker","upvote_count":"7","comment_id":"396062","poster":"XDevX"},{"content":"AC\n\nB -> is meant for improving scalability which is not the key question.\nC-> development velocity allows to introduce new features by leveraging new technologies in new version of the code release.","timestamp":"1654302900.0","upvote_count":"2","comment_id":"373980","poster":"Yogikant"},{"poster":"victory108","comment_id":"362893","upvote_count":"2","content":"A. Store as much analytics and game activity data as financially feasible today so it can be used to train machine learning models to predict user behavior in the future.\nB. Begin packaging their game backend artifacts in container images and running them on Kubernetes Engine to improve the availability to scale up or down based on game activity.","timestamp":"1653128100.0"},{"poster":"gosi","comment_id":"342988","timestamp":"1650947460.0","content":"B+C.\nWe have to use container because it is important for future. Just by containerizing, you get so much flexibility for future, e.g. use dataflow flex, use them in GKE where most of the new features are being developed and practiced.\nE - is not good. Ideally if I have to use VM then only I will go for this. Even if I choose VM, I will still containerize it and run it as containers on MIG. In that case, I wont really schedule weekly patches, I will rollout new deployment with newly provisioned/patched image available to to me by my IaaS/Security teams whenever they are available.","comments":[{"upvote_count":"3","timestamp":"1667726520.0","content":"My vote is also for BC. Take advantages of cloud native technologies means \"Microservices\" and automation.\nhttps://cloud.google.com/solutions/cloud-native-app-development#section-1","comment_id":"473352","poster":"mikesp"}],"upvote_count":"5"},{"timestamp":"1648815960.0","content":"Answers are A, B","poster":"Ausias18","upvote_count":"2","comment_id":"325804"},{"comment_id":"302129","upvote_count":"3","content":"C + E\n\nWe can 'take advantage of cloud and technology improvements' by easier and faster integrating and deploying these improvements. C is building a CI/CD pipeline while E is building a CI/CD process. Both can help integrating and deploying the improvements easier and faster. Thus, C+E.","timestamp":"1646240580.0","poster":"idtroo"},{"comment_id":"294536","timestamp":"1645295940.0","poster":"azhadan","upvote_count":"3","content":"A and E for sure"},{"content":"A+C\n\"In order to take advantage of cloud and technology improvements as they become available\"","comment_id":"293567","timestamp":"1645203480.0","comments":[{"comment_id":"302984","timestamp":"1646358060.0","poster":"nitinz","upvote_count":"2","content":"100% agree."}],"upvote_count":"3","poster":"szagarella"},{"content":"\"take advantage of cloud and technology improvements as they become available\"\nall 5 answers are not wrong by it own.\nonly A & E is about something that's not available right now. Other stuffs? They can just do it now.","upvote_count":"5","comment_id":"280801","timestamp":"1643661000.0","poster":"bnlcnd"},{"content":"Tricky one. I think A and B has the edge. As the question has asked for improvements which can be leveraged from cloud technology so Big Data Analysis with ML is the one they should take benefit from cloud alongside the ability to scale with GKE later after they are online. \nC is also a good candidate but I feel this can also be done in their current environment and besides it will not provide them much benefit from having their environment in GCP.","upvote_count":"7","comment_id":"261892","poster":"Arimaverick","timestamp":"1641564480.0"},{"upvote_count":"7","poster":"JCGO","content":"Defenitly A+B. Question related to business part. Read: \"Our investors want more key performance indicators (KPIs) to evaluate the speed and stability of the game, as well as other metrics that provide deeper insight into usage patterns so we can adapt the game to target users\", \"move to an environment that provides autoscaling, low latency load balancing, and frees us up from managing physical servers\", \"We are not capturing enough user demographic data, usage metrics, and other KPIs. As a result, we do not engage the right users, we are not confident that our marketing is targeting the right users, and we are not selling enough premium Blast-Ups inside the games, which dramatically impacts our revenue\". Business statements are about insights, technical ones about autoscaling, no physical servers. CI/CD is good, but fist step is to target busness related considerations.","timestamp":"1638790860.0","comment_id":"236386"},{"comment_id":"218287","timestamp":"1636781460.0","upvote_count":"6","poster":"hems4all","content":"Answer is A & C\n\nHaving a CI/CD pipeline means you can deploy changes to environments faster. Does this help you take advantage of cloud and technology improvements as they become available in the future? Yes. When new features become available, you can incorporate them into your application and deploy them to test/production environments easily/efficiently and decrease the time to go live.\n\nThe more data you, the better you can train your AI model. The better the trained model, the better the prediction service can perform. By retaining as much real data as financially feasible, you are in the best position to take advantage of AI improvements in the future.\n\nRef: https://cloud.google.com/ai-platform"},{"timestamp":"1635650880.0","poster":"gcparchitect007","comment_id":"209681","upvote_count":"7","content":"Correct Answer is A and C"},{"comment_id":"207988","timestamp":"1635435660.0","content":"Correct answer is AB.\nA-> you can better train ML with more and more data and make it future ready for feature rich games.\nB -> Kubernetes and docker image are widely used containers across CSPs and well supported by open source community. If you are going ahead with Kubernetes eventually you will also go for canary release for development velocity.","upvote_count":"4","poster":"AdityaGupta"},{"upvote_count":"2","content":"my choise goes to A & B","comment_id":"198423","timestamp":"1634042640.0","poster":"homer_simpson"},{"comment_id":"194179","poster":"LalBisota","timestamp":"1633512960.0","upvote_count":"3","content":"Correct Answer: C,E\nA is incorrect: collecting old data and even you don't know when the cloud will be available, it will not benifit you from best cloud resource utilization.\nB is incorrect: C is already correct for this as with jenkins you would be creating images and maintaning versioning and even will deliver with Spinnaker quickly\nD is incorrect: as you need to be prepare from current max use of cloud. it could be a part of next step.\nC and E explains from the Cloud ready perspective. while other can be true but they are add ons not reducing game downtime and cloud ready."},{"poster":"asheesh0574","timestamp":"1632566700.0","comment_id":"186909","content":"Correct answers are B & C as the focus is more on the ability to take advantage of cloud and technology improvements as they become available, the applications should scale and the deployments and release process should be automated to facilitate quick and error free deployments.This can be achieved using automated deployments and containers with autoscaling. \nOption A is wrong as the data changes too often and the focus should be only the limited amount of latest data. \nOption D is wrong as for the game state, datastore is the best available option and it is a schema less solution. \nOption E is wrong as this can be handled easily by live migration and auto upgrades using containers","upvote_count":"4"},{"upvote_count":"1","comment_id":"181769","poster":"AshokC","content":"A and B","timestamp":"1631980140.0"},{"comment_id":"169831","timestamp":"1630306620.0","content":"Correct Answer C, E. Its all about speed up for adapting the latest tech stack.","poster":"vbondoo7","upvote_count":"1"},{"poster":"wiqi","content":"I would say AB. A allows them to predict their requirement in future. And since they are running on compute right now, containers will help them in future.","comment_id":"165613","timestamp":"1629850140.0","upvote_count":"1"},{"timestamp":"1628766480.0","comment_id":"156356","poster":"RahulR","content":"A & E would be my choice.","upvote_count":"5"},{"content":"I would pick BC.\nB: Scalability both mentioned in the requirements of game backend platform and game analytics platform, whereas none of options except B could do this.\nC: Play essential support role for B.\nDrop ADE due to:\nA: This is not related to any requirements, even in game analytics platform requirements. Typically we will reduce the sample size, save important factors to customers, but not save as much as we can.\nD: I don't get how 'adopt a schema versioning tool' would 'reduce downtime'; not feel relevant. \nE: I picked B (going into container), so this one won't be as important as VM anymore. If the question insists we have to use VM then this is required.","timestamp":"1626832500.0","upvote_count":"4","comment_id":"139966","poster":"zanhsieh"},{"timestamp":"1625226600.0","content":"B+C\nkubernates to follow the user usage\njenkins and spinnaker to deploy new versions, patchs, etc\nthese are the most benefit of moving to cloud.\n\nfuture games will be new and data analytics could be useless","comment_id":"124976","upvote_count":"8","poster":"pupi08"},{"timestamp":"1624517100.0","comment_id":"118163","content":"Even though they want to use VMs, the question asks about \"solution for the future in order to take advantage of cloud\". I would say that C is a must.\n\nBut as per business /technical requirements for backend services,micro services design envisioned for GCP, that is B.\nAlso data analytics will be carried to understand users behavior to improve game plan, that is A.\n\nI would say two possible correct solutions are B,C and A,B.\nIn the exam I will go with B,C","poster":"mlantonis","upvote_count":"9"},{"timestamp":"1624406520.0","comment_id":"116914","poster":"syu31svc","content":"A & B definitely; in line with the solution concept stated:\n\ncapture streaming metrics, run intensive analytics, and take advantage of its autoscaling server environment and integrate with a managed NoSQL database","upvote_count":"1"},{"upvote_count":"5","poster":"ThiruK","timestamp":"1623156780.0","comment_id":"105222","content":"Prefer B&C as they want take advantage of cloud technology"},{"poster":"Rafaa","upvote_count":"4","timestamp":"1622402100.0","comment_id":"99000","comments":[{"content":"I will go with A,B. C mentions about Canary deployments, meaning some users will see a different version of the game. I dont think that is required.","comment_id":"104262","upvote_count":"4","poster":"Rafaa","timestamp":"1623036300.0"}],"content":"A should be there for sure, they mention they want to do 'Future Analysis' so it perfectly fits.\nNot sure between B and C. \nI don't think E is a good choice they want to take advantage of 'Cloud technology and improve in future'. E does not fit in that case for me at all."},{"upvote_count":"8","timestamp":"1622364540.0","content":"The two steps currently doing will make it easier of game backend services migration work to GCP. \nAs per business /technical requirements for backend services ,micro services design envisioned for GCP , that is B .\nAlso data analytics will be carried to understand users behavior to improve game plan \nThis requirement is covered in B\nso Answer should be A and B .","poster":"jayaen","comment_id":"98732"},{"timestamp":"1621189620.0","content":"It's about process improvement taking advantage of cloud technology, so I prefer B+C","poster":"Jack_in_Large","comment_id":"90096","upvote_count":"4"},{"poster":"anton_royce","upvote_count":"1","comments":[{"content":"Kubernetes is a Linux application when unmanaged.","comments":[{"timestamp":"1633195980.0","poster":"kimberjdaw","comment_id":"191761","content":"GKE, sure.","upvote_count":"1"}],"timestamp":"1633195740.0","poster":"kimberjdaw","comment_id":"191758","upvote_count":"1"},{"timestamp":"1619589720.0","comment_id":"80629","poster":"dummyemailforexam","content":"It says future.. cloud.. so A B","upvote_count":"7"}],"content":"C & E - It uses Linux, so should not be Kubernetes.","timestamp":"1617519780.0","comment_id":"70951"},{"poster":"ff2107","content":"I will trust Quizlet answer, it's C, E","upvote_count":"4","timestamp":"1616403780.0","comments":[{"timestamp":"1636679700.0","poster":"certificatores","upvote_count":"3","comment_id":"217621","comments":[{"upvote_count":"1","poster":"mum_lalitha0508","comment_id":"542229","timestamp":"1675758540.0","content":"very true trust the comment sections only for correct answers"}],"content":"quizlet gets answers from this website. so either this website's answer or quizlet's answers do no make any sense. only trust the comment sections from the real people"}],"comment_id":"66882"},{"poster":"[Removed]","comment_id":"57437","content":"I choose B D","timestamp":"1614646320.0","comments":[{"poster":"[Removed]","upvote_count":"1","content":"A B seems to be more appropriate","timestamp":"1615907160.0","comment_id":"64743"}],"upvote_count":"3"},{"timestamp":"1614578580.0","upvote_count":"1","poster":"dynahun","content":"A B or C E??","comment_id":"57093"},{"upvote_count":"6","content":"A+B is better","poster":"sssz","comment_id":"51084","timestamp":"1613444640.0"},{"upvote_count":"12","content":"B + C I think.","timestamp":"1613259360.0","poster":"ADVIT","comment_id":"50311"},{"poster":"sri007","upvote_count":"2","content":"Correct Answer C, E\n\nSet up a CI/CD pipeline using Jenkins and Spinnaker to automate canary deployments and improve development velocity.\n\nImplement a weekly rolling maintenance process for the Linux virtual machines so they can apply critical kernel patches and package updates and reduce the risk of 0-day vulnerabilities.","comments":[{"timestamp":"1611687300.0","upvote_count":"3","poster":"natpilot","comment_id":"43009","content":"canary deployment is embedded on gke rolling stategy; if customer use gke the container has been update during the build, while the worker in base of new k8s version update ( A , B is better)"},{"comment_id":"146786","poster":"AnshulVikramIkea","upvote_count":"1","timestamp":"1627584420.0","content":"for c , e cloud is not required."}],"comment_id":"40005","timestamp":"1610865660.0"}]},{"id":"6rymYabSdzxuhTfRtBAB","question_text":"For this question, refer to the Mountkirk Games case study. Mountkirk Games wants you to design a way to test the analytics platform's resilience to changes in mobile network latency. What should you do?","timestamp":"2020-01-17 07:43:00","unix_timestamp":1579243380,"question_images":[],"topic":"6","question_id":252,"url":"https://www.examtopics.com/discussions/google/view/12204-exam-professional-cloud-architect-topic-6-question-4/","answer_ET":"A","discussion":[{"comments":[{"content":"C is alright as well but just too specific to file upload","timestamp":"1677546540.0","comment_id":"653690","poster":"ShadowLord","upvote_count":"2"}],"content":"The answer is A. The question asks - test the analytics platform's resilience to changes in mobile network latency. \nOnly A adds latency to mobile network. \nC - adds delay at beginning of file processing. does not add delay/latency in mobile network.\nOne of the lines in the requirements for analytics: Process data that arrives late because of slow mobile networks","upvote_count":"38","timestamp":"1619509260.0","comment_id":"206943","poster":"a66030"},{"timestamp":"1594960980.0","comment_id":"40006","upvote_count":"28","content":"Correct Answer C\n\nAdd the ability to introduce a random amount of delay before beginning to process analytics files uploaded from mobile devices.","poster":"sri007","comments":[{"poster":"turbo8p","content":"I'm not quite sure how would you do testing at scale for option C.\n\nIt's likely that you need to test with your real users to perform testing at scale. But for Option A, you can control how many test clients you want to simulate.","upvote_count":"2","comment_id":"718006","timestamp":"1684066080.0"},{"poster":"Ani26","content":"There is nothing mentioned about uploading analytical files from mobile devices - on analytical layer we need to perform resiliency test on the latency changes..so A","upvote_count":"5","comments":[{"timestamp":"1613308380.0","upvote_count":"17","comment_id":"158037","content":"A is ok","poster":"tartar","comments":[{"poster":"lkjhgfdsa","content":"\"If you're using a service mesh like Istio to manage your app services, you can inject faults at the application layer instead of killing pods or machines, or you can inject corrupting packets at the TCP layer. You can introduce delays to simulate network latency or an overloaded upstream system. You can also introduce aborts, which mimic failures in upstream systems.\" - https://cloud.google.com/solutions/scalable-and-resilient-apps","timestamp":"1632594240.0","comment_id":"320535","upvote_count":"14"}]}],"timestamp":"1612867140.0","comment_id":"153473"},{"poster":"nitinz","content":"A is the answer","upvote_count":"5","timestamp":"1630803960.0","comment_id":"303879"}]},{"content":"Selected Answer: C\nBoth A and C doing similar things producing delays for consumer to injest data from producer, can we agree on that? The question doesn't mention which which environment to conduct the testing in, so we can't just assume it's monkey test to fail a service, can we agree on that too? I would do integration tests to introduce delays to test specifically the business logic in the app not k8s ability to provision a pod to replace failed one, I'll make my test focal to that point.","timestamp":"1718153880.0","upvote_count":"1","poster":"MahAli","comment_id":"1094044"},{"comment_id":"1086473","timestamp":"1717364640.0","content":"Selected Answer: A\nI would say A over C, as C is too specific . Latency injection can be achieved with istio.","upvote_count":"1","poster":"theBestStudent"},{"timestamp":"1716786000.0","content":"Selected Answer: C\nC is the option I feel as Resilience is like randomly switching off some instances of analytics platform instances across the workloads, making the data available with much delay etc. Though the option C is not complete answer, Others options seems not correct as a - injecting something is not so good in prod environment, b - does not check resilience, d - again disturbing the existing environment which is not resilience related.","poster":"thewalker","upvote_count":"1","comment_id":"1081265"},{"poster":"marcohol","upvote_count":"2","content":"GPT-4 says B\nI don't know but these questions are tricky and can lead to misinterpretation","timestamp":"1714024080.0","comment_id":"1053486"},{"upvote_count":"2","timestamp":"1713852300.0","comment_id":"1051478","poster":"muh21","content":"Selected Answer: B\nThe best way to test the analytics platform's resilience to changes in mobile network latency is to build a test client that can be run from a mobile phone emulator on a Compute Engine virtual machine, and run multiple copies in Google Cloud Platform regions all over the world to generate realistic traffic."},{"upvote_count":"1","poster":"BiddlyBdoyng","comment_id":"926795","content":"I think C\n\nI went for A think this was a K8 Istio platform but it's not so we'd need to do something special.\n\nMobile clients are uploading files and the question says to check reliability when there is delay in the upload. C seems to meet this requirement perfectly.\n\nB. I don't like as it will use the internet & not slow, flakey mobile signal\n\nD. Seems like madness. Just put a create timestamp in the file & compare the difference to arrive timestamp, why need an opt in? Also this isn't a test approach.","timestamp":"1702923660.0"},{"content":"Selected Answer: A\nA\n\nUse Istio","poster":"rr4444","comment_id":"839261","upvote_count":"1","timestamp":"1694716920.0"},{"upvote_count":"1","timestamp":"1694711040.0","poster":"BeCalm","comment_id":"839164","content":"Selected Answer: A\nA and C are both right but with no cost constraints, A is easier than C"},{"poster":"pepigeon","content":"A is most likely correct: Istio (which is now Anthos Service Mesh on GCP) is capable of injecting delays: https://istio.io/latest/docs/tasks/traffic-management/fault-injection/#injecting-an-http-delay-fault","timestamp":"1692626640.0","upvote_count":"1","comment_id":"816797"},{"upvote_count":"3","comment_id":"759833","poster":"omermahgoub","timestamp":"1687949580.0","content":"A. Deploy failure injection software to the game analytics platform that can inject additional latency to mobile client analytics traffic.\n\nIn order to test the analytics platform's resilience to changes in mobile network latency, the best approach would be to use failure injection software to intentionally introduce latency to the mobile client analytics traffic. This will allow Mountkirk Games to see how the analytics platform responds to changes in network latency and identify any potential issues or bottlenecks that may arise. This approach will also allow Mountkirk Games to test the analytics platform under realistic conditions, as it will be simulating the type of latency that may occur in the real world."},{"content":"Selected Answer: A\nA is the correct answer","upvote_count":"1","comment_id":"747924","timestamp":"1686986100.0","poster":"surajkrishnamurthy"},{"timestamp":"1686638760.0","poster":"gonlafer","content":"Selected Answer: C\nI vote for C.\nRandom means chaos which is a good practice to test resiliency.","comment_id":"743773","upvote_count":"1"},{"timestamp":"1683377700.0","upvote_count":"1","poster":"megumin","comment_id":"712382","content":"Selected Answer: A\nok for A"},{"poster":"Mahmoud_E","upvote_count":"1","comment_id":"700243","timestamp":"1682018640.0","content":"Selected Answer: A\nA seems right"},{"comment_id":"665992","timestamp":"1678535400.0","upvote_count":"1","poster":"Nirca","content":"Selected Answer: A\nA is ok to some extent."},{"comment_id":"652767","poster":"midgoo","comments":[{"comment_id":"653685","upvote_count":"1","comments":[{"timestamp":"1677546300.0","upvote_count":"1","poster":"ShadowLord","content":"Sorry B","comment_id":"653686"}],"content":"Question is on Mobile Network Latency between Mobile and GCP Endpoint ....\n- What would Istio do here ??/\n- Testing the latency is a better way ..... Emulator or Beta\nTo me Emulator makes more sense as this has to be done before Release","poster":"ShadowLord","timestamp":"1677546300.0"}],"timestamp":"1677549180.0","content":"Selected Answer: C\nC is how Istio does the delay test.\nA does not make sense in practice.","upvote_count":"2"},{"content":"Selected Answer: B\nQuestion is on Mobile Network Latency between Mobile and GCP Endpoint ....\nSo the answer should be testing problem of latency between Mobile and GCP Edge / Endpoints\nA. Is not fault injection on the platform , has nothing to do with Mobile Network Latency..\n- Testing the latency is a better way ..... Emulator or Beta\n- Beta version is too late on the process\n\nTo me Emulator makes more sense as this has to be done before Release","poster":"ShadowLord","timestamp":"1677546480.0","upvote_count":"2","comment_id":"653689"},{"upvote_count":"1","timestamp":"1674415920.0","poster":"Ric350","comment_id":"635304","content":"\"Deploy failure injection SOFTWARE to the game analytics platform\" - that doesn't make sense to me. This reads to me as you're installing additional software to game. Fault injection are tools GCP has to create rules for things such creating delay. See links below. I think it is C and A is to throw you off. At least that's how I read it. Frustrating bc is it truly testing our knowledge or testing how carefully we can read English and take a test? Think it's a terrible question. \nhttps://cloud.google.com/anthos/service-mesh\nhttps://istio.io/latest/docs/tasks/traffic-management/fault-injection/"},{"timestamp":"1668361380.0","content":"Selected Answer: A\nA as told by a66030","poster":"amxexam","upvote_count":"1","comment_id":"601228"},{"poster":"pddddd","timestamp":"1657573740.0","upvote_count":"2","comment_id":"521815","comments":[{"poster":"Nirca","upvote_count":"1","timestamp":"1678535340.0","comment_id":"665991","content":"Yet C is doing \"realistic traffic.\" -> and we must have the option to add latency."}],"content":"A - in prod, I think no go\nB - test setup and plan that makes sense.\nC - in prod again...\nD - what?"},{"comment_id":"512200","poster":"Pime13","timestamp":"1656502080.0","content":"Selected Answer: A\nfor me it's A","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: A\nAnswer : A","timestamp":"1656462600.0","comment_id":"511719","poster":"esnecho"},{"upvote_count":"1","comment_id":"499597","poster":"vincy2202","timestamp":"1654964640.0","content":"Selected Answer: A\nA is the correct answer"},{"timestamp":"1653613740.0","upvote_count":"2","comment_id":"487824","poster":"joe2211","content":"Selected Answer: A\nvote A"},{"poster":"MaxNRG","upvote_count":"2","timestamp":"1650785160.0","comment_id":"466855","content":"C\nIt is most reasonable option from implementation point of view and also it simulates real word case (random delay)"},{"timestamp":"1648947720.0","comment_id":"456313","upvote_count":"1","poster":"BrijMohan08","content":"IMO it's A"},{"upvote_count":"4","poster":"MamthaSJ","content":"Answer is A","timestamp":"1641580260.0","comment_id":"401076"},{"poster":"TotoroChina","comment_id":"395998","upvote_count":"9","timestamp":"1641050220.0","content":"Answer is A.\nThe difference between A & C is, A is for latency before metrics upload, while C is for latency before process.\nSince this is to test the \"analytics platform's resilience\" to changes in mobile network latency, it should refer to A."},{"upvote_count":"3","poster":"victory108","timestamp":"1637573340.0","content":"A. Deploy failure injection software to the game analytics platform that can inject additional latency to mobile client analytics traffic.","comment_id":"363485"},{"poster":"Beetroot_1","timestamp":"1634982720.0","comment_id":"341488","upvote_count":"3","content":"Not able to decide between A or C"},{"timestamp":"1634033100.0","content":"Answer is either A or C. But I choose C. The reason is because we cannot be responsible for mobile network latency; the word \"latency\" here is a red herring that will cause you to fixate wrongly. Also, option A means testing in production which is a no-no. Option C allows you to introduce a random delay on uploade files, but as far as your data pipeline is concerned, it could be caused by mobile latency or Google latency between data storage and the start of your pipeline, the end result is still the same: you're testing how your pipeline will react to changes in data arriving at various intervals.","poster":"triplicated_lines","upvote_count":"2","comment_id":"333850"},{"upvote_count":"2","content":"IMO - A is ok.\nC and D are not about testing \"resilience to changes in mobile network latency\".\nB is about testing overall workload but does not emulates \"random changes in mobile network latency\"","comment_id":"323212","timestamp":"1632900660.0","poster":"lynx256"},{"comment_id":"323205","timestamp":"1632900360.0","upvote_count":"2","poster":"lynx256","content":"IMO - A is ok"},{"timestamp":"1632293880.0","poster":"Skeeter","upvote_count":"3","comment_id":"316985","content":"Answer is A, the only option that injects latency to the network, C on the other hand adds a delay before processing data that has been uploaded, this is testing processing not the network!"},{"content":"C, according to the flow chart for choosing a load balancer: \nhttps://cloud.google.com/load-balancing/docs/choosing-load-balancer#flow_chart","timestamp":"1629116760.0","upvote_count":"1","poster":"ritsuki1227","comment_id":"291845"},{"poster":"Rightsaidfred","timestamp":"1628847720.0","comment_id":"289481","content":"Changes in Latency = Random Delay. Closest Answer to specified question is 'C'. 'A' too is a candidate but 'C' is stronger.","upvote_count":"1"},{"poster":"bnlcnd","comment_id":"280882","content":"Both A and C could work. C is easier to do. But, it only covers the latency after the payload reaches the server. How about the latency causing the payload reach the server partially or slowly? You want test the latency from end to end. So, A is the best answer.","upvote_count":"6","timestamp":"1627770480.0"},{"comments":[{"poster":"pawel_ski","timestamp":"1631607300.0","upvote_count":"1","content":"When you use external IP you go out of the GCP network. So you go the way: GCP Network - Public Internet - GCP Network. So in option B you check the real network latency. \nFor me B is the best option. \nOption A. You add a nice software to test the latency. But how you test it? When you add an extra latency all your clients will suffer. This is test on the production env. Mountkirk takes care of user experience and don’t want this (Executive Statement).\nOption B. You test user experience in real life. Only you must get out of the GCP Network – different VPC/project and don’t use Cloud Peering. \nOption C. Similar to A. Test on the prod env - affects clients. \nOption D. Similar to B. Would be even better then B, but we don’t want to affect user experience of our clients (Executive Statement) and you don’t control how many test applications run. Therefore I would go with B.","comment_id":"310445"}],"timestamp":"1626988080.0","upvote_count":"4","content":"Option A, Correct answer!.\nOption B, you’re testing (simulating) google cloud network latency and not the CLIENTS mobile network latency!.\nOption C, introducing a random mount of delay BEFORE beginning to process analytics files, is not comprehensively enough as you’re ignoring mid-process files latency!.\nOption D, what if no one or very few players opt-in in the beta program!!","poster":"Babelon","comment_id":"274079"},{"comment_id":"246511","content":"I think it could be A or D","timestamp":"1623926520.0","upvote_count":"2","poster":"okixavi","comments":[{"comment_id":"246513","poster":"okixavi","content":"Sorry, B or D","timestamp":"1623926580.0","upvote_count":"1"}]},{"comments":[{"content":"After some thoughts, C is more realistic. Everything you would do with B, will only end up adding a random latency in uploading phase. C is also doing it directly.\nC is OK","poster":"ybe_gcp_cert","timestamp":"1626766500.0","upvote_count":"2","comment_id":"271856"}],"poster":"ybe_gcp_cert","upvote_count":"3","timestamp":"1623870600.0","comment_id":"245973","content":"The only answer mentioning Test is B. \nNot C : Why add an ability to your product just to prove your solution eventually resilient. Testing resiliency should not be part of the product\nNot A for same reason as C.\n\nD depends on opt-in, you will be waiting for use to opt in, so not realistic for test resilience.\n\nThe only missing point in B is mobile network, in B, VM are on GCP network, but don't forget that mobile emulator emulate network also.\n\nMy decision is based on test. Which solution test resiliency without modifying the game analytics platform solution.\n\nVery subtle question !!\n\nI would go with B."},{"content":"It is A. Reference - https://cloud.google.com/solutions/scalable-and-resilient-apps#test_your_resilience","comment_id":"238681","timestamp":"1623179520.0","comments":[{"poster":"mgm7","upvote_count":"1","timestamp":"1654614600.0","comment_id":"496205","content":"Thx for the reference. I was more or less convinced before, but it is good seeing a reference. C does not seem correct the way it is written since clearly it isn't an issue of when a completely uploaded file is read."}],"upvote_count":"6","poster":"rish01"},{"upvote_count":"1","timestamp":"1622972700.0","poster":"JCGO","content":"C for sure. Other questions are related to something that will affect user experience. Are you serious to make tests on live users ?","comment_id":"236390"},{"timestamp":"1620877020.0","content":"Answer is C\n\nTo simulate production traffic, you should introduce a random amount of delay before beginning to process analytics files. This random delay represents the delay caused by slow mobile networks.","comment_id":"218289","poster":"hems4all","upvote_count":"3"},{"upvote_count":"1","poster":"Lakshmiy","timestamp":"1619668740.0","comment_id":"208291","content":"B seems to be reliable as they are simulating the traffic across regions"},{"upvote_count":"6","poster":"AdityaGupta","timestamp":"1619624940.0","content":"Correct answer is A\nA-> We want to test the resilience of analytics due to latency in mobile network.\nB-> We are not conducting a stress test.\nC-> Introducing the delay after files are uploaded from mobile network, won't help in objective.\nD-> Obviously NO.","comment_id":"207995"},{"poster":"LoganIsh","upvote_count":"1","content":"C is a good choice..","comment_id":"206199","timestamp":"1619428020.0"},{"content":"correct answer is C.","upvote_count":"1","poster":"akhadar2001","comment_id":"192809","timestamp":"1617528480.0"},{"content":"Everyone does the hack in C, but D is the right way.","timestamp":"1617385800.0","comment_id":"191768","upvote_count":"1","poster":"kimberjdaw"},{"upvote_count":"1","poster":"AshokC","comment_id":"181803","content":"Answer: C","timestamp":"1616092680.0"},{"content":"C is correct. We need to generate Delay to measure system behavior on latency","comment_id":"169220","poster":"Kabiliravi","upvote_count":"1","timestamp":"1614520560.0"},{"comment_id":"165614","content":"I think A is a better choice here, because it will ensure resiliency and latency checks, as per requirements.","upvote_count":"3","timestamp":"1614219180.0","poster":"wiqi"},{"poster":"Musk","upvote_count":"9","comment_id":"127220","timestamp":"1609888140.0","content":"I prefer A"},{"timestamp":"1608907920.0","comment_id":"119449","upvote_count":"3","comments":[{"upvote_count":"1","content":"The question did not ask for checks on real scenario. The ask is for \"reliability\" of the analytics. So having some randomness is one way to test reliability.","timestamp":"1616825400.0","poster":"VedaSW","comment_id":"188097"},{"comment_id":"122805","timestamp":"1609256280.0","upvote_count":"2","content":"What if nobody opts-in for beta? Thats why C","poster":"definepi314"}],"content":"Why not D ,it checks the real scenario","poster":"kaush"},{"poster":"gfhbox0083","timestamp":"1607854140.0","content":"C, for sure.\nAdd the ability to introduce a random amount of delay before beginning to process analytics files uploaded from mobile devices.","comment_id":"109278","upvote_count":"2"},{"poster":"rehma017","content":"C - originally I thought it was B, but we are specifically checking API stability for latency, not load.","timestamp":"1607535540.0","comment_id":"106090","upvote_count":"3"},{"comment_id":"103946","timestamp":"1607278380.0","poster":"Ziegler","content":"C is the correct answer for me","upvote_count":"4"},{"poster":"AD2AD4","timestamp":"1606578360.0","comment_id":"97598","content":"Final Decision to go with Option C","upvote_count":"2"},{"poster":"Shabje","content":"B seems to be a more reliable manner to simulate network latency. C seems to be introducing a random delay only at the start and not mid-process, which does not test resiliency efficiently.","timestamp":"1604862000.0","comments":[{"timestamp":"1608908040.0","content":"The traffic wont go out of google network hence there is no way to check random mobile network latency thats why B is incorrect","comment_id":"119450","poster":"kaush","upvote_count":"2"}],"comment_id":"85786","upvote_count":"1"}],"choices":{"A":"Deploy failure injection software to the game analytics platform that can inject additional latency to mobile client analytics traffic.","C":"Add the ability to introduce a random amount of delay before beginning to process analytics files uploaded from mobile devices.","B":"Build a test client that can be run from a mobile phone emulator on a Compute Engine virtual machine, and run multiple copies in Google Cloud Platform regions all over the world to generate realistic traffic.","D":"Create an opt-in beta of the game that runs on players' mobile devices and collects response times from analytics endpoints running in Google Cloud Platform regions all over the world."},"answer_images":[],"answer":"A","answers_community":["A (59%)","C (23%)","B (18%)"],"answer_description":"","exam_id":4,"isMC":true},{"id":"6WUcdkzRdp9izrOGzlqX","choices":{"D":"Use Cloud Bigtable for time series data, use Cloud Spanner for transactional data, and use BigQuery for historical data queries.","A":"Use Cloud SQL for time series data, and use Cloud Bigtable for historical data queries.","C":"Use Cloud Bigtable to replace MySQL, and use BigQuery for historical data queries.","B":"Use Cloud SQL to replace MySQL, and use Cloud Spanner for historical data queries."},"question_images":[],"timestamp":"2019-10-26 11:41:00","topic":"6","answers_community":["D (86%)","14%"],"unix_timestamp":1572082860,"answer_images":[],"answer":"D","answer_ET":"D","exam_id":4,"discussion":[{"upvote_count":"66","poster":"misho","content":"For the people who say it's C in Linux Academy, did you see the Technical requirements there? The old Technical Requirements have the line \"Connect to a managed NoSQL database service\" but in the Technical Requirements in Google official site and in this question the line is replaced if the following 2 lines \"Connect to a transactional database service to manage user profiles and game state\nStore game activity in a timeseries database service for future analysis\". And for them definitely D is the answer!","comment_id":"102199","timestamp":"1591255620.0"},{"upvote_count":"40","comment_id":"40009","poster":"sri007","timestamp":"1579243500.0","comments":[{"comment_id":"208000","poster":"AdityaGupta","timestamp":"1603907640.0","upvote_count":"8","content":"I agree with above explanation and choice"}],"content":"Correct Answer D\n\nUse Cloud Bigtable for time series data, use Cloud Spanner for transactional data, and use BigQuery for historical data queries.\n\nStoring time-series data in Cloud Bigtable is a natural fit, Cloud Spanner scales horizontally and serves data with low latency while maintaining transactional consistency and industry-leading 99.999% (five 9s) availability - 10x less downtime than four nines (<5 minutes per year). Cloud Spanner helps future-proof your database backend. After you load your data into BigQuery, you can query the data in your tables. BigQuery supports two types of queries: Interactive queries, Batch queries"},{"timestamp":"1718546820.0","upvote_count":"1","poster":"ms.umes21","content":"Selected Answer: D\nDDDDDDDDDD","comment_id":"1231394"},{"poster":"MahAli","timestamp":"1702350120.0","content":"Selected Answer: D\nThought it's C then I reviewed the requirements there is transactional database for user profiles","comment_id":"1094047","upvote_count":"1"},{"content":"Selected Answer: C\nI think it should be C. I can't justify using Spanner for transactional data. BigTable supports single-row transactions and can easily handle transactional and time series data at lower cost.","timestamp":"1693450200.0","upvote_count":"2","poster":"devinss","comment_id":"994670"},{"timestamp":"1672232460.0","comment_id":"759849","content":"D. Use Cloud Bigtable for time series data, use Cloud Spanner for transactional data, and use BigQuery for historical data queries.\n\nBased on the technical requirements provided, the best approach for analyzing and defining the technical architecture for the database workloads for Mountkirk Games would be to use Cloud Bigtable for time series data, Cloud Spanner for transactional data, and BigQuery for historical data queries.","upvote_count":"1","poster":"omermahgoub"},{"timestamp":"1667746620.0","upvote_count":"1","comment_id":"712385","content":"Selected Answer: D\nok for D","poster":"megumin"},{"poster":"AzureDP900","upvote_count":"2","content":"D is right","timestamp":"1665889920.0","comment_id":"695871"},{"content":"Selected Answer: D\nD - GCP's classics best practice for tests","poster":"Nirca","timestamp":"1662890100.0","comment_id":"665997","upvote_count":"1"},{"content":"Selected Answer: D\nDDDDD it is","poster":"Nirca","timestamp":"1658655900.0","comment_id":"635952","upvote_count":"1"},{"timestamp":"1641789780.0","poster":"OrangeTiger","upvote_count":"1","content":"C is worong.Bigtable is NOSQL.Bigtable cant be alternative for MySQL.\nI think D is correct.\nBiquery most fit historical data queries.","comment_id":"520641"},{"poster":"zxcv1234","upvote_count":"1","timestamp":"1640473980.0","content":"Selected Answer: D\nC cannot be the answer","comment_id":"509330"},{"comment_id":"504294","timestamp":"1639840980.0","poster":"ABO_Doma","upvote_count":"1","content":"Selected Answer: D\nD Correct Answer D"},{"comment_id":"503939","poster":"ABO_Doma","upvote_count":"1","content":"Selected Answer: D\nD is the Answer","timestamp":"1639784880.0"},{"poster":"vincy2202","timestamp":"1639247220.0","content":"Selected Answer: D\nD is the correct answer","comment_id":"499599","upvote_count":"1"},{"comment_id":"493806","upvote_count":"1","poster":"pakilodi","content":"Selected Answer: D\nVote D","timestamp":"1638636180.0"},{"poster":"joe2211","timestamp":"1637982540.0","comment_id":"487825","upvote_count":"2","content":"Selected Answer: D\nvote D"},{"upvote_count":"1","comment_id":"456312","poster":"BrijMohan08","timestamp":"1633222680.0","content":"The answer is D"},{"content":"I agree with D. There r 3 db needed. \n1. Analytics - currently on MySQL\n2. Nosql - this is a future requirement for the new game. This referenced in solution section\n3. User profile - managed transactional db for user profiles. This reference in tech section.\nUser profiles can be addressed with scanner. The below article describes this use case\nhttps://cloud.google.com/architecture/best-practices-cloud-spanner-gaming-database","comment_id":"437740","poster":"MikeB19","upvote_count":"4","timestamp":"1630571760.0"},{"content":"D is the answer","upvote_count":"2","poster":"rm_2495","comment_id":"415163","timestamp":"1627362900.0"},{"timestamp":"1625675580.0","comment_id":"401078","content":"Answer is D","poster":"MamthaSJ","upvote_count":"4"},{"comment_id":"373704","poster":"SuperNest","timestamp":"1622734800.0","content":"The answer is D, C completely ignores the case that they have to connect to a transactional database.","upvote_count":"2"},{"content":"D. Use Cloud Bigtable for time series data, use Cloud Spanner for transactional data, and use BigQuery for historical data queries.","poster":"victory108","timestamp":"1621668360.0","comment_id":"363484","upvote_count":"4"},{"content":"Answer is D","upvote_count":"1","comment_id":"325810","timestamp":"1617280380.0","poster":"Ausias18"},{"content":"D is ok","upvote_count":"1","comment_id":"323171","poster":"lynx256","timestamp":"1617000840.0"},{"content":"D is the correct Answer.","comment_id":"319173","upvote_count":"1","poster":"padamdha","timestamp":"1616594640.0"},{"content":"D is correct because it matches the requirements. The previous case study questions do say that NoSQL is the target. But this question somehow changed that requirement. :)","poster":"bnlcnd","comment_id":"280886","upvote_count":"3","timestamp":"1612139700.0"},{"content":"I think D should be the answer. The gaming should be scalable and global platform hence Spanner and Bigtable fits the requirement with BQ for analysis.","poster":"Arimaverick","upvote_count":"3","comment_id":"261907","timestamp":"1610029920.0"},{"upvote_count":"4","comment_id":"255437","poster":"st003","content":"The answer is D:\nBigtable for time series data - undoubted\nSpanner for transactional data meet the requirment :Global foot print \nBigQuery for histrorical - undoubted","timestamp":"1609314300.0"},{"poster":"hems4all","timestamp":"1605246060.0","upvote_count":"4","comment_id":"218291","content":"Answer is D:\n\n1. For time-series data, use Cloud BigTable.\n\n2. For historical data queries, use Cloud BigQuery.\n\n3. For transactional data, use Cloud Spanner. is the right answer.\n\nCloud Bigtable is an excellent choice for time series data.\n\nCloud Spanner supports transactions, is a managed service, and can be used to manage user profiles and game state - \"Connect to a transactional database service to manage user profiles and game state.\"\n\nFinally, BigQuery is an excellent choice for historical data queries as it supports petabyte-scale data. \"Allow queries to access at least 10 TB of historical data\"."},{"timestamp":"1600447260.0","upvote_count":"1","poster":"AshokC","content":"D is correct","comment_id":"181804"},{"timestamp":"1597818480.0","content":"@misho explained very well why it's D) and not C) (I missed it too!)\nIn case any doubt still persists:\nhttps://cloud.google.com/solutions/best-practices-cloud-spanner-gaming-database","comment_id":"161279","poster":"jespinosar","upvote_count":"3"},{"comment_id":"148170","content":"With the given option D is best answer i think but i am not sure why Cloud Datastore was not considered in this which i feel is better choice as compare to Cloud spanner for user profile and game state (NOSQL + transactional )","upvote_count":"2","poster":"gcp_cert_2020","timestamp":"1596212880.0","comments":[{"poster":"Kabiliravi","upvote_count":"1","timestamp":"1598702340.0","content":"Cloud Datastore is not mentioned because Game application has high loads and need high volume storage.","comment_id":"169223"}]},{"comments":[{"comment_id":"284401","poster":"Rightsaidfred","content":"Agreed, C & D Are the best 2, however we need to consider Bigtable too for time sensitivity, and latency reduction, hence D the best choice.","upvote_count":"1","timestamp":"1612558200.0"}],"comment_id":"118177","poster":"mlantonis","timestamp":"1592982300.0","content":"Guys do not be confused. The technical requirement states \"Connect to a transactional database service to manage user profiles and game state.\", so we cannot go through solution C.\n\nD is the best solution.\nCloud Bigtable is ideal for time series data, Cloud Spanner is for transactional data (I could also use Cloud SQL, but maybe they wan the global features) and BigQuery is ideal for historical data queries.","upvote_count":"6"},{"content":"Ans C is correct, it is easy cheap solution","upvote_count":"2","timestamp":"1592646000.0","comment_id":"114654","poster":"Bando"},{"timestamp":"1592433240.0","comment_id":"112771","upvote_count":"1","poster":"desertlotus1211","content":"Answer is D:\nhttps://cloud.google.com/spanner\n\nTransactional Data uses Cloud Spanner.."},{"timestamp":"1592280300.0","content":"C is correct ans.","poster":"hbansal077","upvote_count":"3","comment_id":"111289"},{"timestamp":"1592115300.0","content":"Cloud Spanner is meant for SQL/relational database so answer is C.","upvote_count":"1","poster":"syu31svc","comment_id":"109914"},{"content":"D, for sure.\nBigTable for Time Series Data, as per below doc\nhttps://cloud.google.com/bigtable/docs/schema-design-time-series","poster":"gfhbox0083","timestamp":"1591853340.0","upvote_count":"1","comment_id":"107442"},{"upvote_count":"5","content":"D is the correct answer for me based on this;\nAdditionally, our current technology stack cannot provide the scale we need, so we want to replace MySQL and move to an environment that provides autoscaling, low latency load balancing, and frees us up from managing physical servers.","poster":"Ziegler","comment_id":"103961","timestamp":"1591460760.0"},{"comment_id":"97600","timestamp":"1590673740.0","content":"Final Decision to go with Option C","poster":"AD2AD4","upvote_count":"3","comments":[{"poster":"theyat","content":"Cannot be C since BigTable is ideal for Time-series. Should be D.","comment_id":"217129","upvote_count":"2","timestamp":"1605079920.0"}]},{"comment_id":"90246","content":"It looks like this was taken from Linux Academy practice tests. The answer is C.","poster":"aselunar","upvote_count":"2","timestamp":"1589678700.0"},{"timestamp":"1589519640.0","comment_id":"89306","content":"Between C and D... i go for D as technical requirement stated this: \"Connect to a transactional database service to manage user profiles and game state.\"","comments":[{"timestamp":"1589519700.0","upvote_count":"2","comment_id":"89307","poster":"skywalker","content":"As in C... both Bigtable and BigQuery are not Transactional DB"}],"upvote_count":"2","poster":"skywalker"},{"upvote_count":"3","content":"Wouldn't Spanner be very costly option?","comment_id":"76012","timestamp":"1587199980.0","poster":"PRC"},{"comment_id":"68788","timestamp":"1585379580.0","upvote_count":"2","poster":"nadarajan","content":"Ideal option would be bigtable, cloud data store and bigquery. But considering we need to store transactional data for game state , best choice is option D"},{"poster":"Smart","comments":[{"content":"which one is correct?","timestamp":"1582903680.0","upvote_count":"1","poster":"dynahun","comment_id":"56535"}],"timestamp":"1582685100.0","comment_id":"55299","content":"Need Transactional DB...not NoSQL. Also, Additionally, our current technology stack cannot provide the scale we need, so we want to replace MySQL and move to an environment that provides autoscaling, low latency load balancing, and frees us up from managing physical servers. CloudSpanner offers that.","upvote_count":"1"},{"comment_id":"48433","content":"Answer is \"C\" same question on Linux Academy.","comments":[{"poster":"okixavi","comment_id":"246516","upvote_count":"3","content":"Then I think Linux Academy is wrong","timestamp":"1608209220.0"}],"upvote_count":"6","poster":"coffeecupz","timestamp":"1581275220.0"},{"comment_id":"45934","upvote_count":"1","poster":"Shadytharwat","timestamp":"1580675400.0","content":"Answer is C"},{"comments":[{"poster":"Ayzen","timestamp":"1587970020.0","comment_id":"80193","upvote_count":"4","content":"From requirements: \"Connect to a transactional database service to manage user profiles and game state.\" I don't think Bigtable supports transactions (row-level transactions is not enough here)."}],"timestamp":"1580529960.0","content":"Considering requirement, they want to migrate to NoSQL db and so answer is C.","poster":"d__p","upvote_count":"2","comment_id":"45481"},{"upvote_count":"8","timestamp":"1573750560.0","comments":[{"timestamp":"1574161500.0","upvote_count":"5","content":"But bigtable is NOSQL and MySQL is transactional, I think it's D","poster":"chiar","comments":[{"upvote_count":"2","content":"Yep, also requirements has this: \"Connect to a transactional database service to manage user profiles and game state.\" Transactions are not supported by Bigtable.","poster":"Ayzen","timestamp":"1587970140.0","comment_id":"80194"}],"comment_id":"22675"}],"content":"Answer is C","poster":"JoeShmoe","comment_id":"21582"},{"comment_id":"17529","content":"It's D. Spanner is not necessary, it can be covered by Bigtable","poster":"jcmoranp","timestamp":"1572082860.0","upvote_count":"13","comments":[{"timestamp":"1593090720.0","poster":"kaush","comment_id":"119471","content":"wrong as bigtable is not transactional database ,D is correct","upvote_count":"3","comments":[{"timestamp":"1597124100.0","upvote_count":"7","comment_id":"155117","content":"D is ok","comments":[{"content":"the best suited database for mobile gaming platform with transictional behaviour is cloud datastore but according to option D is ok","upvote_count":"1","poster":"bjuneja","comment_id":"233113","timestamp":"1606922400.0"}],"poster":"tartar"}]},{"comment_id":"303881","upvote_count":"2","timestamp":"1614913740.0","content":"it is D","poster":"nitinz"}]}],"isMC":true,"url":"https://www.examtopics.com/discussions/google/view/7236-exam-professional-cloud-architect-topic-6-question-5/","question_id":253,"question_text":"For this question, refer to the Mountkirk Games case study. You need to analyze and define the technical architecture for the database workloads for your company, Mountkirk Games. Considering the business and technical requirements, what should you do?","answer_description":""},{"id":"41kul5LYKquCetoHNQtP","url":"https://www.examtopics.com/discussions/google/view/7237-exam-professional-cloud-architect-topic-6-question-6/","answer_ET":"A","answer_description":"","question_images":[],"topic":"6","answer_images":[],"answer":"A","choices":{"B":"Cloud Spanner","C":"BigQuery","A":"Cloud Bigtable","D":"Cloud Datastore"},"timestamp":"2019-10-26 11:42:00","exam_id":4,"unix_timestamp":1572082920,"discussion":[{"poster":"Eroc","comment_id":"18188","upvote_count":"27","comments":[{"content":"It is not clear, read technical requirements: \"Store game activity logs in structured files for future analysis.\" so I think that D is a good option","poster":"zbyszekz","comment_id":"448093","timestamp":"1647776820.0","upvote_count":"1"}],"timestamp":"1588166220.0","content":"@jcmoranp , that is incorrect.. https://cloud.google.com/bigtable/docs/schema-design-time-series it's A"},{"upvote_count":"19","content":"Correct Answer A\n\nCloud Bigtable\n\nStoring time series data in Cloud Bigtable https://cloud.google.com/bigtable/docs/schema-design-time-series","comment_id":"40010","poster":"sri007","timestamp":"1594961160.0"},{"upvote_count":"1","poster":"salvo007","timestamp":"1721817180.0","comment_id":"1130589","content":"Big Query. in the case study, interactions with users are directly with GKE. GKE push events on Pub/Sub and then Dataflow take events and go to BQ. Activity from Stackdriver Logging to Cloud Storage to Dataflow to BQ."},{"upvote_count":"2","timestamp":"1702819980.0","comment_id":"925928","content":"Selected Answer: A\nGoogle Bigtable is a fully managed, scalable NoSQL database service for large analytical and operational workloads.","poster":"anirban7172"},{"timestamp":"1683378060.0","content":"Selected Answer: A\nok for A","comment_id":"712389","poster":"megumin","upvote_count":"1"},{"timestamp":"1681614840.0","poster":"AzureDP900","content":"A can capture time series data","upvote_count":"1","comment_id":"695873"},{"poster":"jabrrJ68w02ond1","timestamp":"1678457340.0","comment_id":"665384","content":"Selected Answer: A\nThe key word is \"time series\" which ultimately leads to Bigtable. It is also used for collecting data from IoT devices.","upvote_count":"4"},{"upvote_count":"1","content":"as per ACG its C. BigQuery","timestamp":"1657682280.0","comment_id":"522642","poster":"burner_1984"},{"poster":"vincy2202","timestamp":"1654964400.0","upvote_count":"1","comment_id":"499596","content":"Selected Answer: A\nA is the correct answer"},{"content":"Selected Answer: A\nvote A","upvote_count":"2","timestamp":"1653627180.0","poster":"joe2211","comment_id":"487901"},{"poster":"Rzla","comment_id":"448368","upvote_count":"4","content":"Answer is A BigTable. Thats the best solution to process and store the data, BiqQuery can be used to analyse the data. Big Query not a suitable target for time series.","timestamp":"1647805620.0"},{"comment_id":"401079","upvote_count":"4","content":"Answer is A","timestamp":"1641580440.0","poster":"MamthaSJ"},{"timestamp":"1637573040.0","content":"A. Cloud Bigtable","comment_id":"363483","upvote_count":"4","poster":"victory108"},{"comment_id":"342799","upvote_count":"2","timestamp":"1635189000.0","poster":"gosi","content":"C - BigQuery\n\nBigTable is Wrong: BigTable is timeseries with \"low latency\" and they didnt mention anything about low-latency. They did mention about future analysis so BQ is best.\n\nDataStore is wrong Choice: DataStore is good for transactional data e.g. saving and updating game state as it chnages. In the question they are talking about game activity which is a serious on insert only data based on time."},{"content":"Google says we can store time series vehicle data in Bigtable which can later be used for analytical processing using BigQuery.\nhttps://cloud.google.com/architecture/designing-connected-vehicle-platform#data_ingestion\nEven though it says vehicle data and the question is for game data we eventually are storing time series type of data so I think this link is relevant.\nBased on Google explanation, I would choose A","poster":"Koushick","timestamp":"1634475420.0","comment_id":"337592","upvote_count":"2"},{"content":"Answer is A","timestamp":"1633091580.0","upvote_count":"1","comment_id":"325811","poster":"Ausias18"},{"upvote_count":"2","comment_id":"323138","content":"A is ok","timestamp":"1632894480.0","poster":"lynx256"},{"timestamp":"1632139320.0","content":"Technical req:\n\"Connect to a transactional database service to manage user profiles and game state.\"\nBigtable is not trasactional. Datastore is trasactional. So D.","comment_id":"315668","poster":"pawel_ski","upvote_count":"2","comments":[]},{"content":"A all the way!","comment_id":"284402","upvote_count":"2","timestamp":"1628189640.0","poster":"Rightsaidfred"},{"upvote_count":"1","content":"For time series data Cloud Bigtable is right choice. But here requirement is for analytics. So cloud Big query is apt solution. I have checked the proposed solution in Courseera and Learn GCP with Mahesh (Youtube). As per me ans is Big Query. Option C","timestamp":"1625901600.0","poster":"babup","comment_id":"263764"},{"content":"As per Google Documentation for Game state Datastore will be the choice. So answer should be D.","comment_id":"261909","upvote_count":"3","poster":"Arimaverick","timestamp":"1625661360.0"},{"timestamp":"1620879540.0","content":"Correct Answer is A\n\nCloud Bigtable. is the right answer.\n\nGoogle Bigtable is a fully managed, scalable NoSQL database service for large analytical and operational workloads. With Bigtable, you can ingest and analyze large volumes of time series data from sensors in real-time.\n\nRef: https://cloud.google.com/Bigtable","upvote_count":"3","comment_id":"218302","poster":"hems4all"},{"poster":"nimso","comment_id":"210374","timestamp":"1619858100.0","content":"I go with C Bigqerry because the say they want to store the data for \"future analysis\". \nOtherwhise for user profile and stats Datastore is great, but in this case i would go with C","upvote_count":"4"},{"upvote_count":"2","comments":[{"timestamp":"1620481920.0","upvote_count":"1","content":"But it's not for analytics and the question asks about that","poster":"francisco_guerra","comment_id":"215348"}],"poster":"AdityaGupta","comment_id":"208049","content":"Correct Answer is D:\n\nDataStore (now Firestore) – Best suited for game activities (unstructured data), time-series data, native support for mobile SDK and it is a fully managed service (one of the Tech Req.)","timestamp":"1619629980.0"},{"poster":"LoganIsh","upvote_count":"2","timestamp":"1618400220.0","comment_id":"199743","content":"As per udemy practice exam the answer is D, Datastore to store the gaming state"},{"upvote_count":"2","timestamp":"1617637680.0","comment_id":"193639","poster":"hiasad","content":"It is D. Game State and User profiles is a usecase for Cloud DataStore. Dont gt mixed up with the time series mentioned for Analytics Platform."},{"content":"Cloud Bigtable is a scalable, wide-column database designed\nfor low-latency writes, making it a good choice for time-series data. Bigquery is incorrect because BigQuery is an analytic database not designed for the high volume of\nlow-latency writes that will need to be supported.","comment_id":"187244","poster":"akhadar2001","upvote_count":"3","timestamp":"1616702400.0"},{"content":"Agreeing with C. Timeseries+Analytics -- BigQuery \nA may be right in case just time series.","timestamp":"1616093880.0","comment_id":"181824","upvote_count":"3","poster":"AshokC"},{"timestamp":"1615439160.0","content":"Correct Answer is (A): \n\nTime series and Cloud Bigtable\nStoring time-series data in Cloud Bigtable is a natural fit. Cloud Bigtable stores data as unstructured columns in rows; each row has a row key, and row keys are sorted lexicographically.\n\nThere are two commonly used ways to retrieve data from Cloud Bigtable:\n\nYou can get a single row by specifying the row key.\nYou can get multiple rows by specifying a range of row keys.\n\nhttps://cloud.google.com/bigtable/docs/schema-design-time-series#time-series-cloud-bigtable","upvote_count":"3","poster":"ESP_SAP","comment_id":"177432"},{"comments":[{"comment_id":"193278","upvote_count":"2","timestamp":"1617588900.0","poster":"Harshal_1_2","content":"Grant Moyle :P"}],"content":"Answer is C: Store game activity in a timeseries database service for future analysis\n BigQuery (for aggreation/all player analytics)\n BigTable is NOT good for aggregation - it’s GREAT for individual and range of row retrieval\n Looking at a single-players activities - NOT ALL Player Activity\n\nBigTable is WIDE-COLUMN but ONLY ONE KEY / ONE INDEX - doesn’t support multiple indexes - because the data is STORED ON THE DISK BASED ON THE KEY/INDEX","poster":"Ani26","timestamp":"1612867920.0","comment_id":"153483","upvote_count":"2"},{"content":"Its C : Bigtable is not a global service, and the question ask for game 'activity' not game 'state'","comments":[{"comment_id":"145632","poster":"AmazonAu","timestamp":"1611836400.0","upvote_count":"2","content":"https://cloud.google.com/blog/products/databases/go-global-with-cloud-bigtable"}],"timestamp":"1610863200.0","upvote_count":"4","comment_id":"136881","poster":"Begum"},{"content":"A for sure","comment_id":"131958","poster":"RM07","upvote_count":"1","timestamp":"1610360400.0"},{"poster":"mlantonis","comment_id":"118182","content":"Even though per requirements, user profile and game state fits perfectly with Cloud Datastore. Then question added another point time-series data. With time-series data always think of Bigtable.\n\nA is the correct answer.","timestamp":"1608800880.0","upvote_count":"1"},{"poster":"Giuspe","comment_id":"112475","upvote_count":"1","content":"A is teh correct answer, Bigtable is used for storing game activity and it is a time series database","timestamp":"1608221160.0"},{"comment_id":"103965","poster":"Ziegler","timestamp":"1607279400.0","content":"A is the correct answer","upvote_count":"2"},{"timestamp":"1607151660.0","content":"A, for sure.\nPlease check both google doc \nhttps://cloud.google.com/blog/products/databases/getting-started-with-time-series-trend-predictions-using-gcp\nhttps://cloud.google.com/bigtable/","comment_id":"102899","poster":"gfhbox0083","upvote_count":"2","comments":[{"poster":"gfhbox0083","timestamp":"1607671740.0","comment_id":"107445","upvote_count":"2","content":"BigTable for Time Series Data, as per below doc\nhttps://cloud.google.com/bigtable/docs/schema-design-time-series"}]},{"comment_id":"100218","timestamp":"1606852440.0","comments":[{"comment_id":"342803","upvote_count":"1","content":"The question clearly ask for \"technical requirement\" and not \"business requirement\". As an architect, in real world, you will offcouse keep the business requirement in mind. Even if you include business requirement of \"low latency\", what they mean is the game performance should be low latency and not storing an activity data. When you dsign your ppeline for storing activity data, your game app will drop game activities to a pubsub and wont connect to BQ directly so you can still maintain a very low latency to the game performance and full fill business requirment. How come storing activity data in low latency Database(BT) will help business, you cant analyse. You will have to then create another pipeline to dump the activity to BQ anyways.","poster":"gosi","timestamp":"1635189480.0"}],"upvote_count":"6","content":"For time series data and analytics purpose we have 2 Options i.e Bigquery and BigTable\nif we want less latency we need to choose Bigtable over Bigquery\nif we consider the Business requirement point (low latency) \nand Bigtable is more suitable for continues or frequent Read/Write operations\nBigquery is more suitable in situations like when we have collected the data and need to do scan or learn about it, like in the previous question we are using Bigquery for Historical data\nI think we need to choose Bigtable (A)","poster":"kiran28"},{"upvote_count":"2","content":"Final Decision is to go with Option A.","timestamp":"1606652940.0","poster":"AD2AD4","comment_id":"98163"},{"timestamp":"1605963060.0","comment_id":"93332","upvote_count":"2","content":"It should be C Big Query. check this : https://www.coursera.org/learn/preparing-cloud-professional-cloud-architect-exam/lecture/ZUaYI/mountkirk-games-sample-solution","poster":"amralieg"},{"comment_id":"63805","poster":"Rajussm","upvote_count":"2","timestamp":"1600069860.0","content":"Technical Requirements -\nStore game activity in a timeseries database service for future analysis.\nMy bad \nAns must be A. Bigtable for storing time-series database."},{"comment_id":"63802","upvote_count":"3","timestamp":"1600069500.0","poster":"Rajussm","content":"Technical Requirements -\nConnect to a transactional database service to manage user profiles and game state.\n\nfor user profile and game state Cloud Datastore is perfect fit. \n\nBut question added another point time-series data. \n\nover all they are asking for the case study solution \nans. D"},{"poster":"rockstar9622","comment_id":"38608","comments":[{"poster":"bharath999","upvote_count":"3","timestamp":"1596734760.0","content":"why not A ? time series","comment_id":"47448"}],"timestamp":"1594662540.0","content":"its c, bigquery, what i am learning from the case study and after watching the video learn gcp with mahesh on youtube","upvote_count":"3"},{"content":"It's D. Time series always Datastore...","comments":[{"content":"it is A timeseries = Bigtable","comment_id":"303882","timestamp":"1630804260.0","poster":"nitinz","upvote_count":"2"},{"upvote_count":"7","poster":"tartar","content":"A is ok","comment_id":"155122","timestamp":"1613029200.0","comments":[{"comment_id":"233117","upvote_count":"3","poster":"bjuneja","content":"If the question ask timeseries with analysis then Bigquery is ok but for only timeseries data BigTable is best suited option","timestamp":"1622640120.0"}]}],"comment_id":"17530","timestamp":"1587894120.0","upvote_count":"1","poster":"jcmoranp"}],"question_text":"For this question, refer to the Mountkirk Games case study. Which managed storage option meets Mountkirk's technical requirement for storing game activity in a time series database service?","isMC":true,"question_id":254,"answers_community":["A (100%)"]},{"id":"kyCSe0HZtIR3ONWFmnnp","answer":"C","answer_description":"","isMC":true,"url":"https://www.examtopics.com/discussions/google/view/7238-exam-professional-cloud-architect-topic-6-question-7/","choices":{"D":"Create an instance template for the backend. For every region, deploy it on a single-zone managed instance group. Use an L7 load balancer.","A":"Create an instance template for the backend. For every region, deploy it on a multi-zone managed instance group. Use an L4 load balancer.","B":"Create an instance template for the backend. For every region, deploy it on a single-zone managed instance group. Use an L4 load balancer.","C":"Create an instance template for the backend. For every region, deploy it on a multi-zone managed instance group. Use an L7 load balancer."},"answer_images":[],"question_id":255,"answers_community":["C (89%)","6%"],"exam_id":4,"answer_ET":"C","timestamp":"2019-10-26 11:46:00","topic":"6","question_images":[],"question_text":"For this question, refer to the Mountkirk Games case study. You are in charge of the new Game Backend Platform architecture. The game communicates with the backend over a REST API.\nYou want to follow Google-recommended practices. How should you design the backend?","discussion":[{"comments":[{"poster":"nitinz","timestamp":"1630804320.0","content":"It is C, you need L7 & mulit-region as its the ask.","comment_id":"303884","upvote_count":"7"},{"comment_id":"155125","comments":[{"timestamp":"1622640240.0","upvote_count":"14","poster":"bjuneja","content":"L4 load balancing offers traffic management of transactions at the network protocol layer (TCP/UDP). ... L7 load balancing works at the highest level of the OSI model. L7 bases its routing decisions on various characteristics of the HTTP/HTTPS header\nMountrik requirment is global so C is ok","comment_id":"233120"}],"content":"C is ok","upvote_count":"15","poster":"tartar","timestamp":"1613029440.0"}],"poster":"jcmoranp","upvote_count":"66","timestamp":"1587894360.0","content":"It's C. You need a L7 balancer and multi-zone","comment_id":"17532"},{"timestamp":"1591248480.0","upvote_count":"22","poster":"JJu","comment_id":"26512","content":"I think answer is C.\n\nThis game type is mobile.\nCheck this link : https://cloud.google.com/solutions/gaming/cloud-game-infrastructure#dedicated_game_server\nI recommend this section : ‘Request/response based servers’\nexplain : In particular, however, mobile game servers, without a critical demand for real-time communication, have adopted HTTP request and response semantics like those used in web hosting.\n\nthis game use HTTP load balancer. HTTP load balancer is L7."},{"comment_id":"864410","timestamp":"1696740840.0","content":"Selected Answer: A\nwe don't need multi-zonal if we have multi-region. the traffic is internal, we could need an L7 LB if there are specific requirements, but I don't see them.","upvote_count":"1","poster":"kratosmat"},{"timestamp":"1687332720.0","upvote_count":"4","content":"Selected Answer: C\nC gives best option \nKey word \"REST API \" \"L7 balancer\" , \"Multi Zone\"","poster":"surajkrishnamurthy","comment_id":"752072"},{"timestamp":"1683708600.0","poster":"megumin","upvote_count":"1","content":"Selected Answer: C\nC is ok","comment_id":"715155"},{"content":"C perfectly make sense","poster":"AzureDP900","upvote_count":"2","comment_id":"695875","timestamp":"1681614960.0"},{"timestamp":"1679419200.0","upvote_count":"1","poster":"muneebarshad","content":"Selected Answer: B\nI think the answer is B and here is my reasoning.\n\nUsers never communicate with the Backend server (due to security reasons) there is always a Frontend Service that is open to the internet and FE Service communicates with BE Server. The reason they called it Backend Serer is since it must have a Front end server refer to the solution reference (https://reviewnprep.com/blog/gcp-how-to-work-on-mountkirk-games-case-study/)\n\nthe traffic flow should look like this...... User(mobile) -> FE Game Server (hosted in GCP) -> BE Server (hosted in GCP)\n\nSince BE Service is not exposed to the internet therefore we would require a regional L4 Balancer since regional Load Balancer is NOT internet facing and it's from VM to VM","comment_id":"675253"},{"upvote_count":"2","comment_id":"665387","poster":"jabrrJ68w02ond1","timestamp":"1678457400.0","content":"Multi-zone makes it high available. L7 balances load for e.g. HTTP traffic. So the answer is C. Why not A? L4 works at the network protocol (TCP/UDP) which is not suitable for REST APIs."},{"poster":"DrishaS4","timestamp":"1675428900.0","comment_id":"641778","content":"Selected Answer: C\nL7 LB for RestAPI.","upvote_count":"2"},{"content":"Selected Answer: C\nC it is","poster":"Nirca","comment_id":"635955","timestamp":"1674560940.0","upvote_count":"1"},{"poster":"amxexam","timestamp":"1668361500.0","upvote_count":"1","comment_id":"601229","content":"Selected Answer: C\nC is correct"},{"comment_id":"575788","timestamp":"1664218980.0","upvote_count":"2","content":"Out dated case study. Don’t waste time \n\nhttps://cloud.google.com/certification/guides/professional-cloud-architect\n\nhttps://services.google.com/fh/files/blogs/master_case_study_mountkirk_games.pdf","poster":"SAMBIT","comments":[{"content":"Mountkirk is not out dated:\nhttps://cloud.google.com/learn/certification/guides/professional-cloud-architect","poster":"dija123","timestamp":"1728753360.0","upvote_count":"1","comment_id":"1194444"}]},{"upvote_count":"2","timestamp":"1663931100.0","poster":"amanp","content":"It is A, it is backend API and not frontend","comment_id":"573620"},{"content":"Selected Answer: C\nUmmm.I think the case must choose L7 LB for RestAPI.\nAdditional,the company require world wide scale.\nSo i chose C.","comment_id":"520645","timestamp":"1657421280.0","poster":"OrangeTiger","upvote_count":"2"},{"content":"Selected Answer: C\nC is correct. HTTP/S is layer 7","poster":"zxcv1234","upvote_count":"1","comment_id":"509332","timestamp":"1656191760.0"},{"content":"C is the correct answer","timestamp":"1655558640.0","comment_id":"504297","upvote_count":"1","poster":"ABO_Doma"},{"upvote_count":"1","poster":"vincy2202","comment_id":"499603","content":"Selected Answer: C\nC is the correct answer","timestamp":"1654965240.0"},{"poster":"pakilodi","upvote_count":"1","timestamp":"1654284900.0","comment_id":"493382","content":"Selected Answer: C\nVote C"},{"timestamp":"1653627300.0","upvote_count":"2","comment_id":"487903","content":"Selected Answer: C\nvote C","poster":"joe2211"},{"timestamp":"1650786360.0","poster":"MaxNRG","comments":[{"poster":"MaxNRG","content":"https://cloud.google.com/load-balancing/docs/choosing-load-balancer","upvote_count":"1","timestamp":"1650786660.0","comment_id":"466863"},{"content":"https://www.nginx.com/resources/glossary/layer-4-load-balancing/","comment_id":"466862","upvote_count":"1","poster":"MaxNRG","timestamp":"1650786600.0"}],"content":"C – Create an instance template for the backend. For every region, deploy it on multi-zone managed instance group. Use an L7 load balancer.\nRequirements ask to minimize downtime – so needs redundancy across regions and zones inside regions. In addition, GCP Best Practicies of recommends HTTPs (L7) Load Balancer for internet facing app, to design for High-Availability. Quote from this page:\n“GCP offers several variations of load balancing. The HTTP(S) load balancer is often used to expose internet-facing apps. This load balancer provides global balancing, allowing distribution of load across regions in different geographies. If a zone or region becomes unavailable, the load balancer directs traffic to a zone with available capacity. For more details, see application capacity optimizations with global load balancing”.\nCheck this page about LB options: Choosing a Load Balancer\nCheck difference between L4 and L7 LBs here.","upvote_count":"2","comment_id":"466860"},{"timestamp":"1650123900.0","content":"C is right answer. We need here L7 for HTTPS traffic. L4 is for TCP. So A is wrong answer.","poster":"[Removed]","comment_id":"463151","upvote_count":"1"},{"comment_id":"460344","timestamp":"1649647380.0","content":"Global.. Better to go for LB L7 \nToo many customers/users to accomodate - multi region should be a good suggestion","poster":"rottzy","upvote_count":"1"},{"poster":"BrijMohan08","timestamp":"1648947240.0","comment_id":"456310","content":"The answer is C.","upvote_count":"1"},{"timestamp":"1648189860.0","poster":"[Removed]","comment_id":"451214","upvote_count":"2","content":"Answer should be C because of HTTPS. L4 is TCP LB. So C is right answer"},{"timestamp":"1647486480.0","upvote_count":"1","content":"Is there anybody could explain why the correct answer(A) relates to L4 LB, and L7 LB is incorrect(C)?","poster":"kapara","comment_id":"446254"},{"comment_id":"401081","timestamp":"1641580500.0","upvote_count":"2","content":"Answer is C","poster":"MamthaSJ"},{"upvote_count":"1","comment_id":"363482","timestamp":"1637572980.0","poster":"victory108","content":"C. Create an instance template for the backend. For every region, deploy it on a multi-zone managed instance group. Use an L7 load balancer."},{"poster":"gosi","upvote_count":"2","comments":[{"poster":"gosi","content":"I take that back. We have to use Internal LB but we can still use L7. So I change my answer to C.","comment_id":"342998","upvote_count":"2","timestamp":"1635225420.0"}],"comment_id":"342808","content":"A.\nBackend - you may use Internal LB (https://www.google.com/search?q=GCP+MAnaged+instance+group+architecture+diagram&safe=active&rlz=1C1GCEA_enUS800US800&tbm=isch&source=iu&ictx=1&fir=L-0HeAJvMbIaSM%252CPKWGE59A_p_aaM%252C_&vet=1&usg=AI4_-kSzYhfPdxk4EkFi6qfj83c4O9FCZA&sa=X&ved=2ahUKEwj_9caFq5rwAhXXG80KHc1hAlwQ9QF6BAgOEAE&biw=1920&bih=880#imgrc=NbBz2naiC406RM)","timestamp":"1635190200.0"},{"content":"Answer is C","poster":"Ausias18","timestamp":"1633091700.0","upvote_count":"1","comment_id":"325814"},{"upvote_count":"2","poster":"azerty123t","comment_id":"320341","timestamp":"1632578100.0","content":"I think the key point here is \" You want to follow Google-recommended practices\"\nand according to the flowchart https://cloud.google.com/load-balancing/docs/choosing-load-balancer#flow_chart, if traffic is HTTP(S) then use an HTTP(S) LB. if not HTTP(S) then use the other available L4 LBs.\nI'll go with C."},{"poster":"ritsuki1227","content":"C, according to the flow chart for choosing a load balancer: \nhttps://cloud.google.com/load-balancing/docs/choosing-load-balancer#flow_chart","comment_id":"291849","timestamp":"1629117060.0","upvote_count":"1"},{"upvote_count":"1","timestamp":"1628412780.0","comment_id":"286121","poster":"ahmedemad3","content":"ANS : C\nIt needs HTTP/S Load Balancer SO LAYER 7"},{"comment_id":"280888","poster":"bnlcnd","timestamp":"1627771140.0","upvote_count":"1","content":"Obviously C is right. The question specifically says \"REST\". It needs HTTP/S Load Balancer == L7 Load balancer."},{"timestamp":"1626098160.0","comment_id":"265637","comments":[{"upvote_count":"2","timestamp":"1646821200.0","comment_id":"441841","poster":"MikeB19","content":"I agree. The q states backend and the tech / bus req do not make any mention of public access only scaling. My thought is the compute is middleware tier connecting to db tier."},{"content":"Could you, please, send us a ref. for your statement \"REST API can be implemented on protocols other than HTTP(S)\" ??","poster":"lynx256","timestamp":"1632299460.0","comment_id":"317055","upvote_count":"1"}],"poster":"HKim","content":"I am leaning more towards A since REST API is not the same as HTTP(S). REST API can be implemented on protocols other than HTTP(S) so using L4 load balancer would be more fool-proof.","upvote_count":"3"},{"comment_id":"259940","upvote_count":"4","content":"This is a back-end solution, this means that it needs to use an internal load balancer. Both, TCP/UDP and HTTPS load balancers are regional.\nAs previously stated, HTTPS is a L7 protocol that uses TCP as the transport layer (L4). This means that both would work the same way, and if L4 is cheaper, i would go with it.\nI will go with A.","timestamp":"1625450520.0","poster":"sealvarezmx"},{"content":"A uses a L4 network LB. This LB can be external, but it's only REGIONAL. Considering Mountkrik Global needs, if you choose A, you will have to deploy one LB4 per region and manage different LB IPs, or, end up adding the HTTP LB7, which's global, to expose one endpoint.\nhttps://cloud.google.com/load-balancing/docs/choosing-load-balancer#summary-of-google-cloud-load-balancers\n\nI would go with C.","upvote_count":"1","comments":[{"upvote_count":"1","content":"I would also add that REST API isn't the reason.\nREST API is HTTP based but there is no mention of HTTP headers, parameters or path, based LB. so LB4 may do the job if Mountkrik only have one region and only needs (IP, PORT) based LB.\nI would go with C.","comment_id":"246376","poster":"ybe_gcp_cert","timestamp":"1623918720.0"}],"timestamp":"1623918540.0","comment_id":"246374","poster":"ybe_gcp_cert"},{"poster":"ccie_pgh","timestamp":"1621002420.0","content":"Answer is C\nLB chart --> https://cloud.google.com/load-balancing/docs/choosing-load-balancer\nREST API uses HTTP --> https://www.tutorialspoint.com/restful/restful_introduction.htm\nHTTP is L7 --> https://en.wikipedia.org/wiki/List_of_network_protocols_(OSI_model)#Layer_7_(Application_Layer)","comment_id":"219209","upvote_count":"2"},{"upvote_count":"3","timestamp":"1620880260.0","comment_id":"218304","content":"Correct Answer is C\nSince one of our requirements is to \"Improve uptime—downtime is a loss of players\", we must deploy the backend in multiple zones instead of a single zone so that the solution is resistant to zonal failures. This architecture also helps reduce latency. If all the VM instances in one zone go down, the load balancer can continue to send traffic to VMs in other zone but in the same region closest to the customer. Doing so minimizes latency and helps with the other requirement \"Reduce Latency to all customers\".\n\nAlso, REST APIs work at the HTTP layer, they use HTTP verbs and paths and therefore need a layer 7 load balancer.","poster":"hems4all"},{"poster":"gcparchitect007","timestamp":"1619749200.0","comment_id":"209721","content":"Correct answer is C.","upvote_count":"2"},{"timestamp":"1619630220.0","upvote_count":"1","comment_id":"208051","poster":"AdityaGupta","content":"Correct answer is C\n\nWhen you are having a single frontend IP and deploying MIG you should have HTTP global load balancer."},{"poster":"N1_arch","timestamp":"1619381220.0","content":"Agreed with A - For back-end, we can have regional (multi-zone) managed instance group instances load balanced over Level-4 Internal LB.","comment_id":"205896","upvote_count":"1"},{"upvote_count":"1","poster":"AshokC","timestamp":"1616094120.0","comment_id":"181827","content":"Answer: C","comments":[{"upvote_count":"2","timestamp":"1616094480.0","poster":"AshokC","comment_id":"181830","content":"Answer: C\nREST APIS uses HTTP which is L7 protocol"}]},{"comment_id":"169226","content":"REST API -> HTTP -> L7 Load balancer. C is correct","poster":"Kabiliravi","timestamp":"1614520920.0","upvote_count":"2"},{"comment_id":"166259","upvote_count":"2","timestamp":"1614293700.0","content":"REST API works over HTTP and hence we need a L7 Load balancer...I would go with C","poster":"wiqi"},{"poster":"jespinosar","comment_id":"161284","timestamp":"1613723940.0","content":"I think the answer is A) and not C), I'll try to state my point:\n* Some of the comments state REST API implies Level 7, but that's not true, because HTTP (level 7) is based on TCP (level 4), and it's ok having a front-end Level 7 and a backend Level 4 (actually it's one of the recommended architectures). It's the way GKE services work, by the way. The application receives always HTTP, regardless of the LB being proxied or not.\n*Remember global HTTP(S) LBs are anycast, so they are expensive resources compared to Level 4 TCP/UDP Load Balancers. Somehow is an anti-pattern using an anycast resource within a single region.\nTo sum-up: A) Because it's a backend, a Level 4 LB is the natural fit. Actually the standard architecture is having a Level 7 frontend with many backends with LB TCP level 4 and MIGs","upvote_count":"2"},{"poster":"mohit1008","content":"Answer is A , we need an Internal LB and google has only one Internal LB and its a layer 4 LB","comment_id":"153740","upvote_count":"2","timestamp":"1612888860.0"},{"timestamp":"1611228060.0","comment_id":"140173","upvote_count":"1","poster":"AmazonAu","content":"NLB can also work for HTTP traffic (RESTful) if advanced feature of L7 LB is not used"},{"content":"it's C","timestamp":"1609595880.0","comment_id":"124988","upvote_count":"1","poster":"pupi08"},{"comments":[{"upvote_count":"2","content":"The backend is using REST API, meaning HTTP is in used. So you need L7.","poster":"VedaSW","timestamp":"1616825700.0","comment_id":"188102"}],"upvote_count":"2","timestamp":"1608880800.0","comment_id":"119102","poster":"akhilesh_pundir","content":"I think front end is mobile and that need L7, but here question is being asked about backend and that doent need L7 so A seems correct."},{"poster":"mlantonis","content":"\"The game communicates with the backend over a REST API.\"\nWe need L7 LB.\n\nC is the correct answer.","timestamp":"1608801060.0","upvote_count":"1","comment_id":"118186"},{"content":"It is to route in bound network, why do we need to go to L7, should not we be relying on L4? my answer is A","comments":[{"comment_id":"121051","upvote_count":"1","content":"Apologies - C is the correct answer, its for REST API, so can't use TCP protocal","timestamp":"1609059000.0","poster":"pbrat"}],"poster":"pbrat","timestamp":"1608471660.0","comment_id":"114735","upvote_count":"1"},{"timestamp":"1608221340.0","comment_id":"112479","upvote_count":"1","poster":"Giuspe","content":"I agree with C, https load balancer is an L7"},{"upvote_count":"2","comment_id":"107447","timestamp":"1607671860.0","poster":"gfhbox0083","content":"C, for sure."},{"comment_id":"98742","upvote_count":"2","timestamp":"1606734360.0","poster":"jayaen","content":"A and B are ruled out since REST API communication will be in http(s) and L4 LB will provide TCP/UDP support. \nD - ruled out to support for global customers and C is correct answer"},{"comment_id":"97601","timestamp":"1606578660.0","content":"Final Decision to go with Option C","upvote_count":"4","poster":"AD2AD4"},{"poster":"amralieg","timestamp":"1605963240.0","comment_id":"93338","upvote_count":"1","content":"REST APIS uses HTTP which is layer 7 protocol, so Answer is C"},{"comment_id":"68790","content":"L7 load balancers are global. you cant have multiple L7 per region. That rules out C. As a backend what is needed is a multi-zone instances and a L4 internal load balancer. you can always load balance multiple L4 load balancers with a L7 load balancer. So sticking to the question on backend, it should be A","comments":[{"content":"Sorry my bad. read it wrongly. Answer is C.","poster":"nadarajan","timestamp":"1601270640.0","comment_id":"68791","upvote_count":"2"}],"timestamp":"1601270520.0","upvote_count":"2","poster":"nadarajan"},{"timestamp":"1594961280.0","comment_id":"40011","content":"Correct Answer C\n\nMountkirk games needed Global HTTPS Load Balancer for their backend platform (L7) and MULTI zone managed instance group.\n\nCreate an instance template for the backend. For every region, deploy it on a multi-zone managed instance group. Use an L7 load balancer.","poster":"sri007","upvote_count":"1"},{"timestamp":"1593070620.0","comment_id":"32545","content":"it depends on the traffics to backend is HTTP or not . but in the passage they didn't mentioned .And generally speaking , in backend , if use non-http protocals will be more effiective .then TCP is better option for this ,For option A","poster":"MrBog1","upvote_count":"1","comments":[{"timestamp":"1593070740.0","poster":"MrBog1","upvote_count":"5","content":"I am wrong , it mentioned REST API. Then C","comment_id":"32546"}]},{"content":"My vote goes for C. Rest API communicates via http - layer 7.","upvote_count":"12","comments":[{"timestamp":"1595429340.0","comment_id":"41675","upvote_count":"1","comments":[{"poster":"nitinz","upvote_count":"1","timestamp":"1630713840.0","comment_id":"302998","content":"At Layer 7 :-)"},{"timestamp":"1605963180.0","upvote_count":"3","poster":"amralieg","comment_id":"93335","content":"HTTP is layer 7\nhttps://en.wikipedia.org/wiki/List_of_network_protocols_(OSI_model)#Layer_7_(Application_Layer)"},{"content":"Dude, before using that tone, do confirm your knowledge and get your facts straight.","comment_id":"50485","upvote_count":"27","poster":"mpguard","timestamp":"1597405980.0"}],"poster":"Jos","content":"No, read more about HTTP and where it stands in OSI stack."}],"poster":"YogiBear","comment_id":"24272","timestamp":"1590405480.0"},{"comment_id":"17822","poster":"shark","upvote_count":"4","content":"A is correct back end does not need l7","comments":[{"poster":"VedaSW","timestamp":"1616825640.0","upvote_count":"6","comment_id":"188099","content":"REST API works with HTTP, so you need L7."}],"timestamp":"1588006320.0"}],"unix_timestamp":1572083160}],"exam":{"provider":"Google","lastUpdated":"11 Apr 2025","id":4,"name":"Professional Cloud Architect","numberOfQuestions":279,"isImplemented":true,"isBeta":false,"isMCOnly":false},"currentPage":51},"__N_SSP":true}