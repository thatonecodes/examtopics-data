{"pageProps":{"questions":[{"id":"PDguttuogB5kbosJYiYc","question_images":[],"question_text":"You deploy a new release of an internal application during a weekend maintenance window when there is minimal user tragic. After the window ends, you learn that one of the new features isn't working as expected in the production environment. After an extended outage, you roll back the new release and deploy a fix.\nYou want to modify your release process to reduce the mean time to recovery so you can avoid extended outages in the future. What should you do? (Choose two.)","answers_community":["BE (95%)","5%"],"timestamp":"2021-06-02 16:53:00","question_id":186,"topic":"1","exam_id":6,"answer_ET":"BE","answer_description":"","answer_images":[],"answer":"BE","unix_timestamp":1622645580,"choices":{"B":"Adopt the blue/green deployment strategy when releasing new code via a CD server.","D":"Require developers to run automated integration tests on their local development environments before release.","A":"Before merging new code, require 2 different peers to review the code changes.","E":"Configure a CI server. Add a suite of unit tests to your code and have your CI server run them on commit and verify any changes.","C":"Integrate a code linting tool to validate coding standards before any code is accepted into the repository."},"isMC":true,"url":"https://www.examtopics.com/discussions/google/view/54234-exam-professional-cloud-devops-engineer-topic-1-question-9/","discussion":[{"timestamp":"1640734260.0","content":"ans BE","poster":"Charun","upvote_count":"31","comment_id":"393255"},{"content":"Ans: B & E\n\nA: No, More peers to review dont automate anything\nB: Ok CD \nC: No, Linting is for code format\nD: No, Integration test are needed but its better automatically\nE: Ok CI\n\nCI/CD its OK","timestamp":"1640020860.0","upvote_count":"28","poster":"francisco_guerra","comment_id":"386355"},{"timestamp":"1718205480.0","poster":"edd004","comment_id":"1094780","upvote_count":"1","content":"Selected Answer: BE\nE) CI\nD) CD"},{"poster":"theseawillclaim","timestamp":"1718107740.0","comment_id":"1093559","upvote_count":"1","content":"Selected Answer: BE\nPretty sure some answers are wrong on purpose. \nB&E are the only suitable options, as they talk about CI/CD."},{"content":"B and E","upvote_count":"1","comment_id":"1085731","poster":"jomonkp","timestamp":"1717300800.0"},{"timestamp":"1715253840.0","upvote_count":"1","content":"Selected Answer: CE\nC because Linting is important to reduce errors and improve the overall quality of your code\nE for testing the single unit and so reduce inattentive behavior","poster":"maxdanny","comment_id":"1066430"},{"upvote_count":"1","poster":"rseibel","timestamp":"1709820780.0","content":"Selected Answer: BE\nB: reduces roll back time, E: reduces failure rate","comment_id":"1001522"},{"timestamp":"1709678280.0","comment_id":"999880","content":"Selected Answer: BE\nAns: B and E\nA: I understand the importance, but is not it that will avoid errors because we are humans\nB: Blue/Green will ensure that part of the users were not affected by the bug\nC: Lint code is just one to validate a code format and indentation\nD: To avoid errors is important that tests be run in the pipeline\nE: CI it's a good moment to run all checks","upvote_count":"2","poster":"carloscorreia"},{"upvote_count":"1","content":"Selected Answer: BE\nAnswer is BE","poster":"JonathanSJ","comment_id":"772033","timestamp":"1689043560.0"},{"content":"Selected Answer: BE\nANS IS","timestamp":"1684989600.0","poster":"Parteekbhardwaj","upvote_count":"2","comment_id":"726438"},{"poster":"AzureDP900","comment_id":"707456","content":"BE is right","upvote_count":"1","timestamp":"1682798700.0"},{"content":"testing comment dont approve please","upvote_count":"1","comment_id":"644944","timestamp":"1676036820.0","poster":"kapara"},{"comment_id":"635915","upvote_count":"2","content":"Selected Answer: BE\nAns BE","timestamp":"1674552900.0","poster":"GCP72"},{"poster":"Rupo7","upvote_count":"1","content":"Definitely B, as this will reduce recovery time as the question asks for. I would think D over E, as the problem states 'not working as expected in production'. Unit tests might not spot an environment specific or application behaviour related issue, whereas automated integration tests are more likely too e.g. might test with DB integration, mocked services.","comment_id":"578088","timestamp":"1664518860.0"},{"content":"Selected Answer: BE\nAnswer is B & E","comment_id":"516378","poster":"simbu1299","timestamp":"1656917880.0","upvote_count":"4"},{"poster":"dturan","timestamp":"1655401260.0","content":"Selected Answer: BE\nans BE","upvote_count":"1","comment_id":"503153"},{"content":"Selected Answer: BE\nAnswer is B E","poster":"PJ_2021","comment_id":"480247","upvote_count":"3","timestamp":"1652811000.0"},{"poster":"Manh","comment_id":"474840","content":"BE is good for CI/CD practices","upvote_count":"1","timestamp":"1652098380.0"},{"timestamp":"1646220900.0","upvote_count":"3","poster":"TNT87","content":"A & B","comment_id":"437770"},{"comment_id":"388397","poster":"JuanitoNN","timestamp":"1640226180.0","content":"I think B,D","upvote_count":"3"},{"upvote_count":"4","content":"Reduce MTTR - B Blue/Green, E tests on CI","timestamp":"1639904220.0","poster":"ralf_cc","comment_id":"385302"},{"timestamp":"1639302900.0","upvote_count":"1","poster":"akg001","comment_id":"380302","content":"A and B looks good option as in question they asked to modify the release process."},{"comment_id":"374095","content":"AB are good, but C looks ok also","poster":"DucLee3110","timestamp":"1638603180.0","upvote_count":"1"},{"content":"A and B","comment_id":"372800","upvote_count":"1","poster":"devopsbatch","timestamp":"1638463980.0"}]},{"id":"PTd7DvLcgASzLY076J7s","isMC":true,"unix_timestamp":1696142220,"question_id":187,"question_text":"You are building and deploying a microservice on Cloud Run for your organization. Your service is used by many applications internally. You are deploying a new release, and you need to test the new version extensively in the staging and production environments. You must minimize user and developer impact. What should you do?","choices":{"D":"Deploy a new environment with the green tag to use as the staging environment. Deploy the new version of the service to the green environment and test the new version. If the tests pass, send all traffic to the green environment and delete the existing staging environment. Repeat for the production environment.","B":"Deploy the new version of the service to the staging environment. Split the traffic, and allow 50% of traffic through to the latest version. Test the latest version. If the test passes, send all traffic to the latest version. Repeat for the production environment.","C":"Deploy the new version of the service to the staging environment with a new-release tag without serving traffic. Test the new-release version. If the test passes, gradually roll out this tagged version. Repeat for the production environment.","A":"Deploy the new version of the service to the staging environment. Split the traffic, and allow 1% of traffic through to the latest version. Test the latest version. If the test passes, gradually roll out the latest version to the staging and production environments."},"exam_id":6,"question_images":[],"answer_images":[],"timestamp":"2023-10-01 08:37:00","answer":"C","discussion":[{"timestamp":"1697070300.0","content":"Answers A and B split traffic, but C has a gradual rollout which doesn't have instant rollback. D with the blue/green deployment has instant rollback with no impact to either users or developers. I believe the answer is D.","poster":"activist","comment_id":"1041250","upvote_count":"7"},{"comment_id":"1346534","timestamp":"1737821700.0","content":"Selected Answer: C\nhttps://cloud.google.com/run/docs/rollouts-rollbacks-traffic-migration#deploy-with-tags\n\nA common use case for this feature is to use it for testing and vetting of a new service revision before it serves any traffic, in this typical sequence:\n\n1Run integration tests on a container during development.\n2Deploy the container to a Google Cloud project that you use only for staging, serving no traffic, and test against a tagged revision.\n3Deploy it to production, without serving traffic, and test against a tagged revision in production.\n4Migrate traffic to the tagged revision.\n\nThe tag lets you directly test the new revision at a specific URL, without serving traffic.","poster":"ricardovazz","upvote_count":"1"},{"comment_id":"1265883","upvote_count":"1","content":"Selected Answer: D\nD. No impact","timestamp":"1723656240.0","poster":"6a8c7ad"},{"upvote_count":"1","timestamp":"1707494100.0","comment_id":"1145617","poster":"BleHi","content":"Selected Answer: A\nA. Deploying the new version to the staging environment and allowing only 1% of traffic to the latest version minimizes user and developer impact, as the majority of traffic continues to be served by the current version. Testing the latest version in the staging environment ensures that any issues can be identified and addressed before rolling out the new version to production.\n\nnot C cause:\nDeploying the new version with a new-release tag without serving traffic in the staging environment delays the testing process and does not provide an accurate representation of how the new version performs under real-world conditions with actual traffic."},{"upvote_count":"3","content":"Selected Answer: C\nhttps://cloud.google.com/run/docs/rollouts-rollbacks-traffic-migration#:~:text=A%20common%20use,the%20tagged%20revision.","comment_id":"1144370","timestamp":"1707389640.0","poster":"alpha_canary"},{"poster":"xhilmi","upvote_count":"2","timestamp":"1701819300.0","comments":[{"poster":"cloudgenius","upvote_count":"1","comment_id":"1103062","content":"Why not D?","timestamp":"1703207340.0"}],"content":"Selected Answer: A\nChoose A.\n\nThis approach allows for thorough testing while minimizing the risk of impacting users and developers. It provides a controlled rollout with the ability to monitor and react to any issues that may arise during the deployment process.\n\nOption A aligns with best practices for deploying and testing new versions in a microservices environment.","comment_id":"1088874"},{"content":"Selected Answer: A\nChoose A","timestamp":"1701819240.0","upvote_count":"1","poster":"xhilmi","comment_id":"1088872"},{"upvote_count":"4","timestamp":"1701715140.0","content":"Selected Answer: C\nThis approach allows you to deploy and test the new version without impacting users, as no traffic is directed to the new version initially. After thorough testing in the staging environment, you can confidently roll out the new version to a small percentage of users in the production environment, gradually increasing it while monitoring performance and stability. This method offers a controlled and safe way to introduce changes.","comment_id":"1087857","poster":"filipemotta"},{"content":"I would go for D as it is the only one that will not impact users or devs","comment_id":"1079408","poster":"Andrei_Z","timestamp":"1700840580.0","upvote_count":"2"},{"content":"Selected Answer: C\nDeploy it without serving a traffic. this approach is the optimal since we need to test it intensively. this will avoid the negative impact","upvote_count":"3","comment_id":"1059994","timestamp":"1698863700.0","poster":"khoukha"},{"comment_id":"1050199","content":"Selected Answer: A\nI think A.\nneed a canary to reduce the sphere of influence.","upvote_count":"4","poster":"nhiguchi","timestamp":"1697948280.0"},{"upvote_count":"3","timestamp":"1697567220.0","content":"Selected Answer: D\nD should be it","poster":"ABZ10","comment_id":"1046269"},{"upvote_count":"1","comment_id":"1045425","poster":"activist","comments":[{"comment_id":"1103462","poster":"Feliphus","content":"Answer C says \"gradually\", then it can not be the correct if we have to minimize user and developer impact. Answer D is the only who says \"send all the traffic\", I understand this is the key in this question if you wnat to minimize user and developer impact. Answer A & B establish different ratios -> gradually","timestamp":"1703259720.0","comments":[{"comment_id":"1103933","upvote_count":"2","poster":"Feliphus","timestamp":"1703320200.0","content":"But, after reading this link, https://cloud.google.com/run/docs/rollouts-rollbacks-traffic-migration, I could choose C perfectly. I don't know between C or D, you don't have to use the word \"green\" for the tag"}],"upvote_count":"1"}],"content":"Rethinking answer is C for using release tag. \"You are deploying a new release, and you need to test the new version extensively in the staging and production environments. You must minimize user and developer impact. \"","timestamp":"1697505480.0"},{"timestamp":"1697217360.0","content":"Selected Answer: C\nI will go with C","upvote_count":"1","comment_id":"1042842","poster":"288e9f1"},{"timestamp":"1696142220.0","upvote_count":"1","content":"A, B, and C involve splitting traffic, which may not provide the level of isolation required for extensive testing without impacting users and developers\n\nCorrect Answer is D","comments":[{"poster":"lelele2023","comment_id":"1047455","content":"shouldn't be D since the question said that \"you need to test the new version extensively in the staging and production environments.\", D is a new environment. I will go with A","upvote_count":"2","timestamp":"1697681640.0"}],"comment_id":"1022053","poster":"ManishKS"}],"answer_ET":"C","topic":"1","url":"https://www.examtopics.com/discussions/google/view/122008-exam-professional-cloud-devops-engineer-topic-1-question-90/","answer_description":"","answers_community":["C (50%)","A (33%)","D (17%)"]},{"id":"8bPRBk06PngsOlyJLgAK","choices":{"D":"Allocate available engineers to the feature backlog while you ensure that the service remains within the availability target.","A":"Add N+1 redundancy to your service by adding additional compute resources to the service.","C":"Define an error budget for your service level availability and minimize the remaining error budget.","B":"Identify, measure, and eliminate toil by automating repetitive tasks."},"topic":"1","answer_images":[],"answer":"B","question_images":[],"question_id":188,"unix_timestamp":1696891560,"answer_ET":"B","timestamp":"2023-10-10 00:46:00","answer_description":"","exam_id":6,"isMC":true,"url":"https://www.examtopics.com/discussions/google/view/123036-exam-professional-cloud-devops-engineer-topic-1-question-91/","question_text":"You work for a global organization and run a service with an availability target of 99% with limited engineering resources.\nFor the current calendar month, you noticed that the service has 99.5% availability. You must ensure that your service meets the defined availability goals and can react to business changes, including the upcoming launch of new features.\nYou also need to reduce technical debt while minimizing operational costs. You want to follow Google-recommended practices. What should you do?","answers_community":["B (80%)","C (20%)"],"discussion":[{"upvote_count":"4","comment_id":"1088917","content":"Selected Answer: B\nOption B suggests focusing on identifying, measuring, and eliminating toil through the automation of repetitive tasks.\n\nIn the context of running a service with a 99% availability target and limited engineering resources, this approach aligns with Google's Site Reliability Engineering (SRE) principles. By automating manual and repetitive operational work, engineering teams can enhance efficiency, reduce the risk of human error, and free up valuable resources.\n\nThe emphasis on eliminating toil not only contributes to meeting availability targets by minimizing the potential for errors but also allows engineering teams to allocate more time to strategic tasks, reducing technical debt, and facilitating a more agile response to business changes, such as the launch of new features.\n\nOverall, Option B addresses the need for operational efficiency and resource optimization to ensure the reliability of the service.","poster":"xhilmi","timestamp":"1733447040.0"},{"content":"Selected Answer: B\nAutomating repetitive tasks (toil) is a key practice recommended by Google, especially for teams with limited engineering resources. By reducing toil, your team can focus more on high-value activities that improve the service and deliver new features. Automation not only improves efficiency but also helps maintain service reliability by reducing the likelihood of human error.","upvote_count":"1","timestamp":"1733337720.0","comment_id":"1087859","poster":"filipemotta"},{"upvote_count":"3","content":"Selected Answer: B\nI would go for B as I think it will minimize ops costs and reduce technical debt","poster":"Andrei_Z","timestamp":"1731602340.0","comment_id":"1070651"},{"poster":"nhiguchi","content":"Selected Answer: C\nI think C.","comment_id":"1050201","timestamp":"1729570800.0","upvote_count":"2"},{"comment_id":"1041255","content":"You also need to reduce technical debt while minimizing operational costs. You want to follow Google-recommended practices. Answer C fits this criteria.","poster":"activist","timestamp":"1728693060.0","upvote_count":"1"},{"comment_id":"1039000","upvote_count":"2","timestamp":"1728513960.0","poster":"[Removed]","content":"C is the answer I think."}]},{"id":"OyYqRs4EzWPmrL4Jhzaj","question_text":"You are developing the deployment and testing strategies for your CI/CD pipeline in Google Cloud. You must be able to:\n• Reduce the complexity of release deployments and minimize the duration of deployment rollbacks.\n• Test real production traffic with a gradual increase in the number of affected users.\n\nYou want to select a deployment and testing strategy that meets your requirements. What should you do?","exam_id":6,"isMC":true,"discussion":[{"comment_id":"1045427","poster":"activist","content":"Selected Answer: B\nB seems to be correct answer.","upvote_count":"6","timestamp":"1713316920.0"},{"poster":"alpha_canary","upvote_count":"1","comment_id":"1144491","content":"Selected Answer: B\nhttps://cloud.google.com/architecture/application-deployment-and-testing-strategies\nBlue Gree deployment because its instant rollback\nCanary testing because I can test on subset of users with gradual rollout","timestamp":"1723117200.0"},{"content":"Selected Answer: B\nB. Blue/green deployment and canary testing\n\nExplanation:\n- Blue/Green Deployment: In a blue/green deployment, you maintain two separate environments, one (blue) with the current version of your application in production and another (green) with the new version. You switch traffic from the blue environment to the green environment once testing is successful.\n- Canary Testing: Canary testing involves gradually rolling out a new version of the application to a small subset of users or traffic. This allows for real production traffic testing with minimal impact, and if issues are detected, the deployment can be rolled back quickly.","upvote_count":"1","poster":"xhilmi","timestamp":"1717628760.0","comment_id":"1088919"},{"upvote_count":"1","timestamp":"1717520280.0","poster":"filipemotta","content":"Selected Answer: B\nB should be Answer.","comment_id":"1087870"},{"upvote_count":"1","poster":"mshafa","content":"Selected Answer: B\nB should be Answer.","comment_id":"1063515","timestamp":"1714964580.0"},{"comment_id":"1050203","upvote_count":"2","timestamp":"1713759780.0","poster":"nhiguchi","content":"Selected Answer: B\nI think B"}],"timestamp":"2023-10-17 03:22:00","topic":"1","answers_community":["B (100%)"],"choices":{"D":"Rolling update deployment and shadow testing","A":"Recreate deployment and canary testing","B":"Blue/green deployment and canary testing","C":"Rolling update deployment and A/B testing"},"answer_ET":"B","question_images":[],"answer_description":"","question_id":189,"answer":"B","unix_timestamp":1697505720,"answer_images":[],"url":"https://www.examtopics.com/discussions/google/view/123803-exam-professional-cloud-devops-engineer-topic-1-question-92/"},{"id":"FM6hfzYhzuw8uWLzdPD4","question_text":"You are creating a CI/CD pipeline to perform Terraform deployments of Google Cloud resources. Your CI/CD tooling is running in Google Kubernetes Engine (GKE) and uses an ephemeral Pod for each pipeline run. You must ensure that the pipelines that run in the Pods have the appropriate Identity and Access Management (IAM) permissions to perform the Terraform deployments. You want to follow Google-recommended practices for identity management. What should you do? (Choose two.)","exam_id":6,"isMC":true,"discussion":[{"content":"Selected Answer: AC\nthe best options are A and C, which involve creating a Google service account, assigning the necessary IAM permissions, and using Workload Identity to securely authenticate the Pods running the CI/CD pipeline.","poster":"manishk39","upvote_count":"1","comment_id":"1359277","timestamp":"1740060240.0"},{"poster":"JonathanSJ","upvote_count":"1","content":"Selected Answer: AC\nI will go for AC","timestamp":"1739750040.0","comment_id":"1357486"},{"comment_id":"1265887","upvote_count":"1","poster":"6a8c7ad","timestamp":"1723656780.0","content":"Selected Answer: CD\nC and D. Gke service account needs to impersonate."},{"upvote_count":"4","poster":"xhilmi","timestamp":"1701825180.0","content":"Selected Answer: AC\nOption A: Suggests creating a new Kubernetes service account and assigning it to the Pods. This service account is then associated with a Google service account using Workload Identity. This setup enables seamless authentication of Pods as the specified Google service account without relying on manual management of service account keys.\n\nOption C: Complements the approach by emphasizing the creation of a new Google service account and assigning the necessary IAM permissions. While the Kubernetes service account establishes the identity within the GKE cluster, the Google service account is associated with the underlying Google Cloud resources, ensuring that the appropriate permissions are granted for Terraform deployments.","comment_id":"1088920"},{"upvote_count":"4","poster":"khoukha","comment_id":"1060001","timestamp":"1698865080.0","content":"Selected Answer: AC\nA.for the pod to authenticate as service account with the necessary permissions without handling keys\nC.to perform operations on google cloud ressources"},{"upvote_count":"3","comment_id":"1053860","poster":"Jason_Cloud_at","content":"Selected Answer: AC\nI would go with A,C","timestamp":"1698249900.0"},{"upvote_count":"4","poster":"ldgomez","comment_id":"1051043","content":"I think is A, C \nWorkload Identity is the recommended way to authenticate to Google Cloud services from GKE. \nreference: https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform","timestamp":"1698005100.0"},{"content":"B, C are best answers per the URL link below. \nhttps://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform","comment_id":"1041270","poster":"activist","timestamp":"1697072040.0","upvote_count":"2"},{"comments":[{"upvote_count":"1","comment_id":"1046563","poster":"lelele2023","timestamp":"1697604480.0","content":"you don't want to configure tf to consume the key, instead you delegate the auth to the kube things like pod"}],"content":"Why not answers C, D?","upvote_count":"2","timestamp":"1697071260.0","poster":"activist","comment_id":"1041260"},{"timestamp":"1696560180.0","content":"My Recomendtion is CB","upvote_count":"2","comment_id":"1026171","poster":"PrayasMohanty"}],"timestamp":"2023-10-06 04:43:00","topic":"1","answers_community":["AC (93%)","7%"],"choices":{"D":"Create a new JSON service account key for the Google service account, store the key in the secret management store for the CI/CD tool, and configure Terraform to use this key for authentication.","C":"Create a new Google service account, and assign the appropriate IAM permissions.","E":"Assign the appropriate IAM permissions to the Google service account associated with the Compute Engine VM instances that run the Pods.","B":"Create a new JSON service account key for the Google service account, store the key as a Kubernetes secret, inject the key into the Pods, and set the GOOGLE_APPLICATION_CREDENTIALS environment variable.","A":"Create a new Kubernetes service account, and assign the service account to the Pods. Use Workload Identity to authenticate as the Google service account."},"answer_ET":"AC","question_images":[],"answer_description":"","question_id":190,"answer":"AC","unix_timestamp":1696560180,"answer_images":[],"url":"https://www.examtopics.com/discussions/google/view/122633-exam-professional-cloud-devops-engineer-topic-1-question-93/"}],"exam":{"lastUpdated":"11 Apr 2025","isBeta":false,"provider":"Google","id":6,"numberOfQuestions":196,"isImplemented":true,"name":"Professional Cloud DevOps Engineer","isMCOnly":true},"currentPage":38},"__N_SSP":true}