{"pageProps":{"questions":[{"id":"Qp3LMFIJTY7nLyulnSAD","answers_community":["A (100%)"],"exam_id":7,"answer":"A","isMC":true,"answer_images":[],"url":"https://www.examtopics.com/discussions/google/view/69723-exam-professional-cloud-developer-topic-1-question-117/","timestamp":"2022-01-09 09:32:00","question_images":[],"question_text":"Your team is developing a new application using a PostgreSQL database and Cloud Run. You are responsible for ensuring that all traffic is kept private on Google\nCloud. You want to use managed services and follow Google-recommended best practices. What should you do?","discussion":[{"poster":"alpha_canary","content":"Selected Answer: A\nA is correct.\n\nB & D is rejected easily\nC: its adding unnecessary complexity by putting them in different project. Why would be even do that","timestamp":"1729135560.0","comment_id":"1196958","upvote_count":"1"},{"timestamp":"1720957560.0","content":"Should be B, your app is PostgresSQL + Cloud Run, uses Cloud SQL is change the premise","upvote_count":"1","comments":[{"timestamp":"1720957860.0","poster":"darkblade60","comment_id":"1122566","upvote_count":"1","content":"mmm well, I think its A because CloudSQL can be postgresql"}],"poster":"darkblade60","comment_id":"1122560"},{"comment_id":"1013100","upvote_count":"1","poster":"__rajan__","content":"Selected Answer: A\nI would go with A.","timestamp":"1711034220.0"},{"content":"Selected Answer: A\nThe key here is, Google Managed services and follow Google-recommended best practices: Definitely Cloud SQL instead of Postgres SQL that is almost an unmanaged service managed by custom configurations set by customers.","poster":"purushi","timestamp":"1707139980.0","comment_id":"972950","upvote_count":"2"},{"timestamp":"1689053220.0","upvote_count":"1","comment_id":"772173","poster":"omermahgoub","content":"Selected Answer: A\nThe answer would be A. By using Cloud SQL and Cloud Run in the same project, you can take advantage of the built-in security features and managed services provided by Google Cloud. By configuring a private IP address for Cloud SQL and enabling private services access, you can ensure that all traffic is kept private. You can also create a Serverless VPC Access connector and configure Cloud Run to use this connector to connect to Cloud SQL. This configuration will allow your application to connect to the database securely and privately, following Google-recommended best practices."},{"comment_id":"750830","content":"Selected Answer: A\nA is the answer.\n\nhttps://cloud.google.com/vpc/docs/serverless-vpc-access\nServerless VPC Access makes it possible for you to connect directly to your Virtual Private Cloud network from serverless environments such as Cloud Run, App Engine, or Cloud Functions. Configuring Serverless VPC Access allows your serverless environment to send requests to your VPC network using internal DNS and internal IP addresses (as defined by RFC 1918 and RFC 6598). The responses to these requests also use your internal network.","timestamp":"1687255680.0","upvote_count":"1","poster":"zellck"},{"comment_id":"723425","upvote_count":"1","poster":"TNT87","timestamp":"1684661880.0","content":"Selected Answer: A\nhttps://cloud.google.com/sql/docs/postgres/connect-run#configure\nhttps://cloud.google.com/sql/docs/postgres/connect-run#private-ip\nAnswer A"},{"content":"Selected Answer: A\nA is correct","timestamp":"1676880600.0","comment_id":"649289","poster":"tomato123","upvote_count":"2"},{"poster":"akshaychavan7","upvote_count":"1","comment_id":"643211","content":"Selected Answer: A\nOptions C and D are crossed out as they suggest using different projects.\nTo choose between option A and B, why should we install PostgreSQL explicitly, if it is already present in CloudSQL. So, I will go with CloudSQL whiz Option A.","timestamp":"1675669800.0"},{"poster":"nqthien041292","timestamp":"1666935660.0","content":"Selected Answer: A\nVote A","upvote_count":"2","comment_id":"593557"},{"poster":"Blueocean","timestamp":"1657935240.0","comment_id":"524593","content":"Option A is best option","upvote_count":"3"},{"poster":"scaenruy","timestamp":"1657375200.0","comment_id":"520308","content":"I vote A\nhttps://cloud.google.com/sql/docs/postgres/connect-run#private-ip","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: A\nCorrect option is A","poster":"ParagSanyashiv","timestamp":"1657348380.0","comment_id":"520032"},{"upvote_count":"2","comment_id":"520031","content":"I will go for option A, as mentioned in the question, managed services to be used, in this case using a Cloud SQL would be correct. If a PostgreSQL is installed in a compute engine, then it will be customer managed rather google service managed.","poster":"ParagSanyashiv","timestamp":"1657348320.0"}],"topic":"1","answer_description":"","choices":{"B":"1. Install PostgreSQL on a Compute Engine virtual machine (VM), and enable Cloud Run in the same project. 2. Configure a private IP address for the VM. Enable private services access. 3. Create a Serverless VPC Access connector. 4. Configure Cloud Run to use the connector to connect to the VM hosting PostgreSQL.","D":"1. Install PostgreSQL on a Compute Engine VM, and enable Cloud Run in different projects. 2. Configure a private IP address for the VM. Enable private services access. 3. Create a Serverless VPC Access connector. 4. Set up a VPN connection between the two projects. Configure Cloud Run to use the connector to access the VM hosting PostgreSQL","C":"1. Use Cloud SQL and Cloud Run in different projects. 2. Configure a private IP address for Cloud SQL. Enable private services access. 3. Create a Serverless VPC Access connector. 4. Set up a VPN connection between the two projects. Configure Cloud Run to use the connector to connect to Cloud SQL.","A":"1. Enable Cloud SQL and Cloud Run in the same project. 2. Configure a private IP address for Cloud SQL. Enable private services access. 3. Create a Serverless VPC Access connector. 4. Configure Cloud Run to use the connector to connect to Cloud SQL."},"unix_timestamp":1641717120,"question_id":21,"answer_ET":"A"},{"id":"XBo66Ya5wximJUrl8gwK","answer_ET":"B","discussion":[{"poster":"Blueocean","comment_id":"524594","content":"Agree with Option B","upvote_count":"7","timestamp":"1657935360.0"},{"content":"Yes, I vote B","upvote_count":"5","comment_id":"520309","timestamp":"1657375260.0","poster":"scaenruy"},{"timestamp":"1729135680.0","content":"Selected Answer: B\nhttps://cloud.google.com/storage/docs/access-control/signed-urls#:~:text=X%2DGoog%2DDate%3A%20The,604800%20seconds%20(7%20days)","upvote_count":"1","poster":"alpha_canary","comment_id":"1196959"},{"upvote_count":"1","comment_id":"1013103","timestamp":"1711034280.0","poster":"__rajan__","content":"Selected Answer: B\nB is correct."},{"comment_id":"772174","content":"Selected Answer: B\nB. Generate and assign a Cloud Storage-signed URL for the file. Make the URL available for the client to download.\nThe best approach is to use a Cloud Storage signed URL, which allows you to give time-limited read access to a specific file in your bucket. Once the URL is generated, it can be shared with the client to download the file. This approach provides an easy way to control access to your files, and allows you to revoke access at any time by simply invalidating the URL. It also ensures that the file is stored and served securely via Cloud Storage and is durable, highly available and performant way to serve files.","poster":"omermahgoub","upvote_count":"2","timestamp":"1689053280.0"},{"upvote_count":"1","content":"Selected Answer: B\nB is the answer.\n\nhttps://cloud.google.com/storage/docs/access-control/signed-urls\nA signed URL is a URL that provides limited permission and time to make a request. Signed URLs contain authentication information in their query string, allowing users without credentials to perform specific actions on a resource. When you generate a signed URL, you specify a user or service account which must have sufficient permission to make the request that the signed URL will make. After you generate a signed URL, anyone who possesses it can use the signed URL to perform specified actions, such as reading an object, within a specified period of time.","comment_id":"750823","timestamp":"1687255560.0","poster":"zellck"},{"content":"Selected Answer: B\nB is correct","upvote_count":"2","timestamp":"1676880660.0","comment_id":"649290","poster":"tomato123"}],"url":"https://www.examtopics.com/discussions/google/view/69762-exam-professional-cloud-developer-topic-1-question-118/","question_images":[],"exam_id":7,"question_id":22,"answer_description":"","topic":"1","isMC":true,"question_text":"You are developing an application that will allow clients to download a file from your website for a specific period of time. How should you design the application to complete this task while following Google-recommended best practices?","answer":"B","answers_community":["B (100%)"],"unix_timestamp":1641744060,"answer_images":[],"choices":{"D":"Generate the HTTP cookies with time expiration specified. If the time is valid, copy the file from the Cloud Storage bucket, and make the file available for the client to download.","A":"Configure the application to send the file to the client as an email attachment.","C":"Create a temporary Cloud Storage bucket with time expiration specified, and give download permissions to the bucket. Copy the file, and send it to the client.","B":"Generate and assign a Cloud Storage-signed URL for the file. Make the URL available for the client to download."},"timestamp":"2022-01-09 17:01:00"},{"id":"jrtXR5OncWR5Z8LwOXZH","answer_images":[],"answers_community":["B (72%)","E (28%)"],"timestamp":"2022-01-16 04:37:00","url":"https://www.examtopics.com/discussions/google/view/70092-exam-professional-cloud-developer-topic-1-question-119/","answer":"B","isMC":true,"unix_timestamp":1642304220,"choices":{"E":"Implement a versioning scheme to permit future changes that could be incompatible with the current interface.","D":"Ensure that sufficient instances of the microservice are running to accommodate the performance requirements.","A":"Develop the microservice code in the same programming language used by the microservice caller.","C":"Require asynchronous communications between all microservice implementations and microservice callers.","B":"Create an API contract agreement between the microservice implementation and microservice caller."},"answer_ET":"B","question_images":[],"discussion":[{"upvote_count":"9","comment_id":"593558","content":"Selected Answer: B\nVote BE","poster":"nqthien041292","timestamp":"1651124580.0"},{"content":"Selected Answer: B\nThe correct answers are B and E:\n\nCreate API contract agreements\nImplement a versioning scheme\n\nRationale:\n\nAPI Contracts (B):\n\nDefines clear interfaces\nEnables independent development\nSupports testing\nMaintains boundaries\nEssential for loose coupling\n\n\nVersioning (E):\n\nManages API evolution\nHandles breaking changes\nSupports backward compatibility\nEnables smooth updates\nFuture-proofs services","upvote_count":"1","timestamp":"1734891420.0","poster":"dneves","comment_id":"1330510"},{"comment_id":"1251236","comments":[{"poster":"thewalker","timestamp":"1721398800.0","content":"Let's look at why the other options are less critical:\n\nA. Develop the microservice code in the same programming language used by the microservice caller. While using the same language can simplify initial development, it's not a strict requirement. Microservices can be written in different languages as long as they adhere to the API contract.\nC. Require asynchronous communications between all microservice implementations and microservice callers. Asynchronous communication is often beneficial for microservices, but it's not always necessary. Synchronous communication can be appropriate in some cases, especially for tightly coupled services.\nD. Ensure that sufficient instances of the microservice are running to accommodate the performance requirements. This is important for scaling and performance, but it's more of an operational concern than a design aspect. It's handled through deployment strategies and monitoring.","upvote_count":"1","comment_id":"1251237"}],"poster":"thewalker","upvote_count":"1","content":"Selected Answer: E\nThe two design aspects you should implement for refactoring a monolithic application into microservices are:\n\nB. Create an API contract agreement between the microservice implementation and microservice caller. This is crucial for microservices to communicate effectively. A well-defined API contract ensures that changes to one service don't break other services that depend on it. This promotes independent development and deployment.\nE. Implement a versioning scheme to permit future changes that could be incompatible with the current interface. Microservices are expected to evolve independently. Versioning allows for backward compatibility and graceful transitions when changes are made to the API. This prevents breaking changes and ensures smooth integration.","timestamp":"1721398800.0"},{"timestamp":"1713324660.0","poster":"alpha_canary","comment_id":"1196961","content":"Selected Answer: B\nB & E is the answer","upvote_count":"2"},{"content":"Selected Answer: B\nBD : is the correct one here.\nCreate an API contract agreement between the microservice implementation and microservice caller. This will help to ensure that the microservices are decoupled from each other, and that the caller can be updated without having to update the implementation.\nEnsure that sufficient instances of the microservice are running to accommodate the performance requirements. This is important because microservices are often scaled independently, and you need to make sure that each microservice can handle the expected load.","timestamp":"1695302460.0","poster":"__rajan__","upvote_count":"2","comment_id":"1013105"},{"poster":"purushi","timestamp":"1691235660.0","upvote_count":"1","content":"Selected Answer: E\nVersioning schema is the evolutionary process in API development.\nFor eg: \n/v1/users/1234\n/v2/users/1234","comment_id":"972960"},{"poster":"purushi","timestamp":"1691235540.0","comment_id":"972959","content":"Selected Answer: B\nAPI contract design is the first step in design-first approach while creating APIs (REST). We can also follow code-first approach while providing solution via public APIs. Design first approach is more flexible and provides sufficient amount of time for the dev team to gather requirements and to understand what customer really wants.","upvote_count":"1"},{"upvote_count":"1","timestamp":"1676970780.0","poster":"edward_zhang","comment_id":"816388","content":"D & E，\nB and E are same thing. D is considering capacity of micro service."},{"timestamp":"1673422200.0","comment_id":"772177","content":"Selected Answer: B\nB. Guarantees that the two parties are communicating in a well-defined way, which makes the microservices more flexible, composable, and easy to understand.\n\nE. Allows to make changes to the service's API while still maintaining backward compatibility. With versioning, new and old consumers can continue to use the service without interruption as new features are added.\n\nOn the other hand, developing the microservice code in the same programming language as the microservice caller does not promote loose coupling, and it may also increase the complexity of the system as it will depend on language-specific features. Asynchronous communications are also not always necessary and depend on the use case and requirement. Ensuring sufficient instances of the microservice are running can be done by using a scalability strategy such as Auto-scaling, and this is not a specific design aspect.","upvote_count":"1","poster":"omermahgoub"},{"content":"BE with the recommendation on https://cloud.google.com/architecture/migrating-a-monolithic-app-to-microservices-gke","poster":"telp","upvote_count":"1","timestamp":"1673108700.0","comment_id":"768719"},{"poster":"zellck","comment_id":"750819","upvote_count":"2","timestamp":"1671537840.0","content":"Selected Answer: B\nBE is the answer.\n\nhttps://cloud.google.com/architecture/migrating-a-monolithic-app-to-microservices-gke#api_contracts\nEach microservice should be invoked only from a set of interfaces. Each interface should in turn be clearly defined by a contract that can be implemented using an API definition language like the OpenAPI Initiative specification or RAML. Having well-defined API contracts and interfaces allows you to develop tests as a main component of your solution (for example, by applying test-driven development) against these API interfaces.\n\nhttps://cloud.google.com/architecture/migrating-a-monolithic-app-to-microservices-gke#versioning\nTo give you flexibility in managing updates that might break existing clients, you should implement a versioning scheme for your microservices. Versioning lets you deploy updated versions of a microservice without affecting the clients that are using an existing version."},{"content":"1. When you incrementally migrate services, configure communication between services and monolith to go through well-defined API contracts. Answer B\n\n2. https://cloud.google.com/architecture/microservices-architecture-refactoring-monoliths#design_interservice_communication Ans C\nAns B,C","comment_id":"723442","comments":[{"timestamp":"1669032120.0","comment_id":"723446","upvote_count":"1","poster":"TNT87","content":"To support C\nhttps://cloud.google.com/architecture/microservices-architecture-interservice-communication#logical_separation_of_service\nIn this document, you isolate the payment service from the rest of the application. All flows in the original Online Boutique application are synchronous. \"In the refactored application, the payment process is converted to an asynchronous flow. Therefore, when you receive a purchase request, instead of processing it immediately, you provide a \"request received\" confirmation to the user. In the background, an asynchronous request is triggered to the payment service to process the payment.\""},{"timestamp":"1669032720.0","poster":"TNT87","upvote_count":"1","comment_id":"723453","content":"To support B\n*When you incrementally migrate services, configure communication between services and monolith to go through well-defined API contracts.\nhttps://cloud.google.com/architecture/microservices-architecture-refactoring-monoliths"},{"timestamp":"1669033020.0","upvote_count":"1","poster":"TNT87","comment_id":"723455","content":"I personally do not see or find anything supporting E at all..."}],"timestamp":"1669032000.0","poster":"TNT87","upvote_count":"1"},{"timestamp":"1660975920.0","comment_id":"649291","upvote_count":"4","content":"Selected Answer: E\nBE are correct","poster":"tomato123"},{"comment_id":"630893","content":"Note to admin: change this question's answer to reflect a 2 answer selection","upvote_count":"4","poster":"jdx000","timestamp":"1657713540.0"},{"poster":"jdx000","upvote_count":"3","timestamp":"1657603380.0","comment_id":"630304","content":"Selected Answer: B\nB & E seems best"},{"poster":"hitmax87","content":"B and D","timestamp":"1649120520.0","comments":[{"content":"For me to ensure that sufficient instances of the microservice are running to accommodate the performance requirements is not needed because of the big variety of services that provide autoscaling. \nBE","comment_id":"608510","poster":"[Removed]","upvote_count":"1","timestamp":"1653764880.0"}],"comment_id":"580980","upvote_count":"2"},{"content":"Agree with B and E.\nhttps://cloud.google.com/appengine/docs/standard/java/designing-microservice-api#using_strong_contracts","timestamp":"1646324460.0","upvote_count":"2","poster":"fabiam93","comment_id":"560209"},{"content":"This one is tricky one as C and E could be better option as well but there was no mention about reliability…","comment_id":"557056","poster":"GCPCloudArchitectUser","comments":[{"poster":"GCPCloudArchitectUser","upvote_count":"4","content":"I will agree with B and E","comment_id":"557057","timestamp":"1645916100.0"}],"upvote_count":"2","timestamp":"1645916100.0"},{"content":"Selected Answer: E\nagree with option E","poster":"runrajarun","comment_id":"528909","upvote_count":"2","timestamp":"1642733640.0"},{"timestamp":"1642304220.0","comment_id":"524596","poster":"Blueocean","upvote_count":"3","content":"Option B & E seems best"}],"question_id":23,"topic":"1","question_text":"Your development team has been asked to refactor an existing monolithic application into a set of composable microservices. Which design aspects should you implement for the new application? (Choose two.)","answer_description":"","exam_id":7},{"id":"EjdZtzc4HR23pBChZjBR","url":"https://www.examtopics.com/discussions/google/view/36293-exam-professional-cloud-developer-topic-1-question-12/","answer":"B","answer_description":"For the GKE ingress controller to use your readinessProbes as health checks, the Pods for an Ingress must exist at the time of Ingress creation. If your replicas are scaled to 0, the default health check will apply.","question_id":24,"question_images":["https://www.examtopics.com/assets/media/exam-media/04137/0000800001.jpg","https://www.examtopics.com/assets/media/exam-media/04137/0000800002.jpg","https://www.examtopics.com/assets/media/exam-media/04137/0000800003.jpg","https://www.examtopics.com/assets/media/exam-media/04137/0000800004.jpg"],"exam_id":7,"topic":"1","answers_community":[],"discussion":[{"upvote_count":"1","poster":"wanrltw","timestamp":"1731109200.0","comment_id":"1066030","content":"B:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/"},{"content":"Option B is the correct code snippet to include in the Pod configuration in order to use the /healthz endpoint as a readiness probe.\n\nThe liveness probe, specified in option A, is used to determine whether the application is running and responsive. If the liveness probe fails, the application is considered to be in a failed state and will be restarted.\n\nThe readiness probe, specified in option B, is used to determine when a Pod is ready to receive traffic. If the readiness probe fails, the Pod will not receive traffic from the load balancer until it becomes healthy again.\n\nOption C, loadbalancerHealthCheck, is not a valid field in a Pod configuration.\n\nOption D, healthCheck, is also not a valid field in a Pod configuration.","comment_id":"763227","timestamp":"1704119940.0","upvote_count":"3","poster":"omermahgoub"},{"comment_id":"668626","upvote_count":"3","comments":[{"timestamp":"1694674200.0","content":"On 10th read, It's more likely they mean the initial phase of the lifecycle so it's B.\nBut the wording here is terrible. Hopefully they refined the question in the real exam.","upvote_count":"1","comment_id":"668685","poster":"fanilgor"}],"poster":"fanilgor","timestamp":"1694668800.0","content":"Readiness probe marks the pod as \"Running\" and can START accepting traffic.\nHowever, after the pod is in a \"Running\" state, the Liveness probe comes in and acts as the health check for the entire lifecycle of the pod.\n\nSo think of it this way. The pod passes its initial check (readiness), accepts traffic for a while then crashes (logically, the pod can still be \"Running\").\nThe Liveness probe is responsible for detecting it. Otherwise, the LB could still pass traffic to a pod that can't serve traffic.\n\nTherefore, I believe it's A."},{"upvote_count":"2","content":"B is correct","timestamp":"1692509340.0","poster":"tomato123","comment_id":"649169"},{"comment_id":"607306","content":"B is correct according with https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/","timestamp":"1685030280.0","poster":"ruben82","upvote_count":"1"},{"content":"https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-features\n\ningress backendconfig can set healthCheck, but this resource can not set httpGet \n\n```\napiVersion: cloud.google.com/v1\nkind: BackendConfig\nmetadata:\n name: my-backendconfig\nspec:\n healthCheck:\n checkIntervalSec: INTERVAL\n timeoutSec: TIMEOUT\n healthyThreshold: HEALTH_THRESHOLD\n unhealthyThreshold: UNHEALTHY_THRESHOLD\n type: PROTOCOL\n requestPath: PATH\n port: PORT\n```","upvote_count":"1","comment_id":"548228","timestamp":"1676512080.0","poster":"nazonazonazo"},{"comment_id":"413561","timestamp":"1658714520.0","content":"B is correct","upvote_count":"2","poster":"wilwong"},{"poster":"syu31svc","timestamp":"1655707260.0","comment_id":"386004","content":"https://cloud.google.com/kubernetes-engine/docs/concepts/ingress:\n\"GKE can infer some or all of the parameters for a health check if the Serving Pods use a Pod template with a container whose readiness probe has attributes that can be interpreted as health check parameters. See Parameters from a readiness probe for implementation details and Default and inferred parameters for a list of attributes that can be used to create health check parameters. Only the GKE Ingress controller supports inferring parameters from a readiness probe.\"\n\nB is correct","comments":[{"timestamp":"1656051420.0","content":"yes, readness probe is for checking if the pod can accept traffic.","comment_id":"389270","poster":"yuchun","upvote_count":"2"}],"upvote_count":"3"},{"poster":"saurabh1805","comment_id":"214311","comments":[{"poster":"meh_33","comment_id":"679365","content":"B correct","timestamp":"1695698220.0","upvote_count":"1"}],"content":"B is correct answer\n\nhttps://cloud.google.com/blog/products/gcp/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes","timestamp":"1636236600.0","upvote_count":"2"}],"isMC":false,"answer_images":[],"answer_ET":"B","question_text":"You are planning to deploy your application in a Google Kubernetes Engine (GKE) cluster. The application exposes an HTTP-based health check at /healthz. You want to use this health check endpoint to determine whether traffic should be routed to the pod by the load balancer.\nWhich code snippet should you include in your Pod configuration?\nA.\n//IMG//\n\nB.\n//IMG//\n\nC.\n//IMG//\n\nD.\n//IMG//","unix_timestamp":1604700600,"timestamp":"2020-11-06 23:10:00"},{"id":"uMe4wWja3BVVyDKuQNT5","question_images":[],"unix_timestamp":1642304400,"answer_images":[],"answer_ET":"D","url":"https://www.examtopics.com/discussions/google/view/70093-exam-professional-cloud-developer-topic-1-question-120/","isMC":true,"answer":"D","exam_id":7,"question_text":"You deployed a new application to Google Kubernetes Engine and are experiencing some performance degradation. Your logs are being written to Cloud\nLogging, and you are using a Prometheus sidecar model for capturing metrics. You need to correlate the metrics and data from the logs to troubleshoot the performance issue and send real-time alerts while minimizing costs. What should you do?","question_id":25,"answers_community":["D (100%)"],"timestamp":"2022-01-16 04:40:00","answer_description":"","choices":{"B":"Export the Cloud Logging logs and the Prometheus metrics to Cloud Bigtable. Run a query to join the results, and analyze in Google Data Studio.","A":"Create custom metrics from the Cloud Logging logs, and use Prometheus to import the results using the Cloud Monitoring REST API.","D":"Export the Prometheus metrics and use Cloud Monitoring to view them as external metrics. Configure Cloud Monitoring to create log-based metrics from the logs, and correlate them with the Prometheus data.","C":"Export the Cloud Logging logs and stream the Prometheus metrics to BigQuery. Run a recurring query to join the results, and send notifications using Cloud Tasks."},"topic":"1","discussion":[{"upvote_count":"1","timestamp":"1726925400.0","content":"Selected Answer: D\nThis option is the most cost-effective because it does not require you to export any data to Bigtable or BigQuery. It is also the most efficient option because it allows you to correlate the metrics and logs in real time.","poster":"__rajan__","comment_id":"1013111"},{"content":"Selected Answer: D\nCorrelate Promethius metrics and Cloud logging logs: We need to compare these two logs. Promethius is an external metrics which can be a library dependency used in the application. To compare Apple vs apple, we need to bring Prometheus metrics to GCP and should configure Cloud monitoring to treat them as an external metric.","comment_id":"972971","poster":"purushi","upvote_count":"1","timestamp":"1722858840.0"},{"timestamp":"1704958320.0","comments":[{"comment_id":"772181","poster":"omermahgoub","content":"D. Export the Prometheus metrics and use Cloud Monitoring to view them as external metrics. Configure Cloud Monitoring to create log-based metrics from the logs, and correlate them with the Prometheus data.","timestamp":"1704958320.0","upvote_count":"1"}],"poster":"omermahgoub","comment_id":"772180","content":"Selected Answer: D\nThis option allows you to use Cloud Monitoring to view the Prometheus metrics and create log-based metrics from the logs. This allows you to correlate the metrics and logs in one place. By using Cloud Monitoring, you can also set up alerting rules and dashboards which can help you to identify and troubleshoot the performance issues in real-time and with low costs.\nIt's not necessary to export the data to another storage to perform the correlation and to set up notifications, it can all be done directly in the Cloud Monitoring, taking advantage of its features.","upvote_count":"1"},{"timestamp":"1702996200.0","comment_id":"749920","upvote_count":"1","poster":"zellck","content":"Selected Answer: D\nD is the answer.\n\nhttps://cloud.google.com/stackdriver/docs/solutions/gke/prometheus#viewing_metrics"},{"upvote_count":"2","content":"Selected Answer: D\nD is correc","comment_id":"649292","timestamp":"1692511920.0","poster":"tomato123"},{"timestamp":"1691304540.0","upvote_count":"1","content":"Selected Answer: D\nD is a fair choice here!","poster":"akshaychavan7","comment_id":"643226"},{"poster":"nehaxlpb","content":"Selected Answer: D\nhttps://cloud.google.com/stackdriver/docs/solutions/gke/prometheus#viewing_metrics","timestamp":"1689759960.0","comment_id":"633476","upvote_count":"1"},{"poster":"jitu028","comment_id":"583328","upvote_count":"1","timestamp":"1681047060.0","content":"Correct Answer is D"},{"poster":"GCPCloudArchitectUser","timestamp":"1677452460.0","upvote_count":"1","content":"Selected Answer: D\nI agree with D as well … looking for minimizing the costs = use Cloud Monitoring which has alerting bult-in","comment_id":"557064"},{"poster":"Blueocean","comment_id":"524597","timestamp":"1673840400.0","upvote_count":"4","content":"Agree with Option D"}]}],"exam":{"isImplemented":true,"lastUpdated":"11 Apr 2025","numberOfQuestions":338,"isBeta":false,"isMCOnly":false,"name":"Professional Cloud Developer","id":7,"provider":"Google"},"currentPage":5},"__N_SSP":true}