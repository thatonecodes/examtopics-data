{"pageProps":{"questions":[{"id":"jjWYoZZUl7U4iPxITlyr","question_images":[],"unix_timestamp":1605108060,"question_text":"Your application is built as a custom machine image. You have multiple unique deployments of the machine image. Each deployment is a separate managed instance group with its own template. Each deployment requires a unique set of configuration values. You want to provide these unique values to each deployment but use the same custom machine image in all deployments. You want to use out-of-the-box features of Compute Engine.\nWhat should you do?","topic":"1","question_id":296,"answer_images":[],"answer_description":"","answer_ET":"D","url":"https://www.examtopics.com/discussions/google/view/36776-exam-professional-cloud-developer-topic-1-question-60/","answers_community":["D (100%)"],"isMC":true,"timestamp":"2020-11-11 16:21:00","answer":"D","discussion":[{"timestamp":"1641268380.0","upvote_count":"7","content":"A and B are wrong for sure\n\nhttps://cloud.google.com/compute/docs/instances/startup-scripts:\n\"A startup script is a file that contains commands that run when a virtual machine (VM) instance boots:\n\nAnswer is D","comment_id":"397925","poster":"syu31svc"},{"timestamp":"1620739260.0","content":"C would be correct answer here.","upvote_count":"6","poster":"saurabh1805","comment_id":"217355"},{"comment_id":"1168506","timestamp":"1725755040.0","upvote_count":"1","content":"Selected Answer: D\nD. Place the unique configuration values in the instance template instance metadata.\n\nThe instance metadata is a good place to store configuration values that are unique to each managed instance group while using the same machine image across all deployments. This allows you to use the same base image but customize the behavior of each instance group based on the metadata passed to them. Metadata can be accessed by the instances at startup, and scripts can be written to configure the instance based on these values.","poster":"santoshchauhan"},{"comment_id":"1011866","content":"Selected Answer: D\nD is correct.","poster":"__rajan__","timestamp":"1710910440.0","upvote_count":"1"},{"comment_id":"769143","timestamp":"1688792520.0","upvote_count":"2","poster":"omermahgoub","content":"Option D is the correct answer. Instance metadata is metadata that is associated with a Compute Engine instance and can be used to pass configuration values to the instance at startup. It can be accessed from within the instance itself, allowing you to use the same custom machine image in all deployments and still provide unique configuration values to each deployment. Option A is not a good solution because the persistent disk is not automatically attached to the instance at startup and is not intended for storing configuration values. Option B is not a good solution because Cloud Bigtable is a NoSQL database, which is not well-suited for storing configuration values. Option C is not a good solution because the startup script is executed after the instance has started, so it cannot be used to pass configuration values to the instance at startup."},{"upvote_count":"2","comment_id":"653799","content":"Selected Answer: D\nConfiguration values should be metadata","timestamp":"1677564300.0","poster":"brunoguzzo18"},{"content":"Selected Answer: D\nD is correct","poster":"tomato123","timestamp":"1676879340.0","upvote_count":"3","comment_id":"649223"},{"comment_id":"602732","timestamp":"1668655260.0","upvote_count":"1","content":"the answer should be D","poster":"szl0144"},{"comment_id":"519484","content":"Selected Answer: D\nCorrect answer is D","timestamp":"1657274340.0","poster":"ParagSanyashiv","upvote_count":"2"},{"poster":"Valant","comment_id":"471403","content":"No - In this case it is a stateful MIG - per this link the answer is indeed A:\nhttps://cloud.google.com/compute/docs/instance-groups/stateful-migs#per_instance_configs","upvote_count":"1","timestamp":"1651429560.0"},{"content":"Each deployment is a separate managed instance group with its own template. \nEach deployment requires a unique set of configuration values. \n\nEither be C or D\n\nConfiguration values should be metadata\n\nWhich leads the answer to be D","comment_id":"439422","poster":"woriheck93","timestamp":"1646455200.0","upvote_count":"3"},{"timestamp":"1640874720.0","poster":"kernel1973","comment_id":"394696","upvote_count":"4","content":"Option could be D."},{"comments":[{"poster":"ktktoh","content":"Agree with Option D based on this ref: https://cloud.google.com/compute/docs/storing-retrieving-metadata#custom","comments":[{"upvote_count":"4","content":"agree with option D","poster":"yuchun","comment_id":"388475","timestamp":"1640239020.0"}],"upvote_count":"5","comment_id":"331951","timestamp":"1633784220.0"}],"comment_id":"303152","content":"Option D: at the time of deployment, configuration values in the instance template instance metadata.","poster":"dwbi_shrikant","upvote_count":"4","timestamp":"1630729800.0"}],"exam_id":7,"choices":{"C":"Place the unique configuration values in the instance template startup script.","B":"Place the unique configuration values in a Cloud Bigtable table.","D":"Place the unique configuration values in the instance template instance metadata.","A":"Place the unique configuration values in the persistent disk."}},{"id":"gOUmYUAsMT80rhFKewPQ","discussion":[{"poster":"santoshchauhan","timestamp":"1725755400.0","comment_id":"1168508","upvote_count":"1","content":"Selected Answer: C\nC. Use Cloud Profiler to determine which functions within the application take the longest amount of time.\n\nCloud Profiler is a tool provided by Google Cloud that helps you analyze and understand the performance characteristics of your application. It allows you to see where the application spends its time, how much CPU and memory it uses, and which functions or methods are the most time-consuming. This is particularly useful when you need to diagnose performance bottlenecks that are not apparent during local development but become evident in a production environment, such as a Compute Engine instance."},{"poster":"__rajan__","content":"Selected Answer: C\nC is correct","timestamp":"1710912840.0","comment_id":"1011878","upvote_count":"1"},{"poster":"telp","comment_id":"774508","content":"Selected Answer: C\nA is incorrect because the argument “it worked on my machine” but doesn’t work on Google Cloud is never valid.\nB is incorrect because Debugger snapshots only lets us review the application at a single point in time.\nC is correct because it provides latency per function and historical latency information.\nD is incorrect because while it works it requires a lot of work and is not the clear, optimal choice.","timestamp":"1689246420.0","upvote_count":"2"},{"comment_id":"769144","poster":"omermahgoub","upvote_count":"1","content":"Option C is the correct answer. Cloud Profiler is a performance analysis tool that allows you to identify performance issues in your application. It provides detailed information about the time spent executing different functions in your application, which can help you identify the cause of the performance issue. Option A is not a good solution because filing a ticket with Cloud Support will not help you diagnose the problem. Option B is not a good solution because Cloud Debugger snapshots provide information about the state of variables at a specific point in time, but they do not provide information about the time spent executing different functions. Option D is not a good solution because adding logging commands to the application and using Cloud Logging can help you identify where the latency problem occurs, but it will not provide information about the time spent executing different functions.","timestamp":"1688792580.0"},{"timestamp":"1679993700.0","poster":"subesingh","upvote_count":"1","comment_id":"681532","content":"C is the correct answer"},{"comment_id":"649224","upvote_count":"3","poster":"tomato123","content":"Selected Answer: C\nC is correct","timestamp":"1676879340.0"},{"poster":"maxdanny","content":"Selected Answer: C\nCorrect is C","timestamp":"1674659880.0","upvote_count":"1","comment_id":"636725"},{"poster":"ParagSanyashiv","timestamp":"1657274460.0","upvote_count":"3","comment_id":"519488","content":"Selected Answer: C\nCorrect answer is C"},{"comment_id":"516212","content":"This should be C","timestamp":"1656898800.0","upvote_count":"1","poster":"mister"}],"isMC":true,"answer":"C","question_images":[],"url":"https://www.examtopics.com/discussions/google/view/69407-exam-professional-cloud-developer-topic-1-question-61/","answer_ET":"C","answer_images":[],"choices":{"C":"Use Cloud Profiler to determine which functions within the application take the longest amount of time.","D":"Add logging commands to the application and use Cloud Logging to check where the latency problem occurs.","B":"Use Cloud Debugger snapshots to look at a point-in-time execution of the application.","A":"File a ticket with Cloud Support indicating that the application performs faster locally."},"timestamp":"2022-01-04 04:40:00","answer_description":"","unix_timestamp":1641267600,"answers_community":["C (100%)"],"question_id":297,"question_text":"Your application performs well when tested locally, but it runs significantly slower after you deploy it to a Compute Engine instance. You need to diagnose the problem. What should you do?\nWhat should you do?","topic":"1","exam_id":7},{"id":"LEg2pqTx6eJaW1eX3VbY","exam_id":7,"choices":{"C":"Change /product-details to perform the requests in parallel.","D":"Store the /sku-details information in a database, and replace the webservice call with a database query.","B":"Change the Persistent Disk type to SSD.","A":"Increase the size of the instance class."},"question_id":298,"topic":"1","isMC":true,"discussion":[{"content":"I agree with this, answer is C","poster":"certificationguru","upvote_count":"9","comment_id":"295090","timestamp":"1645366320.0"},{"comment_id":"1011879","upvote_count":"1","timestamp":"1726803360.0","poster":"__rajan__","content":"Selected Answer: C\nC is correct."},{"upvote_count":"1","timestamp":"1704697440.0","comment_id":"769145","poster":"omermahgoub","content":"Option C is the correct answer. By changing /product-details to perform the requests in parallel, you can reduce the time it takes for the request to complete by making multiple requests at the same time rather than sequentially. This will allow you to retrieve the information for all four products more quickly. Option A is not a good solution because increasing the size of the instance class may not necessarily reduce the time it takes for the request to complete. Option B is not a good solution because changing the Persistent Disk type to SSD will not have any impact on the time it takes for the request to complete. Option D is not a good solution because storing the /sku-details information in a database and replacing the webservice call with a database query will not necessarily reduce the time it takes for the request to complete, and it will add unnecessary complexity to the application."},{"timestamp":"1695316800.0","comment_id":"675375","content":"Selected Answer: C\nC feels right","upvote_count":"1","poster":"N8dagr8"},{"poster":"tomato123","content":"Selected Answer: C\nC is correct","timestamp":"1692510540.0","upvote_count":"1","comment_id":"649225"},{"content":"Selected Answer: C\nVote C","comment_id":"647878","upvote_count":"1","timestamp":"1692241440.0","poster":"kinoko1330"},{"content":"App Engine is serverless so A and B are eliminated\n\nBetween C and D, I'd take C. \n\nhttps://cloud.google.com/appengine/docs/standard/java/datastore/queries:\n\"This solution is no longer recommended\"","comments":[{"content":"On 2nd thought, App Engine has instance classes:\n\nhttps://cloud.google.com/appengine/docs/standard\n\nSo I'll change my answer to A","timestamp":"1658112000.0","comments":[{"poster":"syu31svc","comment_id":"417708","upvote_count":"3","timestamp":"1659242040.0","content":"Pardon my fickle-mindedness\n\nBack to C as options A & B are wrong as they do not have a direct correlation with the issue and there is nothing to suggest they need to be increased."}],"upvote_count":"1","comment_id":"408680","poster":"syu31svc"}],"poster":"syu31svc","upvote_count":"1","comment_id":"402994","timestamp":"1657410360.0"}],"timestamp":"2021-02-20 15:12:00","answer_images":[],"answer":"C","question_images":["https://www.examtopics.com/assets/media/exam-media/04137/0004500001.jpg"],"question_text":"You have an application running in App Engine. Your application is instrumented with Stackdriver Trace. The /product-details request reports details about four known unique products at /sku-details as shown below. You want to reduce the time it takes for the request to complete.\nWhat should you do?\n//IMG//","url":"https://www.examtopics.com/discussions/google/view/45279-exam-professional-cloud-developer-topic-1-question-62/","answer_ET":"C","answer_description":"","unix_timestamp":1613830320,"answers_community":["C (100%)"]},{"id":"WPWrFsB62CDo2zLyqNvv","question_images":[],"answers_community":["BE (89%)","11%"],"choices":{"C":"Create a Cloud Storage bucket in the EU region to store information for EU users only.","B":"Create a dataset in the EU region that will keep information about EU users only.","A":"Use BigQuery federated queries to query data from Cloud Storage.","D":"Re-upload your data using to a Cloud Dataflow pipeline by filtering your user records out.","E":"Use DML statements in BigQuery to update/delete user records based on their requests."},"topic":"1","discussion":[{"poster":"saurabh1805","timestamp":"1605108540.0","comments":[{"comments":[{"comment_id":"330872","timestamp":"1617855840.0","content":"Bigquery dataset can choose single region to store data, so B would be better","upvote_count":"3","poster":"Ayuewinc"}],"timestamp":"1617328740.0","comment_id":"326262","content":"Second point \"must be stored in a single region specifically for EU users \" will achieve through option C only hence for me C and E is correct answer","upvote_count":"2","poster":"cloud_mk"}],"upvote_count":"11","comment_id":"217363","content":"B and E is correct answer for me."},{"poster":"syu31svc","upvote_count":"5","timestamp":"1625875140.0","content":"https://cloud.google.com/bigquery/docs/reference/standard-sql/data-manipulation-language\nThe link above supports E since \"delete all user account information upon user request\" as per qn\n\nhttps://cloud.google.com/architecture/bigquery-data-warehouse:\n\"A dataset is bound to a location. The dataset locations are as follows:\nMulti-regional: A large geographic area, such as the United States, that contains two or more geographic places.\"\n\nB is the other answer","comment_id":"402999"},{"comments":[{"upvote_count":"1","comment_id":"1249677","poster":"thewalker","timestamp":"1721225760.0","content":"Here's why the other options are less suitable:\n\nA. Use BigQuery federated queries to query data from Cloud Storage: Federated queries are useful for accessing data in other sources, but they don't solve the problem of storing EU user data in a specific region or providing a mechanism for deleting user data.\nC. Create a Cloud Storage bucket in the EU region to store information for EU users only: While Cloud Storage can be used for data storage, it's not the primary data warehouse for your application. You'd need to manage data movement between BigQuery and Cloud Storage, which adds complexity.\nD. Re-upload your data using to a Cloud Dataflow pipeline by filtering your user records out: This is a time-consuming and potentially disruptive process. It's not the most efficient way to handle user data deletion requests."}],"poster":"thewalker","comment_id":"1249676","timestamp":"1721225700.0","content":"Selected Answer: BE\nThe two actions you should take are:\n\nB. Create a dataset in the EU region that will keep information about EU users only. This directly addresses the requirement to store EU user data in a single EU region.\nE. Use DML statements in BigQuery to update/delete user records based on their requests. This allows you to efficiently delete user account information upon request, fulfilling the GDPR requirement.","upvote_count":"1"},{"timestamp":"1709865480.0","content":"Selected Answer: BE\nB. Creating a separate dataset in the EU region for EU users allows your company to ensure that all data for these users is stored in a specific geographic location, complying with regional data residency requirements. BigQuery allows you to select the region where your dataset resides, and having a dedicated dataset for EU users makes it easier to manage and enforce policies specific to EU data.\n\nE. Using Data Manipulation Language (DML) statements in BigQuery (such as DELETE and UPDATE) enables your company to comply with requests to delete or modify user account information. This capability is essential for adhering to regulations like the GDPR, which may require companies to delete users' personal data upon request.","comment_id":"1168514","upvote_count":"1","poster":"santoshchauhan"},{"upvote_count":"1","poster":"__rajan__","timestamp":"1695181860.0","content":"Selected Answer: BE\nBest option is BE.","comment_id":"1011881"},{"comments":[{"content":"A is not a good solution because using BigQuery federated queries to query data from Cloud Storage does not address either of the requirements. Federated queries allow you to query data that is stored outside of BigQuery, such as in Cloud Storage, but they do not help you store data in a specific region or delete data upon request","poster":"omermahgoub","timestamp":"1673161620.0","comment_id":"769152","upvote_count":"1"},{"comment_id":"769150","upvote_count":"1","timestamp":"1673161560.0","content":"D is not a good solution because re-uploading your data using a Cloud Dataflow pipeline is unnecessarily complex and does not address either of the requirements. Filtering user records out during the re-upload process does not allow you to store data in a specific region or delete data upon request.","poster":"omermahgoub"}],"upvote_count":"1","timestamp":"1673161560.0","comment_id":"769149","content":"B and E are the correct answers. To comply with the requirements, you should create a dataset in the EU region that will keep information about EU users only. This will allow you to store all EU user data in a single region specifically for EU users. Additionally, you should use DML statements in BigQuery to update or delete user records based on their requests. This will allow you to delete all user account information upon user request as required.","poster":"omermahgoub"},{"comment_id":"649227","poster":"tomato123","content":"Selected Answer: BE\nBE are correct sorry","timestamp":"1660974600.0","upvote_count":"2"},{"poster":"maxdanny","timestamp":"1658755500.0","upvote_count":"1","content":"Selected Answer: BE\nCloud Storage is out of scope !!","comment_id":"636732"},{"upvote_count":"1","comment_id":"593438","poster":"nqthien041292","timestamp":"1651103700.0","content":"Selected Answer: BE\nVote BE"},{"upvote_count":"1","comment_id":"519503","poster":"ParagSanyashiv","content":"Selected Answer: BE\nB and E are the correct answer","timestamp":"1641644340.0"},{"timestamp":"1638260940.0","poster":"Gini","upvote_count":"2","comment_id":"490522","content":"B & E. Data is already stored in BigQuery, I do not see any reason to have anything to do with Cloud Storage. Also, BigQuery allows DML to do updates and deletes. So I would choose B & E"}],"answer":"BE","isMC":true,"timestamp":"2020-11-11 16:29:00","exam_id":7,"url":"https://www.examtopics.com/discussions/google/view/36778-exam-professional-cloud-developer-topic-1-question-63/","question_id":299,"unix_timestamp":1605108540,"answer_description":"","answer_images":[],"answer_ET":"BE","question_text":"Your company has a data warehouse that keeps your application information in BigQuery. The BigQuery data warehouse keeps 2 PBs of user data. Recently, your company expanded your user base to include EU users and needs to comply with these requirements:\n✑ Your company must be able to delete all user account information upon user request.\n✑ All EU user data must be stored in a single region specifically for EU users.\nWhich two actions should you take? (Choose two.)"},{"id":"nFAiCrovkOAsgyvQtoG1","exam_id":7,"question_text":"Your App Engine standard configuration is as follows:\nservice: production\ninstance_class: B1\nYou want to limit the application to 5 instances.\nWhich code snippet should you include in your configuration?","answer":"D","topic":"1","question_id":300,"question_images":[],"answers_community":["D (80%)","13%","7%"],"answer_description":"","answer_ET":"D","choices":{"C":"basic_scaling: instances: 5 min_pending_latency: 30ms","D":"basic_scaling: max_instances: 5 idle_timeout: 10m","A":"manual_scaling: instances: 5 min_pending_latency: 30ms","B":"manual_scaling: max_instances: 5 idle_timeout: 10m"},"discussion":[{"upvote_count":"2","timestamp":"1734030000.0","poster":"Blitzer","comment_id":"1325815","content":"Selected Answer: D\nPer doc: https://cloud.google.com/appengine/docs/standard/reference/app-yaml?tab=java#scaling_elements \n\nbasic_scaling:\n max_instances: 5\n idle_timeout: 10m\n\nmanual_scaling:\n instances: 5\n\nOnly basic_scaling (D) is proper answer here"},{"comment_id":"1249681","poster":"thewalker","comments":[{"comment_id":"1249682","upvote_count":"1","content":"Let's break down why the other options are incorrect:\n\nA. manual_scaling: instances: 5 min_pending_latency: 30ms : While instances: 5 sets the number of instances, min_pending_latency is used for automatic scaling, which is not applicable in this case.\nC. basic_scaling: instances: 5 min_pending_latency: 30ms : basic_scaling is for automatic scaling based on request rate. You want manual scaling, so this is incorrect.\nD. basic_scaling: max_instances: 5 idle_timeout: 10m : Similar to option C, basic_scaling is not the correct scaling method for this scenario.\nIn summary: Option B provides the correct configuration for limiting your App Engine Standard application to 5 instances using manual scaling.","poster":"thewalker","timestamp":"1721225940.0"}],"content":"Selected Answer: B\nThe correct answer is B. manual_scaling: max_instances: 5 idle_timeout: 10m .\n\nHere's why:\n\nmanual_scaling : You're using App Engine Standard, which requires you to explicitly define the scaling method. manual_scaling is the correct choice for limiting the number of instances.\nmax_instances: 5 : This setting directly limits the maximum number of instances to 5, fulfilling your requirement.\nidle_timeout: 10m : This setting defines how long an idle instance will remain active before being shut down. It's optional but helps manage costs by automatically shutting down unused instances.","timestamp":"1721225940.0","upvote_count":"2"},{"upvote_count":"1","content":"Selected Answer: D\nBasic Scaling with max_instances (Option D): Basic scaling is suitable for applications that do not need to keep instances running all the time but may require instances to handle requests and then shut down when idle. The max_instances parameter sets the maximum number of instances, and idle_timeout specifies the amount of time that an instance can stay idle before it is shut down.","comment_id":"1168516","timestamp":"1709865840.0","poster":"santoshchauhan"},{"upvote_count":"1","poster":"__rajan__","content":"D is correct.","comment_id":"1011882","timestamp":"1695181920.0"},{"content":"The correct answer is D, only configuration permitted and lawful according to documentation:\nhttps://cloud.google.com/appengine/docs/standard/reference/app-yaml?tab=python#manual_scaling","upvote_count":"1","comment_id":"989789","timestamp":"1692949080.0","poster":"maxdanny"},{"content":"The correct answer is D, which specifies the max_instances parameter of the basic_scaling configuration to limit the application to a maximum of 5 instances. The basic_scaling configuration is used for applications that are driven by user activity, and it allows you to specify the maximum number of instances that you want to run using the max_instances parameter.","comment_id":"769158","timestamp":"1673162040.0","comments":[{"poster":"omermahgoub","upvote_count":"1","comment_id":"769160","timestamp":"1673162040.0","content":"B is not a good solution because the manual_scaling configuration is not being used, and the idle_timeout parameter has no effect on the maximum number of instances."}],"poster":"omermahgoub","upvote_count":"1"},{"timestamp":"1660974660.0","comment_id":"649228","upvote_count":"4","content":"Selected Answer: D\nD is correct","poster":"tomato123"},{"content":"Selected Answer: D\nhttps://cloud.google.com/appengine/docs/legacy/standard/python/how-instances-are-managed#scaling_types","poster":"nehaxlpb","comment_id":"639024","upvote_count":"2","timestamp":"1659075540.0"},{"poster":"maxdanny","timestamp":"1658755860.0","upvote_count":"1","comments":[{"timestamp":"1700065560.0","comment_id":"1071622","comments":[{"content":"sorry, no option min_pending_latency for basic scaling i mean","comment_id":"1071624","upvote_count":"1","timestamp":"1700065620.0","poster":"kchp"}],"poster":"kchp","upvote_count":"1","content":"but seems no min_latency_instance for basic scaling\n\nhttps://cloud.google.com/appengine/docs/standard/reference/app-yaml?tab=python#basic_scaling"}],"comment_id":"636735","content":"Selected Answer: C\nC because the question says limit to 5 instances, not at max 5 instance"},{"content":"Selected Answer: D\nOption D - Max of 5","upvote_count":"2","poster":"[Removed]","timestamp":"1653499980.0","comment_id":"607336"},{"comment_id":"519506","upvote_count":"1","timestamp":"1641644460.0","content":"Selected Answer: D\nD is the correct answer","poster":"ParagSanyashiv"},{"timestamp":"1625875380.0","poster":"syu31svc","upvote_count":"3","content":"https://cloud.google.com/appengine/docs/standard/python/how-instances-are-managed:\n\"A service with basic scaling is configured by setting the maximum number of instances in the max_instances parameter of the basic_scaling setting. The number of live instances scales with the processing volume.\"\n\nAnswer is D","comment_id":"403000"},{"poster":"StelSen","upvote_count":"2","timestamp":"1613791140.0","content":"Option: D is correct. Link: https://cloud.google.com/appengine/docs/standard/python/how-instances-are-managed","comment_id":"294746"},{"timestamp":"1613724300.0","content":"Ya Answer is D\nhttps://cloud.google.com/appengine/docs/standard/python/config/appref#scaling_elements","comment_id":"294063","upvote_count":"1","poster":"Dinit"},{"poster":"saurabh1805","content":"D is correct answer here.","timestamp":"1605108960.0","upvote_count":"4","comment_id":"217369"}],"url":"https://www.examtopics.com/discussions/google/view/36779-exam-professional-cloud-developer-topic-1-question-64/","timestamp":"2020-11-11 16:36:00","unix_timestamp":1605108960,"answer_images":[],"isMC":true}],"exam":{"id":7,"provider":"Google","numberOfQuestions":338,"lastUpdated":"11 Apr 2025","name":"Professional Cloud Developer","isBeta":false,"isMCOnly":false,"isImplemented":true},"currentPage":60},"__N_SSP":true}