{"pageProps":{"questions":[{"id":"SFpJSStqTbXralQNsKDc","exam_id":7,"answer":"B","timestamp":"2022-12-10 03:59:00","unix_timestamp":1670641140,"answer_description":"","topic":"1","isMC":true,"choices":{"D":"Use Cloud Build to package the application, and deploy to a Google Kubernetes Engine cluster. Use namespaces to separate the environments.","A":"Rewrite the application using .NET Core, and deploy to Cloud Run. Use revisions to separate the environments.","C":"Deploy the application using MS Web Deploy, and make sure to always use the latest, patched MS Windows Server base image in Compute Engine.","B":"Use Cloud Build to deploy the application as a new Compute Engine image for each build. Use this image in each environment."},"answers_community":["B (100%)"],"question_id":56,"url":"https://www.examtopics.com/discussions/google/view/90878-exam-professional-cloud-developer-topic-1-question-149/","answer_images":[],"question_images":[],"question_text":"Your development team has been tasked with maintaining a .NET legacy application. The application incurs occasional changes and was recently updated. Your goal is to ensure that the application provides consistent results while moving through the CI/CD pipeline from environment to environment. You want to minimize the cost of deployment while making sure that external factors and dependencies between hosting environments are not problematic. Containers are not yet approved in your organization. What should you do?","answer_ET":"B","discussion":[{"content":"Selected Answer: B\nB is correct.","timestamp":"1726999260.0","upvote_count":"1","poster":"__rajan__","comment_id":"1013937"},{"upvote_count":"1","timestamp":"1722946800.0","poster":"purushi","comment_id":"973812","content":"Selected Answer: B\nThe key is containers are not supported. The best possible option is, use cloud build to build the application and deploy under the virtual machine instance. Create a snapshot of the disk and create image out of it. Or create an image directly. Use this image as instance template for other environments."},{"content":"Selected Answer: B\nhttps://cloud.google.com/architecture/modernization-path-dotnet-applications-google-cloud#take_advantage_of_compute_engine\nThe reason why B is better than D, hence had to paste the link above.\nAnswer B","timestamp":"1703495880.0","poster":"TNT87","upvote_count":"2","comment_id":"755545"},{"poster":"zellck","comment_id":"747895","timestamp":"1702803300.0","upvote_count":"2","content":"Selected Answer: B\nB is the answer.\n\nhttps://cloud.google.com/architecture/modernization-path-dotnet-applications-google-cloud#phase_1_rehost_in_the_cloud"},{"upvote_count":"3","poster":"melisargh","comment_id":"740655","timestamp":"1702177140.0","content":"Selected Answer: B\nAD are wrong because containers are not yet approved!\nfor the simplicity part i thinks is B \n\nhttps://cloud.google.com/architecture/modernization-path-dotnet-applications-google-cloud"}]},{"id":"2YvES82GV2pBvRjIH0FP","unix_timestamp":1607970780,"discussion":[{"poster":"fraloca","comments":[{"poster":"meh_33","upvote_count":"1","comment_id":"679374","timestamp":"1695699480.0","content":"If the task you want to perform requires capabilities that are not provided by a public image, a supported builder, or a community-contributed buider, you can build your own image and use it in a build step.\nB"},{"upvote_count":"2","timestamp":"1655710080.0","comment_id":"386037","poster":"syu31svc","content":"I agree"}],"upvote_count":"9","timestamp":"1639506780.0","comment_id":"243831","content":"B is correct answer\nhttps://cloud.google.com/cloud-build/docs/configuring-builds/use-community-and-custom-builders#creating_a_custom_builder"},{"upvote_count":"1","content":"Selected Answer: B\nI think is a generic solution because I can use it in other projects.","poster":"dscifo","timestamp":"1729764360.0","comment_id":"1052715"},{"timestamp":"1726753500.0","upvote_count":"1","poster":"__rajan__","content":"Selected Answer: B\nB is correct.","comment_id":"1011392"},{"comment_id":"903415","timestamp":"1716312840.0","upvote_count":"1","poster":"gc_exam2022","content":"Selected Answer: B\nB is correct"},{"comment_id":"649176","poster":"tomato123","content":"Selected Answer: B\nB is correct","timestamp":"1692509580.0","upvote_count":"2"},{"poster":"tomato123","upvote_count":"1","timestamp":"1692509400.0","content":"Selected Answer: B\nB is correct","comment_id":"649173"},{"timestamp":"1686722340.0","poster":"javibadillo","comment_id":"616060","content":"Selected Answer: B\nb https://cloud.google.com/cloud-build/docs/configuring-builds/use-community-and-custom-builders#creating_a_custom_builder","upvote_count":"1"},{"poster":"nazonazonazo","comment_id":"548597","timestamp":"1676552700.0","comments":[{"poster":"closer89","upvote_count":"1","timestamp":"1714835280.0","content":"cache image","comment_id":"889466"}],"content":"B is correct. \nBut in usual A is faster than B(download docker image speed <<< download binary)","upvote_count":"1"}],"answer_images":[],"question_text":"You are using Cloud Build to build and test application source code stored in Cloud Source Repositories. The build process requires a build tool not available in the Cloud Build environment.\nWhat should you do?","answers_community":["B (100%)"],"topic":"1","answer":"B","timestamp":"2020-12-14 19:33:00","answer_description":"","isMC":true,"choices":{"C":"Include the binary in your Cloud Source Repositories repository and reference it in your build scripts.","B":"Build a custom cloud builder image and reference the image in your build steps.","A":"Download the binary from the internet during the build process.","D":"Ask to have the binary added to the Cloud Build environment by filing a feature request against the Cloud Build public Issue Tracker."},"question_images":[],"question_id":57,"url":"https://www.examtopics.com/discussions/google/view/39865-exam-professional-cloud-developer-topic-1-question-15/","answer_ET":"B","exam_id":7},{"id":"p0sY3EQBTRBmuwtZRP1r","answer_images":[],"question_images":[],"isMC":true,"answer_description":"","choices":{"C":"Deploy the application via a continuous delivery pipeline using blue/green deployments. Use Cloud Monitoring to look for performance issues, and launch fully when the metrics support it.","A":"Use Cloud Load Balancing to slowly ramp up traffic between versions. Use Cloud Monitoring to look for performance issues.","B":"Deploy the application via a continuous delivery pipeline using canary deployments. Use Cloud Monitoring to look for performance issues. and ramp up traffic as the metrics support it.","D":"Deploy the application using kubectl and set the spec.updateStrategv.type to RollingUpdate. Use Cloud Monitoring to look for performance issues, and run the kubectl rollback command if there are any issues."},"answer":"B","question_text":"The new version of your containerized application has been tested and is ready to deploy to production on Google Kubernetes Engine. You were not able to fully load-test the new version in pre-production environments, and you need to make sure that it does not have performance problems once deployed. Your deployment must be automated. What should you do?","exam_id":7,"question_id":58,"topic":"1","answers_community":["B (67%)","D (20%)","7%"],"url":"https://www.examtopics.com/discussions/google/view/91837-exam-professional-cloud-developer-topic-1-question-150/","timestamp":"2022-12-16 15:01:00","unix_timestamp":1671199260,"discussion":[{"poster":"thewalker","comment_id":"1301044","timestamp":"1729519140.0","upvote_count":"1","content":"Selected Answer: B\nOption C involves blue/green deployments, which can be more complex and risky compared to canary deployments. With blue/green, you're swapping between two environments, and if there’s an issue with the new version, you might need to do a full rollback, which can disrupt your service.\n\nCanary deployments, on the other hand, allow you to gradually shift traffic to the new version. This way, you can closely monitor the performance and catch any issues early on without affecting all your users.\n\nBlue/green deployments are useful in some scenarios, but for this case, where you couldn’t fully load-test beforehand, a more cautious, incremental approach like canary deployments would be more effective."},{"timestamp":"1695377100.0","poster":"__rajan__","content":"Selected Answer: B\nB. Deploy the application via a continuous delivery pipeline using canary deployments. Use Cloud Monitoring to look for performance issues, and ramp up traffic as the metrics support it.","comment_id":"1013942","upvote_count":"1"},{"poster":"purushi","content":"Selected Answer: B\nI go with B. The key is depolyment must be automated. With canary and CI/CD pipeline in place, we can adjust the traffic based on the input from Canary users.","upvote_count":"1","comment_id":"973828","timestamp":"1691325480.0"},{"upvote_count":"1","content":"Selected Answer: B\nB. Automated deployment can be done with Cloud Deploy.\nA: No. Not relevant and I can't find documents for Cloud Load Balancing supports canary deployment.\nC: No. Blue / green is not possible because \"not able to fully load-test the new version in pre-production environments\" - either no budget or other causes.\nD: No. Not automated and in-place upgrade will have performance hit.","poster":"zanhsieh","comment_id":"918588","timestamp":"1686250320.0"},{"upvote_count":"3","poster":"closer89","timestamp":"1682151300.0","content":"Selected Answer: B\ndeployment should be automated\nhttps://cloud.google.com/deploy/docs/deployment-strategies/canary#types_of_canary","comment_id":"877138"},{"comment_id":"856895","timestamp":"1680257220.0","poster":"Teraflow","content":"Selected Answer: B\nB. Deploy the application via a continuous delivery pipeline using canary deployments. Use Cloud Monitoring to look for performance issues, and ramp up traffic as the metrics support it.\n\nCanary deployment strategy can be used to mitigate risk in the production deployment process. In this strategy, a small subset of traffic is routed to the new version of the application, while the rest of the traffic is sent to the current version. This allows for real-time monitoring of the new version's performance before fully rolling it out to all users. If there are any issues or performance problems, the traffic can be immediately routed back to the previous version. Cloud Monitoring can be used to monitor performance metrics and make informed decisions about when to ramp up traffic to the new version","upvote_count":"3"},{"comment_id":"823705","poster":"Pime13","upvote_count":"1","content":"Selected Answer: D\ni'd choose d.","timestamp":"1677503160.0"},{"comment_id":"772694","content":"Selected Answer: A\nBased on the link provided by the guys on the comments, after reviewing the links, I can see that\n\nOption A \"Use Cloud Load Balancing to slowly ramp up traffic between versions. Use Cloud Monitoring to look for performance issues\" is a good approach, using Cloud Load Balancing, traffic is gradually shifted between the versions, and by using Cloud monitoring, you can detect any performance issues early on.","upvote_count":"1","comments":[{"upvote_count":"1","comment_id":"877136","content":"deployment should be automated","poster":"closer89","timestamp":"1682151060.0"},{"comment_id":"772695","timestamp":"1673452140.0","content":"Option C \"Deploy the application via a continuous delivery pipeline using blue/green deployments. Use Cloud Monitoring to look for performance issues, and launch fully when the metrics support it\" is also a good approach, as it allows you to test the new version of the application on a production-like environment and compare it against the previous version using real traffic, and once the metrics are good, switch all traffic to the new version.\n\nOption D \"Deploy the application using kubectl and set the spec.updateStrategy.type to RollingUpdate. Use Cloud Monitoring to look for performance issues, and run the kubectl rollback command if there are any issues\" is also a good option, in this case as well you are incrementally rolling out the new version, and monitoring its performance, if any issues occur, you can roll back the update.","poster":"omermahgoub","comments":[{"poster":"omermahgoub","comment_id":"772696","content":"Ultimately, the approach you choose will depend on the specifics of your application and infrastructure, but any of these options can work well if implemented correctly.","upvote_count":"1","timestamp":"1673452140.0"}],"upvote_count":"1"}],"timestamp":"1673452140.0","poster":"omermahgoub"},{"timestamp":"1673005500.0","upvote_count":"2","content":"Selected Answer: D\nAnswer D\nhttps://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/updating-apps#overview\nKindly master the requirements of the question, and be very aware of the question's key words","poster":"TNT87","comment_id":"767576","comments":[{"content":"deployment shouldn't be automated ?","upvote_count":"1","comment_id":"1075458","timestamp":"1700489640.0","poster":"Kadhem"}]},{"poster":"TNT87","content":"https://kubernetes.io/docs/tutorials/kubernetes-basics/update/update-intro/\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/updating-apps#overview\nAnswer D.\nThe rest need testing before...","comment_id":"755542","upvote_count":"2","timestamp":"1671959460.0"},{"comment_id":"747262","upvote_count":"1","content":"Selected Answer: C\nC is the answer.\n\nhttps://cloud.google.com/architecture/implementing-deployment-and-testing-strategies-on-gke#perform_a_bluegreen_deployment","poster":"zellck","timestamp":"1671199260.0"}],"answer_ET":"B"},{"id":"TpvIKzgKIUvpIglWJUZn","topic":"1","answer":"B","question_id":59,"question_text":"Users are complaining that your Cloud Run-hosted website responds too slowly during traffic spikes. You want to provide a better user experience during traffic peaks. What should you do?","exam_id":7,"answer_description":"","answer_images":[],"answer_ET":"B","url":"https://www.examtopics.com/discussions/google/view/89931-exam-professional-cloud-developer-topic-1-question-151/","answers_community":["B (89%)","11%"],"isMC":true,"unix_timestamp":1670138460,"timestamp":"2022-12-04 08:21:00","choices":{"D":"Ensure that timeout exceptions and errors cause the Cloud Run instance to exit quickly so a replacement instance can be started.","A":"Read application configuration and static data from the database on application startup.","B":"Package application configuration and static data into the application image during build time.","C":"Perform as much work as possible in the background after the response has been returned to the user."},"question_images":[],"discussion":[{"upvote_count":"1","poster":"thewalker","comments":[{"poster":"thewalker","upvote_count":"1","content":"Potential for Overloading: If too much work is deferred to the background, it could lead to resource contention and potentially degrade performance for subsequent requests.\nWhile background processing can be beneficial for certain tasks, it's important to strike a balance between improving overall performance and addressing the initial latency concerns.\n\nOption B, which involves pre-packaging configuration and static data into the application image, is a more direct and effective way to address the initial latency issue, as it reduces the cold start time and improves performance under load.","comment_id":"1301062","timestamp":"1729521060.0"}],"timestamp":"1729521060.0","comment_id":"1301061","content":"Selected Answer: B\nOption C: Performing as much work as possible in the background after the response has been returned to the user, can be a valuable strategy to improve overall performance, but it might not directly address the initial latency issue that users experience during traffic spikes.\n\nHere's a breakdown of why:\n\nInitial Response Latency: Users primarily care about the time it takes to receive the initial response, not the time it takes to complete background tasks. While background processing can improve overall system efficiency, it won't reduce the perceived latency of the initial request."},{"content":"Selected Answer: B\nIf images and config info available in the image (within the namespace of the hosting system) then latency is less. Can serve resources easily.","timestamp":"1691326080.0","upvote_count":"1","poster":"purushi","comment_id":"973834"},{"comment_id":"772698","upvote_count":"2","comments":[{"content":"Option A \"Read application configuration and static data from the database on application startup\" will put more load on database during traffic spike, this will slow down the application's response time.\n\nOption C \"Perform as much work as possible in the background after the response has been returned to the user\" could be a good approach, it allows the user to receive a response quickly, but the background work could take a long time and cause a delay in processing and might not be acceptable for certain use-cases.\n\nOption D \"Ensure that timeout exceptions and errors cause the Cloud Run instance to exit quickly so a replacement instance can be started\" this is good practice and can help ensure that when an instance is having problems, it can be quickly replaced with a new one, but this will not improve the user experience during traffic peaks, but instead it will minimize the impact of a failed instance on the service's availability.","comment_id":"772699","upvote_count":"1","timestamp":"1673452260.0","poster":"omermahgoub"}],"content":"Selected Answer: B\nB. Package application configuration and static data into the application image during build time.\n\nBy packaging application configuration and static data into the application image during build time, the application can quickly serve requests without having to make additional requests to a database, thus reducing response time. Additionally, you might consider caching static data in the application to reduce latency and provide faster responses to user requests, also you could move some of the computation that is not time critical to be done asynchronously.","timestamp":"1673452260.0","poster":"omermahgoub"},{"comment_id":"769625","timestamp":"1673195580.0","content":"Selected Answer: B\nB is the answer from the recommendation of google because \n\"For starters, on Cloud Run, the size of your container image does not affect cold start or request processing time\" so you can add the configuration and static data.","poster":"telp","upvote_count":"1"},{"content":"https://cloud.google.com/blog/topics/developers-practitioners/3-ways-optimize-cloud-run-response-times\nAnswer B","timestamp":"1671956940.0","comment_id":"755518","upvote_count":"1","poster":"TNT87"},{"upvote_count":"3","timestamp":"1671712800.0","comment_id":"753280","poster":"zellck","content":"Selected Answer: B\nB is the answer.\n\nhttps://cloud.google.com/blog/topics/developers-practitioners/3-ways-optimize-cloud-run-response-times\nInstead of computing things upon startup, compute them lazily. The initialization of global variables always occurs during startup, which increases cold start time. Use lazy initialization for infrequently used objects to defer the time cost and decrease cold start times."},{"comments":[{"upvote_count":"2","timestamp":"1671632460.0","content":"I disagree, the answer is B; with image caching the startup time won't change significantly. As for answer c, Cloud Run can't do any background work unless you use \"always-on\" cpu allocation, but that comes with a big increase in cost.","comment_id":"752415","poster":"[Removed]"}],"timestamp":"1670138460.0","poster":"gardislan18","upvote_count":"1","content":"Selected Answer: C\nNot A - should store static data as global variables\nNot B - the larger the image, could slow down the startup time \nNot D - no errors were mentioned, app is only slowing down when traffic spikes\n\nC - process in backgrounds","comment_id":"734906"}]},{"id":"vJwZWq9htIAWGiiobXiu","question_id":60,"question_images":[],"question_text":"You are a developer working on an internal application for payroll processing. You are building a component of the application that allows an employee to submit a timesheet, which then initiates several steps:\n\n• An email is sent to the employee and manager, notifying them that the timesheet was submitted.\n• A timesheet is sent to payroll processing for the vendor's API.\n• A timesheet is sent to the data warehouse for headcount planning.\n\nThese steps are not dependent on each other and can be completed in any order. New steps are being considered and will be implemented by different development teams. Each development team will implement the error handling specific to their step. What should you do?","answer_images":[],"answer_description":"","exam_id":7,"choices":{"D":"Create a timesheet microservice deployed to Google Kubernetes Engine. The microservice calls each downstream step and waits for a successful response before calling the next step.","B":"Create a Pub/Sub topic for each step. Create a subscription for each downstream development team to subscribe to their step's topic.","A":"Deploy a Cloud Function for each step that calls the corresponding downstream system to complete the required action.","C":"Create a Pub/Sub topic for timesheet submissions. Create a subscription for each downstream development team to subscribe to the topic."},"timestamp":"2022-12-04 12:17:00","unix_timestamp":1670152620,"answer_ET":"C","answer":"C","answers_community":["C (100%)"],"url":"https://www.examtopics.com/discussions/google/view/89953-exam-professional-cloud-developer-topic-1-question-152/","topic":"1","isMC":true,"discussion":[{"upvote_count":"1","comment_id":"1014615","poster":"__rajan__","content":"Selected Answer: C\nPub/Sub is a messaging service that allows you to decouple microservices and other applications. It is a good choice for this use case because it is scalable, reliable, and easy to use.","timestamp":"1727063460.0"},{"timestamp":"1722949260.0","upvote_count":"1","comment_id":"973851","poster":"purushi","content":"Selected Answer: C\nThis is a tricky question. The context is in developing team developing the application. So C is the best fit. After the development, when the application is running then each timesheet submit event can publish 3 events/messages so that 3 independent microservices for each operation can kick in parallel and perform the tasks."},{"poster":"omermahgoub","comment_id":"772701","timestamp":"1704988380.0","upvote_count":"1","content":"Selected Answer: C\nC is correct"},{"comment_id":"755517","upvote_count":"3","timestamp":"1703492700.0","poster":"TNT87","content":"Answer C"},{"content":"Selected Answer: C\nC is the answer.","poster":"zellck","comment_id":"747252","upvote_count":"2","timestamp":"1702734900.0"},{"content":"Selected Answer: C\noption c","upvote_count":"1","comment_id":"743882","timestamp":"1702462860.0","poster":"sharath25"},{"poster":"kisswd","comment_id":"735031","timestamp":"1701688620.0","content":"Selected Answer: C\nOne to many pattern, C is correct","upvote_count":"3"}]}],"exam":{"isMCOnly":false,"provider":"Google","name":"Professional Cloud Developer","isBeta":false,"lastUpdated":"11 Apr 2025","id":7,"numberOfQuestions":338,"isImplemented":true},"currentPage":12},"__N_SSP":true}