{"pageProps":{"questions":[{"id":"u7IHj1QE855hfptsy0Ob","answer_description":"","timestamp":"2020-03-15 13:59:00","exam_id":11,"answer_images":[],"topic":"1","answers_community":["BDE (94%)","6%"],"discussion":[{"poster":"jvg637","upvote_count":"39","comments":[{"timestamp":"1664376720.0","content":"Redis is also NoSQL","upvote_count":"2","poster":"sergio6","comment_id":"453474","comments":[{"comment_id":"459269","upvote_count":"3","content":"Redis is limited to 1 TB capacity quota per region. So it doesn't satisfy the requirement.\nhttps://cloud.google.com/memorystore/docs/redis/quotas","poster":"vholti","timestamp":"1665238800.0","comments":[{"upvote_count":"1","comment_id":"1012986","poster":"ckanaar","timestamp":"1726914300.0","content":"Memorystore, Google's managed Redis service is. But OS Redis is not. Though it is hard to find a 100GB RAM machine"}]}]}],"comment_id":"64269","content":"BDE. Hive is not for NoSQL","timestamp":"1615813140.0"},{"comment_id":"398565","upvote_count":"32","content":"Answer is BDE - \nA. Redis - Redis is an in-memory non-relational key-value store. Redis is a great choice for implementing a highly available in-memory cache to decrease data access latency, increase throughput, and ease the load off your relational or NoSQL database and application. Since the question does not ask cache, A is discarded.\nB. HBase - Meets reqs\nC. MySQL - they do not need ACID, so not needed.\nD. MongoDB - Meets reqs\nE. Cassandra - Apache Cassandra is an open source NoSQL distributed database trusted by thousands of companies for scalability and high availability without compromising performance. Linear scalability and proven fault-tolerance on commodity hardware or cloud infrastructure make it the perfect platform for mission-critical data.\nF. HDFS with Hive - Hive allows users to read, write, and manage petabytes of data using SQL. Hive is built on top of Apache Hadoop, which is an open-source framework used to efficiently store and process large datasets. As a result, Hive is closely integrated with Hadoop, and is designed to work quickly on petabytes of data. HIVE IS NOT A DATABSE.","comments":[{"upvote_count":"1","content":"HDFS is. Hadoop Distributed File System. HDFS is storage and HIVE is for processing.","poster":"[Removed]","comment_id":"815459","timestamp":"1708443240.0"}],"timestamp":"1656957540.0","poster":"awssp12345"},{"poster":"sravi1200","content":"Selected Answer: BDE\nOption A: Redis cannot handle large scale data it is NOSQL db to store small amount of key value pairs, \nOption B: HBase NOSQL db built on Hadoop does not support ACID Properties. Correct answer\nOption C: Mysql Does not store telemetry IOT data. Mysql is a relational database structured data only stored.\nOption D, E: NOSQL Databases, Option F: HDFS with hive used for batch processing not real time streaming data.\nOption","upvote_count":"1","comment_id":"1329511","timestamp":"1734706140.0"},{"timestamp":"1707906660.0","upvote_count":"1","poster":"musumusu","comment_id":"808280","content":"BDE\nFaster Database are NoSql db than SQL, Cassandra is the fastest one in market now than Hbase and then others, in given list MongoBD"},{"upvote_count":"1","timestamp":"1693073340.0","content":"\"Which three databases meet your requirements? \"\nHive is not a database server.\nHBase, Mongo and Cassandra are and meet the criteria.\nBDE is the right answer","poster":"MisuLava","comment_id":"652304"},{"upvote_count":"1","poster":"sraakesh95","comment_id":"523699","content":"Selected Answer: BDE\n@hendrixlives","timestamp":"1673724900.0"},{"timestamp":"1672842720.0","comment_id":"516718","content":"Selected Answer: BDE\nas explained by hendrixlives","poster":"medeis_jar","upvote_count":"1"},{"upvote_count":"14","content":"Selected Answer: BDE\nBDE:\nA. Redis is a key-value store (and in many cases used as in-memory and non persistent cache). It is not designed for \"100TB per year\" of highly available storage.\nB. HBase is similar to Google Bigtable, fits the requirements perfectly: highly available, scalable and with very low latency.\nC. MySQL is a relational DB, designed precisely for ACID transactions and not for the stated requirements. Also, growth may be an issue.\nD. MongoDB is a document-db used for high volume data and maintains currently used data in RAM, so performance is usually really good. Should also fit the requirements well.\nE. Cassandra is designed precisely for highly available massive datasets, and a fine tuned cluster may offer low latency in reads. Fits the requirements.\nF. HDFS with Hive is great for OLAP and data-warehouse scenarios, allowing to solve map-reduce problems using an SQL subset, but the latency is usually really high (we may talk about seconds, not milliseconds, when obtaining results), so this does not complies with the requirements.","timestamp":"1671266160.0","comment_id":"503477","poster":"hendrixlives"},{"timestamp":"1669630140.0","content":"Selected Answer: BEF\nVery strange question, seems outdated and irrelevant to me as it doesn't contain any GCP products :)\n\nAnyway, I would choose BEF.\nRedis is in-memory key value, not good\nHBase yes, excelent case for linear growth and a column-oriented database\nmysql not good, too big and no need for transactionality\nMongodb, document db with flexible schema ??\nYes Cassandra, good use case\nApache Hive is a data warehouse software project built on top of Apache Hadoop for providing data query and analysis. \nhttps://www.wikiwand.com/en/Apache_Hive","comment_id":"489048","poster":"MaxNRG","upvote_count":"1","comments":[{"upvote_count":"2","content":"Latency in Hive is usually quite high, and one of the requirements is \"low latency\"","comment_id":"503460","poster":"hendrixlives","comments":[{"poster":"MaxNRG","comment_id":"529979","upvote_count":"1","content":"good point!","timestamp":"1674405660.0"},{"timestamp":"1674667620.0","upvote_count":"2","poster":"MaxNRG","comment_id":"532296","content":"agreed on BDE"}],"timestamp":"1671264060.0"}]},{"comment_id":"462779","content":"Ans: B, D and E","timestamp":"1665861360.0","poster":"anji007","upvote_count":"2"},{"comment_id":"392208","timestamp":"1656345540.0","upvote_count":"2","poster":"sumanshu","content":"vote for BDE"},{"comments":[{"poster":"Manue","timestamp":"1650055140.0","comment_id":"336586","content":"Hive is not for low latency queries. It is for analytics.","upvote_count":"5"}],"timestamp":"1647133680.0","comment_id":"309318","content":"BEF\nB: HBASE is based upon BigTable\nE: Cassandra is low latency columnar distributed database like BigTable\nF: HDFS is low latency distributed file system and Hive will help with running the queries","poster":"BhupiSG","upvote_count":"2"},{"poster":"daghayeghi","content":"BDE:\nThese are NoSQL DB, Hive is not for NoSQL.","timestamp":"1646937720.0","comment_id":"307377","upvote_count":"2"},{"timestamp":"1645601460.0","comment_id":"297224","content":"The answer is ADE, the statement says they require a NoSQL with high availability and low latency, they do not require consistency. \nC. it is not NoSQL.\nF. it is not NoSQL.\nB. it is NoSQL but focused on strong consistency and based on HDFS, you need HDFS for Hbase.\nTherefore the answer is ADE","upvote_count":"1","poster":"Rayleigh"},{"poster":"daghayeghi","upvote_count":"1","comment_id":"290613","content":"BDF:\nRedis and Cassandra have only Rowkey and couldn't be indexed, and MySQL isn't NoSQL, Then B D and E is correct answer.","timestamp":"1644889920.0"},{"comment_id":"285684","content":"Correct BDE","timestamp":"1644256500.0","poster":"naga","upvote_count":"3"},{"upvote_count":"3","poster":"apnu","content":"it should be BDE because Hive is a sql based datawarehouse , it is not a nosql DB","comment_id":"255432","timestamp":"1640849820.0"},{"upvote_count":"2","timestamp":"1636957200.0","poster":"GeeBeeEl","content":"I agree with HaroldBenites and I like your answer. I did some research and yes, you cannot query HBase by individual fields. See https://opensource.com/article/19/8/apache-hive-vs-apache-hbase you cannot query by row 00001 or 00002 etc but not by the field!!! wow","comment_id":"219536"},{"comment_id":"170743","poster":"Tanmoyk","timestamp":"1630408560.0","upvote_count":"2","content":"B D E seems most relevant here."},{"upvote_count":"3","poster":"haroldbenites","timestamp":"1629330540.0","content":"ADE are NoSQL.\nB is NoSQL but doesnÂ´t efficient for run queires by individual fileds. It is by rowkey","comments":[{"content":"Hbase is a wide column database, like Cassandra. If it's not efficient for run queries by individual fields, Cassandra is also not. So the E would also be wrong.","comment_id":"453473","poster":"sergio6","upvote_count":"1","timestamp":"1664376300.0"}],"comment_id":"161158"},{"poster":"saurabh1805","upvote_count":"3","timestamp":"1629231240.0","content":"BDE is correct answer","comment_id":"160334"},{"poster":"ch3n6","comment_id":"115165","content":"BDE: https://db-engines.com/en/system/Cassandra%3BHive","upvote_count":"4","timestamp":"1624241700.0"},{"upvote_count":"6","timestamp":"1616856900.0","poster":"[Removed]","content":"Answer: B, D, E\nDescription: These are NoSQL DB","comment_id":"68622"},{"poster":"[Removed]","upvote_count":"9","content":"i would choose : BDE","timestamp":"1616313300.0","comment_id":"66428"},{"poster":"rickywck","upvote_count":"2","timestamp":"1615953480.0","content":"I would pick BEF. MongoDB is not an ideal bigData storage but a NoSQL instead.","comment_id":"65006"}],"answer":"BDE","question_text":"You are choosing a NoSQL database to handle telemetry data submitted from millions of Internet-of-Things (IoT) devices. The volume of data is growing at 100\nTB per year, and each data entry has about 100 attributes. The data processing pipeline does not require atomicity, consistency, isolation, and durability (ACID).\nHowever, high availability and low latency are required.\nYou need to analyze the data by querying against individual fields. Which three databases meet your requirements? (Choose three.)","unix_timestamp":1584277140,"question_id":266,"choices":{"D":"MongoDB","F":"HDFS with Hive","E":"Cassandra","A":"Redis","B":"HBase","C":"MySQL"},"question_images":[],"url":"https://www.examtopics.com/discussions/google/view/16661-exam-professional-data-engineer-topic-1-question-50/","answer_ET":"BDE","isMC":true},{"id":"4z8dTcMiSVQr5uARIEtt","answer":"ACE","topic":"1","timestamp":"2020-03-13 10:28:00","answer_description":"","answer_ET":"ACE","question_text":"You are training a spam classifier. You notice that you are overfitting the training data. Which three actions can you take to resolve this problem? (Choose three.)","choices":{"C":"Use a smaller set of features","A":"Get more training examples","E":"Increase the regularization parameters","F":"Decrease the regularization parameters","D":"Use a larger set of features","B":"Reduce the number of training examples"},"unix_timestamp":1584091680,"answers_community":["ACE (95%)","5%"],"isMC":true,"discussion":[{"poster":"madhu1171","timestamp":"1599982080.0","upvote_count":"68","comment_id":"63454","content":"it should be ACE"},{"comment_id":"66431","content":"Should be ACE","comments":[{"timestamp":"1600668360.0","upvote_count":"14","comment_id":"66432","content":"prevent overfitting: less variables, regularisation, early ending on the training","poster":"[Removed]"}],"upvote_count":"19","timestamp":"1600668240.0","poster":"[Removed]"},{"content":"Selected Answer: ACE\nA. Because getting more training samples reduces significantly the risk of overfitting since the algorithm can learn from a more general dataset.\n\nC. Introducing lots of features increases the risk to introducing irrelevant information, driving the model to avoid focusing on the truly important patterns.\n\nE. Because regularization increases the penalty term to the loss function, which discourages complex models with large coefficients avoiding overfitting.","timestamp":"1742680920.0","poster":"monyu","comment_id":"1402070","upvote_count":"1"},{"timestamp":"1718362200.0","content":"Selected Answer: ACE\nTo address the problem of overfitting in training a spam classifier, you should consider the following three actions:\n\nA. Get more training examples:\n\nWhy: More training examples can help the model generalize better to unseen data. A larger dataset typically reduces the chance of overfitting, as the model has more varied examples to learn from.\nC. Use a smaller set of features:\n\nWhy: Reducing the number of features can help prevent the model from learning noise in the data. Overfitting often occurs when the model is too complex for the amount of data available, and having too many features can contribute to this complexity.\nE. Increase the regularization parameters:\n\nWhy: Regularization techniques (like L1 or L2 regularization) add a penalty to the model for complexity. Increasing the regularization parameter will strengthen this penalty, encouraging the model to be simpler and thus reducing overfitting.","comment_id":"1096468","poster":"TVH_Data_Engineer","upvote_count":"5"},{"comment_id":"958543","upvote_count":"2","timestamp":"1705850700.0","poster":"Mathew106","content":"Selected Answer: ACE\n100% ACE\n\nWe need more data because less data induces overfitting. We need less features to make the problem simpler to learn and not promote learning a very complex function for thousands of features that might not apply to the test data. We also need to use regularization to keep the weights constrained."},{"comment_id":"954523","poster":"theseawillclaim","upvote_count":"1","timestamp":"1705523100.0","content":"Selected Answer: ACE\nDefinitely ACE. \nMore training data and less variables can prevent the model from being too picky or specific."},{"timestamp":"1692767280.0","upvote_count":"1","comment_id":"818897","content":"? why A is answer? even though 'more training example' not 'more dataset example'. I understand that there is dataset same and there is only change the size of training examples size. in this case there are valid and test example should be reduced. isn't it?","poster":"jin0"},{"poster":"desertlotus1211","comments":[{"content":"Regularization is a technique that penalizes the coefficient. In an overfit model, the coefficients are generally inflated. Thus, Regularization adds penalties to the parameters and avoids them weigh heavily.\n\nA & C are correct... the third one --- not sure on","upvote_count":"1","comment_id":"774736","poster":"desertlotus1211","timestamp":"1689262740.0"}],"content":"Collect more training data: This will help the model generalize better and reduce overfitting.\n\nUse regularization techniques: Techniques such as L1 and L2 regularization can be applied to the model's weights to prevent them from becoming too large and causing overfitting.\n\nUse early stopping: This involves monitoring the performance of the model on a validation set during training, and stopping the training when the performance on the validation set starts to degrade. This helps to prevent the model from becoming too complex and overfitting the training data.","upvote_count":"1","timestamp":"1689262500.0","comment_id":"774731"},{"upvote_count":"1","poster":"RoshanAshraf","comment_id":"770710","timestamp":"1688917500.0","content":"Selected Answer: ACE\nA -The training data is causing the overfiting for the testing data, so addition of training data will solve this.\nC - Larger sets will cause overfitting, so we have to use smaller sets or reduce features\nE - Increase the regularization is a method for solving the Overfitting model"},{"poster":"AzureDP900","timestamp":"1688497320.0","comment_id":"766087","upvote_count":"3","content":"Answers are;\nA. Get more training examples\nC. Use a smaller set of features\nE. Increase the regularization parameters\n\nPrevent overfitting: less variables, regularisation, early ending on the training\n\nReference:\nhttps://cloud.google.com/bigquery-ml/docs/preventing-overfitting"},{"content":"Selected Answer: ADE\nAnswer ADE","comment_id":"744634","poster":"DGames","timestamp":"1686701940.0","upvote_count":"1"},{"timestamp":"1682434560.0","comment_id":"703964","upvote_count":"1","content":"Selected Answer: ACE\n100% sure ACE\n\nhttps://elitedatascience.com/overfitting-in-machine-learning","poster":"MisuLava"},{"comment_id":"652308","content":"Answer is : ACE\nhttps://www.ibm.com/cloud/learn/overfitting#:~:text=Overfitting%20is%20a%20concept%20in,unseen%20data%2C%20defeating%20its%20purpose.","timestamp":"1677442440.0","poster":"MisuLava","upvote_count":"1"},{"content":"Selected Answer: ACE\nim vote for ACE","poster":"Noahz110","comment_id":"646818","timestamp":"1676396460.0","upvote_count":"1"},{"content":"It should be ACE","upvote_count":"1","comment_id":"642542","poster":"Dip1994","timestamp":"1675534320.0"},{"timestamp":"1657820940.0","content":"Selected Answer: ACE\n@medeis_jar","comment_id":"523706","upvote_count":"1","poster":"sraakesh95"},{"timestamp":"1656938160.0","upvote_count":"4","poster":"medeis_jar","content":"Selected Answer: ACE\nAs MaxNRG wrote:\nThe tools to prevent overfitting: less variables, regularization, early ending on the training.\n\n- Adding more training data will increase the complexity of the training set and help with the variance problem.\n- Reducing the feature set will ameliorate the overfitting and help with the variance problem.\n- Increasing the regularization parameter will reduce overfitting and help with the variance problem.","comment_id":"516724"},{"poster":"MaxNRG","comment_id":"504402","upvote_count":"4","timestamp":"1655571060.0","content":"Selected Answer: ACE\nACE\n\nThe tools to prevent overfitting: less variables, regularization, early ending on the trainingâ¦\nOverfitting means that the classifier knows too well the data and fails to generalize. We should use a smaller number of features to help the classifier generalize, and more examples so that it can have more variety.\nThe gap in errors between training and test suggests a high variance problem in which the algorithm has overfit the training set.\n- Adding more training data will increase the complexity of the training set and help with the variance problem.\n- Reducing the feature set will ameliorate the overfitting and help with the variance problem.\n- Increasing the regularization parameter will reduce overfitting and help with the variance problem.\nhttps://github.com/mGalarnyk/datasciencecoursera/blob/master/Stanford_Machine_Learning/Week6/AdviceQuiz.md"},{"upvote_count":"2","content":"ACE\n\nThe tools to prevent overfitting: less variables, regularization, early ending on the trainingâ¦\nOverfitting means that the classifier knows too well the data and fails to generalize. We should use a smaller number of features to help the classifier generalize, and more examples so that it can have more variety.\nThe gap in errors between training and test suggests a high variance problem in which the algorithm has overfit the training set. \n- Adding more training data will increase the complexity of the training set and help with the variance problem. \n- Reducing the feature set will ameliorate the overfitting and help with the variance problem.\n- Increasing the regularization parameter will reduce overfitting and help with the variance problem.\nhttps://github.com/mGalarnyk/datasciencecoursera/blob/master/Stanford_Machine_Learning/Week6/AdviceQuiz.md","timestamp":"1655568900.0","comment_id":"504376","poster":"MaxNRG"},{"content":"Why there are so many wrong answers? Examtopics.com are you enjoying paid subscription by giving random answers from people?\nAns: ACE","upvote_count":"5","poster":"JG123","comment_id":"487263","timestamp":"1653554700.0"},{"content":"Ans: A, C and E.\nTo avoid overfitting use more training samples, with lesser features and use regularization.","timestamp":"1650050340.0","comment_id":"462780","poster":"anji007","upvote_count":"3"},{"poster":"sumanshu","comment_id":"401985","content":"Vote for ACE","upvote_count":"1","timestamp":"1641659700.0"},{"poster":"jasper_430","comment_id":"355302","content":"no doubt in ACE","timestamp":"1636703700.0","upvote_count":"2"},{"timestamp":"1631294220.0","upvote_count":"4","comment_id":"307388","poster":"daghayeghi","content":"ACE:\nhttps://towardsdatascience.com/deep-learning-3-more-on-cnns-handling-overfitting-2bd5d99abe5d\nhttps://cloud.google.com/bigquery-ml/docs/preventing-overfitting"},{"upvote_count":"2","timestamp":"1629076140.0","comment_id":"291445","poster":"daghayeghi","content":"ACE, Reference:\nhttps://cloud.google.com/bigquery-ml/docs/preventing-overfitting"},{"poster":"naga","comment_id":"285719","timestamp":"1628353740.0","content":"Correct ADF","upvote_count":"1"},{"upvote_count":"4","poster":"shilpa","comment_id":"284807","content":"ACE: Reason: Overfitting results in noisy model and the predictions wont be with good accuracy. Feed more apt training samples for a better model. More number of features implies more dimensionality which would also result in poor performance.","timestamp":"1628246460.0"},{"content":"Obviously ACE","poster":"[Removed]","timestamp":"1627090980.0","comment_id":"274974","upvote_count":"2"},{"poster":"AnilKr","content":"It's ACE, why ADF answer is given by portal","upvote_count":"2","timestamp":"1625623680.0","comment_id":"261524"},{"upvote_count":"2","timestamp":"1620749940.0","content":"It's ACE","comment_id":"217468","poster":"Nileshk611"},{"comment_id":"212967","comments":[{"upvote_count":"1","timestamp":"1620148560.0","comment_id":"212968","comments":[{"comment_id":"212969","timestamp":"1620148560.0","upvote_count":"1","content":"i mean its good but you guys knew that already xD","poster":"ave4000"}],"poster":"ave4000","content":"my bad"}],"upvote_count":"1","timestamp":"1620148500.0","poster":"ave4000","content":"You are all wrong. You reduce overfitting by increasing the alfa/lambda (regularization coefficients), not the other way."},{"poster":"Darlee","upvote_count":"2","content":"agreed with ACE","timestamp":"1617692280.0","comment_id":"194054"},{"upvote_count":"2","content":"Answer should be ACE.","comment_id":"181555","poster":"SteelWarrior","timestamp":"1616070540.0"},{"poster":"Tanmoyk","upvote_count":"2","timestamp":"1614518280.0","comment_id":"170744","content":"A C E are most suitable option"},{"upvote_count":"2","poster":"haroldbenites","timestamp":"1613699460.0","comment_id":"161159","content":"ACE is Correct"},{"timestamp":"1613600460.0","comment_id":"160338","content":"ACE seems to be correct one, Refer below link for more information.\nhttps://machinelearningmastery.com/introduction-to-regularization-to-reduce-overfitting-and-improve-generalization-error/\n\nhttps://elitedatascience.com/overfitting-in-machine-learning","poster":"saurabh1805","upvote_count":"2"},{"upvote_count":"3","poster":"mikey007","comment_id":"145862","content":"https://stackoverflow.com/questions/37776333/why-too-many-features-cause-over-fitting#:~:text=Overfitting%20means%20your%20model%20does,allow%20polynomials%20to%20degree%20100.","timestamp":"1611850620.0"},{"content":"ACE\nis correct answer","timestamp":"1611185820.0","comment_id":"139857","poster":"atnafu2020","upvote_count":"2"},{"content":"Answer: ACE","comment_id":"66661","upvote_count":"6","timestamp":"1600711680.0","poster":"Rajokkiyam"}],"answer_images":[],"question_images":[],"exam_id":11,"url":"https://www.examtopics.com/discussions/google/view/16468-exam-professional-data-engineer-topic-1-question-51/","question_id":267},{"id":"5CCERb4JFVkVhxNmQJMb","timestamp":"2020-03-17 05:01:00","topic":"1","question_text":"You are implementing security best practices on your data pipeline. Currently, you are manually executing jobs as the Project Owner. You want to automate these jobs by taking nightly batch files containing non-public information from Google Cloud Storage, processing them with a Spark Scala job on a Google Cloud\nDataproc cluster, and depositing the results into Google BigQuery.\nHow should you securely run this workload?","url":"https://www.examtopics.com/discussions/google/view/16822-exam-professional-data-engineer-topic-1-question-52/","exam_id":11,"question_id":268,"choices":{"D":"Use a user account with the Project Viewer role on the Cloud Dataproc cluster to read the batch files and write to BigQuery","B":"Grant the Project Owner role to a service account, and run the job with it","C":"Use a service account with the ability to read the batch files and to write to BigQuery","A":"Restrict the Google Cloud Storage bucket so only you can see the files"},"answer_ET":"C","isMC":true,"question_images":[],"answer_description":"","answer":"C","answers_community":["C (79%)","B (21%)"],"unix_timestamp":1584417660,"discussion":[{"timestamp":"1616638500.0","upvote_count":"34","content":"A is wrong, if only I can see the bucket no automation is possible, besides, also needs launch the dataproc job\nB is too much, does not follow the security best practices\nC has one point missingâ¦you need to submit dataproc jobs.\nIn D viewer role will not be able to submit dataproc jobs, the rest is ok\n\nThusâ¦.the only one that would work is B! BUT this service account has too many permissions. Should have dataproc editor, write big query and read from bucket","comments":[{"comment_id":"453569","content":"C doesn't need permission to submit dataproc jobs, it's workload SA. Job can be submitted by any other identity","timestamp":"1664387220.0","upvote_count":"5","poster":"retep007"},{"poster":"dambilwa","timestamp":"1625064840.0","upvote_count":"15","comment_id":"123573","content":"Hence - Contextually, Option [C] looks to be the right fit"}],"comment_id":"68022","poster":"digvijay"},{"timestamp":"1615953660.0","comment_id":"65007","poster":"rickywck","upvote_count":"31","content":"Should be C"},{"content":"Selected Answer: B\nWe need permissions for submitting dataproc jobs and writing to BigQuery. Project Owner will fix all of that even though it's not a good solution. The rest won't work at all.","comment_id":"961438","poster":"Mathew106","timestamp":"1721814960.0","upvote_count":"1"},{"poster":"Adswerve","timestamp":"1712976900.0","content":"Selected Answer: C\nC\nProject Owner is too much, violates the principle of least privilege","upvote_count":"4","comment_id":"869024"},{"content":"Selected Answer: C\nC. Use a service account with the ability to read the batch files and to write to BigQuery\n\nIt is best practice to use service accounts with the least privilege necessary to perform a specific task when automating jobs. In this case, the job needs to read the batch files from Cloud Storage and write the results to BigQuery. Therefore, you should create a service account with the ability to read from the Cloud Storage bucket and write to BigQuery, and use that service account to run the job.","poster":"PolyMoe","timestamp":"1706274420.0","upvote_count":"3","comment_id":"788744"},{"poster":"Mkumar43","content":"Selected Answer: B\nB works for the given requirement","timestamp":"1704442980.0","comment_id":"766378","upvote_count":"1"},{"content":"Least privilege principle. Option C. job can be submitted or triggered using a Cron or a composer which uses another SA with different set of privileges","poster":"Krish6488","upvote_count":"2","comment_id":"750763","timestamp":"1703068380.0"},{"poster":"DGames","content":"Selected Answer: B\nB because we need to run job .. option C mentioned permission about read and write nothing mention to run the job . In case project owner to service account itâs similar just running job and doing rest of tasks read and writing as well.","comment_id":"744655","timestamp":"1702521300.0","upvote_count":"2"},{"content":"Selected Answer: C\nThe answer is C because Service Account is the best way to access the BigQuery API if your application can run jobs associated with service credentials rather than an end-user's credentials, such as a batch processing pipeline.\nhttps://cloud.google.com/bigquery/docs/authentication","comment_id":"590321","poster":"ThomasChoy","upvote_count":"2","timestamp":"1682214180.0"},{"poster":"Bhawantha","upvote_count":"4","content":"Selected Answer: C\nData owners cant create jobs or queries. -> B out \nWe need service Account -> D out\nAccess only granting me does not solve the problem -> A out \nThe answer is C. ( Minimum rights to perform the job)","timestamp":"1673514900.0","comment_id":"522020"},{"content":"Selected Answer: C\n\"taking nightly batch files containing non-public information from Google Cloud Storage, processing them with a Spark Scala job on a Google Cloud\nDataproc cluster, and depositing the results into Google BigQuery\"","timestamp":"1672843260.0","upvote_count":"1","comment_id":"516728","poster":"medeis_jar"},{"comment_id":"511457","poster":"prasanna77","timestamp":"1672252020.0","content":"C should be okay,since he is already a project owner, I guess compute service account created will have access to run the jobs","upvote_count":"1"},{"comment_id":"504405","content":"Selected Answer: C\nC,\nProject Owner role to a service account - is too much","upvote_count":"1","poster":"MaxNRG","timestamp":"1671389820.0"},{"content":"Why there are so many wrong answers? Examtopics.com are you enjoying paid subscription by giving random answers from people?\nAns: C","comment_id":"487267","poster":"JG123","upvote_count":"6","timestamp":"1669459860.0"},{"timestamp":"1665862200.0","comment_id":"462781","content":"Ans: C\nSee this: https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#dataproc_service_accounts_2","poster":"anji007","upvote_count":"3"},{"comment_id":"442108","content":"C as service account invoked to read the data into GCS and write to BQ once transformed via Data Proc. Assumes DataProc can inherit SA authorisation to perform transform and propagate. \nB seems to violate key IAM principle enforcing least privilege;\nhttps://cloud.google.com/iam/docs/recommender-overview","timestamp":"1662745260.0","poster":"Blobby","upvote_count":"4"},{"content":"Vote for 'C\"","comments":[{"content":"Vote for B, (though it's too much access) - But C has one accessing missing (i.e Dataproc job execution) Thus B is correct","timestamp":"1657303560.0","upvote_count":"3","poster":"sumanshu","comment_id":"402133"}],"poster":"sumanshu","comment_id":"392357","timestamp":"1656363900.0","upvote_count":"4"},{"timestamp":"1650848700.0","poster":"kino2020","upvote_count":"2","content":"If the answer is \"Workflow using Cloud Schedule\" and the question is about cost effectiveness, then it's Workflow using Cloud Schedule compared to \"Cloud Composer\".\nHowever, since the only answer is \"workflow template\", scheduling is not possible.\nSo the answer is C's \"Cloud Composer\".\nhttps://cloud.google.com/dataproc/docs/tutorials/workflow-scheduler","comment_id":"342270"},{"poster":"BhupiSG","content":"C\nB seems to much","comment_id":"309326","upvote_count":"2","timestamp":"1647134700.0"},{"timestamp":"1646943060.0","content":"A is wrong, if only I can see the bucket no automation is possible, besides, also needs launch the dataproc job\nB is too much, does not follow the security best practices\nC has one point missingâ¦you need to submit dataproc jobs.\nIn D viewer role will not be able to submit dataproc jobs, the rest is ok\n\nThusâ¦.the only one that would work is B! BUT this service account has too many permissions. Should have dataproc editor, write big query and read from bucket","poster":"daghayeghi","comment_id":"307399","upvote_count":"2"},{"timestamp":"1633413780.0","comment_id":"193383","content":"We used to be able to do it, but now it's right that we can't.\n---------------------------------------------\nSecurity requirement beginning August 3, 2020: Dataproc users are required to have service account ActAs permission to deploy Dataproc resources, for example, to create clusters and submit jobs. See Managing service account impersonation for detailed information.\nOpt-in for existing Dataproc users: Existing Dataproc users as of August 3, 2020 can opt in to this security requirement (see Securing Dataproc, Dataflow, and Cloud Data Fusion).\n--------------------------------------------------\nhttps://cloud.google.com/dataproc/docs/concepts/iam/iam#permissions","comments":[{"comments":[{"upvote_count":"2","poster":"safiyu","content":"I am not sure about this. act as role on service account should be assigned to the user trying to impersonate this service account.. not the service account itself. C is right for this I suppose","timestamp":"1660596060.0","comment_id":"425455"}],"comment_id":"193386","content":"This question was created at least around 2019. So when this question comes up, it is a qualification for which we don't know the result of the answer, so when it does, call the examiner and inquire course.","timestamp":"1633414080.0","poster":"kino2020","upvote_count":"3"}],"upvote_count":"1","poster":"kino2020"},{"comment_id":"189478","content":"A, C and D don't mention permission for the Dataproc job. The answer is B. Also because the user is executing jobs manually as the Project Owner, if the service account is not a Project Owner too, there could be permission issues with the resources.","upvote_count":"6","poster":"alek6dj","timestamp":"1632896700.0"},{"comment_id":"183847","poster":"Diqtator","content":"C doesn't give permissions to run all the jobs needed. B should be correct.","upvote_count":"3","timestamp":"1632244440.0"},{"timestamp":"1629331500.0","upvote_count":"1","comment_id":"161162","poster":"haroldbenites","content":"C is Correct"},{"content":"Correct Answer : C\nExplanation:-This option is correct as the best practice is to use a service account with least privilege.\n\nPractices - Service Accounts\nA service account is a special type of Google account intended to represent a non-human user that needs to authenticate and be authorized to access data in Google APIs.\n\nTypically, service accounts are used in scenarios such as -\nâ¢ Running workloads on virtual machines (VMs).","comment_id":"139479","poster":"VishalB","timestamp":"1626783120.0","upvote_count":"4"},{"comment_id":"131175","upvote_count":"3","timestamp":"1625895960.0","content":"C provides the minimum privilege to execute the job","poster":"Rajuuu"},{"upvote_count":"2","content":"Question requirement is to automate the job, Service account is best for this case, Correct C.","poster":"AJKumar","timestamp":"1624730400.0","comment_id":"120767"},{"timestamp":"1616439300.0","poster":"jvg637","upvote_count":"4","comment_id":"67062","comments":[{"upvote_count":"2","poster":"lgdantas","timestamp":"1628424900.0","content":"Why would it be impossible with \"C\"?","comments":[{"content":"dataproc.jobs.create permits the submission of Dataproc jobs to Dataproc clusters in the containing project","comment_id":"192506","timestamp":"1633288560.0","poster":"dabrat","upvote_count":"2"}],"comment_id":"153019"}],"content":"With C it's impossible to run a job. So B"},{"timestamp":"1616357340.0","comment_id":"66662","content":"Should be C","upvote_count":"3","poster":"Rajokkiyam"},{"comments":[{"timestamp":"1616357520.0","poster":"Rajokkiyam","content":"Given Project owner role It might provide additional privileges to the ServiceAccounts liek deleting the files etc. Basic Priv needed for this type of action is to read source file and write into Bquery.","comment_id":"66663","upvote_count":"5"}],"upvote_count":"4","timestamp":"1616314140.0","poster":"[Removed]","comment_id":"66433","content":"Should be B"}],"answer_images":[]},{"id":"R20l2eAglv9mNwH1bkhR","answer_description":"","choices":{"C":"Either the state or the city columns in the [myproject:mydataset.mytable] table have too many NULL values","A":"Users are running too many concurrent queries in the system","B":"The [myproject:mydataset.mytable] table has too many partitions","D":"Most rows in the [myproject:mydataset.mytable] table have the same value in the country column, causing data skew"},"answer_images":[],"timestamp":"2020-03-21 09:32:00","topic":"1","answer":"D","unix_timestamp":1584779520,"exam_id":11,"answers_community":["D (88%)","13%"],"isMC":true,"url":"https://www.examtopics.com/discussions/google/view/17085-exam-professional-data-engineer-topic-1-question-53/","answer_ET":"D","question_id":269,"question_text":"You are using Google BigQuery as your data warehouse. Your users report that the following simple query is running very slowly, no matter when they run the query:\nSELECT country, state, city FROM [myproject:mydataset.mytable] GROUP BY country\nYou check the query plan for the query and see the following output in the Read section of Stage:1:\n//IMG//\n\nWhat is the most likely cause of the delay for this query?","discussion":[{"poster":"[Removed]","timestamp":"1584779520.0","content":"Should be D","comment_id":"66435","upvote_count":"26"},{"timestamp":"1587229980.0","comment_id":"76126","upvote_count":"25","content":"D; Purple is reading, Blue is writing. so majority is reading.","poster":"itche_scratche","comments":[{"timestamp":"1635522840.0","content":"I have been looking for the color code descriptions for a while. Thank you!","poster":"squishy_fishy","comment_id":"469841","upvote_count":"1"}]},{"comment_id":"1259105","timestamp":"1722460560.0","poster":"iooj","content":"Selected Answer: D\nD - stands for Data Skew\nThe Read section of the query plan shows a heavy concentration of processing in one area (as indicated by the pink bar being much longer than the purple bar). This typically indicates data skew, where the majority of the data is processed by a small subset of nodes.","upvote_count":"1"},{"comment_id":"1098164","timestamp":"1702730460.0","content":"Selected Answer: D\nThe most likely cause of the delay for this query is option D. Most rows in the [myproject:mydataset.mytable] table have the same value in the country column, causing data skew.\n\nGroup by queries in BigQuery can run slowly when there is significant data skew on the grouped columns. Since the query is grouping by country, if most rows have the same country value, all that data will need to be shuffled to a single reducer to perform the aggregation. This can cause a data skew slowdown.\n\nOptions A and B might cause general slowness but are unlikely to affect this specific grouping query. Option C could also cause some slowness but not to the degree that heavy data skew on the grouped column could. So D is the most likely root cause. Optimizing the data distribution to reduce skew on the grouped column would likely speed up this query.","poster":"MaxNRG","upvote_count":"2"},{"timestamp":"1702418940.0","poster":"JOKKUNO","content":"Data skew is when one or some partitions have significantly more data compared to other partitions. Data-skew is usually the result of operations that require re-partitioning the data, mostly join and grouping ( GroupBy ) operations. So D.","comment_id":"1094998","upvote_count":"1"},{"content":"Selected Answer: D\nD. Most rows in the [myproject:mydataset.mytable] table have the same value in the country column, causing data skew\n\nData skew occurs when one or more values in a column have a disproportionately large number of rows compared to other values in that column. This can cause performance issues when running queries that group by that column, like the one in the question. In this case, if most of the rows in the [myproject:mydataset.mytable] table have the same value in the country column, then the query will need to process a large number of rows with that value, which can cause significant delay.","upvote_count":"4","timestamp":"1674739140.0","comment_id":"788752","poster":"PolyMoe"},{"poster":"AzureDP900","content":"D is right","comment_id":"765686","upvote_count":"3","timestamp":"1672838940.0"},{"upvote_count":"2","poster":"Krish6488","comment_id":"750771","timestamp":"1671533460.0","content":"Selected Answer: D\ndata skewing causing imbalance in data distribution across slots. It also causes errors if the group by column has NULLS. Since option C does not call out the Group by column, D is a closer answer contextually"},{"upvote_count":"3","timestamp":"1668515700.0","poster":"Jasar","content":"Selected Answer: A\nA is the best option becouse the color bar show the high number of reads and i think its not a skew becouse biguery was build to compute the data fast","comment_id":"718719"},{"comment_id":"659901","upvote_count":"11","poster":"arpitagrawal","timestamp":"1662365100.0","content":"The query would throw the error because you're using a group by clause on country but not aggregating city or state."},{"timestamp":"1661538060.0","upvote_count":"3","poster":"MisuLava","content":"Selected Answer: D\nhttps://cloud.google.com/bigquery/docs/best-practices-performance-patterns","comment_id":"652312"},{"timestamp":"1651416360.0","upvote_count":"18","content":"BTW, how is the query even syntactically valid? It has non aggregated columns in the SELECT part of the query. That query will not run in the first place, unless I'm missing something.","poster":"Paul_Oprea","comment_id":"595627"},{"content":"Selected Answer: D\nD\nImage says that average(dark) and maximum(light) have difference in few times, this it is a skew\n\nhttps://cloud.google.com/bigquery/query-plan-explanation\nThe color indicators show the relative timings for all steps across all stages. For example, the COMPUTE step of Stage 00 shows a bar whose shaded fraction is 21/30 since 30ms is the maximum time spent in a single step of any stage. The parallel input information shows that each stage required only a single worker, so there's no variance between average and slowest timings.","poster":"Arkon88","timestamp":"1646409360.0","upvote_count":"1","comment_id":"560874"},{"upvote_count":"3","content":"Selected Answer: D\nhttps://medium.com/slalom-build/using-bigquery-execution-plans-to-improve-query-performance-af141b0cc33d","poster":"sraakesh95","timestamp":"1642190100.0","comment_id":"523712"},{"timestamp":"1642190040.0","content":"https://medium.com/slalom-build/using-bigquery-execution-plans-to-improve-query-performance-af141b0cc33d","comment_id":"523711","poster":"sraakesh95","upvote_count":"1"},{"timestamp":"1641307500.0","poster":"medeis_jar","upvote_count":"5","content":"Selected Answer: D\nD\nColors: Purple is reading, Blue is writing. so the majority is reading.\nhttps://cloud.google.com/bigquery/docs/best-practices-performance-patterns","comment_id":"516730"},{"timestamp":"1638234300.0","poster":"morpho4444","comments":[{"timestamp":"1638622020.0","content":"A Cant be answer. Since users whenever running queries facing the problems.","comment_id":"493698","upvote_count":"1","poster":"BigQuery"}],"content":"If you read this https://medium.com/slalom-build/using-bigquery-execution-plans-to-improve-query-performance-af141b0cc33d C can't be right because the skewness happen when the column you use for grouping contains lots of null values, here C mentions columns that aren't part of the grouping clause. \n\nD, that's not how data get skewed, it gets skewed due to null values.\n\nA is the only answer here.","comment_id":"490308","upvote_count":"1"},{"comment_id":"487272","content":"Why there are so many wrong answers? Examtopics.com are you enjoying paid subscription by giving random answers from people?\nAns: D","upvote_count":"5","poster":"JG123","timestamp":"1637924220.0"},{"timestamp":"1634326560.0","comment_id":"462783","content":"Ans: D\nData is skewed.","upvote_count":"2","poster":"anji007"},{"upvote_count":"9","comments":[{"poster":"vholti","comment_id":"459273","timestamp":"1633703520.0","content":"The query from question doesn't have partition filter (no WHERE clause). So regardless there is data skew, it's not the root cause of the low performance in this case. Option A is more reasonable I think.","upvote_count":"1"}],"poster":"timolo","content":"Correct is D: https://cloud.google.com/bigquery/docs/best-practices-performance-patterns\n\nPartition skew, sometimes called data skew, is when data is partitioned into very unequally sized partitions. This creates an imbalance in the amount of data sent between slots. You can't share partitions between slots, so if one partition is especially large, it can slow down, or even crash the slot that processes the oversized partition.","timestamp":"1625401980.0","comment_id":"398314"},{"upvote_count":"3","timestamp":"1624828200.0","comment_id":"392360","content":"Vote for 'D\"","poster":"sumanshu"},{"poster":"BhupiSG","comments":[{"poster":"H_S","timestamp":"1621698360.0","content":"o matter when they run the query!! can't be always overwelmed, i'll go with d","comment_id":"363784","upvote_count":"3"}],"comment_id":"309333","content":"Correct A\nThe query plan heat diagram shows about 25% time spent in reading. 75% in other wait, compute and write. This is an indication of constraint on the BigQuery computing slots.\nWhy not B: This is a small table. No need to partition.\nWhy not C: NULL values should not slow down computing\nWhy not D: Data skew is not likely. Even if the data is skewed, the total data is not large. So, computing should still be fast.","timestamp":"1615600080.0","upvote_count":"5"},{"content":"Option D - ref https://cloud.google.com/bigquery/docs/best-practices-performance-patterns#data_skew\n\nBest practice: If your query processes keys that are heavily skewed to a few values, filter your data as early as possible.","poster":"cosmidumi","timestamp":"1608474660.0","comment_id":"248726","upvote_count":"7"},{"content":"Partitions should not cause this issue so B is not correct.","comment_id":"207060","timestamp":"1603804200.0","poster":"Surjit24","upvote_count":"1"},{"content":"B is incorrect as the question clearly states âwhenever they run the queryâ which means its a constant problem not adhoc. Option B is talking about a specific situation which means when (supposedly) fewer users have an active connection query should run faster but the question rules it out saying you always face performance problem.\n\nIn this case we have a Design issue hence option D sounds correct.","poster":"GHN74","comment_id":"170535","timestamp":"1598848020.0","upvote_count":"7"},{"content":"D Is correct","poster":"haroldbenites","timestamp":"1597795620.0","upvote_count":"4","comment_id":"161163"},{"content":"User are using to many concurrent queries","comment_id":"152817","poster":"AnujSingh","upvote_count":"1","timestamp":"1596854640.0"},{"comment_id":"119075","content":"Option [D] - is correct. Ruling out option [B] because for a partitioned table, there should have been a wildcard character in TABLE_NAME or WHERE clause. Query mentioned in the question doesn't depict this.","upvote_count":"2","poster":"dambilwa","timestamp":"1593057420.0"},{"comment_id":"68628","poster":"[Removed]","timestamp":"1585322400.0","content":"Answer: D","upvote_count":"3"},{"content":"This chart show that the query reading part takes the most time. So B. Dataskew occurs in the processing time (orange color). If you examine the query explain plan and see a significant difference between avg and max compute times, your data is probably skewed.\n\nTo avoid performance issues that result from data skew:\n\nUse an approximate aggregate function such as APPROX_TOP_COUNT to determine if the data is skewed.\nFilter your data as early as possible.\nUnbalanced joins\nData skew can also appear when you use JOIN clauses. Because BigQuery shuffles data on each side of the join, all data with the same join key goes to the same shard. This shuffling can overload the slot.\nhttps://cloud.google.com/bigquery/docs/best-practices-performance-patterns#data_skew","timestamp":"1584903600.0","upvote_count":"3","poster":"jvg637","comment_id":"67063"}],"question_images":["https://www.examtopics.com/assets/media/exam-media/04341/0004200001.jpg"]},{"id":"tqdAZ8n4UfdR8KOVw107","answer_ET":"D","exam_id":11,"topic":"1","isMC":true,"answer":"D","question_id":270,"question_images":[],"url":"https://www.examtopics.com/discussions/google/view/16670-exam-professional-data-engineer-topic-1-question-54/","question_text":"Your globally distributed auction application allows users to bid on items. Occasionally, users place identical bids at nearly identical times, and different application servers process those bids. Each bid event contains the item, amount, user, and timestamp. You want to collate those bid events into a single location in real time to determine which user bid first. What should you do?","choices":{"C":"Set up a MySQL database for each application server to write bid events into. Periodically query each of those distributed MySQL databases and update a master MySQL database with bid event information.","A":"Create a file on a shared file and have the application servers write all bid events to that file. Process the file with Apache Hadoop to identify which user bid first.","D":"Have each application server write the bid events to Google Cloud Pub/Sub as they occur. Use a pull subscription to pull the bid events using Google Cloud Dataflow. Give the bid for each item to the user in the bid event that is processed first.","B":"Have each application server write the bid events to Cloud Pub/Sub as they occur. Push the events from Cloud Pub/Sub to a custom endpoint that writes the bid event information into Cloud SQL."},"answers_community":["D (52%)","B (47%)","1%"],"discussion":[{"comments":[{"comments":[{"upvote_count":"1","comment_id":"575145","poster":"godot","timestamp":"1648223220.0","content":"no push avail: https://cloud.google.com/dataflow/docs/concepts/streaming-with-cloud-pubsub#streaming-pull-migration"},{"comment_id":"819103","upvote_count":"2","content":"The dataflow is designed for realtime processing. and this case should be needed to use dataflow because there is no option to order the data if not using dataflow. So D is answer I think","poster":"jin0","timestamp":"1677150840.0"}],"timestamp":"1644826620.0","content":"B. \n- for realtime pub/sub push is critical. pull creates latency. (eliminates D)\n- process by event-time, not by process -time (eliminates D)","comment_id":"546971","poster":"Tanzu","upvote_count":"6"},{"timestamp":"1672839300.0","content":"Agree with B","poster":"AzureDP900","upvote_count":"1","comment_id":"765696"},{"timestamp":"1618690860.0","content":"i would go with option B, Cause option D states \"Give the bid for each item to the user in the bid event that is processed first\" . The requirement is to get the first bid based on event time not processed first in dataflow.","upvote_count":"28","poster":"[Removed]","comment_id":"337790"},{"content":"This approach is not ideal because it requires a custom endpoint to write the bid event information into Cloud SQL. This adds additional complexity and potential points of failure to the architecture, as well as adding latency to the processing of bid events, since the data must be written to both Pub/Sub and Cloud SQL. Additionally, it can be more challenging to ensure that bid events are processed in the order they were received, since the data is being written to multiple databases. Finally, using a single database to store bid events could limit scalability and availability, and can also result in slow query performance.","upvote_count":"3","poster":"donbigi","timestamp":"1675505700.0","comment_id":"797811"},{"comment_id":"395451","content":"Yep, Pub/Sub doesn't have FIFO yet, B is the one that keeps the right order","upvote_count":"7","timestamp":"1625110980.0","poster":"ralf_cc","comments":[{"comment_id":"546972","comments":[{"poster":"Tanzu","timestamp":"1644826740.0","comment_id":"546974","content":"in a distributed environment, you can not handle this problem wit a queue by the way !","upvote_count":"3"}],"content":"it is not a queue, and that is not a issue :)","upvote_count":"3","timestamp":"1644826680.0","poster":"Tanzu"}]}],"poster":"jvg637","timestamp":"1584285420.0","comment_id":"64343","content":"I'd go with B: real-time is requested, and the only scenario for real time (in the 4 presented) is the use of pub/sub with push.","upvote_count":"65"},{"comment_id":"73139","content":"D\nThe need is to collate the messages in real-time. We need to de-dupe the messages based on timestamp of when the event occurred. This can be done by publishing ot Pub-Sub and consuming via Dataflow.","timestamp":"1586564340.0","upvote_count":"34","poster":"Ganshank","comments":[{"comment_id":"846601","poster":"unnamed12355","upvote_count":"4","content":"D isnt correct, Pub/sub can send messages out of order, it is no guaranty that the event with lowest timestamp will be processed first\nB is correct","timestamp":"1679452260.0"},{"content":"Yeap, that's why B is the right one. It has pub/sub push, more real time than pub/sub pull. You need to aware at some point , something has to be pulled which adds a latency.","poster":"Tanzu","timestamp":"1644826980.0","comment_id":"546975","upvote_count":"2"}]},{"upvote_count":"1","comment_id":"1362572","timestamp":"1740668580.0","poster":"dcruzado","content":"Selected Answer: B\nAnswer is B\nThis sentence invalidates D\n\"Give the bid for each item to the user in the bid event that is processed first.\""},{"timestamp":"1736243280.0","content":"Selected Answer: B\nprocess by event-time, not by process -time (eliminates D","poster":"manikolbe","comment_id":"1337511","upvote_count":"2"},{"poster":"Ronn27","upvote_count":"1","timestamp":"1736002560.0","content":"Selected Answer: D\nWriting directly to Cloud SQL in real time can cause bottlenecks as Cloud SQL is not designed for high-frequency, low-latency writes from multiple sources.\n\nAnswer D is right as Dataflow and Pubsub has the realtime capability","comment_id":"1336410"},{"timestamp":"1734594120.0","content":"Selected Answer: D\nBid event time and Pull Subscription is important part.","poster":"DGames","upvote_count":"1","comment_id":"1328890"},{"content":"Selected Answer: D\nIt feels like it depends what's actually in the dataflow pipeline. D I believe is the answer they intend, even if messages are pulled out of order.","poster":"baimus","comment_id":"1287738","timestamp":"1727012400.0","upvote_count":"1"},{"poster":"manel_bhs","comment_id":"1249925","upvote_count":"1","content":"Selected Answer: D\nWhile using Cloud Pub/Sub for real-time event streaming is a good choice, pushing events to a custom endpoint that writes to Cloud SQL introduces additional complexity.\nCustom endpoints need to be maintained, and the process of writing to Cloud SQL might not be as efficient as using a purpose-built data processing service.","timestamp":"1721242920.0"},{"poster":"Snnnnneee","content":"Selected Answer: B\nIn D the user gets it where the data is ingested first. That can be wrong for a global auction solution","upvote_count":"1","comment_id":"1241345","timestamp":"1720003980.0"},{"poster":"yassoraa88","comment_id":"1207260","content":"Selected Answer: D\nThis is the most suitable solution for the requirements. Google Cloud Pub/Sub can handle high throughput and low-latency data ingestion. Coupled with Google Cloud Dataflow, which can process data streams in real time, this setup allows for immediate processing of bid events. Dataflow can also handle ordering and timestamp extraction, crucial for determining which bid came first. This architecture supports scalability and real-time analytics, which are essential for a global auction system.","timestamp":"1714985880.0","upvote_count":"2"},{"upvote_count":"3","poster":"teka112233","comment_id":"1207134","timestamp":"1714963440.0","content":"Selected Answer: D\nthe Answer should be D for the following \nReal-time Processing\nCentralized Processing\nWinner Determination\nalso, B is unsuitable as While Pub/Sub can ingest data, Cloud SQL is a relational database not designed for real-time processing at this scale. Maintaining a custom endpoint adds complexity."},{"poster":"I__SHA1234567","content":"Selected Answer: D\nGoogle Cloud Pub/Sub is a scalable and reliable messaging service that can handle high volumes of data and deliver messages in real-time. By having each application server publish bid events to Cloud Pub/Sub, you ensure that all bid events are collected centrally.\n\nUsing Cloud Dataflow with a pull subscription allows you to process the bid events in real-time. Cloud Dataflow provides a managed service for stream and batch processing, and it can handle the real-time processing requirements efficiently.\n\nBy processing the bid events with Cloud Dataflow, you can determine which user bid first by applying the appropriate logic within your Dataflow pipeline. This approach ensures scalability, reliability, and real-time processing capabilities, making it suitable for handling bid events from multiple application servers.","comment_id":"1173244","upvote_count":"3","timestamp":"1710405420.0"},{"comment_id":"1135962","upvote_count":"1","timestamp":"1706633280.0","content":"B should be the answer, because it writes the bid into Cloud SQL to a distributed system. This way the customer know if they get the bid or not, immediately.\nAlso, push requests are faster than pull requests, hence they are better for realtime experience.","poster":"philli1011"},{"poster":"arpana_naa","content":"Selected Answer: D\npub/sub for entry time stamp + event time \ndataflow for processing and dataflow is better for real time","timestamp":"1703416380.0","upvote_count":"1","comment_id":"1104557"},{"poster":"Nandababy","timestamp":"1702119180.0","content":"To accurately determine who bid first in a globally distributed auction application, utilizing a push mechanism instead of a pull mechanism is generally considered the more reliable approach. \nB should be correct answer.","upvote_count":"1","comment_id":"1091747"},{"timestamp":"1700572860.0","poster":"Zepopo","content":"Selected Answer: B\nkey words is \"single location in real time\"","upvote_count":"2","comment_id":"1076307"},{"timestamp":"1699908060.0","poster":"rocky48","content":"Selected Answer: D\nAnswer : D\nWe need to de-dupe the messages based on timestamp of when the event occurred. This can be done by publishing ot Pub-Sub and consuming via Dataflow.\nD sounds like a complete answer. B does not.","upvote_count":"2","comment_id":"1069736"},{"poster":"Nivea007","comment_id":"1039120","upvote_count":"1","content":"D. Have each application server write the bid events to Google Cloud Pub/Sub as they occur. Use a pull subscription to pull the bid events using Google Cloud.\nThis approach leverages Google Cloud Pub/Sub for real-time data ingestion and Google Cloud Dataflow for real-time data processing, ensuring that bids are processed as they occur, which aligns with real-time requirements.\n\nIt's not B because there is a step involving a custom endpoint that writes data into Cloud SQL. This additional step could introduce some latency, and it's important to ensure that the custom endpoint and Cloud SQL database can handle the real-time load effectively.","comments":[{"comment_id":"1044690","content":"But D treats the bids according to the processed time. We need to consider event time that's why B is the right answer.","upvote_count":"1","timestamp":"1697435460.0","poster":"patiwwb"}],"timestamp":"1696906800.0"},{"content":"D. Have each application server write the bid events to Google Cloud Pub/Sub as they occur. Use a pull subscription to pull the bid events using Google Cloud Dataflow. Give the bid for each item to the user in the bid event that is processed first.","timestamp":"1696742100.0","poster":"imran79","upvote_count":"1","comment_id":"1027731"},{"poster":"Nirca","comment_id":"1023632","timestamp":"1696311900.0","content":"Selected Answer: B\nB. Have each application server write the bid events to Cloud Pub/Sub as they occur. Push the events from Cloud Pub/Sub to a custom endpoint that writes the bid event information into Cloud SQL. is correct","upvote_count":"2"},{"poster":"DeepakVenkatachalam","upvote_count":"2","content":"Correct Answer is B. option D is based on processing first and not based on event first. so option D cannot be right answer","timestamp":"1695409920.0","comment_id":"1014424"},{"content":"Selected Answer: D\nD is the best solution because it is both real-time and scalable. Google Cloud Dataflow can process the bid events in the order in which they occurred and give the bid for each item to the user in the bid event that is processed first.","comment_id":"992764","poster":"np717","timestamp":"1693282680.0","upvote_count":"1"},{"timestamp":"1691104680.0","comments":[{"comment_id":"971524","poster":"NeoNitin","timestamp":"1691104800.0","content":"Option B (Cloud Pub/Sub and Cloud SQL):\n\nAdvantage: Cloud Pub/Sub can handle real-time data streaming, making it a good choice for quickly receiving bids. Storing bid events in Cloud SQL ensures they are easily accessible and can be analyzed in real-time.\nDisadvantage: It might require some additional setup and configuration to connect Cloud Pub/Sub to a custom endpoint and Cloud SQL.\n\nOption D (Google Cloud Pub/Sub and Cloud Dataflow):\n\nAdvantage: Cloud Pub/Sub can handle real-time data streaming, similar to Option B. Using Cloud Dataflow can process the bid events quickly and efficiently.\nDisadvantage: It might require some additional setup and configuration for Cloud Dataflow.","upvote_count":"1"}],"comment_id":"971523","poster":"NeoNitin","upvote_count":"1","content":"B.here is why\nOption B is like using special messaging balloons that quickly carry all the bids to a special spot. From there, a super-fast friend checks them and tells us who bid first. This way, we find out quickly!\n\nOption D is like having all the bids sent to a special magic box that quickly sends them to a smart computer friend. This friend looks at the bids right away and tells us who should get the toy based on who bid first.\nIn conclusion, Option B (Cloud Pub/Sub and Cloud SQL) or Option D (Google Cloud Pub/Sub and Cloud Dataflow) are the most suitable choices for real-time processing of bids and determining the first bidder. They offer efficient, scalable, and real-time solutions for handling bid events in a globally distributed auction application. The final decision would depend on factors such as the specific requirements, infrastructure, and expertise of the development team."},{"poster":"knith66","timestamp":"1690183560.0","comment_id":"961271","content":"B is correct, As push provides near-real time","upvote_count":"1"},{"timestamp":"1687924860.0","comment_id":"936062","content":"A tough call between B and D. What favors B is that push is the right pattern for a real-time scenario. Also, the timestamp is already contained in the bid event. D gives the bid to the bid event that is processed first. This is not chronologically correct, as Dataflow has not guarantee to process the events in order. Overall, B makes more sense, as it respects the given timestamp and the processing itself will have lower latency.","poster":"KC_go_reply","upvote_count":"1"},{"poster":"cchen8181","upvote_count":"1","timestamp":"1684352760.0","content":"Selected Answer: B\nI would choose B.\n\nD is not correct due to giving the bid to the first event processed, there is no guarantee the bids will be processed in the right order when using Pub/Sub.\n\nB allows storing to a central location as requested, and Cloud SQL is a transactional database that can handle the kind of real time OLTP processing described here.","comment_id":"900477"},{"content":"Selected Answer: D\nOption D is the correct solution.\n\nHaving each application server write the bid events to Google Cloud Pub/Sub as they occur allows for real-time collation of the bid events into a single location. Using a pull subscription to pull the bid events using Google Cloud Dataflow ensures that the events are processed in a single order and that the user who bid first is identified. This approach is scalable and provides low-latency processing, making it suitable for a globally distributed auction application.\n\nOption B also suggests using Cloud Pub/Sub, but it then pushes the events to a custom endpoint that writes to Cloud SQL. This approach can add additional latency and complexity, and may not be as scalable as using Cloud Dataflow directly with Pub/Sub.","comment_id":"879494","poster":"Oleksandr0501","upvote_count":"1","timestamp":"1682350020.0"},{"timestamp":"1681246980.0","poster":"izekc","content":"Selected Answer: B\nFrom architecture perspective and high burst transactions. B is not a good option.\nI will go with D","comment_id":"867676","upvote_count":"1"},{"timestamp":"1680898020.0","content":"ChatGPT went with D","comment_id":"864206","upvote_count":"1","poster":"ZSoulaimane"},{"poster":"tibuenoc","content":"Selected Answer: B\nâ¢ Push = lower latency, more-real-time\nâ¢ Pull is ideal for large volume of messages, and uses batch delivery","comment_id":"839779","upvote_count":"1","timestamp":"1678876260.0"},{"timestamp":"1677735000.0","poster":"lucaluca1982","comment_id":"826518","upvote_count":"3","content":"Option D: Pull allows to keep the sequence of the bid"},{"poster":"musumusu","content":"Anser is D:\nmany users are confused here in PUSH and PULL from pub/sub. PUSH is used when you want monitor data quickly on dashboard or in reports for analysis. PULL is used when data is big, and duplicate (like same amount of bids in this case is possible) which is collected securely and processed at a given time. It doesn't mean pub/sub did not receive data in real time. Here we need to be careful in data collection and all bid time record than showing it on dashboard. PUSH is not a good approach here. \nOption B: is more expensive and less compatible with Pub/Sub, you need to handle same amount bids as the occured.. i dont see any real time solution here.","timestamp":"1676372160.0","comment_id":"808292","upvote_count":"4"},{"upvote_count":"5","poster":"donbigi","content":"Selected Answer: D\nThis approach provides a scalable and highly available solution for processing bid events in real time. By using Cloud Pub/Sub, the application servers can publish the bid events as they occur, and the data can be pulled from the Pub/Sub topic by a single Cloud Dataflow pipeline. This ensures that bid events are not duplicated and can be processed in the order they are received. Additionally, Cloud Dataflow provides a flexible and scalable mechanism for processing large amounts of real-time data, which makes it well-suited for this use case.","timestamp":"1675505760.0","comment_id":"797815"},{"poster":"r9765345","upvote_count":"3","timestamp":"1675458720.0","comment_id":"797387","content":"Selected Answer: D\n2 minutes in to this video by Google explains why the answer is D:\nhttps://www.youtube.com/watch?v=KObJkda4ZfY"},{"comment_id":"780852","poster":"GCPpro","content":"B is the correct answer","timestamp":"1674113700.0","upvote_count":"1"},{"content":"Selected Answer: B\nI vote on B\noption D does not answer where data is stored and it is pull with latency","upvote_count":"3","poster":"Jackalski","comment_id":"761270","timestamp":"1672332240.0"},{"comment_id":"750776","poster":"Krish6488","timestamp":"1671534060.0","content":"Selected Answer: B\nI would go with B as D is pull + 'give bid to user who processed first'. Since the requirement is to give bid on the basis of event and not processing ts, B is a close match","upvote_count":"2"},{"poster":"Sonika11","upvote_count":"3","comment_id":"744865","content":"Selected Answer: D\nDataflow is needed to see which user sent bid first. Cannot track this with Pub/Sub alone.","timestamp":"1671005820.0"},{"poster":"DGames","upvote_count":"1","comment_id":"744673","content":"Selected Answer: C\nOption C look ok because in question mentioned You want to collate those bid events into a single location in real time to determine which user bid first","timestamp":"1670987040.0"},{"poster":"balajir27","timestamp":"1670399760.0","content":"Selected Answer: D\nIt is a global application hence cloud sql can not be an option","upvote_count":"4","comment_id":"737549"},{"content":"Selected Answer: B\nI voted for B","poster":"ducc","upvote_count":"3","comment_id":"653664","timestamp":"1661809560.0"},{"timestamp":"1661538300.0","content":"Selected Answer: B\nthis is a bidding system. reading data periodically is not eficient.\nyou need to push data as soon as it is available, and storing it to CLoudSQL is fine. pubSub and Push are the key features here.","upvote_count":"2","comment_id":"652314","poster":"MisuLava"},{"comments":[{"poster":"alecuba16","upvote_count":"2","comment_id":"632206","timestamp":"1657981200.0","content":"That's not true, if you have a single partition in kafka is like a queue, so yes, the message will be ordered. In that case we can assume that the partition for the topic bids is 1, so only a single susbcriber = queue.\n\nThen point is if you have multiple partitions in pub/sub even using push, the messages can arrive at the wrong order, so the first is not necessary the first message to be pushed.\n\nDataflow can be considered as realtime if the window is seconds."}],"upvote_count":"1","comment_id":"624402","poster":"changsu","timestamp":"1656474660.0","content":"Selected Answer: B\nYou have to compare the timestamp before choosing the winner. There is latency to publish a message and to pull it. The first processed one by the dataflow is not always the first bid. You have to store all data to compare them via timestamp. Therefore not D, but B."},{"poster":"Preemptible_cerebrus","timestamp":"1655304600.0","upvote_count":"1","comment_id":"616804","content":"Selected Answer: B\nThis questions have ambigous answers, by the way, if we want to fit into the requirement, the answer that aproximates to it, is answer B because we have 2 facts \"they need to have a location where to RECEIVE the events in REAL TIME\". We have a push subscription, we have an endpoint that would be Cloud SQL, therefore, this gives the detail that they do not need to have automated the answer of which bid was the first to come, placing answer D in 2nd place and also, because it has a pull subscription, and in addition it doesnt mention where and which would be the sink. A and C aren't near to accomplish the goal to reach."},{"content":"B is not correct. Cloud SQL is not a global system, and it is not scalable for use with pubsub.\nPush subscription to Cloud SQL is disaster because it wont be able to handle it. And also after the data gets into Cloud SQL what next? All the processing required to determine the fastest bid will cause more latency.","poster":"AmirN","upvote_count":"3","timestamp":"1654543800.0","comment_id":"612484","comments":[{"poster":"snehalpatil","comment_id":"616522","upvote_count":"1","content":"it is proceed in a single region.","timestamp":"1655262840.0"}]},{"poster":"Arkon88","comment_id":"560885","content":"Selected Answer: B\nB.\n- for realtime pub/sub push is critical. pull creates latency so not D","timestamp":"1646410440.0","upvote_count":"2"},{"comment_id":"559067","upvote_count":"3","content":"B is correct. D is wrong as option clearly says \"give the bid that is processed first\".pub/sub can not guarantee ordering, therefore processing time is not the bar to identify bid.","poster":"rbeeraka","timestamp":"1646176680.0"},{"upvote_count":"1","poster":"Derekliu","comment_id":"546201","timestamp":"1644721260.0","content":"Selected Answer: B\nb is making sense to me"},{"upvote_count":"1","timestamp":"1642190280.0","content":"Selected Answer: D\n@medeis_jar","poster":"sraakesh95","comment_id":"523715"},{"comment_id":"522075","timestamp":"1641986340.0","poster":"Bhawantha","content":"Selected Answer: B\nThis is so tricky. A and C is out since it does not give the real-time feature. The battle is between B and D. \n\nIf we think about the business scenario we need to give the bid to who published it first. D is given to the who processed first. Technically it can be implemented bcz DataFlow is only support pull subscription with cloud pub-sub.\n\nIn answer B, events are pushed to the endpoint. Explicitly they haven't mentioned that it pushes to the \"Cloud Data Flow\". It may be a custom API endpoint. Some people have a misunderstanding about this point. There is no clue about that. It may be a REST API endpoint or application. \n\nThe event is consist of the timestamp field itself. So by inserting it into the DB we can find out who is the winner. \n\nBased on that we can Mark answer as B.","upvote_count":"8"},{"content":"Selected Answer: D\n\"You want to collate those bid events into a single location in real time to determine which user bid first\"\n\nMultiple sources streaming -> Pub/Sub\n+\nReal-time first bid determining -> Cloud Dataflow","poster":"medeis_jar","comment_id":"516737","upvote_count":"3","timestamp":"1641307920.0"},{"timestamp":"1640716800.0","comment_id":"511484","poster":"prasanna77","upvote_count":"4","content":"Answer is D.Application is globally distributed and how it gonna comply with Cloud SQL.And also pull does make sure all messages are acknowledged"},{"timestamp":"1639852860.0","comment_id":"504390","upvote_count":"2","content":"Selected Answer: D\nD, realtime streaming - Pub/Sub + Dataflow","comments":[{"poster":"MaxNRG","upvote_count":"2","comment_id":"504391","content":"https://stackoverflow.com/questions/53932773/right-google-cloud-product/53934435","timestamp":"1639852980.0"}],"poster":"MaxNRG"},{"content":"Correct B","upvote_count":"1","comment_id":"501668","timestamp":"1639515480.0","poster":"kreeaq"},{"content":"B and D could be right. However, in question D indicates that the bid is won by the user whose bid event is \"processed first\", while it should be given to the bid event that is \"published first\". Hence, only B is valid. \nBy the way, D uses the timestamp of the message published in pub/sub (pub/sub automatically insert thetimestamp on published messages), while B can use either the timestamp of the bid arriving in the SQL database, either the timestap on published messages.","comment_id":"491707","upvote_count":"4","poster":"maurodipa","timestamp":"1638367980.0"},{"timestamp":"1637924460.0","comment_id":"487277","content":"Why there are so many wrong answers? Examtopics.com are you enjoying paid subscription by giving random answers from people?\nAns: D","poster":"JG123","upvote_count":"3"},{"comment_id":"462527","comments":[{"content":"https://cloud.google.com/dataflow/docs/concepts/streaming-with-cloud-pubsub#streaming-pull-migration","upvote_count":"1","timestamp":"1648223160.0","comment_id":"575143","poster":"godot"}],"upvote_count":"4","content":"Canât be B. I think is D.\nPubSub subscription with Dataflow, only Pull subscription are available\nhttps://stackoverflow.com/questions/62997414/push-vs-pull-for-gcp-dataflow","timestamp":"1634292720.0","poster":"iwanttogohome"},{"comments":[{"content":"After re-thinking, for me answer is B only.\nThough we have CloudSQL, main thing is identify first bid based on event time (time when bid was placed) and not on processing time (when message has reached dataflow).","upvote_count":"4","poster":"anji007","timestamp":"1634327520.0","comment_id":"462785"}],"poster":"anji007","content":"CloudSQL in real time? I think 'B' is not a better choice, but 'D' can be.","timestamp":"1633266480.0","upvote_count":"2","comment_id":"456590"},{"timestamp":"1629047640.0","content":"no where i see that only use pull for realtime and not push. I think it's D","upvote_count":"1","poster":"ron123_aa","comments":[{"upvote_count":"2","timestamp":"1634908260.0","comment_id":"466151","content":"push for real-time not pull","poster":"Chelseajcole"}],"comment_id":"425377"},{"upvote_count":"1","comment_id":"422692","poster":"safiyu","timestamp":"1628596140.0","content":"the answer is B. Push makes it real time and pull does not.. simple as that"},{"poster":"sumanshu","timestamp":"1624828680.0","content":"Vote for B","comment_id":"392369","upvote_count":"2"},{"content":"I think is D. pub/sub is regional, global data publish into pub/sub will carry different delay. Dataflow being BEAM based, can deal with late arrivals to identify the true \"earliest bid got processed and associated with a timestamp\". I think the processed doesn't mean processed by dataflow, but processed by app server in global local time - timestamp.","poster":"moonlightbeamer","upvote_count":"5","comment_id":"390831","comments":[{"comment_id":"440061","comments":[{"comment_id":"446986","timestamp":"1631953260.0","upvote_count":"1","poster":"yoshik","content":"But there is only 1 pull subscription done in Dataflow"}],"poster":"Ral17","timestamp":"1630895040.0","content":"Canât be D because you are giving advantage to the app server from which you do the pull first.","upvote_count":"1"}],"timestamp":"1624668900.0"},{"poster":"vbondoo7","content":"Can't be C, as they mentioned 'globally distributed auction application'... so D is correct --> Cloud pubsub with pull subscription.","upvote_count":"1","timestamp":"1624352940.0","comment_id":"387783"},{"timestamp":"1615600380.0","content":"Correct B","upvote_count":"2","comment_id":"309335","poster":"BhupiSG"},{"comment_id":"280460","upvote_count":"6","content":"I say B. Canât be D because you are giving advantage to the app server from which you do the pull first. It should be about timestamps, not about \"event that is processed first\"","poster":"rosetta","timestamp":"1612085640.0"},{"comment_id":"265314","upvote_count":"10","content":"Both Option D & B are correct. But we don't need to store the data persistently, we just need to process it. So, I would go with Option-D. Also if I use Cloud SQL, I will have to store then I need to run query to find the first user bid, then I will have to action. Whereas in DataFlow I can simply perform these actions immediately. I know push is immediate, but Pull mechanism is not bad, we can make near real time.","poster":"StelSen","timestamp":"1610428020.0"},{"poster":"youngwjung","comment_id":"257353","timestamp":"1609577760.0","content":"B. My reasoning is that the phrase \"Give the bid for each item to the user in the bid event that is processed first.\" in D is invalid. A bid should be given to a user who made it first based on the value of timestamp.","upvote_count":"5"},{"poster":"arghya13","content":"I would go for B as push is suitable for real time processing..","timestamp":"1604771640.0","upvote_count":"3","comment_id":"214766"},{"timestamp":"1600862220.0","comment_id":"185240","poster":"SureshKotla","upvote_count":"3","content":"D appears correct. A global application dealing with regional service like Cloud SQL is not sounding correct. PB and DF combination is ideal for many scenarios and both are Global services"},{"content":"B - Its realtime because its push, ordering is taken care by using timestamp of bid event. co located on CLOUD SQL.","timestamp":"1600820400.0","upvote_count":"2","comment_id":"184913","poster":"DeepakKhattar"},{"comment_id":"175021","upvote_count":"2","content":"B should be the answer, D could have been correct if there is a push subscription instead of Pull , moreover in option B Cloud SQL will maintain proper transnational sequences.","timestamp":"1599462600.0","poster":"Tanmoyk"},{"content":"D is correct","timestamp":"1597795800.0","upvote_count":"1","poster":"haroldbenites","comment_id":"161165"},{"timestamp":"1597297260.0","upvote_count":"5","content":"D as Cloud Pub/Sub with Cloud Dataflow can be used to buffer the bids and process them as per the order. Handles out of order and duplication of messages and hence get to know which user bid first.\nB is close but better to use Dataflow.","poster":"glachas","comment_id":"156996"},{"upvote_count":"2","timestamp":"1593943020.0","content":"B.\nPub-Sub along with Cloud SQL will allow message ordering.","comment_id":"126744","poster":"Rajuuu"},{"comments":[{"content":"Hence we need a Cloud SQL to get the correct sequence .","poster":"Rajuuu","upvote_count":"2","comment_id":"135056","timestamp":"1594744500.0"}],"comment_id":"102622","upvote_count":"4","content":"PubSub by itself does not guarantee a correct order of messages","timestamp":"1591301580.0","poster":"serg3d"},{"poster":"itche_scratche","comment_id":"76127","upvote_count":"3","timestamp":"1587230460.0","content":"i'd go with B. push is the scenario to support realtime. but custom endpoint to cloudsql is not prefer. \nD is close, but since it's a pull it doesn't support realtime. i would do push with window session on expire time."},{"poster":"[Removed]","comment_id":"68706","content":"Answer: B\nDescription: From Cloud SQL we can fetch the record on timestamp basis using where clause\nand it satisfies near real time","timestamp":"1585362540.0","upvote_count":"5"},{"upvote_count":"5","comment_id":"66448","content":"Should be B","poster":"[Removed]","timestamp":"1584782640.0"},{"content":"I will go for B. C actually works but the master database will only have consolidated information with some delay, i.e. not real-time. D should be wrong since bid should not necessarily be given to user's request which is processed first as Pub/Sub does not guarantee messages to be delivered in order.","timestamp":"1584421740.0","poster":"rickywck","comment_id":"65023","upvote_count":"3"}],"timestamp":"2020-03-15 16:17:00","answer_description":"","unix_timestamp":1584285420,"answer_images":[]}],"exam":{"lastUpdated":"11 Apr 2025","id":11,"name":"Professional Data Engineer","isBeta":false,"isImplemented":true,"provider":"Google","numberOfQuestions":319,"isMCOnly":true},"currentPage":54},"__N_SSP":true}