{"pageProps":{"questions":[{"id":"23ExxN0pE74cE29xK7yY","question_text":"Refer to the exhibit.\n\n//IMG//\n\n\nWhat statement is true about @DirtiesContext?","question_id":61,"choices":{"A":"It will close the existing cached ApplicationContext and recreate a new one before the test method.","B":"It will close the existing cached ApplicationContext and recreate a new one after the test method.","D":"It will recreate only the Spring managed beans that are modified inside the test method.","C":"It will keep the existing cached ApplicationContext, all changes to Spring managed beans will be reverted after the test."},"unix_timestamp":1718600160,"answer_ET":"B","question_images":["https://img.examtopics.com/2v0-72-22/image26.png"],"topic":"1","discussion":[{"content":"Selected Answer: B\n@DirtiesContext will remove the application context from cache, by default after the test method.","poster":"quakquak3","timestamp":"1734426120.0","comment_id":"1327827","upvote_count":"1"},{"comment_id":"1292655","timestamp":"1727933460.0","upvote_count":"1","content":"B is correct \n@DirtiesContext \n@Test\nvoid testProcessWhichDirtiesAppCtx() {\n // some logic that results in the Spring container being dirtied\n}\nDirty the context after the current test method.\nhttps://docs.spring.io/spring-framework/reference/testing/annotations/integration-spring/annotation-dirtiescontext.html","poster":"Uteman"},{"content":"A is the correct answer. Here is reference: \nhttps://docs.spring.io/spring-framework/reference/testing/annotations/integration-spring/annotation-dirtiescontext.html","poster":"2211094","comment_id":"1240055","upvote_count":"1","timestamp":"1719823140.0"}],"answers_community":["B (100%)"],"timestamp":"2024-06-17 06:56:00","answer_images":[],"answer_description":"","exam_id":252,"answer":"B","isMC":true,"url":"https://www.examtopics.com/discussions/vmware/view/142632-exam-2v0-7222-topic-1-question-65-discussion/"},{"id":"IqtHY81ogMn4oOKrHNzN","question_id":62,"question_images":[],"unix_timestamp":1718600460,"timestamp":"2024-06-17 07:01:00","exam_id":252,"topic":"1","answer_description":"","answer_images":[],"answer":"B","question_text":"According to REST principles, which is the recommended way to update the order resource identified by 1234?","choices":{"D":"Send a POST request to /orders/edit?id=1234.","A":"Send a PUT request to /orders/edit?id=1234.","B":"Send a PUT request to /orders/1234.","C":"Send a POST request to /orders/1234."},"answers_community":[],"isMC":true,"answer_ET":"B","url":"https://www.examtopics.com/discussions/vmware/view/142633-exam-2v0-7222-topic-1-question-66-discussion/","discussion":[{"comment_id":"1231731","poster":"2211094","content":"B correct answer because A is not standard in REST.\nThis approach is not standard in REST. The PUT method is typically used to update or create a resource at a specific URL, but the query parameter (?id=1234) is not part of the standard RESTful pattern.","upvote_count":"1","timestamp":"1718600460.0"}]},{"id":"Kvx60ThmEPHUpJ3A4dBo","answer_description":"","question_images":[],"isMC":true,"answer":"B","question_text":"What's the password storage format when using the DelegatingPasswordEncoder?","unix_timestamp":1718601180,"discussion":[{"upvote_count":"1","comments":[{"poster":"Uteman","timestamp":"1727933760.0","upvote_count":"1","content":"The \"id\" must be at the beginning of the password, start with \"{\" (id prefix) and end with \"}\" (id suffix). Both id prefix and id suffix can be customized via DelegatingPasswordEncoder(String, Map, String, String). If the \"id\" cannot be found, the","comment_id":"1292657"}],"content":"B is correct {id}encodedPassword\n \nSuch that \"id\" is an identifier used to look up which PasswordEncoder should be used and \"encodedPassword\" is the original encoded password for the selected PasswordEncoder.","comment_id":"1292656","timestamp":"1727933640.0","poster":"Uteman"},{"comment_id":"1240107","timestamp":"1719829740.0","poster":"2211094","upvote_count":"1","content":"The correct answer is B and here is the reason as why this is it.\nhttps://docs.spring.io/spring-security/site/docs/current/api/org/springframework/security/crypto/password/DelegatingPasswordEncoder.html"}],"choices":{"A":"encodedPassword{id}, where {id} is an identifier used to look up which PasswordEncoder should be used.","C":"{timestamp}encodedPassword, where {timestamp} is the time when the password was encoded.","D":"{id}{salt}encodedPassword, where {id} is an identifier used to look up which PasswordEncoder should be used and {salt} a randomly generated salt.","B":"{id}encodedPassword, where {id} is an identifier used to look up which PasswordEncoder should be used."},"topic":"1","exam_id":252,"answers_community":[],"answer_ET":"B","timestamp":"2024-06-17 07:13:00","answer_images":[],"question_id":63,"url":"https://www.examtopics.com/discussions/vmware/view/142634-exam-2v0-7222-topic-1-question-67-discussion/"},{"id":"QrtGkbKMqD549gv4WCrL","question_text":"Refer to the exhibit.\n\n//IMG//\n\n\nWhich two statements are correct regarding auto-configuration of DataSource and JdbcTemplate beans given a Spring Boot application with only these two dependencies? (Choose two.)","exam_id":252,"answers_community":[],"topic":"1","url":"https://www.examtopics.com/discussions/vmware/view/143128-exam-2v0-7222-topic-1-question-68-discussion/","isMC":true,"answer_description":"","answer_ET":"CE","answer":"CE","unix_timestamp":1719830100,"discussion":[{"poster":"2211094","comment_id":"1240108","timestamp":"1719830100.0","content":"CE is valid answer. Because spring boot does this auto-configurations based on those dependencies under the hood, you do not need to define them explicitly.","upvote_count":"2"}],"choices":{"D":"A DataSource bean will be auto-configured only if a JdbcTemplate bean is explicitly defined.","E":"A DataSource bean will be auto-configured.","C":"A JdbcTemplate bean will be auto-configured.","A":"A DataSource bean will not be auto-configured.","B":"A JdbcTemplate bean will not be auto-configured."},"question_id":64,"answer_images":[],"question_images":["https://img.examtopics.com/2v0-72-22/image27.png"],"timestamp":"2024-07-01 12:35:00"},{"id":"Pa8JwfB9M0NipbeXPXjA","question_text":"Which two statements are true about Spring AOP? (Choose two.)","exam_id":252,"answers_community":[],"url":"https://www.examtopics.com/discussions/vmware/view/142637-exam-2v0-7222-topic-1-question-69-discussion/","topic":"1","isMC":true,"answer_description":"","answer_ET":"AD","answer":"AD","unix_timestamp":1718617980,"discussion":[{"upvote_count":"1","comment_id":"1292662","timestamp":"1727934540.0","content":"B is wrong Join point: A point during the execution of a program, such as the execution of a method or the handling of an exception. In Spring AOP, a join point always represents a method execution. Join point information is available in advice bodies by declaring a parameter of type org.aspectj.lang.JoinPoint","poster":"Uteman"},{"content":"@After have nothing to do with throwing exceptions, this advise works when advised method returns success(not throwing any exception). There is a special advise which can handle this behavior of returning throwing exception is called @AfterThrowing","timestamp":"1719830880.0","upvote_count":"1","comment_id":"1240111","poster":"2211094"},{"comment_id":"1231855","timestamp":"1718617980.0","content":"BD are correct answers for this. because A and other options are totally wrong.","poster":"2211094","comments":[{"upvote_count":"1","timestamp":"1734311340.0","comment_id":"1327119","poster":"Peit","content":"B is wrong:\nhttps://docs.spring.io/spring-framework/reference/core/aop/ataspectj/advice.html#aop-advice-after-finally\n\"After advice must be prepared to handle both normal and exception return conditions.\"\nAD is correct"}],"upvote_count":"2"}],"choices":{"C":"Spring AOP does not use AspectJ's pointcut expression language.","D":"Examples of cross-cutting concerns include security, caching, transaction.","E":"There are in total 4 types of advice, @Before, @After, @AfterReturning and @AfterThrowing.","B":"In Spring AOP, a join point represents a method execution or property access.","A":"The @After advice type is invoked regardless of whether a method successfully returned or an exception was thrown."},"question_id":65,"timestamp":"2024-06-17 11:53:00","question_images":[],"answer_images":[]}],"exam":{"id":252,"isImplemented":true,"lastUpdated":"12 Apr 2025","isMCOnly":true,"numberOfQuestions":77,"provider":"Vmware","name":"2V0-72.22","isBeta":false},"currentPage":13},"__N_SSP":true}