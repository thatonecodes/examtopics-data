{"pageProps":{"questions":[{"id":"mXfkW8DuDrufedQknvhk","url":"https://www.examtopics.com/discussions/salesforce/view/45226-exam-certified-platform-developer-ii-topic-1-question-62/","isMC":true,"choices":{"C":"Process Builder","A":"@future","B":"Queueable","D":"Workflow"},"answer_images":[],"timestamp":"2021-02-19 15:30:00","answer_ET":"B","question_id":241,"unix_timestamp":1613745000,"discussion":[{"poster":"Dev_Bond_ZA","comment_id":"803502","upvote_count":"6","timestamp":"1675962000.0","content":"B\n\nExplanation\n\"Takes a snapshot of accounts as they are\" - this is all accounts - cannot be process builder for that reason, can not be future either, has to be queueable so you can queue each account one after the other."},{"upvote_count":"1","content":"Selected Answer: A\nA. @future\nExplanation:\nWhen you need to perform a callout from within Apex—especially from a trigger—it must be done asynchronously. Using the @future annotation with the callout=true parameter enables callouts from asynchronous methods. In this scenario, each Account record's snapshot is sent to an external RESTful web service, and since the web service accepts only one record per call, the @future method can handle each Account individually in an asynchronous context. \n\nWhy not B. Queueable:\nQueueable Apex offers additional features like job chaining and improved job handling, but these benefits are generally more useful in scenarios requiring complex processing or managing multiple related jobs. In this case, the processing is simple—making a single callout per record—so the added complexity of Queueable is unnecessary.","timestamp":"1743400800.0","poster":"vancika","comment_id":"1413965"},{"upvote_count":"1","content":"Selected Answer: B\nB is correct: \nThe requirement states that a snapshot of Account records must be taken as they are saved and then sent to an external system. Since Apex triggers execute synchronously, a callout cannot be made directly. However, a Queueable class allows asynchronous processing with callouts using System.enqueueJob(). Since the external system can only receive one record per call, a Queueable job is a good fit because it allows each record to be processed individually.\n\nWhy C is not correct: Process Builders cannot make HTTP callouts, making them unsuitable for this requirement.","comment_id":"1387920","poster":"BrainMelt12","timestamp":"1741788960.0"},{"upvote_count":"1","timestamp":"1731047700.0","comment_id":"1308653","poster":"doni10","content":"i think it is C because if you use queueable \neither you make a for loop through the account list but it is limited to 50 queueable \nOr you chain the queueable but you should find a way to know which account you have processed, it means pass the list of account throught each queueable and remove the one that is processed before pass it to the next queueable you risk to be limited without a querylocator system\nand i am not sur it is possible due to then depth of the queueable that is limited"},{"comment_id":"1290677","upvote_count":"1","timestamp":"1727535420.0","content":"Selected Answer: B\nI go with B for the same reason as @Dev_Bond_ZA","poster":"lucry01"},{"content":"Selected Answer: B\ncorrect ans is B","comment_id":"1215376","upvote_count":"1","timestamp":"1716347760.0","poster":"Anjindal"},{"upvote_count":"2","timestamp":"1692909360.0","poster":"moitam","content":"Selected Answer: B\nI go with B for the same reason as @Dev_Bond_ZA","comment_id":"989481"},{"poster":"santo_aj","content":"Selected Answer: C\nC is correct. \nCall the invocable method from process builder and from invocable method call the @future\nmethod and write your callout logic there in @future method.","timestamp":"1683474600.0","comment_id":"891528","upvote_count":"1"},{"poster":"cPickle","timestamp":"1680844440.0","content":"C is right. Queustion says \"The web service can only receive, at most, one record per call.\". A,B can call multiple record.","comment_id":"863498","upvote_count":"1"},{"comment_id":"798152","poster":"thneeb","timestamp":"1675527240.0","content":"Selected Answer: A\nFor me it is A. You need to write APEX code even if you use Process Builder. So I would directly code a APEX trigger and an @future method. If Process Builder would be aber to do direct API calls, like Flow it would be fine for me. If Flow would be a choice, then I would take Flow","upvote_count":"2"},{"upvote_count":"1","poster":"lorenac2","timestamp":"1672149960.0","comment_id":"758594","content":"Selected Answer: C\nThis is correct as Salesforce prefers declarative first, so although @future would be used if it was a trigger, since PB is declarative, it would use this with an @InvocableMethod instead. Today, this would be done with a flow based trigger."},{"content":"Selected Answer: C\nProcess Builder + InvocableMethod marked with (callout=true)","comments":[{"timestamp":"1741789020.0","upvote_count":"1","content":"This can work but it's not optimal. Process Builder runs synchronously, meaning it could slow down record operations, leading to timeouts or performance issues when making a callout for each saved Account. Process Builder cannot chain multiple jobs for retry mechanisms or future processing, which can be useful in case of failures.","comment_id":"1387921","poster":"BrainMelt12"}],"upvote_count":"2","timestamp":"1638186120.0","poster":"nibbio","comment_id":"489833"},{"poster":"Santoshtpd","content":"C should be correct ,like Call the invocable method from process builder and from invocable method call the @future method and write your callout logic there in @future method.","timestamp":"1626913740.0","upvote_count":"2","comment_id":"411273"},{"timestamp":"1613745000.0","comment_id":"294325","upvote_count":"1","poster":"Pradip2021","content":"It should be A, as it will call Restful web service and it is a slow process"}],"question_images":[],"answers_community":["B (42%)","C (33%)","A (25%)"],"topic":"1","question_text":"A developer needs to send Account records to an external system for backup purposes. The process must take a snapshot of Accounts as they are saved and then make a callout to a RESTful web service. The web service can only receive, at most, one record per call.\nWhich feature should be used to implement these requirements?","answer":"B","answer_description":"","exam_id":223},{"id":"LRPnticMHLrZ1fMuZLJs","topic":"1","answer_images":[],"question_images":[],"answer_ET":"D","answer_description":"","isMC":true,"exam_id":223,"unix_timestamp":1676605440,"question_id":242,"discussion":[{"timestamp":"1741789140.0","upvote_count":"1","poster":"BrainMelt12","comment_id":"1387925","content":"Selected Answer: D\nThe \"Maximum Trigger Depth Exceeded\" error occurs when a trigger keeps calling itself in a recursive loop more than 16 times, which is Salesforce’s limit. This typically happens when a trigger performs DML operations (like insert, update, or delete) that cause it to fire again, leading to an infinite loop or excessive recursion."},{"upvote_count":"2","poster":"karappo","timestamp":"1723859040.0","content":"Check trigger governor limit per transactions\nhttps://help.salesforce.com/s/articleView?id=000386331&type=1","comment_id":"811364"}],"answer":"D","answers_community":["D (100%)"],"choices":{"C":"There are numerous DML operations in the trigger logic.","B":"A process Builder is running that sends mass emails.","A":"The SOQL governor limits are being hit.","D":"A trigger is recursively invoked more than 16 times."},"url":"https://www.examtopics.com/discussions/salesforce/view/99515-exam-certified-platform-developer-ii-topic-1-question-63/","timestamp":"2023-02-17 04:44:00","question_text":"A developer gets an error saying 'Maximum Trigger Depth Exceeded'.\nWhat is a possible reason to get this error message?"},{"id":"TydqrZcGFTovc97d2PCs","question_text":"An org has a requirement that an Account must always have one and only one Contact listed as Primary. So selecting one Contact will de-select any others. The client wants a checkbox on the Contact called 'Is Primary' to control this feature. The client also wants to ensure that the last name of every Contact is stored entirely in uppercase characters.\nWhat is the optimal way to implement these requirements?","question_images":[],"answer_ET":"D","timestamp":"2022-12-27 15:15:00","isMC":true,"answer":"D","exam_id":223,"answer_description":"","discussion":[{"upvote_count":"2","timestamp":"1726514220.0","comment_id":"1009267","content":"Selected Answer: D\nFor me it is D. C does not make sense for me, because how you will control is Primary when you will be adding a new contact if the trigger is in Account? Also, for me, the best solution is a trigger in Contact for Is Primary and a validation rule for the LastName","poster":"peixotmarc"},{"upvote_count":"1","comment_id":"993764","poster":"John1212","content":"C is Correct","timestamp":"1724999820.0"},{"timestamp":"1708148400.0","poster":"karappo","comment_id":"811497","upvote_count":"2","content":"1st thing to consider probably is 1 trigger per object"},{"comment_id":"758601","upvote_count":"1","poster":"lorenac2","content":"More information on apex best practices: https://www.salesforceben.com/12-salesforce-apex-best-practices/","timestamp":"1703686500.0"}],"choices":{"A":"Write an after update trigger on Contact for the Is Primary logic and a separate before update trigger on Contact for the last name logic.","D":"Write a single trigger on Contact for both after update and before update and callout to helper classes to handle each set of logic.","C":"Write an after update trigger on Account for the Is Primary logic and a before update trigger on Contact for the last name logic.","B":"Write a Validation Rule on the Contact for the Is Primary logic and a before update trigger on Contact for the last name logic."},"answer_images":[],"answers_community":["D (100%)"],"url":"https://www.examtopics.com/discussions/salesforce/view/92979-exam-certified-platform-developer-ii-topic-1-question-64/","topic":"1","question_id":243,"unix_timestamp":1672150500},{"id":"i20V0m6ERaUqRbaMLsoc","isMC":true,"answer_ET":"A","answer_description":"","url":"https://www.examtopics.com/discussions/salesforce/view/41935-exam-certified-platform-developer-ii-topic-1-question-65/","choices":{"D":"RecordType","A":"Report","C":"Profile","B":"User"},"question_images":[],"answers_community":["A (100%)"],"unix_timestamp":1610237760,"topic":"1","answer_images":[],"question_text":"A developer is trying to access org data from within a test class.\nWhich sObject type requires the test class to have the (seeAllData=true) annotation?","question_id":244,"discussion":[{"upvote_count":"22","poster":"Soliton321","content":"A is correct. https://salesforce.stackexchange.com/questions/149110/when-is-it-appropriate-to-use-seealldata-true","comments":[{"timestamp":"1636355580.0","comment_id":"352368","poster":"CraigJ","upvote_count":"3","content":"Agree. https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_testing_data_access.htm"}],"timestamp":"1625868960.0","comment_id":"263567"},{"comment_id":"424437","poster":"amerbearat","content":"Answer: A\n\nBCD are accesible from DB by default.","upvote_count":"6","timestamp":"1644776220.0"},{"comment_id":"1185191","poster":"SassyRock","timestamp":"1727571360.0","content":"Selected Answer: A\nhttps://salesforce.stackexchange.com/questions/149110/when-is-it-appropriate-to-use-seealldata-true","upvote_count":"2"},{"upvote_count":"1","poster":"aroraraj16","content":"Selected Answer: A\nWe can not see Report without SeeAllData=true. So A is correct","timestamp":"1724047980.0","comment_id":"1153775"},{"poster":"thneeb","comment_id":"798160","content":"Selected Answer: A\nBCD is accessible anyway, only for accessing reports the annotation is needed","upvote_count":"1","timestamp":"1691158740.0"},{"timestamp":"1686122040.0","content":"Selected Answer: A\nA Report, since it is not visible by default","comment_id":"737649","poster":"sf2022","upvote_count":"1"}],"exam_id":223,"answer":"A","timestamp":"2021-01-10 01:16:00"},{"id":"lbWrOgom0LCXvllQvPN9","unix_timestamp":1672150680,"question_text":"The progress of an apex job queued is using the System.enqueueJob method and needs to be monitored.\nWhich options are valid? (Choose two.)","exam_id":223,"answers_community":[],"isMC":true,"answer_description":"","answer":"AC","answer_ET":"AC","question_id":245,"timestamp":"2022-12-27 15:18:00","topic":"1","question_images":[],"url":"https://www.examtopics.com/discussions/salesforce/view/92980-exam-certified-platform-developer-ii-topic-1-question-66/","choices":{"A":"Use the Apex Jobs page in setup","D":"Use the Scheduled Jobs page in setup","C":"Query the AsyncApexJob record","B":"Query the Queueable Apex record"},"discussion":[{"upvote_count":"2","timestamp":"1725168660.0","poster":"YNWA_A1","comment_id":"1163295","content":"AC is good"},{"timestamp":"1687868280.0","poster":"lorenac2","content":"More Information: https://trailhead.salesforce.com/content/learn/modules/asynchronous_apex/async_apex_monitoring","comment_id":"758604","upvote_count":"3"}],"answer_images":[]}],"exam":{"numberOfQuestions":281,"isMCOnly":true,"provider":"Salesforce","lastUpdated":"12 Apr 2025","id":223,"isImplemented":true,"isBeta":false,"name":"Certified Platform Developer II"},"currentPage":49},"__N_SSP":true}