{"pageProps":{"questions":[{"id":"WVVQbJcGLFP4KxohGDP6","answer_images":[],"choices":{"D":"CalloutException","A":"LimitException","B":"NoAccessException","C":"A Custom Exception"},"isMC":true,"question_text":"Which exception type cannot be caught?","question_id":111,"topic":"1","answers_community":[],"url":"https://www.examtopics.com/discussions/salesforce/view/125133-exam-crt-450-topic-1-question-225-discussion/","answer_description":"","unix_timestamp":1698877560,"answer_ET":"A","timestamp":"2023-11-01 23:26:00","discussion":[{"comment_id":"1060093","content":"The answer is A. \nAccording to the Salesforce documentation, you cannot catch limit exceptions in Apex\nhttps://salesforce.stackexchange.com/questions/16872/how-to-handle-system-limit-exception","poster":"SanjeevOnForce","upvote_count":"1","timestamp":"1730499960.0"}],"answer":"A","question_images":[],"exam_id":209},{"id":"UgOxZyF2nYss1qdS0dtS","unix_timestamp":1632904860,"answers_community":["CD (100%)"],"isMC":true,"answer_description":"","timestamp":"2021-09-29 10:41:00","choices":{"A":"Setter methods always have to be declared global.","B":"Setter methods are required to pass a value from a page to a controller.","C":"There is no guarantee for the order in which Getter or Setter methods are executed.","D":"Getter methods can pass a value from a controller to a page."},"question_text":"Which two statements are true about Getter and Setter methods? (Choose two.)","question_images":[],"discussion":[{"poster":"MuzaffarMoiz","comment_id":"460479","content":"Right answer is B and D","upvote_count":"8","timestamp":"1649667300.0"},{"content":"What's wrong with D? In my opinion should be B and D.\nThere is no guarantee of order between extension and controller related methods and variables","poster":"[Removed]","timestamp":"1648543260.0","comment_id":"453963","upvote_count":"5"},{"poster":"SanjeevOnForce","timestamp":"1714595700.0","content":"I think the most appropriate answer is B and D.","comment_id":"1060096","upvote_count":"1"},{"poster":"irina_735","content":"Selected Answer: CD\nWhile a getter method is always required to access values from a controller, it’s not always necessary to include a setter method to pass values into a controller. Visualforce doesn’t define the order in which setter methods are called: https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_methods.htm","upvote_count":"2","timestamp":"1710842760.0","comment_id":"1011095"},{"poster":"BrucePark","content":"According to the dev guide, B doesn't seem correct. It says, \"While a getter method is always required to access values from a controller, it’s not always necessary to include a setter method to pass values into a controller.\"\nSo, setter is not required always.","timestamp":"1705793400.0","comment_id":"957896","upvote_count":"1"},{"content":"Selected Answer: CD\nWhile a getter method is always required to access values from a controller, it’s not always necessary to include a setter method to pass values into a controller.","timestamp":"1702502760.0","comment_id":"922480","poster":"Jhonvf20","upvote_count":"3"},{"poster":"Dean5555","comments":[{"content":"You could say that alternative B is poorly written... Because it would be possible to interpret that 'a setter needs to pass a value's.... Just like 'passengers need to stay in their seats' or 'passengers are required to stay in their seats'\n\nBut I could not find any evidence that C is correct","comment_id":"789941","timestamp":"1690478820.0","poster":"RMEZZA","comments":[{"upvote_count":"1","comment_id":"1126192","content":"[quoting]\n\"Getting and Setting Data with a Custom Extension or Controller\nThere is no guaranteed order in which Apex methods and variables are processed by a controller extension or custom controller. Therefore, do not allow controller and extension classes to rely on another method being run, call that method directly. This applies specifically to setting variables and accessing data from the database.\"\nhttps://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_methods.htm","poster":"mariamarlenepereira9","timestamp":"1721329200.0"}],"upvote_count":"1"},{"timestamp":"1680856200.0","content":"There are multiple ways to (B) pass the value from page to a controller so it's not *required*","upvote_count":"1","poster":"Dean5555","comment_id":"688461"}],"comment_id":"688457","upvote_count":"4","content":"Selected Answer: CD\nIt's C and D\nhttps://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_methods.htm","timestamp":"1680855780.0"}],"question_id":112,"exam_id":209,"answer_ET":"CD","answer":"CD","answer_images":[],"url":"https://www.examtopics.com/discussions/salesforce/view/63188-exam-crt-450-topic-1-question-229-discussion/","topic":"1"},{"id":"cqgkOpNvuLrLfpyKFFLW","answer_images":[],"choices":{"C":"myFooController m = new myFooController(); System.assert(m.prop ==null);","B":"myFooController m = new myFooController(); System.assert(m.prop ==0);","D":"myFooController m = new myFooController(); System.assert(m.prop ==1);","A":"myFooController m = new myFooController(); System.assert(m.prop !=null);"},"isMC":true,"question_text":"A developer has the controller class below.\n//IMG//\n\nWhich code block will run successfully in an execute anonymous window?","question_id":113,"topic":"1","answers_community":["C (100%)"],"url":"https://www.examtopics.com/discussions/salesforce/view/77782-exam-crt-450-topic-1-question-23-discussion/","answer_description":"","answer_ET":"C","unix_timestamp":1658944980,"timestamp":"2022-07-27 20:03:00","discussion":[{"comment_id":"638263","upvote_count":"5","content":"c is correct answer\nThe reason is that the value of prop variable is never defined in the constructor of controller hence it is null","poster":"kimmaayyaa","timestamp":"1658944980.0"},{"timestamp":"1718872620.0","comment_id":"1233535","upvote_count":"1","content":"Selected Answer: C\nIf you declare a variable and don't initialize it with a value, it will be null. In essence, null means the absence of a value.","poster":"Ankit_Swami"},{"comment_id":"1227867","poster":"TDB97","upvote_count":"2","content":"All the code will run successfully, but not all of them will return true.. \nBut yes C would be correct if we solve for true","timestamp":"1718023800.0"},{"timestamp":"1682424780.0","poster":"1vanTT","comment_id":"880335","upvote_count":"3","content":"https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/langCon_apex_variables.htm"}],"answer":"C","question_images":["https://www.examtopics.com/assets/media/exam-media/03769/0001100001.png"],"exam_id":209},{"id":"DsZjMX6vGaisaoycm7HZ","question_images":[],"answer":"B","unix_timestamp":1638287160,"exam_id":209,"choices":{"C":"Unlimited processing power and memory","A":"Access to predefined computing resources","B":"Enforced best practices for development","D":"Default out-of-the-box configuration"},"isMC":true,"answer_images":[],"timestamp":"2021-11-30 16:46:00","answer_description":"","topic":"1","answers_community":["B (50%)","A (50%)"],"url":"https://www.examtopics.com/discussions/salesforce/view/66983-exam-crt-450-topic-1-question-230-discussion/","question_id":114,"discussion":[{"poster":"rjax","content":"Selected Answer: A\nA multi-tenant environment, like Salesforce, allows multiple customers (tenants) to share the same computing resources while keeping their data secure and separate.","comment_id":"1399703","timestamp":"1742228280.0","upvote_count":"1"},{"poster":"simox_Dev","timestamp":"1719401520.0","content":"I think the correct answer is A , here is why : \n\nIn a multi-tenant environment, tenants share the same computing resources, such as processing power, memory, and storage, provided by the host. This predefined access allows for efficient resource allocation and management without the need for each tenant to manage their own infrastructure.","upvote_count":"2","comment_id":"1237419"},{"poster":"RMEZZA","upvote_count":"1","timestamp":"1674846540.0","content":"Selected Answer: B\nMulti tenant does not imply out-of-the-box... And having multiple tenants (multiple orgs) in your landscape is actually a good practice (orgs for dev, test, production).\nAnyway... Question is poorly written... But I'd stick with B in this case","comment_id":"789934"},{"timestamp":"1638287160.0","upvote_count":"4","poster":"illyaOsiyuk","content":"Why not 'D'?\nBecause enforcing of best practices is not serious for me","comments":[{"comment_id":"1197458","upvote_count":"2","poster":"83f117f","content":"Because the question is specific to developing ... \"What is a benefit of developing applications in a multi-tenant environment?\" \nThat's why the B is the right one.","timestamp":"1713385140.0"}],"comment_id":"490794"}],"question_text":"What is a benefit of developing applications in a multi-tenant environment?","answer_ET":"B"},{"id":"UCk7BDUwmg4cMzC85UBt","answers_community":["BC (50%)","CD (50%)"],"isMC":true,"exam_id":209,"timestamp":"2021-09-29 10:26:00","question_images":[],"url":"https://www.examtopics.com/discussions/salesforce/view/63186-exam-crt-450-topic-1-question-233-discussion/","topic":"1","discussion":[{"content":"According to : https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_keywords_final.htm\n\nA is correct : \"Methods and classes are final by default.\"\n\nAccording to : https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_defining.htm\n\nC is correct : \"The private access modifier declares that this class is only known locally, that is, only by this section of code. This is the default access for inner classes.\"\n\nD is correct : \"You can only have inner classes one level deep.\"\n\nAnd according to : https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_access_modifiers.htm\n\nB is false : \"Interface methods have no access modifiers. They are always global.\"\n\nThere it is boys :)","upvote_count":"8","poster":"noox","comment_id":"521004","timestamp":"1641836160.0"},{"poster":"Ke_James0302","comment_id":"1290689","upvote_count":"1","timestamp":"1727537760.0","content":"Selected Answer: BC\nB and C"},{"content":"Selected Answer: CD\nA, C, D are correct. But C and D seems to be more appropriate","upvote_count":"1","comment_id":"1028544","timestamp":"1696832880.0","poster":"irina_735"},{"timestamp":"1674299400.0","content":"CD\nhttps://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_defining.htm","poster":"ArthuriusII","comment_id":"783195","upvote_count":"2"},{"upvote_count":"3","timestamp":"1638287760.0","comment_id":"490798","content":"ACD are right answers, so what should I choose?","poster":"illyaOsiyuk"},{"content":"My mistake.\n\nCorrect answers: A and C\n\nMethods and classes are final by default. You cannot use the final keyword in the declaration of a class or method. This means they cannot be overridden. Use the virtual keyword if you need to override a method or class.\n\nInterface methods are always global not public","upvote_count":"4","poster":"[Removed]","comment_id":"453958","timestamp":"1632904200.0","comments":[{"upvote_count":"1","content":"I agree with that!","comment_id":"468460","timestamp":"1635324900.0","poster":"DonAldos"},{"comment_id":"460554","timestamp":"1633951620.0","poster":"MuzaffarMoiz","upvote_count":"1","content":"B and D is correct"}]},{"content":"B and C\nThis is the default access for inner classes—that is, if you don't specify an access modifier for an inner class, it is considered private.","comment_id":"453953","poster":"[Removed]","upvote_count":"2","timestamp":"1632903960.0"}],"answer_images":[],"choices":{"A":"Classes are final by default.","D":"A class can only have one inner class level.","B":"Interface methods are public by default.","C":"Inner classes are private by default."},"answer":"BC","question_text":"Which two statements are valid regarding Apex classes and interfaces? (Choose two.)","question_id":115,"answer_ET":"BD","unix_timestamp":1632903960,"answer_description":""}],"exam":{"isImplemented":true,"name":"CRT-450","provider":"Salesforce","lastUpdated":"12 Apr 2025","numberOfQuestions":293,"id":209,"isMCOnly":false,"isBeta":false},"currentPage":23},"__N_SSP":true}