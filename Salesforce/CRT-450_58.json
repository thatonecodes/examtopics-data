{"pageProps":{"questions":[{"id":"Kbug1b9iwiSiDrTNBBKL","url":"https://www.examtopics.com/discussions/salesforce/view/91634-exam-crt-450-topic-1-question-92-discussion/","choices":{"B":"Add the SeeAllData annotation to the test class.","A":"Change recordCount from private to public.","D":"Add the TestVisible annotation to the MyController class.","C":"Add the TestVisible annotation to recordCount."},"unix_timestamp":1671073140,"answer_description":"","topic":"1","answers_community":["C (100%)"],"question_id":286,"timestamp":"2022-12-15 03:59:00","discussion":[{"comment_id":"745657","upvote_count":"5","timestamp":"1686790740.0","content":"Selected Answer: C\nhttps://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_classes_annotation_testvisible.htm","poster":"_ApexPredator_"},{"upvote_count":"1","comment_id":"1179247","poster":"ABHI0O07","content":"@TestVisible annotation","timestamp":"1726916340.0"},{"upvote_count":"1","comment_id":"1078299","content":"Selected Answer: C\nC is correct \nTestVisible Annotation\nUse the TestVisible annotation to allow test methods to access private or protected members of another class outside the test class.","poster":"helper_raw","timestamp":"1716450000.0"}],"answer_images":[],"answer":"C","exam_id":209,"question_images":["https://www.examtopics.com/assets/media/exam-media/03769/0004200002.jpg"],"isMC":true,"question_text":"Given the code below, what can be done so that recordCount can be accessed by a test class, but not by a non-test class?\n//IMG//","answer_ET":"C"},{"id":"h0NVyDJoMShDXcuWjNFU","question_id":287,"answer":"C","topic":"1","answer_ET":"C","isMC":true,"answers_community":["C (100%)"],"exam_id":209,"unix_timestamp":1694910000,"choices":{"C":"NullPointer Exception","D":"No message is logged.","A":"Generic Exception","B":"List Exception"},"question_text":"Which message is logged by the code below?\n//IMG//","timestamp":"2023-09-17 02:20:00","answer_images":[],"discussion":[{"comment_id":"1354029","timestamp":"1739121780.0","poster":"pichtri","upvote_count":"1","content":"Selected Answer: C\nThe list and the account are both not initialized. Thus it will result in a NullPointerException when trying to insert the account. But will still throw a NullPointerException even if account was initialized since List is not."},{"upvote_count":"1","poster":"IOANABUZ","timestamp":"1720435800.0","content":"Selected Answer: C\ntested in anonymous, c is correct","comment_id":"1244304"},{"poster":"danielVentura","upvote_count":"2","comment_id":"1101759","timestamp":"1703091300.0","content":"Selected Answer: C\nC - Correct"},{"upvote_count":"3","content":"Look at the order of the code. You are attempting to insert before the Account record has been added to the list.","poster":"chucksback","comment_id":"1009437","timestamp":"1694910000.0"}],"question_images":["https://www.examtopics.com/assets/media/exam-media/03769/0004300001.png"],"url":"https://www.examtopics.com/discussions/salesforce/view/120842-exam-crt-450-topic-1-question-93-discussion/","answer_description":""},{"id":"27g2MmV2fyXXxiqWXM0X","answer_description":"","url":"https://www.examtopics.com/discussions/salesforce/view/66940-exam-crt-450-topic-1-question-94-discussion/","answers_community":["D (100%)"],"timestamp":"2021-11-29 20:13:00","answer":"D","discussion":[{"content":"Selected Answer: D\nD is correct. \nhttps://developer.salesforce.com/docs/atlas.en-us.salesforce_app_limits_cheatsheet.meta/salesforce_app_limits_cheatsheet/salesforce_app_limits_platform_apexgov.htm\nCPU time is calculated for all executions on the Salesforce application servers occurring in one Apex transaction. CPU time is calculated for the executing Apex code, and for any processes that are called from this code, such as package code and workflows. CPU time is private for a transaction and is isolated from other transactions. Operations that don't consume application server CPU time aren't counted toward CPU time. For example, the portion of execution time spent in the database for DML, SOQL, and SOSL isn't counted, nor is waiting time for Apex callouts. Application server CPU time spent in DML operations is counted towards the Apex CPU limit, but isn’t expected to be significant. Bulk API and Bulk API 2.0 consume a unique governor limit for CPU time on Salesforce Servers, with a maximum value of 60,000 milliseconds.","comment_id":"777356","poster":"LordGreed","upvote_count":"4","timestamp":"1721103120.0"},{"comments":[{"comment_id":"491469","timestamp":"1685603520.0","content":"This answer A only applies to Static limitations, which doesn't represent all the code in an Apex transaction.They represent extra limitations. This is a very specific situation, in which extra limitations regarding Apex callouts, queries, records, and when there’s more than one transaction. In the question, it asks for all the code in an Apex transaction, which makes D correct. In your article, solution D would be under per-transaction.\nhttps://onilab.com/blog/governor-limits-salesforce/","poster":"bobbyaaaaa","upvote_count":"4"}],"content":"A.\nRef: https://developer.salesforce.com/docs/atlas.en-us.234.0.apexcode.meta/apexcode/apex_gov_limits.htm\nMaximum SOQL query run time before Salesforce cancels the transaction (120s)","poster":"Sib1993B","comment_id":"490149","timestamp":"1685380380.0","upvote_count":"1"}],"choices":{"C":"Number of new records created","B":"Number of classes called","D":"Elapsed CPU time","A":"Elapsed SOQL query time"},"topic":"1","answer_ET":"D","unix_timestamp":1638213180,"question_id":288,"exam_id":209,"question_images":[],"question_text":"Which governor limit applies to all the code in an Apex transaction?","isMC":true,"answer_images":[]},{"id":"md9kVyf0ISlokS28xCVt","question_id":289,"question_text":"An Apex transaction inserts 100 Account records and 2,000 Contact records before encountering a DML exception when attempting to insert 500 Opportunity records.\nThe Account records are inserted by calling the database.insert() method with the allOrNone argument set to false. The Contact and Opportunity records are inserted using the standalone insert statement.\nHow many total records will be committed to the database in this transaction?","unix_timestamp":1629966120,"answer":"C","choices":{"D":"100","B":"2,100","C":"0","A":"2,000"},"topic":"1","exam_id":209,"answers_community":["C (80%)","D (20%)"],"url":"https://www.examtopics.com/discussions/salesforce/view/60700-exam-crt-450-topic-1-question-95-discussion/","timestamp":"2021-08-26 10:22:00","isMC":true,"answer_description":"","answer_ET":"C","answer_images":[],"discussion":[{"comment_id":"432069","comments":[{"content":"But if you set allornone to false then successful records get saved in database. So answer will be 100(Account records)","upvote_count":"7","comment_id":"460583","comments":[{"content":"They will, as well as all 2000 contacts. But when erorr occurs later in Opportunities - it fails transaction and everything rollbacks","timestamp":"1668673860.0","comments":[{"poster":"BrucePark","upvote_count":"1","comment_id":"963147","content":"Why for all 2000 contacts? It says standalone insert statement was used.","timestamp":"1706226600.0"}],"upvote_count":"7","comment_id":"602810","poster":"PegasusFromUranus"}],"timestamp":"1649679240.0","poster":"Yojit"}],"timestamp":"1645870920.0","content":"I think Answer is \"0\" because \nAll insertions took place in one transaction and the transaction fails, so all records are rolledback even the one inserted form Database.insert().","upvote_count":"8","poster":"abdulAhad911"},{"content":"Selected Answer: C\nc is correct","timestamp":"1726917840.0","poster":"ABHI0O07","comment_id":"1179275","upvote_count":"1"},{"content":"option c is correct.\nreplicate the scenario using this code\nList<Account> accountsToInsert = new List<Account>();\nfor(Integer i = 1; i <= 100; i++) {\n Account acc = new Account();\n acc.Name = 'testaccount ' + String.valueOf(i);\n \n accountsToInsert.add(acc);\n}\n\nList<Contact> contactsToInsert = new List<Contact>();\nfor(Integer i = 1; i <= 2000; i++) {\n Contact con = new Contact();\n con.LastName = 'testcontact ' + String.valueOf(i);\n contactsToInsert.add(con);\n}\nList<Opportunity> opportunitiesToInsert = new List<Opportunity>();\nfor(Integer i = 1; i <= 500; i++) {\n Opportunity opp = new Opportunity();\n opp.Name = 'Test Opportunity ' + String.valueOf(i);\n // Set additional fields if needed\n opportunitiesToInsert.add(opp);\n}\nDatabase.insert(accountsToInsert,false);\ninsert contactsToInsert;\ninsert opportunitiesToInsert;","comment_id":"1179271","upvote_count":"1","timestamp":"1726917600.0","poster":"ABHI0O07"},{"content":"Selected Answer: C\nAnswer of this Question is D.\nAll insertions took place in one transaction and the transaction fails, so all records are rolledback even the one inserted form Database.insert().","timestamp":"1716450960.0","comment_id":"1078306","upvote_count":"1","poster":"helper_raw","comments":[{"content":"i mean answer of this Question is C","timestamp":"1716451080.0","upvote_count":"2","poster":"helper_raw","comment_id":"1078309"}]},{"timestamp":"1710642420.0","content":"I think D is correct but C (0) can also be correct. D because the first 100 account records should be inserted then the 2000 contacts would already be above the 150DML limit. but if the database.inser() false is used to insert opportunities then that'd fail because you are already exceeding DML limits. \n\nC would be correct in the event that all of this is in one transaction, however because the Insert and Database.Insert is separate transactions, I'm thinking 100 account records but because the contact is also there it could just roll back","upvote_count":"1","comment_id":"1009443","poster":"chucksback"},{"comment_id":"741722","timestamp":"1686481920.0","poster":"FerhatHappy","content":"Selected Answer: C\nC is correct because all operations are in one transaction. If any operation in the transaction fails, all DML operation are rolledback","upvote_count":"3"},{"timestamp":"1680782340.0","comment_id":"687744","poster":"Dean5555","content":"Selected Answer: C\nThe answer is C as explained","upvote_count":"3"},{"timestamp":"1668673740.0","poster":"PegasusFromUranus","comments":[{"timestamp":"1686860520.0","upvote_count":"1","poster":"_ApexPredator_","content":"Can you please provide a source to this in relation to allOrNone being used? I understand this happens when the insert is set to true, but set to false would suggest that partial is saved:\n\nhttps://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_dml_bulk_exceptions.htm?q=allornone","comment_id":"746560"}],"comment_id":"602809","upvote_count":"4","content":"Selected Answer: C\nException when inserting using standalone dmls fails transaction and all changes rollbacked.\nallOrNone = false allows you to skip erorrs when inserting records in the current Database.insert() method, but not in the whole transaction."},{"poster":"khoce","upvote_count":"3","comment_id":"595632","content":"Selected Answer: D\nD is correct","timestamp":"1667321520.0"}],"question_images":[]},{"id":"jLRYlxTB64XWVfs2QfGw","answers_community":["A (100%)"],"question_id":290,"url":"https://www.examtopics.com/discussions/salesforce/view/129108-exam-crt-450-topic-1-question-96-discussion/","question_text":"The sales team at Universal Containers would like to see a visual indicator appear on both Account and Opportunity page layouts to alert salespeople when an\nAccount is late making payments or has entered the collections process.\nWhat can a developer implement to achieve this requirement without having to write custom code?","unix_timestamp":1703091720,"topic":"1","isMC":true,"discussion":[{"content":"Selected Answer: A\nA - Correct","upvote_count":"1","poster":"danielVentura","timestamp":"1718895720.0","comment_id":"1101768"}],"question_images":[],"answer_ET":"A","answer_description":"","choices":{"B":"Workflow Rule","C":"Quick Action","D":"Roll-up Summary Field","A":"Formula Field"},"answer_images":[],"timestamp":"2023-12-20 18:02:00","exam_id":209,"answer":"A"}],"exam":{"lastUpdated":"12 Apr 2025","provider":"Salesforce","numberOfQuestions":293,"name":"CRT-450","isBeta":false,"id":209,"isImplemented":true,"isMCOnly":false},"currentPage":58},"__N_SSP":true}