{"pageProps":{"questions":[{"id":"pqcK3dk7RMSFkvVUkw1e","answer_images":[],"unix_timestamp":1667298660,"topic":"1","discussion":[{"comment_id":"753013","upvote_count":"17","comments":[{"content":"The incorrect solutions are:\n\nOption A: Migrating the monthly reporting to Amazon Redshift may not be cost-effective because it involves creating a new data store and potentially significant data migration and ETL costs.\n\nOption C: Migrating the Aurora database to a larger instance class may not be cost-effective because it involves changing the underlying hardware of the database and potentially incurring additional costs for the larger instance.\n\nOption D: Increasing the Provisioned IOPS on the Aurora instance may not be cost-effective because it involves paying for additional I/O capacity that may not be necessary for other workloads on the database.","upvote_count":"11","timestamp":"1671690180.0","poster":"Buruguduystunstugudunstuy","comment_id":"753014"}],"content":"Selected Answer: B\nOption B: Migrating the monthly reporting to an Aurora Replica may be the most cost-effective solution because it involves creating a read-only copy of the database that can be used specifically for running large reports without impacting the performance of the primary database. This solution allows the company to scale the read capacity of the database without incurring additional hardware or I/O costs.","poster":"Buruguduystunstugudunstuy","timestamp":"1671690180.0"},{"content":"Selected Answer: B\nReport = Aurora replica","timestamp":"1702154580.0","comment_id":"1092052","upvote_count":"7","poster":"Mikado211"},{"comment_id":"1352545","timestamp":"1738862760.0","poster":"Dharmarajan","content":"Selected Answer: B\nB. Doesnt say \"Read Replica\" but I guess it is implied - what other kind of replica is there? only an active-active standby, still that would solve the issue.","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: B\nAns B - Using Aurora Replica means you can work off a snapshot without impacting the master DB","timestamp":"1729104660.0","poster":"PaulGa","comment_id":"1298898"},{"content":"Selected Answer: B\nAns B - making reports is temporary feature every month, so creating Aurora Replica is sufficient and efficient. Redshift is unnecessary (and means further overheads); C, D permanently upgrade capability which is not needed","poster":"PaulGa","timestamp":"1726913640.0","comment_id":"1287283","upvote_count":"2"},{"poster":"1166ae3","upvote_count":"1","comment_id":"1238299","content":"Selected Answer: D\nThis approach focuses directly on mitigating the observed IOPS spikes, which are likely contributing to the performance degradation during heavy report processing, without introducing additional complexities or higher operational costs associated with other options.","timestamp":"1719509160.0"},{"poster":"lofzee","timestamp":"1716883560.0","comment_id":"1220074","content":"Aye B.","upvote_count":"1"},{"poster":"TariqKipkemei","timestamp":"1694060460.0","upvote_count":"4","content":"Selected Answer: B\nMigrate the monthly reporting to an Aurora Replica","comment_id":"1001167"},{"upvote_count":"4","poster":"Guru4Cloud","content":"Selected Answer: B\nAurora Replicas utilize the same storage as the primary instance so there is no additional storage cost.\nReplicas can be created and destroyed easily to match reporting needs.\nThe primary Aurora instance size does not need to be changed, avoiding additional cost.\nWorkload is offloaded from the primary instance, improving its performance.\nNo major software/configuration changes needed compared to options like Redshift.","comment_id":"982975","timestamp":"1692216660.0"},{"timestamp":"1692082140.0","comments":[{"content":"Silly me, I thought upgrading instance type includes storage upgrade (increase read iops) lol. The question pointed out that hard drive is also a limiting factor, so correct answer is B.","timestamp":"1692235620.0","upvote_count":"3","comment_id":"983164","poster":"cd93"}],"upvote_count":"2","poster":"cd93","comment_id":"981369","content":"I don't understand why doubling everything (instances, network cost, maintenance effort, and especially storage) can be considered \"cost-saving\" for a simple monthly report...\nAn instance upgrade can very well be much cheaper. This question is very vague and does not provide enough information."},{"content":"Selected Answer: B\nB is correct because migrating the monthly reporting to an Aurora Replica can offload the reporting workload from the primary Aurora instance, reducing the impact on its performance during large reports. Using an Aurora Replica provides scalability and allows the replica to handle the read-intensive reporting queries, improving the overall performance of the ecommerce application.\n\nA is wrong because migrating to Amazon Redshift introduces additional costs and complexity, and it may not be necessary to switch to a separate data warehousing service for this specific issue.\n\nC is wrong because simply increasing the instance class of the Aurora database may not be the most cost-effective solution if the performance issue can be resolved by offloading the reporting workload to an Aurora Replica.\n\nD is wrong because increasing the Provisioned IOPS alone may not address the issue of spikes in CPUUtilization during large reports, as it primarily focuses on storage performance rather than overall database performance.","poster":"cookieMr","upvote_count":"5","comment_id":"932409","timestamp":"1687599540.0"},{"comment_id":"908353","timestamp":"1685252220.0","poster":"Abrar2022","upvote_count":"2","content":"By using an Aurora Replica for running large reports, the primary database will be relieved of the additional read load, improving performance for the ecommerce application."},{"upvote_count":"1","poster":"Bmarodi","comment_id":"905018","content":"Selected Answer: B\nOption B is right answer.","timestamp":"1684854300.0"},{"upvote_count":"3","content":"Finally a question where there are no controversies","timestamp":"1683677520.0","comment_id":"893499","poster":"studynoplay"},{"poster":"SilentMilli","content":"Selected Answer: B\nThe most cost-effective solution for addressing high ReadIOPS and CPU utilization when running large reports would be to migrate the monthly reporting to an Aurora Replica. An Aurora Replica is a read-only copy of an Aurora database that is updated in real-time with the primary database. By using an Aurora Replica for running large reports, the primary database will be relieved of the additional read load, improving performance for the ecommerce application. Option B, \"Migrate the monthly reporting to an Aurora Replica,\" is the correct answer.","comment_id":"770478","timestamp":"1673272200.0","upvote_count":"2"},{"timestamp":"1671314940.0","poster":"career360guru","upvote_count":"2","content":"Selected Answer: B\nB is the best option","comment_id":"748452"},{"upvote_count":"1","content":"Selected Answer: B\nB is correct","timestamp":"1670825400.0","comment_id":"742446","poster":"sanket1990"},{"poster":"Wpcorgan","upvote_count":"1","content":"B is correct","comment_id":"724395","timestamp":"1669130040.0"},{"content":"Selected Answer: B\nReadIOPS issue inclining towards Read Replica as the most cost effective solution here","timestamp":"1667697240.0","upvote_count":"4","poster":"backbencher2022","comment_id":"712111"},{"content":"Answer B","comment_id":"709035","timestamp":"1667298660.0","upvote_count":"2","poster":"rjam"}],"answer_description":"","question_id":71,"question_images":[],"answer_ET":"B","answer":"B","question_text":"A company recently started using Amazon Aurora as the data store for its global ecommerce application. When large reports are run, developers report that the ecommerce application is performing poorly. After reviewing metrics in Amazon CloudWatch, a solutions architect finds that the ReadIOPS and CPUUtilizalion metrics are spiking when monthly reports run.\nWhat is the MOST cost-effective solution?","answers_community":["B (98%)","2%"],"url":"https://www.examtopics.com/discussions/amazon/view/86781-exam-aws-certified-solutions-architect-associate-saa-c03/","choices":{"B":"Migrate the monthly reporting to an Aurora Replica.","C":"Migrate the Aurora database to a larger instance class.","D":"Increase the Provisioned IOPS on the Aurora instance.","A":"Migrate the monthly reporting to Amazon Redshift."},"isMC":true,"exam_id":31,"timestamp":"2022-11-01 11:31:00"},{"id":"8X7vtrEJvueQs3YpOUtK","question_images":[],"isMC":true,"answers_community":["D (78%)","A (20%)","2%"],"discussion":[{"content":"Selected Answer: D\nI was tempted to pick A but then I realized there are two key requirements:\n- scale seamlessly\n- cost-effectively\n\nNone of A-C give seamless scalability. A and B are about adding second instance (which I assume does not match to \"scale seamlessly\"). C is about changing instance type.\n\nTherefore D is only workable solution to the scalability requirement","poster":"Konb","comment_id":"889590","timestamp":"1683225840.0","comments":[{"poster":"hpirnaj","upvote_count":"1","content":"Aurora is way more expensive than MySQL. but . I would still pick option D because it will scale seamlessly with ASG and Aurora . A is not scale at all","timestamp":"1736109600.0","comment_id":"1336871"},{"comment_id":"891692","content":"Yup. Got me too. I picked A, saw D, and then reread the \"scale seamlessly\" part. D is correct.","upvote_count":"6","timestamp":"1683495480.0","poster":"pbpally"},{"upvote_count":"2","timestamp":"1707931260.0","comment_id":"1150365","poster":"NayeraB","content":"But wouldn't RDS scale as well? Also Spot instances seems like a bit of a risky decision"}],"upvote_count":"21"},{"poster":"genny","comment_id":"864766","content":"Selected Answer: A\nI wouldn't run my website on spot instances. Spot instances might be terminated at any time, and since I need to run analytics application it's not an option for me. And using route 53 for load balancing of 2 instances is an overkill. I go with A.","timestamp":"1680964680.0","comments":[{"upvote_count":"15","poster":"AZ_Master","content":"It is spot fleet - not spot instances. They can include On-Demand instances and can also maintain the target capacity automatically.\n----\nA Spot Fleet is a set of Spot Instances and optionally On-Demand Instances that is launched based on criteria that you specify. The Spot Fleet selects the Spot capacity pools that meet your needs and launches Spot Instances to meet the target capacity for the fleet. By default, Spot Fleets are set to maintain target capacity by launching replacement instances after Spot Instances in the fleet are terminated.\n\nRef: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html","timestamp":"1700360100.0","comment_id":"1074402","comments":[{"poster":"eb7be10","content":"While Spot Fleet is temporary, the Auto-Scaling Group builds it back again and again. D is the best answer.","timestamp":"1713954480.0","comment_id":"1201258","upvote_count":"2"}]}],"upvote_count":"12"},{"content":"Selected Answer: D\nBoth ec2 and db scale better in D.","timestamp":"1738380120.0","comment_id":"1349737","poster":"zdi561","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: D\nOnly D refers to seamlessly scale ... rest are about increasing the number of instances or the size of the instance.","timestamp":"1738344180.0","comment_id":"1349605","poster":"satyaammm"},{"poster":"Rcosmos","comment_id":"1340545","upvote_count":"1","content":"Selected Answer: D\nConclusão:\nA opção D é a solução mais econômica e eficaz porque combina o poder de escalabilidade automática do grupo de Auto Scaling, a economia das instâncias Spot, e a alta performance do Amazon Aurora MySQL. Essa abordagem atende aos requisitos de custo, desempenho e escalabilidade de forma abrangente.","timestamp":"1736892720.0"},{"content":"Selected Answer: D\nAns D - Like Konb (1 year, 5 months ago) I almost picked A, but for the same reasons of seamless scaling it has to be D","poster":"PaulGa","comment_id":"1298908","upvote_count":"2","timestamp":"1729105140.0"},{"timestamp":"1727351700.0","comment_id":"1289415","poster":"carlossarmient","upvote_count":"2","content":"D aswer is forcing you to use the new \"feature\" of aws. if you have a performance issue with the ddbb, front and back all in on your ec2 intances. the best way to solve that issue is move de ddbb to RDS and create a new ec2 intances. BUT we need to sell the aws unique service."},{"poster":"PaulGa","upvote_count":"2","content":"Selected Answer: D\nAns D - I was tempted with AAns D - I was tempted with A but then thought that's too obvious and scaling might be an issue... so looking at Spot Fleets \"Fleets provide the following features and benefits, enabling you to maximize cost savings and optimize availability and performance when running applications on multiple EC2 instances\" it has to be Ans D. \n\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Fleets.html","comment_id":"1287284","timestamp":"1726914120.0"},{"comments":[{"poster":"bignatov","timestamp":"1725116940.0","content":"i think it is not D, because amazon aurora is much expensive and also the spot instances can be interrupted, even they are most cost effective in the requirements is not mentioned that the workload is stateless and can be interrupted.","upvote_count":"2","comment_id":"1275626"}],"upvote_count":"1","content":"Selected Answer: A\nOption A is the best balance between cost-effectiveness and scalability. It allows the application to scale horizontally with minimal changes while ensuring the database is managed and can scale independently, reducing the risk of performance degradation during peak times.","timestamp":"1725116280.0","comment_id":"1275622","poster":"bignatov"},{"comments":[{"poster":"MatAlves","content":"It is not \"spot instances\", but \"spot fleet\". \n\nA Spot Fleet is a set of Spot Instances and optionally On-Demand Instances that is launched based on criteria that you specify. The Spot Fleet selects the Spot capacity pools that meet your needs and launches Spot Instances to meet the target capacity for the fleet. By default, Spot Fleets are set to maintain target capacity by launching replacement instances after Spot Instances in the fleet are terminated.\n\nRef: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html","upvote_count":"1","timestamp":"1724829360.0","comment_id":"1273888"}],"content":"Selected Answer: A\nA, not D > Using Spot Instances with an Auto Scaling group adds complexity and risk to the infrastructure","upvote_count":"1","timestamp":"1723155240.0","poster":"maryam_sh","comment_id":"1262677"},{"poster":"jaradat02","comment_id":"1256295","content":"Selected Answer: D\nI don't think D is the optimal solution. We certainly can find other solutions that are more cost effective and fulfill the same requirements, but among the provided options, I think D is the most reasonable.","upvote_count":"2","timestamp":"1722083280.0"},{"comment_id":"1237957","content":"PHP....","upvote_count":"1","poster":"gt520490aws","timestamp":"1719473520.0"},{"comment_id":"1124419","content":"Selected Answer: D\nI'll pick D because it sounds fun :)","poster":"awsgeek75","timestamp":"1705429380.0","upvote_count":"4"},{"poster":"pentium75","upvote_count":"2","comment_id":"1105919","timestamp":"1703588880.0","content":"Selected Answer: D\n\"Scale seamlessly\", none of A-C include scaling at all."},{"poster":"xdkonorek2","content":"Selected Answer: D\nspot instance receives 2 minutes interruption notice, it should be enough for requests to finish, it's quite unusal for app to run longer requests\nonly option D allow for seamless scaling with autoscaling group","timestamp":"1699286280.0","comment_id":"1064024","upvote_count":"2"},{"content":"Selected Answer: B\nOption B is a cost-effective choice that combines the benefits of database migration to RDS, horizontal scaling with EC2 instances, and control over traffic distribution with Route 53 weighted routing, making it the best solution for the given requirements.","timestamp":"1694914200.0","comments":[{"poster":"pentium75","comment_id":"1105918","content":"But there's no scaling at all in B.","timestamp":"1703588820.0","upvote_count":"4"}],"poster":"BrijMohan08","upvote_count":"2","comment_id":"1009483"},{"timestamp":"1694060940.0","upvote_count":"5","content":"Selected Answer: D\nScale seamlessly = Autoscaling group, Amazon Aurora MySQL DB instance\nCost effective = Spot Fleet","poster":"TariqKipkemei","comment_id":"1001168"},{"timestamp":"1692216960.0","upvote_count":"5","poster":"Guru4Cloud","content":"Selected Answer: D\nThe key reasons are:\n\nMigrating the database to Amazon Aurora MySQL provides a scalable, high performance database to support the application.\nCreating an AMI of the web application and using it in an Auto Scaling group with Spot instances allows cheap and efficient scaling of the web tier.\nThe Application Load Balancer distributes traffic across the Auto Scaling group.\nSpot instances in an Auto Scaling group allow cost-optimized automatic scaling based on demand.\nThis approach provides high availability and seamless scaling without manual intervention.","comment_id":"982980"},{"poster":"cookieMr","content":"D is correct because migrating the database to Amazon Aurora provides better scalability and performance compared to Amazon RDS for MySQL. Creating an AMI of the web application allows for easy replication of the application on multiple instances. Using a launch template and Auto Scaling group with Spot Fleet provides cost optimization by leveraging spot instances. Adding an Application Load Balancer ensures the load is distributed across the instances for seamless scaling.\n\nA is incorrect because using an Application Load Balancer with multiple EC2 instances is a better approach for scalability compared to relying on a single instance.\n\nB is incorrect because weighted routing in Amazon Route 53 distributes traffic based on fixed weights, which may not dynamically adjust to the changing load.\n\nC is incorrect because using AWS Lambda to stop and change the instance type based on CPU utilization is not an efficient way to handle scaling for a web application. Auto Scaling is a better approach for dynamic scaling.","comment_id":"932411","timestamp":"1687599780.0","upvote_count":"4"},{"upvote_count":"3","comment_id":"864007","poster":"jdr75","timestamp":"1680880080.0","content":"Selected Answer: D\nthe options that said \"launch a second EC2\", have no sense ... why 2?, why not 3 or 4 or 5?\nso options A and B drop.\nC is no sense (Lambda doing this like a Scaling Group?, absurd)\nHas to be D. Little extrange cos' Aurora is a very good solution, but NOT CHEAP (remember: cost-effectively).\nTo be honest, the most cost-effectively is B je je"},{"comment_id":"844837","upvote_count":"3","poster":"SuketuKohli","content":"A Spot Fleet is a set of Spot Instances and optionally On-Demand Instances that is launched based on criteria that you specify. The Spot Fleet selects the Spot capacity pools that meet your needs and launches Spot Instances to meet the target capacity for the fleet. By default, Spot Fleets are set to maintain target capacity by launching replacement instances after Spot Instances in the fleet are terminated. You can submit a Spot Fleet as a one-time request, which does not persist after the instances have been terminated. You can include On-Demand Instance requests in a Spot Fleet request.","timestamp":"1679313300.0"},{"comment_id":"803064","poster":"KZM","content":"Ans: D\nBoth Amazon RDS for MySQL and Amazon Aurora MySQL are designed to provide customers with fully managed relational database services, but Amazon Aurora MySQL is designed to provide better performance, scalability, and reliability, making it a better option for customers who need high-performance database services.","upvote_count":"1","timestamp":"1675937520.0"},{"comment_id":"783745","upvote_count":"2","content":"Selected Answer: D\nUsing an Auto Scaling group with a launch template and a Spot Fleet allows the company to scale the application seamlessly and cost-effectively, by automatically adding or removing instances based on the demand, and using Spot instances which are spare compute capacity available in the AWS region at a lower price than On-Demand instances. And also by migrating the database to Amazon Aurora MySQL DB instance, it provides higher scalability, availability, and performance than traditional MySQL databases.","poster":"bullrem","timestamp":"1674337320.0"},{"upvote_count":"1","comment_id":"777190","content":"Selected Answer: D\nThe answer is D:\nMigrate the database to Amazon Aurora MySQL - this will let the DB scale on it's own; it'll scale automatically without needing adjustment.\nCreate AMI of the web app and using a launch template - this will make the creating of any future instances of the app seamless. They can then be added to the auto scaling group which will save them money as it will scale up and down based on demand. \nUsing a spot fleet to launch instances- This solves the \"MOST cost-effective\" portion of the question as spot instances come at a huge discount at the cost of being terminated at any time Amazon deems fit. I think this is why there's a bit of disagreement on this. While it's the most cost effective, it would be a terrible choice if amazon were to terminate that spot instance during a busy period.","timestamp":"1673827260.0","poster":"BakedBacon"},{"comment_id":"763860","upvote_count":"4","poster":"gustavtd","comments":[{"poster":"Rupak10","content":"Spot fleet not spot instance mentioned over there. Spot fleet = Spot instance + on-demand instance. If we cannot manage the spot instance then we can use an on-demand instance.","comments":[{"poster":"RupeC","comment_id":"959783","upvote_count":"1","timestamp":"1690052520.0","content":"Super bit of info. Thanks"}],"upvote_count":"6","comment_id":"806008","timestamp":"1676181300.0"}],"timestamp":"1672678380.0","content":"But I have a question, \nFor Spot instance, is it possible that at some time there is no spot resources available at all? because it is not guaranteed, right?"},{"upvote_count":"3","comment_id":"763140","poster":"Zerotn3","timestamp":"1672567740.0","content":"Selected Answer: D\nOption D is the most cost-effective solution that meets the requirements.\n\nMigrating the database to Amazon Aurora MySQL will allow the database to scale automatically, so it can handle an increase in traffic without manual intervention. Creating an AMI of the web application and using a launch template will allow the company to quickly and easily launch new instances of the application, which can then be added to an Auto Scaling group. This will allow the application to automatically scale up and down based on demand, ensuring that there are enough resources to handle busy times without incurring the cost of running idle resources.\n\nUsing a Spot Fleet to launch the instances will allow the company to take advantage of Amazon's spare capacity and get a discount on their EC2 instances. Attaching an Application Load Balancer to the Auto Scaling group will allow the load to be distributed across all of the available instances, improving the performance and reliability of the application."},{"content":"Selected Answer: D\nOption D is the most cost-effective solution because;\n\n* it uses an Auto Scaling group with a launch template and a Spot Fleet to automatically scale the number of EC2 instances based on the workload.\n\n* using a Spot Fleet allows the company to take advantage of the lower prices of Spot Instances while still providing the required performance and availability for the application.\n\n* using an Aurora MySQL database instance allows the company to take advantage of the scalability and performance of Aurora.","upvote_count":"4","timestamp":"1672294560.0","comment_id":"760643","poster":"Buruguduystunstugudunstuy"},{"content":"D ,as only this has auto scaling","upvote_count":"1","timestamp":"1672088460.0","comment_id":"757845","poster":"techhb"},{"upvote_count":"1","poster":"Sahilbhai","comment_id":"754943","timestamp":"1671893100.0","content":"ANSWER IS D"},{"content":"Selected Answer: D\nD is the right option. A is possible but it will have high cost due to on-demand instances. It is not mentioned that 24x7 application availability is high priority goal.","poster":"career360guru","timestamp":"1671337620.0","comment_id":"748606","upvote_count":"1"},{"upvote_count":"1","comment_id":"745464","poster":"sanyoc","content":"Selected Answer: D\ncorrect is D","timestamp":"1671053280.0"},{"poster":"Certified101","upvote_count":"3","comment_id":"745392","content":"Selected Answer: D\n\"You can submit a Spot Fleet as a one-time request, which does not persist after the instances have been terminated. You can include On-Demand Instance requests in a Spot Fleet request.\"\n\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet.html","timestamp":"1671045360.0"},{"timestamp":"1670702880.0","comment_id":"741217","poster":"lapaki","upvote_count":"1","content":"Selected Answer: D\nD. other answers don't deal with scaling."},{"poster":"ds0321","timestamp":"1669291020.0","content":"D is correct","comment_id":"725805","upvote_count":"2"},{"comment_id":"724396","timestamp":"1669130100.0","upvote_count":"1","poster":"Wpcorgan","content":"D is correct"},{"poster":"dokaedu","comment_id":"707708","content":"Answer: D","timestamp":"1667119260.0","upvote_count":"1"},{"content":"Selected Answer: D\nI think D is the answer","poster":"SimonPark","upvote_count":"1","timestamp":"1667112540.0","comment_id":"707657"},{"timestamp":"1667065620.0","upvote_count":"2","content":"Selected Answer: D\nAgreed with D as Spot Fleet can leverage both spot+on-demand instances, it should be the most cost-effective.\nhttps://www.youtube.com/watch?v=rlYLbs33Ofs&ab_channel=AmazonWebServices","poster":"USalo","comment_id":"707370"},{"comment_id":"704876","poster":"Six_Fingered_Jose","timestamp":"1666803840.0","upvote_count":"4","comments":[{"poster":"Qjb8m9h","content":"If the question is asking for most cost effectivethen D is the correct answer.\nReason : Spot Fleet is a collection of spot instances. AWS spot instances are an excellent way to significantly reduce your EC2 on demand instance cost by up to 90%\n\nhttps://spot.io/what-are-ec2-spot-instances/?utm_campaign=Ocean+search&utm_term=ec2%20spot&utm_source=adwords&utm_medium=ppc&hsa_ver=3&hsa_kw=ec2%20spot&hsa_cam=12797893166&hsa_tgt=kwd-16945243456&hsa_acc=8916801654&hsa_mt=b&hsa_net=adwords&hsa_ad=567045925430&hsa_src=g&hsa_grp=131756002544&gclid=EAIaIQobChMIxeX49rz1-wIVjo3ICh2A3QRdEAAYAyAAEgLutPD_BwE","comment_id":"743455","upvote_count":"2","timestamp":"1670892660.0"},{"upvote_count":"2","timestamp":"1669423080.0","poster":"rewdboy","content":"I see what you're saying, but the question also requires that \"The company needs to make the application scale seamlessly.\" This tells me that it needs Auto Scaling. Auto Scaling with Spot fleet will allow for automatic scaling up and scaling down, which will save money over having two 24x7 EC2 instances.","comment_id":"727179"},{"poster":"Six_Fingered_Jose","comment_id":"704879","content":"Actually on second thought, adding optional on-demand instances might solve the spot fleet problem, so maybe leaning back to D again.\nWish the questions would be more specific","timestamp":"1666803960.0","upvote_count":"9"}],"content":"Selected Answer: A\nAnswer should be A,\nquestion is asking for most cost effective way to scale the application layer, which means AS on EC2 is enough.\n\nMoreover, Option D is saying to use Spot Fleet, which has potential to cause downtime in the app layer"}],"topic":"1","answer_ET":"D","url":"https://www.examtopics.com/discussions/amazon/view/86474-exam-aws-certified-solutions-architect-associate-saa-c03/","choices":{"D":"Migrate the database to an Amazon Aurora MySQL DB instance. Create an AMI of the web application. Apply the AMI to a launch template. Create an Auto Scaling group with the launch template Configure the launch template to use a Spot Fleet. Attach an Application Load Balancer to the Auto Scaling group.","C":"Migrate the database to an Amazon Aurora MySQL DB instance. Create an AWS Lambda function to stop the EC2 instance and change the instance type. Create an Amazon CloudWatch alarm to invoke the Lambda function when CPU utilization surpasses 75%.","B":"Migrate the database to an Amazon RDS for MySQL DB instance. Create an AMI of the web application. Use the AMI to launch a second EC2 On-Demand Instance. Use Amazon Route 53 weighted routing to distribute the load across the two EC2 instances.","A":"Migrate the database to an Amazon RDS for MySQL DB instance. Create an AMI of the web application. Use the AMI to launch a second EC2 On-Demand Instance. Use an Application Load Balancer to distribute the load to each EC2 instance."},"answer_description":"","answer":"D","unix_timestamp":1666803840,"exam_id":31,"answer_images":[],"timestamp":"2022-10-26 19:04:00","question_text":"A company hosts a website analytics application on a single Amazon EC2 On-Demand Instance. The analytics software is written in PHP and uses a MySQL database. The analytics software, the web server that provides PHP, and the database server are all hosted on the EC2 instance. The application is showing signs of performance degradation during busy times and is presenting 5xx errors. The company needs to make the application scale seamlessly.\nWhich solution will meet these requirements MOST cost-effectively?","question_id":72},{"id":"SPtLp1Sev3eFjUBqhczq","question_images":[],"discussion":[{"content":"Selected Answer: B\nIn the Question is mentioned that it has o Demand instances...so I think is more cheapest reserved and spot","poster":"rob74","upvote_count":"26","comment_id":"709261","timestamp":"1667317680.0"},{"comment_id":"743467","upvote_count":"13","poster":"Qjb8m9h","timestamp":"1670893440.0","content":"Answer is B: Reserved is cheaper than on demand the company has. And it's meet the availabilty (HA) requirement as to spot instance that can be disrupted at any time.\nPRICING BELOW.\nOn-Demand: 0% There’s no commitment from you. You pay the most with this option.\nReserved : 40%-60%1-year or 3-year commitment from you. You save money from that commitment.\nSpot 50%-90% Ridiculously inexpensive because there’s no commitment from the AWS side."},{"content":"Selected Answer: C\ncouldn't decide between B and C, but C seems right. The thing with reserved instances is that you have to commit for 1 or 3 years, which is not mentioned in this use case.","comment_id":"1360146","upvote_count":"2","poster":"manal001","timestamp":"1740234120.0"},{"content":"Selected Answer: C\nThough ASG is not mentioned but it is implied. Mixing on-demand and spot is the best to save money. Reserved is expensive because you need to pay on the capacity all times.","comment_id":"1349740","timestamp":"1738380660.0","upvote_count":"1","poster":"zdi561"},{"timestamp":"1738344180.0","upvote_count":"1","comment_id":"1349607","content":"Selected Answer: B\nSince Reserved Instances are cheaper than On-Demand and also Spot Instances are best suited here for additional requitements.","poster":"satyaammm"},{"poster":"PaulGa","content":"Selected Answer: B\nAns B - Reserved guarantees baseline level operation; Spot for peaks - its stateless","comment_id":"1298911","upvote_count":"2","timestamp":"1729105500.0"},{"comment_id":"1256296","content":"Selected Answer: B\nB is the correct answer, using reserved instances is definitely more cost effective than using on-demand instances.","upvote_count":"2","timestamp":"1722083640.0","poster":"jaradat02"},{"comment_id":"1232741","poster":"ChymKuBoy","timestamp":"1718779980.0","content":"Selected Answer: B\nB for sure","upvote_count":"1"},{"upvote_count":"1","timestamp":"1714827420.0","comment_id":"1206506","poster":"ManikRoy","content":"Selected Answer: B\nAgree with others"},{"comment_id":"1105926","upvote_count":"6","poster":"pentium75","content":"Selected Answer: B\nThis is a bit unclear, but B seems the best option of the ones given.\n\nUsage is either \"heavy\" (during the 8 hours), \"moderate and steady\" (overnight) or \"low\" (during weekends). So there is always SOME usage, which could be covered by a few Reserved Instances (which would be cheaper than On-Demand Instances).\n\nA - \"Spot instances for the entire workload\", might 'affect the availability of the application'\nB - Seems the best answer\nC - More expensive than B\nD - Dedicated instances aka dedicated hardware -> very expensive","timestamp":"1703589480.0","comments":[{"timestamp":"1705429500.0","upvote_count":"3","poster":"awsgeek75","comment_id":"1124423","content":"Agree, very little clarity between B and C but B makes more sense."}]},{"comment_id":"1105467","content":"I vote for C:\nPlease explain me if I am wrong:\nIf application experiences heavy usage during an 8-hour period each business day and all other time we don't need them? it mean than on-demand price will be only 33% from total cost so saving will be near 66%, more than reserved instances all other load we can cover by spot instances.\nSo why it not C?","timestamp":"1703528460.0","comments":[{"timestamp":"1706704620.0","upvote_count":"4","comment_id":"1136749","content":"You got it wrong.\nYou need the application all the time (24/7) because it says: \"moderate and steady overnight, low usage at the weekend\", not 8 hours a day","poster":"dungtrungpham"}],"upvote_count":"1","poster":"HackPack"},{"poster":"VladanO","upvote_count":"2","comment_id":"1082733","content":"Selected Answer: C\nOn-Demand Instances are more appropriate than Reserved Instances because \"The application is used heavily for a period of 8 hours every weekday\" requirements.","timestamp":"1701189240.0"},{"content":"Selected Answer: C\nThe answer should be C. Because if reserved is chosen, you have to pay for every hour. I calculate from this pages (if I'm wrong please correct me) https://aws.amazon.com/ec2/pricing/reserved-instances/pricing/#:~:text=Reserved%20Instances%20provide%20you%20with,instances%20when%20you%20need%20them.\n Example: for t4g.nano\nReserved instances (0.003X24X365)+(1.90X12)=49.08\nOn demand instance (0.0042X8X365)=12.264\nit will be added spot instances","upvote_count":"3","comment_id":"1081989","comments":[{"upvote_count":"4","comment_id":"1105927","timestamp":"1703589540.0","content":"\"The baseline level of usage\" is the minimum usage that is always there (even at night and during weekends), for THAT you can use Reserved Instance.","poster":"pentium75"}],"timestamp":"1701124080.0","poster":"rcptryk"},{"poster":"Marco_St","comment_id":"1079868","upvote_count":"2","timestamp":"1700903520.0","content":"Selected Answer: B\nB, since the application needs to be on 24/7 for business days; on weekends, it can be off at any moment. The question mentions something like 8 hour per business day but!!! this is just for heavy usage, the application is also on during overnight."},{"comment_id":"1061213","poster":"Juliez","timestamp":"1699003020.0","content":"Why it's not A ? the application is \"stateless\" so it can be interrupted at any moment and the spot option is the cheaper one.","upvote_count":"2","comments":[{"poster":"vi24","comment_id":"1180071","timestamp":"1711114140.0","upvote_count":"1","content":"The statelessness of a web application does not necessarily mean that it's okay to be interrupted. Statelessness refers to how the application handles requests and manages session data, not its ability to handle interruptions."},{"content":"But there might not be any Spot Instances available and the app would go offline.","poster":"pentium75","upvote_count":"2","comment_id":"1105928","timestamp":"1703589600.0"}]},{"upvote_count":"2","comments":[{"timestamp":"1704484020.0","poster":"SVDK","comment_id":"1114761","content":"There is no downtime. The application runs all the time (even weekends). Weekends is the base workload which we cover with reserved instances, the higher workloads during the week is covered by spot instances.","upvote_count":"2"}],"poster":"StudyAllNite","timestamp":"1698693000.0","content":"Selected Answer: C\nIf we assume moderate usage of 8 hours on average every day a week, this should be on demand, since it is not a 24/7 server. There is downtime on the weekends and after the initial 8 hours.","comment_id":"1058208"},{"upvote_count":"2","poster":"ACloud_Guru15","timestamp":"1698484200.0","comment_id":"1056072","comments":[{"upvote_count":"1","content":"Which jobs runs for 8 hrs/day? There are 8 hours/day of HEAVY usage, but the app runs 24/7.","timestamp":"1703589660.0","comment_id":"1105929","poster":"pentium75"}],"content":"Selected Answer: C\nAnswer is C as the Jobs won't run for 24hrs/day hence Reserved instances is not required. As the Job runs for 8hrs/day we can choose On-Demand Instances"},{"comment_id":"1053196","upvote_count":"3","content":"Selected Answer: C\nC is most cost effective option for running not 7x24 loads","poster":"rexix7368","timestamp":"1698186600.0"},{"upvote_count":"4","comment_id":"1038970","content":"Selected Answer: C\nI see some internet post about On-Demand vs Reserved below. I also think the argument from the (C) camp is valid. But (B) is not wrong. Just depends on usage.\nquoted from: https://www.pcapps.com/services/aws-reserved-vs-on-demand-instances/\nIf you know you are only going to use a particular server part-time – say, 8 hours a day, 5 days a week – we recommend purchasing On-Demand Instances for those servers. If you are unsure which instance type is most appropriate for your performance needs, our advice is to start with any On-Demand Instance for a month or two, and experiment with changing the Instance Type up or down to see it performs. The goal is to “dial into” the lowest cost instance type that meets your performance needs. We recommend that you purchase Reserved Instances only when you know you are going to use it close to 24×7 (or at least more than 75% of the time).","timestamp":"1696881180.0","poster":"Wayne23Fang"},{"upvote_count":"2","timestamp":"1695945420.0","poster":"Modulopi","content":"Selected Answer: C\nFor 8 hours/day on demand works best","comments":[{"poster":"Azure55","timestamp":"1698799740.0","content":"and Application usage is moderate and steady overnight!","upvote_count":"2","comment_id":"1059284"}],"comment_id":"1020293"},{"content":"Selected Answer: B\nMain concern here is cost and availability. Reserved Instances provide you with significant savings on your Amazon EC2 costs compared to On-Demand Instance pricing. Spot instances et you take advantage of unused EC2 capacity in the AWS cloud. Spot Instances are available at up to a 90% discount compared to On-Demand prices. You can use Spot Instances for various stateless, fault-tolerant, or flexible applications.","timestamp":"1694062320.0","poster":"TariqKipkemei","upvote_count":"2","comment_id":"1001171"},{"comments":[{"comment_id":"1105931","upvote_count":"2","poster":"pentium75","timestamp":"1703589720.0","content":"But Dedicated Instances (D) are costly as hell, and it would be overkill to have dedicated hardware for that scenario."}],"upvote_count":"2","content":"Selected Answer: D\nthe application has STEADY workload in the non peak hours therefore it can not be spot instances","poster":"Valder21","comment_id":"997738","timestamp":"1693755420.0"},{"poster":"Guru4Cloud","content":"Selected Answer: B\nThe reasons are:\n\nOn-Demand Instances provide stable, reliable baseline capacity for the normal workload.\nSpot Instances can provide the additional capacity needed during peak periods at a much lower hourly rate compared to On-Demand.\nThe stateless nature of the application allows taking advantage of Spot without affecting availability. If Spot is interrupted, the baseline On-Demand capacity remains available.\nReserved Instances require upfront commitment and may not match the variable workload.\nDedicated Instances are more expensive than On-Demand for baseline capacity.\nUsing only Spot Instances risks interruption during peak times if capacity is not available.","comment_id":"982989","upvote_count":"4","timestamp":"1692217440.0"},{"upvote_count":"4","poster":"toussyn","comment_id":"965364","content":"Selected Answer: C\nOn demand for baseline: \nlets say it cost $100 per hour, then the cost of running it for a day would be: $100 * 8 = 800. Times 8 because we’ll only be running for 8 hours in a day.\n\nWith Reserve instance on the other hand we are locked in for a year, but at 60% discount. That means we’ll be paying $40 per hour. Running it for a day: $40 * 24 = $960","timestamp":"1690530480.0"},{"comment_id":"932414","upvote_count":"2","content":"Selected Answer: B\nB is correct because it combines the use of Reserved Instances and Spot Instances to minimize EC2 costs while ensuring availability. Reserved Instances provide cost savings for the baseline level of usage during the heavy usage period, while Spot Instances are utilized for any additional capacity needed during peak times, taking advantage of their cost-effectiveness.\n\nA is incorrect because relying solely on Spot Instances for the entire workload can result in potential interruptions and instability during peak usage periods.\n\nC is incorrect because using On-Demand Instances for the baseline level of usage does not provide the cost savings and long-term commitment benefits that Reserved Instances offer.\n\nD is incorrect because using Dedicated Instances for the baseline level of usage incurs additional costs without significant benefits for this scenario. Dedicated Instances are typically used for compliance or regulatory requirements rather than cost optimization.","timestamp":"1687600140.0","poster":"cookieMr"},{"timestamp":"1686293640.0","comment_id":"918996","upvote_count":"1","content":"Selected Answer: B\nA company runs a stateless web application in production. This means that the application can be stopped and restarted again.","poster":"Bmarodi"},{"timestamp":"1683656100.0","comment_id":"893342","poster":"justhereforccna","comments":[{"timestamp":"1686833760.0","comment_id":"924197","content":"The application is stateless.","upvote_count":"2","poster":"KalarAzar"}],"upvote_count":"4","content":"Selected Answer: D\nAnswer is D, you cannot guarantee availability with spot instances"},{"timestamp":"1681998180.0","comment_id":"875657","content":"Selected Answer: D\nTo make the application scale seamlessly, Option D is more suitable because it involves using Auto Scaling with Spot Fleet. Auto Scaling allows you to automatically adjust the number of EC2 instances in response to changes in demand, while Spot Fleet allows you to request and maintain a fleet of Spot Instances at a lower cost compared to On-Demand Instances.","upvote_count":"2","poster":"arjundevops"},{"upvote_count":"2","content":"strange, it wants a solution without affecting availability but has not given the right option.. spot instances cannot guarantee availability even at night... or whatever...","comment_id":"858144","poster":"bakamon","timestamp":"1680368220.0","comments":[]},{"upvote_count":"5","comment_id":"760649","poster":"Buruguduystunstugudunstuy","timestamp":"1672294920.0","content":"Selected Answer: B\nOption B is the most cost-effective solution that meets the requirements.\n\n* Using Reserved Instances for the baseline level of usage will provide a discount on the EC2 costs for steady overnight and weekend usage. \n\n* Using Spot Instances for any additional capacity that the application needs during peak usage times will allow the company to take advantage of spare capacity in the region at a lower cost than On-Demand Instances."},{"poster":"techhb","upvote_count":"2","timestamp":"1672088580.0","content":"Selected Answer: B\nB is correct","comment_id":"757850"},{"poster":"career360guru","timestamp":"1671337800.0","upvote_count":"1","content":"Selected Answer: B\nOption B is most cost effective without compromising the availability for baseline load.","comment_id":"748607"},{"content":"B IS CORRECT","upvote_count":"1","comment_id":"724414","timestamp":"1669131480.0","poster":"Wpcorgan"},{"timestamp":"1668001740.0","upvote_count":"4","poster":"ArielSchivo","comment_id":"714614","content":"Selected Answer: B\nThey are currently using On Demand instances, so option C is out.\nA uses Spot instances which is not recommended for PROD and D uses Dedicated instances which are expensive.\nSo option B should be the one."},{"comment_id":"708918","poster":"Dsouzaf","content":"If we select B, Spot instance are reliable though it saves cost.\nIn D: base line & additional capacity is also On-Demand. Expensive than Reserve Instance but will not bring down Production","upvote_count":"3","timestamp":"1667286300.0"},{"timestamp":"1667281440.0","comments":[],"content":"Selected Answer: C\nI think C should be corrected.","comment_id":"708873","upvote_count":"4","poster":"TaiTran1994"}],"question_id":73,"topic":"1","answers_community":["B (64%)","C (28%)","8%"],"exam_id":31,"answer_images":[],"answer":"B","question_text":"A company runs a stateless web application in production on a group of Amazon EC2 On-Demand Instances behind an Application Load Balancer. The application experiences heavy usage during an 8-hour period each business day. Application usage is moderate and steady overnight. Application usage is low during weekends.\nThe company wants to minimize its EC2 costs without affecting the availability of the application.\nWhich solution will meet these requirements?","isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/86750-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"B","timestamp":"2022-11-01 06:44:00","answer_description":"","choices":{"C":"Use On-Demand Instances for the baseline level of usage. Use Spot Instances for any additional capacity that the application needs.","D":"Use Dedicated Instances for the baseline level of usage. Use On-Demand Instances for any additional capacity that the application needs.","B":"Use Reserved Instances for the baseline level of usage. Use Spot instances for any additional capacity that the application needs.","A":"Use Spot Instances for the entire workload."},"unix_timestamp":1667281440},{"id":"KF8uztOXG85iiIjSrS39","discussion":[{"poster":"rjam","upvote_count":"11","comment_id":"720000","content":"Selected Answer: B\nWhy not AwsBackup? No Glacier Deep is supported by AWS Backup\n\nhttps://docs.aws.amazon.com/aws-backup/latest/devguide/s3-backups.html \nAWS Backup allows you to backup your S3 data stored in the following S3 Storage Classes:\n• S3 Standard\n• S3 Standard - Infrequently Access (IA)\n• S3 One Zone-IA\n• S3 Glacier Instant Retrieval\n• S3 Intelligent-Tiering (S3 INT)","comments":[{"upvote_count":"8","comment_id":"727787","poster":"tdkcumberland","content":"AWS BackUp costs something, setting up S3 LCP doesn't.","timestamp":"1669492200.0"}],"timestamp":"1668632520.0"},{"poster":"cookieMr","timestamp":"1687600380.0","comment_id":"932416","content":"Selected Answer: B\nB is the most cost-effective solution. Storing the logs in S3 and using S3 Lifecycle policies to transition logs older than 1 month to S3 Glacier Deep Archive allows for cost optimization based on data access patterns. Since logs older than 1 month are rarely accessed, moving them to S3 Glacier Deep Archive helps minimize storage costs while still retaining the logs for the required 10-year period.\n\nA is incorrect because using AWS Backup to move logs to S3 Glacier Deep Archive can incur additional costs and complexity compared to using S3 Lifecycle policies directly.\n\nC adds unnecessary complexity and costs by involving CloudWatch Logs and AWS Backup when direct management through S3 is sufficient.\n\nD is incorrect because using S3 Lifecycle policies to move logs from CloudWatch Logs to S3 Glacier Deep Archive is not a valid option. CloudWatch Logs and S3 have separate storage mechanisms, and S3 Lifecycle policies cannot be applied directly to CloudWatch Logs.","upvote_count":"7"},{"poster":"satyaammm","upvote_count":"1","timestamp":"1738344360.0","content":"Selected Answer: B\nS3 and S3 Lifecycle policies are the most suited here.","comment_id":"1349608"},{"timestamp":"1729105680.0","poster":"PaulGa","comment_id":"1298912","content":"Selected Answer: B\nAns B - S3 with Glacier Deep plus Lifecycle management","upvote_count":"2"},{"upvote_count":"3","poster":"TariqKipkemei","comment_id":"1001172","timestamp":"1694062440.0","content":"Selected Answer: B\nS3 Lifecycle policies to the rescue"},{"poster":"Mamiololo","content":"B is correct..","upvote_count":"1","comment_id":"775442","timestamp":"1673703300.0"},{"comment_id":"760654","timestamp":"1672295100.0","poster":"Buruguduystunstugudunstuy","upvote_count":"2","content":"Selected Answer: B\nOption B (Store the logs in Amazon S3. Use S3 Lifecycle policies to move logs more than 1-month-old to S3 Glacier Deep Archive) would meet these requirements in the most cost-effective manner.\n\nThis solution would allow the application team to quickly access the logs from the past month for troubleshooting, while also providing a cost-effective storage solution for the logs that are rarely accessed and need to be retained for 10 years."},{"upvote_count":"2","timestamp":"1671337980.0","comment_id":"748608","content":"Selected Answer: B\nOption B is most cost effective. Moving logs to Cloudwatch logs may incure additional cost.","poster":"career360guru"},{"content":"B is correct","timestamp":"1669131540.0","comment_id":"724415","upvote_count":"1","poster":"Wpcorgan"},{"timestamp":"1668001860.0","comment_id":"714617","upvote_count":"4","poster":"ArielSchivo","content":"Selected Answer: B\nS3 + Glacier is the most cost effective."},{"poster":"Bevemo","content":"Selected Answer: B\nD works, archive cloudwatch logs to S3 .... but is an additional service to pay for over B.","timestamp":"1667955540.0","comments":[{"content":"CloudWatch logs can't store around 10 TB of data per month I believe so both C and D options are ruled out already.","poster":"Aamee","comment_id":"732178","timestamp":"1669861680.0","upvote_count":"1"}],"comment_id":"714179","upvote_count":"2"},{"content":"Selected Answer: B\nhttps://www.examtopics.com/discussions/amazon/view/80772-exam-aws-certified-solutions-architect-associate-saa-c02/","upvote_count":"2","timestamp":"1667415660.0","comment_id":"710005","poster":"masetromain"}],"question_id":74,"question_text":"A company needs to retain application log files for a critical application for 10 years. The application team regularly accesses logs from the past month for troubleshooting, but logs older than 1 month are rarely accessed. The application generates more than 10 TB of logs per month.\nWhich storage option meets these requirements MOST cost-effectively?","isMC":true,"answer_images":[],"unix_timestamp":1667415660,"question_images":[],"exam_id":31,"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/86864-exam-aws-certified-solutions-architect-associate-saa-c03/","timestamp":"2022-11-02 20:01:00","answers_community":["B (100%)"],"answer":"B","topic":"1","choices":{"C":"Store the logs in Amazon CloudWatch Logs. Use AWS Backup to move logs more than 1 month old to S3 Glacier Deep Archive.","B":"Store the logs in Amazon S3. Use S3 Lifecycle policies to move logs more than 1 month old to S3 Glacier Deep Archive.","A":"Store the logs in Amazon S3. Use AWS Backup to move logs more than 1 month old to S3 Glacier Deep Archive.","D":"Store the logs in Amazon CloudWatch Logs. Use Amazon S3 Lifecycle policies to move logs more than 1 month old to S3 Glacier Deep Archive."},"answer_ET":"B"},{"id":"k9Xc0Lm4zYTs3q71rJch","discussion":[{"content":"Selected Answer: D\n*ensure that all notifications are eventually processed*","comment_id":"705462","timestamp":"1666868280.0","upvote_count":"17","poster":"bunnychip"},{"poster":"Help2023","timestamp":"1676551320.0","upvote_count":"6","comment_id":"810648","content":"Selected Answer: D\nThis is why https://docs.aws.amazon.com/sns/latest/dg/sns-message-delivery-retries.html"},{"poster":"satyaammm","timestamp":"1738344540.0","upvote_count":"1","comment_id":"1349609","content":"Selected Answer: D\nSQS queues are suited here for message buffering."},{"comment_id":"1298913","poster":"PaulGa","upvote_count":"2","timestamp":"1729105800.0","content":"Selected Answer: D\nAns D - using SQS ensure the data is captured and not lost for processing"},{"timestamp":"1718780160.0","upvote_count":"2","content":"Selected Answer: D\nD for sure","poster":"ChymKuBoy","comment_id":"1232742"},{"content":"Selected Answer: D\nConfigure an Amazon Simple Queue Service (Amazon SQS) queue as the on-failure destination. Modify the Lambda function to process messages in the queue.","timestamp":"1692221940.0","upvote_count":"5","comment_id":"983046","poster":"Guru4Cloud"},{"comment_id":"799588","timestamp":"1675677540.0","content":"C is not the right answer since after several retries SNS discard the message which doesn't align with the reqirement. D is the right answer","upvote_count":"4","poster":"CaoMengde09"},{"content":"Best solution to process failed SNS notifications is using sns-dead-letter-queues (SQS Queue for reprocessing)\nhttps://docs.aws.amazon.com/sns/latest/dg/sns-dead-letter-queues.html","poster":"CaoMengde09","upvote_count":"4","timestamp":"1675677480.0","comment_id":"799584"},{"comment_id":"770490","content":"Selected Answer: D\nTo ensure that all notifications are eventually processed, the best solution would be to configure an Amazon Simple Queue Service (SQS) queue as the on-failure destination for the SNS topic. This will allow the notifications to be retried until they are successfully processed. The Lambda function can then be modified to process messages in the queue, ensuring that all notifications are eventually processed. Option D, \"Configure an Amazon Simple Queue Service (Amazon SQS) queue as the on-failure destination. Modify the Lambda function to process messages in the queue,\" is the correct answer.","timestamp":"1673273100.0","poster":"SilentMilli","upvote_count":"4"},{"upvote_count":"5","content":"Selected Answer: D\nI choose Option D as the correct answer.\n\nTo ensure that all notifications are eventually processed, the solutions architect can set up an Amazon SQS queue as the on-failure destination for the Amazon SNS topic. This way, when the Lambda function fails due to network connectivity issues, the notification will be sent to the queue instead of being lost. The Lambda function can then be modified to process messages in the queue, ensuring that all notifications are eventually processed.","poster":"Buruguduystunstugudunstuy","timestamp":"1672295760.0","comment_id":"760671"},{"timestamp":"1672089960.0","comment_id":"757861","poster":"techhb","content":"Selected Answer: D\nOption D to ensure that all notifications are eventually processed you need to use SQS.","upvote_count":"3"},{"content":"Selected Answer: C\nOption C is right option. \nSNS does not have any \"On Failure\" delivery destination. One need to configure dead-letter queue and configure SQS to read from there. So given this option D is incorrect.","comments":[{"comment_id":"754151","content":"I don't think that's right \n\"A dead-letter queue is an Amazon SQS queue that an Amazon SNS subscription can target for messages that can't be delivered to subscribers successfully. Messages that can't be delivered due to client errors or server errors are held in the dead-letter queue for further analysis or reprocessing\" from https://docs.aws.amazon.com/sns/latest/dg/sns-dead-letter-queues.html.\nThis is pretty much what is being described in D.\nPlus C will only retry message processing, and network problems could still prevent the message from being processed, but the question states \"ensure that all notifications are eventually processed\". So C does not meet the requirements but D does look to do this.","timestamp":"1671795120.0","comments":[{"content":"+ https://docs.aws.amazon.com/sns/latest/dg/sns-message-delivery-retries.html\n\"“To keep the message after the retries specified in the delivery policy are exhausted, configure your subscription to move undeliverables messages to a dead-letter queue (DLQ). For more information”\" So D","comment_id":"1107362","poster":"Gajendr","upvote_count":"1","timestamp":"1703734320.0"}],"poster":"JayBee65","upvote_count":"8"}],"upvote_count":"2","comment_id":"748616","poster":"career360guru","timestamp":"1671340260.0"},{"poster":"NikaCZ","content":"Selected Answer: D\nIs correct.","timestamp":"1671269940.0","upvote_count":"1","comment_id":"747952"},{"poster":"Wajif","upvote_count":"1","timestamp":"1670131740.0","content":"Selected Answer: D\nC isnt specific. Hence D","comment_id":"734860"},{"upvote_count":"1","comment_id":"724461","poster":"LeGloupier","timestamp":"1669134180.0","content":"Selected Answer: C\n\"on-failure destination\" doesn't exist, only dead letter queue exist.\nthat's why I am leaning for C","comments":[]},{"content":"D is correct","timestamp":"1669131840.0","comment_id":"724418","poster":"Wpcorgan","upvote_count":"1"},{"comment_id":"721349","upvote_count":"1","poster":"ds0321","content":"Selected Answer: D\nD is the answer","timestamp":"1668784200.0"},{"timestamp":"1668002640.0","upvote_count":"4","content":"Selected Answer: D\nOption C could work but the max retries attempts is 23 days. After that messages are deleted. And you do not want that to happen! So, Option D.","comment_id":"714631","poster":"ArielSchivo"},{"comment_id":"707658","poster":"SimonPark","content":"Selected Answer: D\nimho, D is the answer","timestamp":"1667112960.0","upvote_count":"1"},{"content":"Selected Answer: C\nshould be C:\n\nhttps://docs.aws.amazon.com/sns/latest/dg/sns-message-delivery-retries.html","poster":"brushek","timestamp":"1665690180.0","comment_id":"694238","upvote_count":"2","comments":[{"poster":"RBSK","comment_id":"739987","upvote_count":"1","content":"And should D in this case. In the URL you referred, there is a statement as follows :- \"With the exception of HTTP/S, you can't change Amazon SNS-defined delivery policies. Only HTTP/S supports custom policies. See Creating an HTTP/S delivery policy.\" Hence you cant customise the retry for Lamda and option D is more relevant","timestamp":"1670581020.0"}]}],"question_text":"A company has a data ingestion workflow that includes the following components:\nAn Amazon Simple Notification Service (Amazon SNS) topic that receives notifications about new data deliveries\nAn AWS Lambda function that processes and stores the data\nThe ingestion workflow occasionally fails because of network connectivity issues. When failure occurs, the corresponding data is not ingested unless the company manually reruns the job.\nWhat should a solutions architect do to ensure that all notifications are eventually processed?","question_id":75,"isMC":true,"answer_images":[],"unix_timestamp":1665690180,"question_images":[],"answer_description":"","exam_id":31,"url":"https://www.examtopics.com/discussions/amazon/view/85424-exam-aws-certified-solutions-architect-associate-saa-c03/","timestamp":"2022-10-13 21:43:00","answer":"D","answers_community":["D (91%)","9%"],"topic":"1","choices":{"C":"Configure the SNS topic’s retry strategy to increase both the number of retries and the wait time between retries.","D":"Configure an Amazon Simple Queue Service (Amazon SQS) queue as the on-failure destination. Modify the Lambda function to process messages in the queue.","B":"Modify the Lambda function's configuration to increase the CPU and memory allocations for the function.","A":"Configure the Lambda function for deployment across multiple Availability Zones."},"answer_ET":"D"}],"exam":{"lastUpdated":"11 Apr 2025","name":"AWS Certified Solutions Architect - Associate SAA-C03","isMCOnly":true,"isBeta":false,"isImplemented":true,"id":31,"provider":"Amazon","numberOfQuestions":1019},"currentPage":15},"__N_SSP":true}