{"pageProps":{"questions":[{"id":"5FY0GR1vur3GhvmwCOiP","discussion":[{"poster":"65703c1","content":"Selected Answer: C\nC is the correct answer.","timestamp":"1732372500.0","upvote_count":"1","comment_id":"1216565"},{"comment_id":"1101653","timestamp":"1718888040.0","upvote_count":"2","poster":"TanTran04","content":"Selected Answer: C\nTo share dependencies across multiple functions. After you create a layer, you can apply it to any number of functions in your account. Without layers, you need to include the same dependencies in each individual deployment package.\n\nhttps://docs.aws.amazon.com/lambda/latest/dg/chapter-layers.html"},{"content":"Selected Answer: C\nC is correct.","poster":"dilleman","timestamp":"1712822520.0","upvote_count":"2","comment_id":"1040340"},{"comment_id":"1026495","content":"Selected Answer: C\nC) https://www.examtopics.com/discussions/amazon/view/96245-exam-aws-certified-developer-associate-topic-1-question-436/","timestamp":"1712401200.0","poster":"Digo30sp","upvote_count":"2"}],"question_id":81,"timestamp":"2023-10-06 02:21:00","exam_id":24,"answer_ET":"C","choices":{"D":"Use an AWS CodeCommit repository to host the dependencies in a centralized location.","A":"Define a maintenance window for the Lambda functions to ensure that the functions get updated copies of the dependencies.","B":"Upgrade the Lambda functions to the most recent runtime version.","C":"Define a Lambda layer that contains all of the shared dependencies."},"question_images":[],"answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/122591-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_description":"","answers_community":["C (100%)"],"unix_timestamp":1696551660,"isMC":true,"question_text":"A developer has an application that is composed of many different AWS Lambda functions. The Lambda functions all use some of the same dependencies. To avoid security issues, the developer is constantly updating the dependencies of all of the Lambda functions. The result is duplicated effort for each function.\n\nHow can the developer keep the dependencies of the Lambda functions up to date with the LEAST additional complexity?","answer":"C","topic":"1"},{"id":"T9qrBGn3Sk0iZJapd9T8","url":"https://www.examtopics.com/discussions/amazon/view/122593-exam-aws-certified-developer-associate-dva-c02-topic-1/","topic":"1","answer_description":"","isMC":true,"discussion":[{"comment_id":"1216566","upvote_count":"2","timestamp":"1732372560.0","content":"Selected Answer: D\nD is the correct answer.","poster":"65703c1"},{"timestamp":"1721483880.0","upvote_count":"2","comment_id":"1127368","content":"Selected Answer: D\nThis is the most cost-effective and efficient solution. The TTL feature allows DynamoDB to automatically delete items past a certain timestamp, which is perfect for this use case. By adding a TTL attribute to each item (set to 48 hours after the post creation time), DynamoDB will automatically delete the items when they expire, without any need for custom scripts, additional AWS services, or manual intervention.","poster":"SerialiDr"},{"upvote_count":"3","comment_id":"1040343","timestamp":"1712822700.0","content":"Selected Answer: D\nD is correct. DynamoDB tables can clean up data itself based on provided configuration.","poster":"dilleman"},{"timestamp":"1712401380.0","comment_id":"1026501","upvote_count":"3","content":"Selected Answer: D\nThe correct answer is (D).\n\nSolution (D) is the most cost-effective because it uses DynamoDB's Time to Live (TTL) to automatically remove expired items. The TTL is an item attribute that specifies the duration of time that an item should remain in the table. When an item's TTL expires, the item is automatically deleted from the table.","poster":"Digo30sp"}],"question_id":82,"choices":{"C":"For each item, add a new attribute of type Date that has a timestamp that is set to 48 hours after the blog post creation time. Create a global secondary index (GSI) that uses the new attribute as a sort key. Create an AWS Lambda function that references the GSI and removes expired items by using the BatchWriteItem API operation. Schedule the function with an Amazon CloudWatch event every minute.","A":"For each item, add a new attribute of type String that has a timestamp that is set to the blog post creation time. Create a script to find old posts with a table scan and remove posts that are older than 48 hours by using the BatchWriteItem API operation. Schedule a cron job on an Amazon EC2 instance once an hour to start the script.","D":"For each item, add a new attribute of type Number that has a timestamp that is set to 48 hours after the blog post creation time. Configure the DynamoDB table with a TTL that references the new attribute.","B":"For each item, add a new attribute of type String that has a timestamp that is set to the blog post creation time. Create a script to find old posts with a table scan and remove posts that are older than 48 hours by using the BatchWriteItem API operation. Place the script in a container image. Schedule an Amazon Elastic Container Service (Amazon ECS) task on AWS Fargate that invokes the container every 5 minutes."},"answer":"D","unix_timestamp":1696551960,"exam_id":24,"question_images":[],"question_text":"A mobile app stores blog posts in an Amazon DynamoDB table. Millions of posts are added every day, and each post represents a single item in the table. The mobile app requires only recent posts. Any post that is older than 48 hours can be removed.\n\nWhat is the MOST cost-effective way to delete posts that are older than 48 hours?","answers_community":["D (100%)"],"timestamp":"2023-10-06 02:26:00","answer_images":[],"answer_ET":"D"},{"id":"AJs1zc4r3bKLkNPcuOsm","answer_images":[],"question_id":83,"question_images":[],"discussion":[{"comment_id":"1216570","timestamp":"1732372740.0","upvote_count":"1","poster":"65703c1","content":"Selected Answer: B\nB is the correct answer."},{"upvote_count":"4","timestamp":"1721485920.0","content":"Selected Answer: B\nAWS Secrets Manager is designed to handle sensitive information like database credentials and supports automatic rotation. Using SecureString parameters in Systems Manager Parameter Store for other parameters provides a secure and centralized way to manage them. This approach also enables reusability and easy updating without code modifications.","comment_id":"1127393","poster":"SerialiDr"},{"poster":"dilleman","timestamp":"1712822820.0","content":"Selected Answer: B\nB is correct","upvote_count":"3","comment_id":"1040346"},{"upvote_count":"3","comment_id":"1026570","content":"Selected Answer: B\nB) https://www.examtopics.com/discussions/amazon/view/88929-exam-aws-certified-developer-associate-topic-1-question-338/","timestamp":"1712404920.0","poster":"Digo30sp"}],"choices":{"C":"Create RDS database parameters in AWS Systems Manager Parameter Store for the user name, password, database, host, and port. Create encrypted Lambda environment variables for the DynamoDB table, S3 bucket, and SNS topic. Create a Lambda function and set the logic for the credentials rotation task. Schedule the credentials rotation task in Amazon EventBridge.","A":"Create an RDS database secret in AWS Secrets Manager. Set the user name, password, database, host, and port. Turn on secret rotation. Create encrypted Lambda environment variables for the DynamoDB table, S3 bucket, and SNS topic.","B":"Create an RDS database secret in AWS Secrets Manager. Set the user name, password, database, host, and port. Turn on secret rotation. Create SecureString parameters in AWS Systems Manager Parameter Store for the DynamoDB table, S3 bucket, and SNS topic.","D":"Create RDS database parameters in AWS Systems Manager Parameter Store for the user name, password, database, host, and port. Store the DynamoDB table, S3 bucket, and SNS topic in Amazon S3. Create a Lambda function and set the logic for the credentials rotation. Invoke the Lambda function on a schedule."},"topic":"1","answer":"B","question_text":"A developer is modifying an existing AWS Lambda function. While checking the code, the developer notices hardcoded parameter values for an Amazon RDS for SQL Server user name, password, database, host, and port. There are also hardcoded parameter values for an Amazon DynamoDB table, an Amazon S3 bucket, and an Amazon Simple Notification Service (Amazon SNS) topic.\n\nThe developer wants to securely store the parameter values outside the code in an encrypted format and wants to turn on rotation for the credentials. The developer also wants to be able to reuse the parameter values from other applications and to update the parameter values without modifying code.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","url":"https://www.examtopics.com/discussions/amazon/view/122592-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_description":"","isMC":true,"answer_ET":"B","answers_community":["B (100%)"],"exam_id":24,"unix_timestamp":1696551900,"timestamp":"2023-10-06 02:25:00"},{"id":"0P2uFxv6FyNJzaLWPWfg","isMC":true,"answer_ET":"A","question_text":"A developer accesses AWS CodeCommit over SSH. The SSH keys configured to access AWS CodeCommit are tied to a user with the following permissions:\n\n//IMG//\n\n\nThe developer needs to create/delete branches.\n\nWhich specific IAM permissions need to be added, based on the principle of least privilege?","choices":{"B":"\"codecommit:Put*\"","C":"\"codecommit:Update*\"","D":"\"codecommit:*\"","A":"\"codecommit:CreateBranch\"\n\"codecommit:DeleteBranch\""},"question_id":84,"discussion":[{"upvote_count":"3","timestamp":"1732372980.0","content":"Selected Answer: A\nA is the correct answer.","comment_id":"1216572","poster":"65703c1"},{"content":"Selected Answer: A\nTake a look at CodeCommit API Operations and Required Permissions for Actions on Branches in https://docs.aws.amazon.com/codecommit/latest/userguide/auth-and-access-control-permissions-reference.html#aa-branches => A","timestamp":"1718888460.0","comment_id":"1101661","poster":"TanTran04","upvote_count":"2"},{"content":"Selected Answer: A\nA of course","comment_id":"1040349","upvote_count":"3","timestamp":"1712822940.0","poster":"dilleman"},{"content":"Selected Answer: A\nA) https://www.examtopics.com/discussions/amazon/view/4364-exam-aws-certified-developer-associate-topic-1-question-190/","timestamp":"1712405040.0","upvote_count":"2","comment_id":"1026571","poster":"Digo30sp"}],"exam_id":24,"timestamp":"2023-10-06 02:27:00","answer":"A","answer_images":[],"answer_description":"","topic":"1","question_images":["https://img.examtopics.com/aws-certified-developer-associate-dva-c02/image13.png"],"url":"https://www.examtopics.com/discussions/amazon/view/122594-exam-aws-certified-developer-associate-dva-c02-topic-1/","answers_community":["A (100%)"],"unix_timestamp":1696552020},{"id":"WEeJcigDV65wrOAqUZ8q","question_id":85,"url":"https://www.examtopics.com/discussions/amazon/view/122595-exam-aws-certified-developer-associate-dva-c02-topic-1/","answers_community":["AB (89%)","6%"],"answer_images":[],"question_images":[],"unix_timestamp":1696552080,"exam_id":24,"question_text":"An application that is deployed to Amazon EC2 is using Amazon DynamoDB. The application calls the DynamoDB REST API. Periodically, the application receives a ProvisionedThroughputExceededException error when the application writes to a DynamoDB table.\n\nWhich solutions will mitigate this error MOST cost-effectively? (Choose two.)","topic":"1","isMC":true,"answer_ET":"AB","discussion":[{"upvote_count":"6","timestamp":"1705766880.0","poster":"SerialiDr","comment_id":"1127371","content":"Selected Answer: AB\nA. Modify the application code to perform exponential backoff when the error is received: This is a cost-effective and recommended approach. Exponential backoff is a standard error-retry strategy where the time between retries gradually increases. This strategy helps to efficiently manage request retries without immediately consuming additional throughput, thus reducing the likelihood of repeatedly hitting the throughput limits.\n\nB. Modify the application to use the AWS SDKs for DynamoDB: The AWS SDKs implement best practices, including automatic retry logic with exponential backoff. Using an AWS SDK for DynamoDB can simplify the implementation and is more efficient than directly calling the DynamoDB REST API. This change can help mitigate throughput exceedance errors."},{"upvote_count":"1","poster":"f271c23","timestamp":"1733826120.0","comment_id":"1324488","content":"Selected Answer: AB\nYes AB is the right set of answers."},{"content":"Key Words Why They Matter\nProvisionedThroughputExceededException Indicates the application is exceeding the provisioned capacity of the DynamoDB table.\n\nPeriodically Suggests that the issue happens under specific conditions, such as traffic spikes.\n\nREST API Implies the application is making direct API calls, possibly without SDK optimizations.\n\nCost-effectively Points towards solutions that avoid increasing DynamoDB capacity (which costs more).\nWrites to a DynamoDB table\n Identifies the operation likely causing the throttling issue.\n\nModify application code Indicates that a code change is necessary to handle throttling errors better.\n\nExponential backoff A retry strategy to reduce the impact of throttling.\n\nAWS SDKs Built-in solutions for efficient, optimized interactions with DynamoDB.","timestamp":"1731415380.0","poster":"CloudChingon","upvote_count":"1","comment_id":"1310578"},{"upvote_count":"1","poster":"aws_god","content":"Selected Answer: BC\nThis is what the exception looks like:\n\"boto.dynamodb2.exceptions.ProvisionedThroughputExceededException: ProvisionedThroughputExceededException: 400 Bad Request\n{u'message': u'The level of configured provisioned throughput for the table was exceeded. Consider increasing your provisioning level with the UpdateTable API', u'__type': u'com.amazonaws.dynamodb.v20120810#ProvisionedThroughputExceededException'}\"\n\nYou need B since the AWS SDK includes automatic retry logic with exponential backoff specifically designed to deal with this automatically and C since increasing the provisioned level also helps solve this issue.","timestamp":"1730362140.0","comment_id":"1305329"},{"upvote_count":"1","timestamp":"1716468300.0","comment_id":"1216574","poster":"65703c1","content":"Selected Answer: AB\nAB is the correct answer."},{"content":"Selected Answer: AC\nFollowing ChatGPT 3.5, Option A and C\nOption B (Modify the application to use the AWS SDKs for DynamoDB) is not directly related to resolving throughput issues. It's generally recommended to use the AWS SDKs as they provide more efficient and convenient ways to interact with AWS services, but it may not directly address the ProvisionedThroughputExceededException issue.","poster":"TanTran04","upvote_count":"1","comment_id":"1093505","timestamp":"1702301760.0"},{"upvote_count":"4","poster":"dilleman","timestamp":"1697011920.0","content":"Selected Answer: AB\nA and B.\nExponential backoff is a standard error-handling strategy for network applications. The idea is to retry a failed request with increasing delays between each attempt.\n\nAnd the AWS SDKs have built-in support for handling these errors.","comment_id":"1040351"},{"comment_id":"1026573","upvote_count":"4","timestamp":"1696593900.0","poster":"Digo30sp","content":"Selected Answer: AB\nA and B: https://www.examtopics.com/discussions/amazon/view/69199-exam-aws-certified-developer-associate-topic-1-question-385/"}],"timestamp":"2023-10-06 02:28:00","answer_description":"","answer":"AB","choices":{"D":"Create a DynamoDB Accelerator (DAX) cluster for the DynamoDB table.","A":"Modify the application code to perform exponential backoff when the error is received.","E":"Create a second DynamoDB table. Distribute the reads and writes between the two tables.","B":"Modify the application to use the AWS SDKs for DynamoDB.","C":"Increase the read and write throughput of the DynamoDB table."}}],"exam":{"isImplemented":true,"isBeta":false,"id":24,"numberOfQuestions":551,"lastUpdated":"11 Apr 2025","name":"AWS Certified Developer - Associate DVA-C02","provider":"Amazon","isMCOnly":true},"currentPage":17},"__N_SSP":true}