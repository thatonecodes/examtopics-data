{"pageProps":{"questions":[{"id":"KeY5x7tZKV8pvJ3p9hH5","question_id":436,"answers_community":["A (100%)"],"answer":"A","question_text":"An application runs on multiple EC2 instances behind an ELB.\nWhere is the session data best written so that it can be served reliably across multiple requests?","answer_ET":"A","choices":{"C":"Write data to Amazon EC2 Instance Store.","B":"Write data to Amazon Elastic Block Store.","A":"Write data to Amazon ElastiCache.","D":"Write data to the root filesystem."},"question_images":[],"unix_timestamp":1569926280,"answer_images":[],"discussion":[{"comment_id":"13414","content":"A is Correct!","upvote_count":"21","timestamp":"1632639240.0","poster":"BillyC","comments":[{"comment_id":"54823","timestamp":"1633167540.0","upvote_count":"4","poster":"Bach999","content":"https://aws.amazon.com/caching/session-management/"}]},{"poster":"sumanshu","timestamp":"1734584760.0","content":"Selected Answer: A\nsession data must be accessible to all instances in a shared and consistent manner","comment_id":"1328858","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: A\nAmazon ElastiCache.","timestamp":"1693157340.0","comment_id":"991602","poster":"RachitNandi1997"},{"content":"Selected Answer: A\nAmazon ElastiCache is a good option to store session data. A is the correct one!","comment_id":"936767","upvote_count":"1","poster":"rcaliandro","timestamp":"1687962420.0"},{"poster":"peterpain","timestamp":"1684932960.0","content":"Selected Answer: A\nCorrect option is A. For \"session data\", use elastic cache","comment_id":"905898","upvote_count":"1"},{"comment_id":"806362","timestamp":"1676208300.0","poster":"ts1989","content":"Selected Answer: A\nfor \"session data\" always remember elastic cache or dynamodb is used","upvote_count":"1"},{"timestamp":"1675685400.0","upvote_count":"1","content":"Selected Answer: A\nA is the right answer","poster":"mhulk","comment_id":"799690"},{"comment_id":"771839","timestamp":"1673388480.0","poster":"sichilam","upvote_count":"1","content":"A is correct"},{"upvote_count":"1","content":"Selected Answer: A\nYes, A","poster":"Nosal","comment_id":"744674","timestamp":"1670987040.0"},{"timestamp":"1669686900.0","comment_id":"729842","upvote_count":"3","content":"Selected Answer: A\nWhy would be C? if machines goes down, instance store data are vanished.","poster":"gpit"},{"poster":"AKRAMPO","content":"Selected Answer: A\nA correct answer","comment_id":"723197","timestamp":"1669010460.0","upvote_count":"1"},{"comment_id":"721050","upvote_count":"1","poster":"dark_cherrymon","content":"Selected Answer: A\n\" Instance store is ideal for temporary storage of information that changes frequently, such as buffers, caches, scratch data, and other temporary content, or for data that is replicated across a fleet of instances, such as a load-balanced pool of web servers.\"\n\nno mention of session\n\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html","timestamp":"1668744480.0"},{"timestamp":"1664967360.0","upvote_count":"1","content":"Selected Answer: A\nA is Correct!","comment_id":"686792","poster":"haazybanj"},{"content":"Selected Answer: A\nAns: A","comment_id":"547739","upvote_count":"1","poster":"groylova","timestamp":"1644927240.0"},{"comment_id":"543121","upvote_count":"1","timestamp":"1644331560.0","poster":"JP_PA","content":"Selected Answer: A\nANS: A"},{"poster":"Mamba4Ever","content":"I think DynamoDb in general is better for session storage.","timestamp":"1635899880.0","upvote_count":"1","comment_id":"405013"},{"poster":"Mamba4Ever","comment_id":"405011","comments":[{"timestamp":"1646907960.0","poster":"SK_2_SK","upvote_count":"1","content":"But at the same time, \"store\" session data can be ambiguous enough that \"temporarily store\"","comment_id":"564727"}],"upvote_count":"4","timestamp":"1635264720.0","content":"While it's good to store session data in the cache for fast retrieval, what happens if the server is restarted? You lose all the session data. So wouldn't be better to use a non-volatile storage?"},{"timestamp":"1635222660.0","comment_id":"349631","poster":"VAG1595","content":"Answer: A","upvote_count":"1"},{"upvote_count":"2","content":"Ans: A","comment_id":"317806","timestamp":"1633712040.0","poster":"wils3"},{"poster":"saeidp","timestamp":"1633499160.0","content":"A is correct","upvote_count":"1","comment_id":"172428"},{"content":"Resp: A","poster":"Scarback","upvote_count":"1","timestamp":"1633469940.0","comment_id":"125555"},{"poster":"semi_sonic","timestamp":"1633466640.0","upvote_count":"2","comment_id":"78332","content":"A. Amazon ElastiCache에 데이터 쓰기"},{"comment_id":"45452","upvote_count":"3","timestamp":"1632921720.0","poster":"awscertified","content":"A. Write data to Amazon ElastiCache"},{"comment_id":"30303","upvote_count":"1","timestamp":"1632786780.0","content":"A. Write data to Amazon ElastiCache","poster":"aws_Tamilan"}],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/5921-exam-aws-certified-developer-associate-topic-1-question-92/","exam_id":25,"topic":"1","isMC":true,"timestamp":"2019-10-01 12:38:00"},{"id":"rYqLR9PtEjWcaVaCxBwu","choices":{"C":"AWS Elastic Beanstalk","A":"AWS Cloud9","D":"AWS CodeDeploy","B":"AWS CodeBuild"},"exam_id":25,"timestamp":"2021-12-31 21:15:00","url":"https://www.examtopics.com/discussions/amazon/view/69149-exam-aws-certified-developer-associate-topic-1-question-93/","answer_description":"","answer_ET":"D","question_id":437,"answers_community":["D (100%)"],"question_text":"A company is using continuous integration/continuous delivery (CI/CD) systems. A developer must automate the deployment of an application software package to Amazon EC2 instances and virtual servers that run on premises.\nWhich AWS service should the developer use to meet these requirements?","topic":"1","answer_images":[],"unix_timestamp":1640981700,"discussion":[{"content":"D. AWS CodeDeploy","upvote_count":"7","timestamp":"1640981700.0","comment_id":"514213","poster":"brightosey"},{"poster":"sumanshu","timestamp":"1734586620.0","upvote_count":"1","content":"Selected Answer: D\nAWS CodeDeploy is a deployment service that automates the process of deploying application updates to various compute platforms\n\nA) Eliminated - Cloud9 is IDE\nB) Eliminated - CodeBuild - build service that compiles source code, runs tests,","comment_id":"1328865"},{"timestamp":"1687962540.0","comment_id":"936770","upvote_count":"1","content":"Selected Answer: D\nWe want to automate the \"deployment\" of an application on EC2 instances. So, CodeDeploy is right for us","poster":"rcaliandro"},{"content":"Correct option: D\nKeyword is \"Automate\" hence A & C are ruled out. \n\"B\"is used to test and debug the application & deployment can be done using codedeploy only considering the scenario provided.","timestamp":"1677672540.0","comment_id":"825789","poster":"Jay1299","upvote_count":"1"},{"content":"D codedeploy","comment_id":"771843","poster":"sichilam","upvote_count":"1","timestamp":"1673388660.0"},{"comment_id":"686794","poster":"haazybanj","content":"Selected Answer: D\nAWS CodeDeploy is the answer","upvote_count":"1","timestamp":"1664967420.0"},{"timestamp":"1664731020.0","content":"Selected Answer: D\nAWS CodeDeploy is the answer","comment_id":"684965","poster":"haazybanj","upvote_count":"1"},{"upvote_count":"2","comment_id":"537370","timestamp":"1643657760.0","poster":"Orffeus","content":"D is correct"}],"isMC":true,"question_images":[],"answer":"D"},{"id":"9a79ILPSPebfKyycseMg","answer_images":[],"answer":"A","question_images":[],"topic":"1","isMC":true,"unix_timestamp":1662046260,"timestamp":"2022-09-01 17:31:00","discussion":[{"poster":"sumanshu","timestamp":"1734601440.0","comment_id":"1328924","upvote_count":"1","content":"Selected Answer: A\nB) Eliminated - The finally block runs regardless of whether the build succeeds or fails. Since the requirement is to push the image only upon successful builds, this approach is unsuitable."},{"comment_id":"1016270","timestamp":"1695604320.0","content":"Selected Answer: A\nAdd a post_build phase to the buildspec file that uses the commands block to push the Docker image.","upvote_count":"1","poster":"Rizwan_Shaukat"},{"timestamp":"1693459980.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html\nphases/*/finally\nOptional block. Commands specified in a finally block are run after commands in the commands block. The commands in a finally block are run even if a command in the commands block fails. For example, if the commands block contains three commands and the first fails, CodeBuild skips the remaining two commands and runs any commands in the finally block. The phase is successful when all commands in the commands and the finally blocks run successfully. If any command in a phase fails, the phase fails.","comment_id":"994790","upvote_count":"2","poster":"Yuxing_Li"},{"content":"Selected Answer: A\nA is the correct answer, we can add command line instructions in the post_build hook in order to push the image in the repository","comment_id":"936773","upvote_count":"1","poster":"rcaliandro","timestamp":"1687962660.0"},{"content":"Its A - here is the sampel AWS code showing exactly option A : https://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html","poster":"Dr_Chomp","timestamp":"1680584160.0","comment_id":"860649","upvote_count":"1"},{"comment_id":"784816","timestamp":"1674433080.0","content":"A - https://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html","poster":"vichy","upvote_count":"1"},{"content":"Selected Answer: B\nB is also good as in finally block you can test CODEBUILD_BUILD_SUCCEEDING to make decision.","comments":[{"timestamp":"1672451820.0","content":"In programming, finally usually meant for clean up after all else, success or fail","upvote_count":"6","comment_id":"762430","poster":"tieyua"}],"upvote_count":"2","comment_id":"731019","poster":"gpit","timestamp":"1669774620.0"},{"timestamp":"1666201560.0","content":"Selected Answer: A\nA is the answer","upvote_count":"2","comment_id":"699228","poster":"Antonionuma"},{"content":"Selected Answer: A\nA is correct","timestamp":"1664731080.0","poster":"haazybanj","upvote_count":"1","comment_id":"684966"},{"poster":"haazybanj","comment_id":"674630","content":"A is the answer","upvote_count":"1","timestamp":"1663719900.0"},{"timestamp":"1662510000.0","upvote_count":"1","content":"I think it's A","comment_id":"661777","poster":"szhang2004"},{"poster":"sidvic","timestamp":"1662120120.0","upvote_count":"4","comment_id":"657384","content":"Selected Answer: A\nA because \"phases/post_build\nOptional sequence. Represents the commands, if any, that CodeBuild runs after the build. For example, you might use Maven to package the build artifacts into a JAR or WAR file, or you might push a Docker image into Amazon ECR. Then you might send a build notification through Amazon SNS.\" https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html"},{"timestamp":"1662046260.0","comment_id":"656400","upvote_count":"4","poster":"JOL86","content":"I think it should be A:\nhttps://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html#sample-docker-files \n\nIn the examples, it's in the commands of post_build"}],"question_text":"A software company is using AWS CodeBuild to build an application. The buildspec runs the application build and creates a Docker image that contains the application. The company needs to push the Docker image to Amazon Elastic Container Registry (Amazon ECR) only upon the completion of each successful build.\nWhich solution meets these requirements?","url":"https://www.examtopics.com/discussions/amazon/view/79079-exam-aws-certified-developer-associate-topic-1-question-94/","question_id":438,"answer_description":"","answers_community":["A (86%)","14%"],"choices":{"D":"Use a batch build to define a build matrix. Use the batch build to push the Docker image.","C":"Specify the Docker image in the buildspec's artifacts sequence with an action to push the image.","B":"Change the buildspec by adding a post_build phase that uses the finally block to push the Docker image.","A":"Change the buildspec by adding a post_build phase that uses the commands block to push the Docker image."},"answer_ET":"A","exam_id":25},{"id":"acgPF1v02oDTuJCxijTv","answer_ET":"C","answer_images":[],"exam_id":25,"topic":"1","unix_timestamp":1663673700,"question_images":[],"answer":"C","question_id":439,"timestamp":"2022-09-20 13:35:00","answers_community":["C (100%)"],"answer_description":"","discussion":[{"poster":"sumanshu","comment_id":"1328939","content":"Selected Answer: C\nIn cluster mode, ElastiCache for Redis can replicate data across multiple nodes and availability zones","upvote_count":"1","timestamp":"1734604500.0"},{"content":"Selected Answer: C\nSo in this case I exclude CloudFront because it is not designed for cache RDS databases and I also exclude DAX because we are working with a relational DB rather than DynamoDB.\nWe need to use Amazon ElastiCache but since the requirements suggest an high available solution and the data must be encrypted, for sure we have to choose Amazon ElastiCache in cluster mode. So, the answer C is the correct one.","comment_id":"936780","timestamp":"1687963020.0","upvote_count":"2","poster":"rcaliandro"},{"content":"Selected Answer: C\nAmazon ElastiCache for Redis is a caching layer that can be used to improve the performance of data retrieval from a database. It supports encryption at rest and in transit, and can be configured for high availability by using Redis Cluster","timestamp":"1682462100.0","comment_id":"880913","upvote_count":"2","poster":"MrTee"},{"upvote_count":"1","content":"It should be A \nCloudfront with field level enrcyption. Since elasticahe does not provide encryption","timestamp":"1677672960.0","poster":"Jay1299","comments":[{"comment_id":"837230","content":"actually it does provide encryption https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html","timestamp":"1678639380.0","poster":"fomenkogregory","upvote_count":"1"}],"comment_id":"825801"},{"content":"C is correct","timestamp":"1673389740.0","poster":"sichilam","comment_id":"771854","upvote_count":"1"},{"poster":"haazybanj","timestamp":"1663719960.0","content":"C is correct","comment_id":"674632","upvote_count":"2"},{"content":"Selected Answer: C\nC - Redis with Cluster Mode. Memcached is designed for simplicity. Whereas as Redis with Cluster Mode will provide high availability.\n\nhttps://aws.amazon.com/blogs/database/work-with-cluster-mode-on-amazon-elasticache-for-redis/#:~:text=ElastiCache%20for%20Redis%20with%20Cluster%20Mode%20Enabled%20works%20by%20spreading,spread%20across%20multiple%20Redis%20nodes.","poster":"Spamuel","timestamp":"1663681560.0","upvote_count":"2","comment_id":"674218"},{"comment_id":"674091","poster":"colintkn","content":"C should be the answer","upvote_count":"2","timestamp":"1663673700.0"}],"choices":{"D":"Amazon DynamoDB Accelerator (DAX)","C":"Amazon ElastiCache for Redis in cluster mode","A":"Amazon CloudFront","B":"Amazon ElastiCache for Memcached"},"isMC":true,"question_text":"A company is using Amazon RDS as the backend database for its application. After a recent marketing campaign, a surge of read requests to the database increased the latency of data retrieval from the database.\nThe company has decided to implement a caching layer in front of the database. The cached content must be encrypted and must be highly available.\nWhich solution will meet these requirements?","url":"https://www.examtopics.com/discussions/amazon/view/82917-exam-aws-certified-developer-associate-topic-1-question-95/"},{"id":"GI5s7L8OFMG27btEvB1J","question_id":440,"topic":"1","isMC":true,"answer_images":[],"timestamp":"2022-09-03 11:10:00","question_text":"A company has an application that runs on AWS Elastic Beanstalk in a load-balanced environment. The company needs to update the instance types in the environment to a more recent generation of instance types. The company must minimize downtime during the deployment of this configuration change.\nWhich deployment options will meet these requirements? (Choose two.)","answer":"BC","question_images":[],"unix_timestamp":1662196200,"answers_community":["BC (52%)","CE (48%)"],"answer_ET":"BC","exam_id":25,"choices":{"E":"Canary","A":"Disabled","D":"All at once","C":"Immutable","B":"Rolling based on Health"},"discussion":[{"comment_id":"721056","upvote_count":"14","content":"Selected Answer: CE\nCE\n\n\"Today's release adds a new policy—Traffic splitting. Traffic-splitting deployments let you perform canary testing as part of your application deployment. \"\n\nbeanstalk has canary\n\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/relnotes/release-2020-05-18-ts-deploy.html","poster":"dark_cherrymon","timestamp":"1668745080.0"},{"comments":[{"comment_id":"674221","content":"Agreed","upvote_count":"1","poster":"Spamuel","timestamp":"1663681680.0"}],"timestamp":"1662196200.0","comment_id":"658265","upvote_count":"10","content":"Selected Answer: BC\nI would go for BC.\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rollingupdates.html","poster":"Danbraga"},{"poster":"sumanshu","timestamp":"1734606300.0","comment_id":"1328950","upvote_count":"1","content":"Selected Answer: BC\nCanary - primarily to code changes and not infrastructure-level configuration updates like instance type changes."},{"comment_id":"1307178","content":"Selected Answer: CE\nCE is actually the correct ans. w/o any doubt!","timestamp":"1730774100.0","upvote_count":"1","poster":"Aamee"},{"poster":"sara_exam_topics","comment_id":"1026247","timestamp":"1696567620.0","content":"Selected Answer: BC\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environments-updating.html. Clearly mentioned in we are doing environment changes like instance type.","upvote_count":"1"},{"upvote_count":"1","timestamp":"1696417440.0","comment_id":"1024672","content":"Selected Answer: BC\nFor configuration changes, Rolling updates and Immutable updates are recommended to \"prevent downtime during the update process\".\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environments-updating.html","poster":"jingle4944"},{"timestamp":"1696324860.0","comment_id":"1023784","content":"B+C\nE is incorrect, it uses for application deployment\nChange of instance type requires \"Configuration changes\"\ncannot simultaneously deploy an application and modify an instance\n\nAny configuration change is applied using \nDisabled, Rolling Based on Health, Rolling Based on Time or Immutable","upvote_count":"2","poster":"dandare74"},{"poster":"Yasser001","comment_id":"944213","content":"Selected Answer: CE\nCE because Elastic Beanstalk offers Traffic Splitting","timestamp":"1688607360.0","upvote_count":"1"},{"comments":[{"content":"Actually, canary release/testing DOES indeed exist for AWS Elastic Beanstalk through the option of Traffic Splitting! \n\nLink: https://docs.aws.amazon.com/elasticbeanstalk/latest/relnotes/release-2020-05-18-ts-deploy.html","timestamp":"1696035660.0","upvote_count":"1","poster":"npn225","comment_id":"1021182"}],"content":"Selected Answer: BC\nTricky one! I was for C and E but, looking at the documentation, the canary release doesn't exists for the Elastic Beanstalk. So the correct answer, in my opinion, is B (Rolling based on Health) and C (Immutable).\n\n(https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html)\n(https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rollingupdates.html)","timestamp":"1687963680.0","comment_id":"936787","poster":"rcaliandro","upvote_count":"3"},{"content":"The deployment options that will meet these requirements are Rolling based on Health and Immutable. B and C","upvote_count":"1","comments":[{"content":"Rolling based on Health deploys updates to instances in batches and only continues with the deployment if each batch passes health checks. This ensures that the application is available throughout the deployment, and any issues can be detected early and addressed before proceeding with the next batch.\nImmutable creates new instances with the updated configuration, deploys the application to these new instances, and swaps the old instances with the new ones. This process ensures that the application remains available during the deployment and only causes a minimal amount of downtime during the swap process.","upvote_count":"1","comment_id":"880918","timestamp":"1682462520.0","poster":"MrTee"}],"timestamp":"1682462400.0","comment_id":"880915","poster":"MrTee"},{"content":"Selected Answer: CE\nC is obvious.\nE because by Canary they mean traffic splitting","timestamp":"1680841020.0","poster":"kungfukenny87","upvote_count":"2","comment_id":"863467"},{"comment_id":"852688","poster":"qiaoli","content":"Selected Answer: CE\nI go with C, E\n\nno matter what you do in Rolling, there is always a chance of partial outage.\n\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html\n\nAll at once – Deploy the new version to all instances simultaneously. All instances in your environment are out of service for a short time while the deployment occurs.\n\nRolling – Deploy the new version in batches. Each batch is taken out of service during the deployment phase, reducing your environment's capacity by the number of instances in a batch.\n\nRolling with additional batch – Deploy the new version in batches, but first launch a new batch of instances to ensure full capacity during the deployment process.\n\nImmutable – Deploy the new version to a fresh group of instances by performing an immutable update.\n\nTraffic splitting – Deploy the new version to a fresh group of instances and temporarily split incoming client traffic between the existing application version and the new one. - this means canary","upvote_count":"1","timestamp":"1679970660.0"},{"upvote_count":"1","timestamp":"1679846400.0","comment_id":"851243","content":"Selected Answer: CE\nImmutable + Canary testing (traffic splitting)","poster":"Krok"},{"content":"It shall be C and E","comment_id":"844847","upvote_count":"1","timestamp":"1679314320.0","poster":"prabhay786"},{"timestamp":"1677395940.0","upvote_count":"1","comment_id":"822132","poster":"ts1989","content":"Selected Answer: BC\n1st Canary and traffic splitting are not the same. EB offers traffic splitting.\n2nd \"minimize downtime\" so using rolling updates is next best choice"},{"upvote_count":"1","comment_id":"780829","timestamp":"1674112200.0","content":"Selected Answer: BC\nTraffic Splitting is not Canary \nCanary by name is only offered in Lambda and API Gateway. This comes up often in TutorialDojo's practice exams.","poster":"BobAWS23"},{"comment_id":"773092","poster":"whenthan","timestamp":"1673493480.0","upvote_count":"1","content":"BC\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html#environments-cfg-rollingdeployments-method"},{"poster":"Dirisme","content":"Selected Answer: BC\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rollingupdates.html\nIts BC","upvote_count":"1","timestamp":"1673274360.0","comment_id":"770514"},{"upvote_count":"1","content":"CE now EBS supports Canary (traffic splitting option)","poster":"awsguru1998","timestamp":"1671213000.0","comment_id":"747469"},{"poster":"fabriciollf","comment_id":"742698","timestamp":"1670843520.0","upvote_count":"1","content":"Selected Answer: BC\nB and C\nAcording to this document the besta options to avoid downtime are Roling and Immutable\nhttps://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html","comments":[{"poster":"tieyua","comments":[{"poster":"sichilam","comment_id":"771873","upvote_count":"1","timestamp":"1673391300.0","content":"Rolling based on Health – Wait until instances in the current batch are healthy before placing instances in service and starting the next batch. Rolling based on Time – Specify an amount of time to wait between launching new instances and placing them in service before starting the next batch."}],"content":"No such thing as \"Rolling based on Health\"","upvote_count":"2","comment_id":"762431","timestamp":"1672452540.0"}]},{"comments":[{"timestamp":"1667605260.0","upvote_count":"1","content":"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html#deployments-scenarios","comment_id":"711445","poster":"cloud_collector"}],"poster":"cloud_collector","comment_id":"711443","timestamp":"1667605200.0","content":"Selected Answer: BC\n\"must minimize downtime\" --- rule out A & D\n\"an application that runs on AWS Elastic Beanstalk\" --- rule out E","upvote_count":"2"},{"comments":[{"content":"You chose canary and immutable. I agree with both but your points are incorrect. Immutable environment updates are an alternative to rolling updates. Immutable environment updates ensure that configuration changes that require replacing instances are applied efficiently and safely.The first point \"A failed rollback ends the update process and leaves your environment in an unhealthy state\" is not feasable because it is using auto scaling groups. these will dynamicly scale and remove unhealthy nodes because of updates or health checks. the second point of \"An alternative method is to deploy the new version of your application\" wont be feasable if you have a LB since immutable is arguably better because it takes care of dns and doing the cut over on the back end and the CNAME swap wont need to happen since you point to the LB and not the auto scaling group. https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environmentmgmt-updates-immutable.html","comment_id":"705248","poster":"adsdadasdad","timestamp":"1666847640.0","upvote_count":"1"}],"timestamp":"1666754280.0","poster":"zzr2","upvote_count":"1","content":"Selected Answer: CE\nA failed rollback ends the update process and leaves your environment in an unhealthy state. Unprocessed batches are still running instances with the old configuration, while any batches that completed successfully have the new configuration. To fix an environment after a failed rollback, first resolve the underlying issue that caused the update to fail, and then initiate another environment update.\n\nAn alternative method is to deploy the new version of your application to a different environment and then perform a CNAME swap to redirect traffic with zero downtime. See Blue/Green deployments with Elastic Beanstalk for more information.","comment_id":"704351"},{"upvote_count":"3","comments":[{"upvote_count":"1","timestamp":"1667177700.0","poster":"nothankyouspankyou","content":"True: https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html","comment_id":"708107"}],"poster":"Sorosch","timestamp":"1666614720.0","content":"Selected Answer: BC\nAs far i know there is no canary Deployment for Beanstalk.","comment_id":"703008"},{"upvote_count":"3","content":"I believe canary is not Out of the box deployment mode of Beanstalk","timestamp":"1663509660.0","poster":"robbyboss","comment_id":"672430"},{"upvote_count":"3","poster":"CollinsWolf","timestamp":"1663455360.0","comment_id":"671842","content":"i think its BC https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rollingupdates.html"},{"timestamp":"1663395660.0","poster":"hongy","content":"Selected Answer: CE\nCE would be the right answer.","comment_id":"671304","upvote_count":"2"},{"timestamp":"1662510060.0","comment_id":"661781","poster":"szhang2004","upvote_count":"1","content":"I think is BC"}],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/79727-exam-aws-certified-developer-associate-topic-1-question-96/"}],"exam":{"lastUpdated":"11 Apr 2025","name":"AWS Certified Developer Associate","id":25,"numberOfQuestions":443,"isImplemented":true,"isBeta":false,"isMCOnly":true,"provider":"Amazon"},"currentPage":88},"__N_SSP":true}