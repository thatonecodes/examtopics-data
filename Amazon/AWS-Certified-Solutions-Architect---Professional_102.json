{"pageProps":{"questions":[{"id":"zPvbGK5bm6NOxEnQ6c0E","answer_ET":"A","answer_images":[],"topic":"1","question_text":"The CISO of a large enterprise with multiple IT departments, each with its own AWS account, wants one central place where AWS permissions for users can be managed and users authentication credentials can be synchronized with the company's existing on-premises solution.\nWhich solution will meet the CISO's requirements?","isMC":true,"discussion":[{"upvote_count":"21","comment_id":"14185","content":"C\nTo help you manage federation for multiple AWS accounts centrally, you can use AWS Single Sign-On to manage SSO access for all of your accounts in AWS Organizations. https://aws.amazon.com/identity/federation/\nA: The fact that the answer did not explain how “trust relationships” are created means I would avoid this answer if there is a better answer. In this case C. You will also need to use a lot of assume roles in each and every account which can be tedious. This was what it used to be before AWS Organization was launched.\nB: Accounts are not centralized. (“one central place”)\nD: There is no federation.","comments":[{"poster":"Musk","comment_id":"48503","content":"C says \"identity management provider in each account\" which I think is wrong, because you just need one, not one per account.","comments":[{"timestamp":"1686352320.0","poster":"Jesuisleon","upvote_count":"1","comment_id":"919669","content":"yes, that's the thing also makes me feel uncomfortable"}],"upvote_count":"4","timestamp":"1633080600.0"},{"timestamp":"1635098340.0","content":"C is not correct. you can't have SAML across each account. That is not going to centralise access.","comment_id":"192662","poster":"manoj101","upvote_count":"2"},{"poster":"chandler","comment_id":"33864","upvote_count":"15","timestamp":"1632735900.0","content":"Probably A is the answer: https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html and search \"trust\" on the page. \nAlso, question asks about \"AWS permissions for users can be managed\", SCP won't help too much about that. It's more like IAM's job."},{"upvote_count":"38","comments":[{"comment_id":"18966","timestamp":"1632316020.0","upvote_count":"5","content":"I feel it has to be C. SCPs offer central control over the maximum available permissions for all accounts in your organization. A doesnt provide to centrally manage permissions.","poster":"G3"},{"upvote_count":"1","content":"C. finally i got u once @donathon ：D\nSCPs are necessary but not sufficient for granting access in the accounts in your organization. Attaching an SCP to the organization root or an organizational unit (OU) defines a guardrail for what actions accounts within the organization root or OU can do. You still need to attach IAM policies to users and roles in your organization's accounts to actually grant permissions to them\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html","comment_id":"42516","timestamp":"1632753180.0","poster":"PacoDerek"},{"poster":"sam422","timestamp":"1634945400.0","comment_id":"183390","content":"Although A looks bit vague on trust relationships, it is how aws asks to do it having an central account. For C, SCP offers perimeter control. I go with A","upvote_count":"1"},{"comment_id":"29631","upvote_count":"6","timestamp":"1632601920.0","content":"A +1.\n\nOption B mentioned \"create a SAML-based identity management provider IN EACH ACCOUNT\" seems not feasible.","poster":"tan9","comments":[{"content":"you mean C right?","comment_id":"33099","poster":"chandler","upvote_count":"1","timestamp":"1632681240.0"}]}],"timestamp":"1632234000.0","poster":"donathon","comment_id":"15121","content":"A\nB\\C: Accounts are not centralized. (“one central place”). Also SAML must be done in one account.\nD: There is no federation."}],"poster":"donathon","timestamp":"1632096360.0"},{"upvote_count":"1","timestamp":"1705256340.0","poster":"3a632a3","comment_id":"1122751","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html\n+\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html"},{"upvote_count":"1","timestamp":"1688319540.0","content":"Selected Answer: A\nA\nB\\C: Accounts are not centralized. (“one central place”). Also SAML must be done in one account.\nD: There is no federation.","poster":"SkyZeroZx","comment_id":"941126"},{"timestamp":"1672239180.0","comment_id":"759969","content":"Selected Answer: A\nA looks bit vague on trust relationships, but it makes sense. \nC-> SCP offers perimeter control and it tells \"...identity management provider in each account\", so A looks better!","poster":"evargasbrz","upvote_count":"2"},{"content":"Selected Answer: A\none central place","timestamp":"1670344320.0","upvote_count":"1","comment_id":"737000","poster":"SureNot"},{"comment_id":"707749","content":"Selected Answer: C\neach account IAM identity provider and role for SAML access created and it should be trusted external IDP provider.","poster":"nsvijay04b1","upvote_count":"2","timestamp":"1667123700.0"},{"comment_id":"661592","timestamp":"1662491460.0","content":"Selected Answer: A\nA\nOne central place to synchronize users.\n\nC is wrong.","poster":"epomatti","upvote_count":"1"},{"comment_id":"647796","timestamp":"1660677720.0","upvote_count":"1","poster":"Ni_yot","content":"Will go with A. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html"},{"timestamp":"1656753180.0","comment_id":"626062","upvote_count":"1","poster":"aandc","content":"A: C says \" identity management provider in each account\""},{"upvote_count":"1","content":"A Does not scale that well. Establishing trust and all, while also creating IAM role for each account because access limits can be different for different accounts + person from 1 department should not access other departments accounts though they need same permissions. Hence, there will be multiple IAM role + multiple account trusts....\n\nAlso, logging into central account and then assuming role for human resources does not seem a good option. This needs to be done at each and every account level only.... and what kind of services will be needed that way...\n\nC seems better to me here.","timestamp":"1643539440.0","comment_id":"536072","poster":"cannottellname"},{"poster":"vbal","timestamp":"1638842940.0","content":"why C ? Create an IDP in each Account..?","comment_id":"495533","upvote_count":"1"},{"timestamp":"1636223760.0","upvote_count":"2","content":"A is correct\nMap on premise users to AWS Roles through SAML federation\nC is similar but not centralized.","comment_id":"441702","poster":"student22"},{"upvote_count":"1","timestamp":"1636116060.0","content":"I think it's A","poster":"denccc","comment_id":"429389"},{"timestamp":"1635887460.0","content":"A correct - https://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles/\nB wrong - \"The CISO\" + \"wants one central place where AWS permissions ... can be managed and users authentication credentials can be synchronized with the company’s existing on-premises solution\"\nC wrong - \"The CISO\" + \"wants one central place where AWS permissions ... can be managed and users authentication credentials can be synchronized with the company’s existing on-premises solution\"\nD wrong","poster":"DerekKey","comment_id":"425291","upvote_count":"2"},{"poster":"WhyIronMan","content":"I'll go with A","upvote_count":"2","comment_id":"411550","timestamp":"1635827580.0"},{"upvote_count":"2","poster":"Waiweng","comment_id":"349053","content":"it;s C","timestamp":"1635796980.0"},{"upvote_count":"1","content":"will go with A","timestamp":"1635604560.0","poster":"Kian1","comment_id":"291759"},{"comment_id":"279061","upvote_count":"3","poster":"Ebi","timestamp":"1635565140.0","content":"Answer is A"},{"comment_id":"260704","timestamp":"1635494220.0","upvote_count":"1","content":"Either A or C needs to create roles for all accounts, so neither can really control permissions centrally.\nBut SCP defines boundaries, so it can provide central permission control to some extent, and simpler.\nSo I'm inclined to C.","poster":"01037"},{"comment_id":"252415","upvote_count":"1","poster":"Bulti","content":"A is the right answer. There should be only one SAML Identity Provider for the organization which would federate with the on-prem solution to maps the groups to the IAM roles in the centralized account. Using these IAM roles the user can assume a role in other accounts like prod and test to access services using trust and permission policies associated with the assumed role in those accounts.","timestamp":"1635394680.0"},{"timestamp":"1635325860.0","poster":"Manolo0101","upvote_count":"1","content":"answer should be A","comment_id":"247996"},{"timestamp":"1635255240.0","content":"Correct is A. More centralized","comment_id":"243594","poster":"T14102020","upvote_count":"1"},{"comment_id":"233447","timestamp":"1635213360.0","comments":[{"content":"Agree with you MichaelR. The on-prem identity store is the centralized source of truth. The SAML IDPs are just consumers of that on-prem identity store. Even yough you have multiple SAML IDPs, they're still consuming that single on-prem identity store. If you add/delete a user, you only have to do that user in one place.\n\nA is incorrect exactly as you say, because it describes creating the multiple roles in a single, centralized account. That's not right, you would create the roles being assumed in the accounts the users need permissions in. See bottom of p2 here, or refer to Q535 right before this one which is covering the same concept: https://d0.awsstatic.com/aws-answers/AWS_Multi_Account_Security_Strategy.pdf","upvote_count":"1","poster":"kirrim","comment_id":"460193","timestamp":"1636252380.0"}],"content":"\"A\" seems incomplete to me. If you wanted this to work, you need to create roles in the foreign accounts that can be assumed from the master account's roles. It just says \"establish trust relationships\". I would expect it to be more specific. On the other hand, I have actually implemented C in real life. But C doesn't seem to address the Central Account requirement in this question, unless the IDP itself is considered as the \"central management\" location","poster":"MichaelR","upvote_count":"4"},{"content":"I'll go with A","comment_id":"231207","upvote_count":"3","timestamp":"1635195660.0","poster":"jackdryan"},{"content":"I think answer should be A. Creating SAML based IM provider in each account is not the best practice.","timestamp":"1635110040.0","upvote_count":"2","poster":"Paitan","comment_id":"198165"},{"poster":"Ganfeng","comment_id":"175546","content":"I will take C. \nA mention \"define AWS IAM roles based on the functional responsibilities of the users in a central account.\", Shouldn't the role defined in the individual account allowing others to assume ? Not sure what this trust relationships meaning,","timestamp":"1634701080.0","upvote_count":"1"},{"comment_id":"152302","upvote_count":"2","timestamp":"1634608920.0","content":"A is correct, SAML only done at centralized account, other can be achieve with trust relationship","poster":"fullaws"},{"upvote_count":"2","comment_id":"133287","timestamp":"1634426700.0","content":"A for sure","poster":"NikkyDicky"},{"poster":"hobokabobo","comment_id":"110086","timestamp":"1634390820.0","upvote_count":"1","content":"D: analyses is done. We need a solution. none given\nC: looks promising. SCP won't help with user management and federate each acount is not central. Also makes no sence with Organisations.\nB: It doesn't say \"each\" account. Not clear but sounds like having federation in every account. If they meant federate one acount and use trust to other accounts: perfect. But otherwise unfortunately not central.\nA: a little tedious but all requirements fullfilled. It describes almost exatly how Organization would do it - just without using Organizations explizitely. \n\n-> A is a solution. Only tradeoff is that it doesn't use Organizations."},{"content":"In the direct federation model you create an idp in each Account And create roles in each account. The idp has to be created before the role so that you have a principal to put into the trust policy. This gives you centralized control.. creating a single idp means you land into one account and have to “jump” Into to others via the role chooser page. The only issue with a is that it mentioned the role first... I’m not sure if it’s suggesting to create the role first but if you did you would have to come back to it after creating the idp to get it to work.","comment_id":"107974","upvote_count":"2","timestamp":"1633901520.0","poster":"Merlin1"},{"poster":"Merlin1","timestamp":"1633886820.0","comment_id":"107968","content":"Both a and c are right.... a is known as “hub and spoke” or Jump accout method. C I’d the trust anyone method which is generally preferred but the answer includes scps which aren’t relevant. Also idps do have to be created fir each account using this method. Roles would need to be created in each account as well.... although c is the preferred method, they both work, but a is a more complete answer.","upvote_count":"2"},{"upvote_count":"3","content":"Answer is A, Option C is lacking central management of IAM accounts","comment_id":"106452","timestamp":"1633739820.0","poster":"meenu2225"},{"poster":"AShahine21","timestamp":"1633639140.0","upvote_count":"3","comment_id":"94784","content":"The C problem is related to the sentence \"identity management provider in each account\".\nUsually, The SAML is connected to the master Account ( Or central account ), and based on the authentication, the user is giving the right permission/roles...\nIf you are doing SAML in each account, then it is not centralised. \n\nA looks better"},{"upvote_count":"1","timestamp":"1633564800.0","comment_id":"94638","content":"A is correct","poster":"FreeSwan"},{"timestamp":"1633559700.0","content":"C is correct.\nA is not there are multiple errors. Role should be in destination account not trusted account.","comments":[{"timestamp":"1634433360.0","upvote_count":"2","poster":"ricoyao","content":"agree with you. C is correct.","comment_id":"138676"}],"poster":"Joeylee","comment_id":"77122","upvote_count":"4"},{"timestamp":"1633438620.0","poster":"Smart","comment_id":"71631","upvote_count":"2","content":"C is correct. SSO will automatically create SAML-based identity provider in relevant accounts. \n\nhttps://docs.aws.amazon.com/singlesignon/latest/userguide/idp.html\nhttps://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-peregrine.html"},{"upvote_count":"1","content":"C\nhttps://docs.aws.amazon.com/singlesignon/latest/userguide/manage-your-accounts.html","poster":"schandr8671","timestamp":"1633431000.0","comment_id":"68008"},{"upvote_count":"1","timestamp":"1633138080.0","content":"I think it the answer is C. You would need the SAML idp per account. See link: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html","poster":"Zek","comment_id":"59791"},{"poster":"Scunningham99","content":"agree with c","timestamp":"1632334980.0","upvote_count":"2","comment_id":"28115"}],"answer":"A","answer_description":"","answers_community":["A (75%)","C (25%)"],"question_id":506,"question_images":[],"choices":{"D":"Perform a thorough analysis of the user base and create AWS IAM users accounts that have the necessary permissions. Set up a process to provision and deprovision accounts based on data in the on-premises solution.","B":"Deploy a common set of AWS IAM users, groups, roles, and policies in all of the AWS accounts using AWS Organizations. Implement federation between the on-premises identity provider and the AWS accounts.","C":"Use AWS Organizations in a centralized account to define service control policies (SCPs). Create a SAML-based identity management provider in each account and map users in the on-premises groups to AWS IAM roles.","A":"Define AWS IAM roles based on the functional responsibilities of the users in a central account. Create a SAML-based identity management provider. Map users in the on-premises groups to IAM roles. Establish trust relationships between the other accounts and the central account."},"url":"https://www.examtopics.com/discussions/amazon/view/6235-exam-aws-certified-solutions-architect-professional-topic-1/","exam_id":32,"timestamp":"2019-10-08 01:03:00","unix_timestamp":1570489380},{"id":"L7nNetxhuXFWDF8qncXv","question_text":"A large company has increased its utilization of AWS over time in an unmanaged way. As such, they have a large number of independent AWS accounts across different business units, projects, and environments. The company has created a Cloud Center of Excellence team, which is responsible for managing all aspects of the AWS Cloud, including their AWS accounts.\nWhich of the following should the Cloud Center of Excellence team do to BEST address their requirements in a centralized way? (Choose two.)","choices":{"A":"Control all AWS account root user credentials. Assign AWS IAM users in the account of each user who needs to access AWS resources. Follow the policy of least privilege in assigning permissions to each user.","D":"Set up AWS Organizations. Enable consolidated billing, and link all existing AWS accounts to a master billing account. Tag all AWS resources with details about the business unit, project and environment. Analyze Cost and Usage reports using tools such as Amazon Athena and Amazon QuickSight, to collect billing details by business unit.","C":"Use the AWS Marketplace to choose and deploy a Cost Management tool. Tag all AWS resources with details about the business unit, project, and environment. Send all AWS Cost and Usage reports for the AWS accounts to this tool for analysis.","B":"Tag all AWS resources with details about the business unit, project, and environment. Send all AWS Cost and Usage reports to a central Amazon S3 bucket, and use tools such as Amazon Athena and Amazon QuickSight to collect billing details by business unit.","E":"Using a master AWS account, create IAM users within the master account. Define IAM roles in the other AWS accounts, which cover each of the required functions in the account. Follow the policy of least privilege in assigning permissions to each role, then enable the IAM users to assume the roles that they need to use."},"discussion":[{"poster":"ajeeshb","timestamp":"1632094500.0","content":"Answers: DE\nE because it manages IAM users centrally and uses roles in other accounts to which the IAM user can switch. Option A says to create IAM users in all accounts which is not the best solution","comment_id":"309373","upvote_count":"22"},{"comment_id":"476756","upvote_count":"8","timestamp":"1636702500.0","content":"A & D are the right answers. \nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_best-practices_mgmt-acct.html\nWe recommend that you use the management account and its users and roles only for tasks that can be performed only by that account. Store all of your AWS resources in other AWS accounts in the organization and keep them out of the management account... Therefore E is incorrect","comments":[{"comments":[{"timestamp":"1658719140.0","comment_id":"636338","comments":[{"content":"Creating all IAM Users in the main AWS Organization accounts and having no IAM Users in the sub-accounts is the consequence of what you are saying (E). That means only IAM Roles in the sub-accounts. That seems very counter intuitive. You cannot even have users and teams manage their own account and login to the Console as an IAM User in that case. For me, central management is more that you at least control all the sub-accounts at the Root level, bring them under an Organization, and can then enforce security settings, SCPs, Service Catalog etc. That is more A than E.","comment_id":"648115","poster":"gerhardbl","timestamp":"1660746780.0","upvote_count":"1"}],"poster":"cen007","content":"Read the question carefully.\nThe requirement is the central account wants to manage all ASPECT OF THE CLOUD INCLUDING THE AWS ACCOUNTS.\nTherefore ROLES will be created in the child accounts that the master will assume.\nSo D & E is the correct answer.","upvote_count":"1"}],"upvote_count":"1","timestamp":"1642836540.0","content":"Agree on this - A& D","comment_id":"529669","poster":"tkanmani76"},{"comment_id":"626053","timestamp":"1656752700.0","poster":"aandc","upvote_count":"1","content":"agree on A D"}],"poster":"nsei"},{"timestamp":"1688319660.0","poster":"SkyZeroZx","upvote_count":"1","content":"Selected Answer: DE\nAnswers: DE\nA-> It says to create IAM users in each account which is not a central management.","comment_id":"941129"},{"timestamp":"1681690500.0","poster":"romiao106","content":"E is actually inverted. It says to create user in central account, roles in other accounts. Then you have to use users to assume roles. That would require everyone to use the central account to assume roles?","comment_id":"872247","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: DE\nAnswers: DE\nA-> It says to create IAM users in each account which is not a central management.","comment_id":"759978","poster":"evargasbrz","timestamp":"1672239720.0"},{"comment_id":"713239","content":"100% D and E , I'm an architect and this is standard","upvote_count":"3","timestamp":"1667845860.0","comments":[{"upvote_count":"4","poster":"dmscountera","timestamp":"1668083100.0","comment_id":"715211","content":"GTFO mr \"architect\""}],"poster":"mrgreatness"},{"poster":"Jonfernz","comment_id":"690619","timestamp":"1665363600.0","upvote_count":"2","content":"Selected Answer: DE\ni do this only a daily basis. it's definitely D, E"},{"content":"Selected Answer: DE\nWould go with D & E","poster":"EgaHa","comment_id":"679774","upvote_count":"1","timestamp":"1664197800.0"},{"content":"Selected Answer: AD\nA, D\n\nE is wrong, it is a bad practice to use the master account for creating users.","poster":"epomatti","comment_id":"661595","timestamp":"1662491640.0","upvote_count":"1"},{"comment_id":"538346","content":"Selected Answer: DE\nD & E. AWS Org & IAM Roles","upvote_count":"1","timestamp":"1643770200.0","poster":"zoliv"},{"comment_id":"494669","timestamp":"1638738180.0","content":"D & E makes most sense.","upvote_count":"1","poster":"AzureDP900"},{"timestamp":"1636048980.0","comment_id":"450745","poster":"AWSum1","content":"DE \nCentrally manage. The wording of the other rotations being \"each account\" shows no central management","upvote_count":"1"},{"upvote_count":"1","comment_id":"416374","timestamp":"1635942540.0","content":"D and E","poster":"DanShone"},{"poster":"WhyIronMan","upvote_count":"2","timestamp":"1634741880.0","content":"I'll go with D,E","comment_id":"411552"},{"poster":"Kopa","upvote_count":"1","content":"Im also for DE","comment_id":"401648","timestamp":"1634164200.0"},{"timestamp":"1633416360.0","poster":"Waiweng","comment_id":"348547","upvote_count":"3","content":"D and E"},{"timestamp":"1632953940.0","comment_id":"346865","upvote_count":"1","content":"DE is the correct answer.","poster":"blackgamer"},{"upvote_count":"1","comment_id":"330288","timestamp":"1632854640.0","poster":"KnightVictor","content":"Would go with D & E"},{"upvote_count":"2","poster":"CarisB","comment_id":"327308","content":"D and E in my opinion. A is not really a centralized solution.","timestamp":"1632746820.0"},{"timestamp":"1632340920.0","content":"D & E makes most sense.","comment_id":"317772","upvote_count":"1","poster":"nitinz"}],"question_id":507,"answer":"DE","question_images":[],"timestamp":"2021-03-13 04:34:00","answer_images":[],"exam_id":32,"topic":"1","answers_community":["DE (86%)","14%"],"answer_ET":"DE","url":"https://www.examtopics.com/discussions/amazon/view/46825-exam-aws-certified-solutions-architect-professional-topic-1/","answer_description":"","isMC":true,"unix_timestamp":1615606440},{"id":"ZuBMgZReIEQnaTMtW3it","isMC":true,"question_images":[],"timestamp":"2019-10-03 14:45:00","answers_community":["D (100%)"],"unix_timestamp":1570106700,"exam_id":32,"choices":{"D":"Establish two AWS Direct Connect connections from the company headquarters to an AWS Region. Use the company WAN to send traffic over a DX connection. Use Direct Connect Gateway to access data in other AWS Regions.","C":"Establish two AWS Direct Connect connections from the company headquarters to an AWS Region. Use the company WAN to send traffic over a DX connection. Use an AWS transit VPC solution to access data in other AWS Regions.","A":"Establish AWS Direct Connect connections from the company headquarters to all AWS Regions in use. Use the company WAN to send traffic over to the headquarters and then to the respective DX connection to access the data.","B":"Establish two AWS Direct Connect connections from the company headquarters to an AWS Region. Use the company WAN to send traffic over a DX connection. Use inter-region VPC peering to access the data in other AWS Regions."},"answer":"D","url":"https://www.examtopics.com/discussions/amazon/view/6069-exam-aws-certified-solutions-architect-professional-topic-1/","answer_images":[],"question_text":"To abide by industry regulations, a Solutions Architect must design a solution that will store a company's critical data in multiple public AWS Regions, including in the United States, where the company's headquarters is located. The Solutions Architect is required to provide access to the data stored in AWS to the company's global WAN network. The Security team mandates that no traffic accessing this data should traverse the public internet.\nHow should the Solutions Architect design a highly available solution that meets the requirements and is cost-effective?","answer_description":"Reference:\nhttps://aws.amazon.com/blogs/aws/new-aws-direct-connect-gateway-inter-region-vpc-access/","topic":"1","answer_ET":"D","discussion":[{"poster":"donathon","timestamp":"1632118320.0","comments":[{"timestamp":"1635104580.0","upvote_count":"1","content":"Agree on D","comment_id":"77132","poster":"Joeylee"},{"content":"Clearly explaination.","poster":"Kuro","upvote_count":"1","comment_id":"223312","timestamp":"1636011960.0"},{"timestamp":"1636176720.0","content":"Another argument is that there was no mention to have transit feature between VPCs, which is an extra reason to choose D over C (from apart being more cost-effective)","comment_id":"278431","poster":"shammous","upvote_count":"2"},{"poster":"DashL","timestamp":"1636236840.0","content":"As per aws announcement in Mar 2019 (https://aws.amazon.com/about-aws/whats-new/2019/03/announcing-multi-account-support-for-direct-connect-gateway/):\n\nWith the launch of multi-account support for Direct Connect gateway, you can associate up to 10 Amazon VPCs from multiple accounts with a Direct Connect gateway. The Amazon VPCs and the Direct Connect gateway must be owned by AWS Accounts that belong to the same AWS payer account ID.","upvote_count":"3","comment_id":"403524"}],"content":"D\nThis feature also allows you to connect to any of the participating VPCs from any Direct Connect location, further reducing your costs for making using AWS services on a cross-region basis.\nhttps://aws.amazon.com/blogs/aws/new-aws-direct-connect-gateway-inter-region-vpc-access/\nA: There is only a single DC and hence is not highly available.\nB: VPC peering means there are additional cost charges when data transfer between region. Also there is a 125 VPC peering limit. Data transferred across Inter-Region VPC Peering connections is charged at the standard inter-region data transfer rates. https://aws.amazon.com/about-aws/whats-new/2017/11/announcing-support-for-inter-region-vpc-peering/\nC: Similar to B.\nD: Remember one caveat which the question did not state is if there are multiple accounts: The VPCs that reference a particular Direct Connect Gateway must have IP address ranges that do not overlap. Today, the VPCs must all be in the same AWS account; we plan to make this more flexible in the future. https://aws.amazon.com/blogs/aws/new-aws-direct-connect-gateway-inter-region-vpc-access/","comment_id":"14187","upvote_count":"56"},{"content":"Question 144 \nA. Use Amazon CloudFront with Amazon ECS for hosting the website. Use AWS Secrets Manager for provide\nuser management and authentication functions. Use ECS Docker containers to build an API.\nB. Use Amazon Route 53 latency routing with an Application Load Balancer and AWS Fargate in different\nregions for hosting the website. use Amazon Cognito to provide user management and authentication\nfunctions. Use Amazon EKS containers.\nC. Use Amazon CloudFront with Amazon S3 for hosting static web resources. Use Amazon Cognito to provide\nuser management authentication functions. Use Amazon API Gateway with AWS Lambda to build an API.\nD. Use AWS Direct Connect with Amazon CloudFront and Amazon S3 for hosting static web resource. Use\nAmazon Cognito to provide user management authentication functions. Use AWS Lambda to build an API.\nCorrect Answer: C","poster":"bebo","upvote_count":"15","timestamp":"1632359220.0","comment_id":"16800"},{"poster":"HellGate","upvote_count":"1","comment_id":"572539","timestamp":"1647901380.0","content":"Selected Answer: D\nB, C, D are all right way... D > C > B\nD is the best answer."},{"poster":"GeniusMikeLiu","content":"why need two AWS Direct Connect connections?","comment_id":"531280","upvote_count":"2","timestamp":"1643026680.0","comments":[{"poster":"HellGate","timestamp":"1643715360.0","upvote_count":"2","content":"HA purpose","comment_id":"537800"}]},{"content":"D is right","timestamp":"1638738360.0","comment_id":"494673","poster":"AzureDP900","upvote_count":"1"},{"timestamp":"1636290240.0","poster":"student22","comment_id":"441707","upvote_count":"3","content":"D\nAWS region 1 --> VIF --> Direct Connect Gateway --> multiple VIF --> multiple AWS Regions"},{"upvote_count":"1","poster":"WhyIronMan","comment_id":"411557","content":"I'll go with D","timestamp":"1636258500.0"},{"comment_id":"348553","timestamp":"1636199700.0","content":"it's D","upvote_count":"1","poster":"Waiweng"},{"timestamp":"1636196400.0","content":"A: Doesn’t fulfill HA\nB: charges are implemented for both inbound and outbound peering\nC: charges are implemented for outbound only but solution only suitable for VPC transits purpose to overcome VPC peering mesh\nD: Correct answer to link multiple regional traffic","comment_id":"318673","upvote_count":"1","poster":"Pupu86"},{"poster":"bnagaraja9099","timestamp":"1636186200.0","comment_id":"286858","upvote_count":"1","content":"D\nhttps://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/aws-direct-connect-aws-transit-gateway.html"},{"timestamp":"1636184820.0","content":"D is correct","upvote_count":"1","poster":"Firststack","comment_id":"280085"},{"timestamp":"1636176840.0","poster":"Ebi","upvote_count":"3","content":"I go with D","comment_id":"279065"},{"content":"D\nSee the link for Direct Connect Gateway for multi-regions: https://aws.amazon.com/blogs/aws/new-aws-direct-connect-gateway-inter-region-vpc-access/","upvote_count":"1","poster":"MichaelHuang","timestamp":"1636138560.0","comment_id":"253624"},{"upvote_count":"1","poster":"Bulti","timestamp":"1636116240.0","content":"Answer is D","comment_id":"252442"},{"comments":[{"comment_id":"247029","content":"data is in the AWS public regions, so Direct connect Gateway can't be used. it should Transit VPC","comments":[{"comment_id":"276859","content":"You can create Public VIF between Direct Connect and Direct Connect Gateway. and access AWS public services like S3. Transit VPC works for VPN, which means IPSEC that work over the internet :)","poster":"rcher","upvote_count":"1","timestamp":"1636168740.0"}],"poster":"GopiSivanathan","timestamp":"1636114920.0","upvote_count":"2"}],"poster":"jackdryan","comment_id":"231258","content":"I'll go with D","upvote_count":"3","timestamp":"1636046760.0"},{"upvote_count":"1","content":"C, Transit VPC","timestamp":"1636025880.0","poster":"Edgecrusher77","comment_id":"229106"},{"upvote_count":"1","poster":"ipindado2020","timestamp":"1635957900.0","content":"A. Multiple DX connections very expensive: KO\nB. Transitive peering not allowed: KO. \nC. transit VPC: OK\nD. Direct Connect Gateway: OK \n\nAs for the additional costs of the transit VPC solution....\n D seems to be correct","comment_id":"183122"}],"question_id":508},{"id":"Pzg4n9zwBFdqxosn4X5z","question_text":"A company wants to manage the costs associated with a group of 20 applications that are infrequently used, but are still business-critical, by migrating to AWS.\nThe applications are a mix of Java and Node.js spread across different instance clusters. The company wants to minimize costs while standardizing by using a single deployment methodology. Most of the applications are part of month-end processing routines with a small number of concurrent users, but they are occasionally run at other times. Average application memory consumption is less than 1 GB, though some applications use as much as 2.5 GB of memory during peak processing. The most important application in the group is a billing report written in Java that accesses multiple data sources and often for several hours.\nWhich is the MOST cost-effective solution?","discussion":[{"content":"I will go with B, B makes more sense out of the others. All of these apps are begging to be containerised :)","timestamp":"1632621240.0","comment_id":"104820","comments":[{"comment_id":"460198","content":"Agree, ECS is the most cost-effective answer up there. Lambda would be great except that reporting app that runs for 2 hrs, which is a no go for Lambda with a max execution time of 900 seconds (15 mins): https://docs.aws.amazon.com/whitepapers/latest/serverless-architectures-lambda/timeout.html\n\nSide note: It's not an available choice, but I'd argue that since these apps are only sporadically used, Fargate would likely be even more cost effective than EC2-based ECS: https://aws.amazon.com/blogs/containers/theoretical-cost-optimization-by-amazon-ecs-launch-type-fargate-vs-ec2/","upvote_count":"2","timestamp":"1636087320.0","poster":"kirrim"}],"poster":"meenu2225","upvote_count":"23"},{"content":"https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.cloudwatch.html\nElastic Beanstalk automatically uses Amazon CloudWatch to help you monitor your application and environment status. You can navigate to the Amazon CloudWatch console to see your dashboard and get an overview of all of your resources as well as your alarms. You can also choose to view more metrics or add custom metrics.\n\nany other options do not have memory base scaling without cloudwatch agent","timestamp":"1673186160.0","poster":"maxh8086","upvote_count":"1","comment_id":"769483"},{"poster":"Sumit_Kumar","upvote_count":"2","timestamp":"1659708300.0","comment_id":"642999","content":"single deployment approach - elastic beanstalk"},{"timestamp":"1654847400.0","content":"Selected Answer: B\nits B, ECS with ec2 or spot instances","comment_id":"614391","poster":"foxrj21","upvote_count":"1"},{"content":"Selected Answer: B\nIt's B. No-brainer","poster":"bobsmith2000","comment_id":"581997","timestamp":"1649272620.0","upvote_count":"2"},{"comment_id":"577334","timestamp":"1648538460.0","poster":"Hasitha99","upvote_count":"2","content":"Based on the given answers,I will go with B."},{"comment_id":"535844","poster":"jyrajan69","timestamp":"1643502240.0","upvote_count":"2","content":"The key word is 'Most Cost Effective' so why no one looking at D, it says Reserved Instances which is designed to reduce costs, for me thats the answer.","comments":[{"comment_id":"567160","content":"D is incorrect because by purchasing RIs based on the Max value set in an ASG will for sure waste resources because you are paying for the extra capacity unused. As matter of fact, because ECS does not have any additional cost and can utilize the RIs if you choose EC2, B for sure is cheaper than D.","timestamp":"1647201300.0","upvote_count":"5","poster":"jason2009"}]},{"upvote_count":"3","comments":[{"poster":"user0001","timestamp":"1651863300.0","content":"see is right","comment_id":"597826","upvote_count":"1"}],"content":"C is what Amazon want you to use, B is what most architect will choose in real life.","comment_id":"520380","poster":"Duke_YU","timestamp":"1641750180.0"},{"upvote_count":"1","timestamp":"1638738480.0","content":"I'll go with B","comment_id":"494678","poster":"AzureDP900"},{"comments":[{"comment_id":"454729","upvote_count":"1","timestamp":"1636086780.0","poster":"tonikus","content":"hmmm, I guess I'm changing to B"}],"poster":"tonikus","content":"I think it's C based on \"...while standardizing by using a single deployment methodology.\"","timestamp":"1635721920.0","comment_id":"453962","upvote_count":"2"},{"upvote_count":"1","timestamp":"1635535920.0","content":"B. Microservice's question. ECS is for it.","comment_id":"449892","poster":"nodogoshi"},{"poster":"WhyIronMan","upvote_count":"2","content":"I'll go with B","comment_id":"411560","timestamp":"1635189360.0"},{"comment_id":"399210","content":"what does cost-effective means? does it relate to price or lead time? we are not sure abt it. \nI think the correct is C because B would take much effort to transform application to container type.","timestamp":"1635173700.0","upvote_count":"2","poster":"tuananhngo"},{"comment_id":"361577","timestamp":"1634714700.0","upvote_count":"1","poster":"kpcert","comments":[{"poster":"StanM","upvote_count":"8","comment_id":"371368","timestamp":"1634776980.0","content":"because one of the applications can run up to several hours while lambda can run only up to 15 mins. We could think of making an exception for this application and run everything else as lambda, but the question insists on standardizing."}],"content":"Why not use the Lambda? The question has the follwing keywords\n1. Node.js and Java \n2. Infrequent Usage and memory requirement is max 2.5 GB\n3. Less concurrency \n4. Need Cost-effective solution"},{"upvote_count":"4","comment_id":"348554","content":"it's B fof cost effectiveness","timestamp":"1634671860.0","poster":"Waiweng"},{"comment_id":"346867","poster":"blackgamer","content":"B is the correct answer because it is more cost effective.","timestamp":"1634613240.0","upvote_count":"1"},{"poster":"Kian1","content":"going with B","comment_id":"291820","timestamp":"1634447820.0","upvote_count":"2"},{"content":"B and C both seem correct, I will go with B","comment_id":"278317","timestamp":"1634325960.0","poster":"Ebi","upvote_count":"2"},{"comment_id":"243882","timestamp":"1634291580.0","poster":"T14102020","content":"Correct is B. ECS is most cheap","upvote_count":"1"},{"poster":"bbnbnuyh","timestamp":"1634085660.0","upvote_count":"1","comment_id":"239673","content":"Does answer B support multiple data sources integration and single deployment strategy?"},{"content":"I'll go with B","upvote_count":"2","poster":"jackdryan","comment_id":"231549","timestamp":"1633818120.0"},{"content":"B. ECS will be more flexible.","upvote_count":"1","comment_id":"209723","timestamp":"1633723980.0","poster":"CYL"},{"poster":"ipindado2020","content":"b for sure","upvote_count":"1","timestamp":"1633275360.0","comment_id":"183191"},{"comments":[{"timestamp":"1633406520.0","poster":"Gmail78","comment_id":"200081","content":"Q139 now","upvote_count":"2"}],"upvote_count":"2","content":"B more likely\nDup of Q141","timestamp":"1633158660.0","comment_id":"133398","poster":"NikkyDicky"},{"comment_id":"68964","content":"This is a replication of question #141Topic2","timestamp":"1632529140.0","poster":"LunchTime","upvote_count":"4"},{"comment_id":"65917","content":"My explanation is: \"a group of 20 applications that are critical, by migrating to AWS\". So if you choose ECS you would have to handle these applications migration on your own ... So, I guess the best choice is to use Beanstalk, response C.","timestamp":"1632222240.0","poster":"virtual","comments":[{"content":"And having at least 20 instances in cheaper than using ECS ?","upvote_count":"3","timestamp":"1632581280.0","poster":"AShahine21","comment_id":"94878"}],"upvote_count":"1"},{"timestamp":"1632185340.0","upvote_count":"1","comment_id":"64661","content":"Why not B?","poster":"blckshadoq"}],"choices":{"A":"Deploy a separate AWS Lambda function for each application. Use AWS CloudTrail logs and Amazon CloudWatch alarms to verify completion of critical jobs.","C":"Deploy AWS Elastic Beanstalk for each application with Auto Scaling to ensure that all requests have sufficient resources. Monitor each AWS Elastic Beanstalk deployment by using CloudWatch alarms.","D":"Deploy a new Amazon EC2 instance cluster that co-hosts all applications by using EC2 Auto Scaling and Application Load Balancers. Scale cluster size based on a custom metric set on instance memory utilization. Purchase 3-year Reserved Instance reservations equal to the GroupMaxSize parameter of the Auto Scaling group.","B":"Deploy Amazon ECS containers on Amazon EC2 with Auto Scaling configured for memory utilization of 75%. Deploy an ECS task for each application being migrated with ECS task scaling. Monitor services and hosts by using Amazon CloudWatch."},"question_id":509,"answer":"B","question_images":[],"timestamp":"2020-03-16 11:56:00","answer_images":[],"exam_id":32,"topic":"1","answers_community":["B (100%)"],"answer_ET":"B","url":"https://www.examtopics.com/discussions/amazon/view/16736-exam-aws-certified-solutions-architect-professional-topic-1/","answer_description":"","isMC":true,"unix_timestamp":1584356160},{"id":"VvGgbcQRntjUWWAfOf1M","discussion":[{"content":"A. B.\npossible reasons for the \"failing to successfully download some, but not all of their updates\" requirement.","timestamp":"1632415200.0","upvote_count":"6","comment_id":"325509","poster":"cldy"},{"timestamp":"1723751340.0","upvote_count":"1","poster":"amministrazione","comment_id":"1266648","content":"A. You are running the proxy on an undersized EC2 instance type so network throughput is not sufficient for all instances to download their updates in time.\nD. You have not allocated enough storage to the EC2 instance running the proxy so the network buffer is filling up, causing some requests to fail."},{"upvote_count":"2","content":"Selected Answer: AD\nB is not plausible, because no-one uses NAT instances anymore, NAT Gateway is what is used nowadays. C and E simple don't make sense, so the only possible ones are A and D.","poster":"JPA210","comment_id":"1143327","timestamp":"1707310860.0"},{"poster":"shammous","comment_id":"1116468","content":"Selected Answer: AD\nThere is no mention of NAT instance so I would rule answer B out. the only plausible answer involving the proxy is C.","upvote_count":"1","timestamp":"1704699300.0"},{"comment_id":"625640","timestamp":"1656662580.0","poster":"TechX","upvote_count":"1","content":"Selected Answer: AB\nAnswer: AB\nExplanation: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-ec2-config.html"},{"upvote_count":"1","comment_id":"508936","poster":"Juks","timestamp":"1640400120.0","content":"A and B\nhttps://acloud.guru/forums/aws-certified-solutions-architect-professional/discussion/-KGXk5Feqh4hQm1Bjt9U/tricky_network_question"},{"upvote_count":"1","timestamp":"1635954000.0","poster":"01037","content":"I'll choose A&B.\nD looks like a correct answer, but I think it depends on the proxy software and nothing is mentioned about it.","comment_id":"348694"},{"comments":[{"content":"E is incorrect, otherwise all failed.","poster":"sTeVe86","upvote_count":"1","comment_id":"547827","timestamp":"1644937740.0"}],"poster":"Malcnorth59","comment_id":"340756","content":"A. E. Is the answer","timestamp":"1635857040.0","upvote_count":"1"},{"content":"AD is the answer","comment_id":"329198","poster":"kenkool","timestamp":"1632832680.0","upvote_count":"2"}],"question_id":510,"answer_images":[],"answers_community":["AD (75%)","AB (25%)"],"unix_timestamp":1617252780,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/48613-exam-aws-certified-solutions-architect-professional-topic-1/","answer_ET":"AD","question_images":[],"topic":"1","question_text":"You are implementing a URL whitelisting system for a company that wants to restrict outbound HTTP'S connections to specific domains from their EC2-hosted applications. You deploy a single EC2 instance running proxy software and configure It to accept traffic from all subnets and EC2 instances in the VPC. You configure the proxy to only pass through traffic to domains that you define in its whitelist configuration. You have a nightly maintenance window or 10 minutes where all instances fetch new software updates. Each update Is about 200MB In size and there are 500 instances In the VPC that routinely fetch updates. After a few days you notice that some machines are failing to successfully download some, but not all of their updates within the maintenance window. The download\nURLs used for these updates are correctly listed in the proxy's whitelist configuration and you are able to access them manually using a web browser on the instances.\nWhat might be happening? (Choose two.)","answer":"AD","answer_description":"","timestamp":"2021-04-01 06:53:00","exam_id":32,"choices":{"C":"The route table for the subnets containing the affected EC2 instances is not configured to direct network traffic for the software update locations to the proxy.","E":"You are running the proxy in a public subnet but have not allocated enough EIPs to support the needed network throughput through the Internet Gateway (IGW).","A":"You are running the proxy on an undersized EC2 instance type so network throughput is not sufficient for all instances to download their updates in time.","D":"You have not allocated enough storage to the EC2 instance running the proxy so the network buffer is filling up, causing some requests to fail.","B":"You are running the proxy on a sufficiently-sized EC2 instance in a private subnet and its network throughput is being throttled by a NAT running on an undersized EC2 instance."}}],"exam":{"isImplemented":true,"lastUpdated":"11 Apr 2025","id":32,"numberOfQuestions":1019,"name":"AWS Certified Solutions Architect - Professional","provider":"Amazon","isMCOnly":false,"isBeta":false},"currentPage":102},"__N_SSP":true}