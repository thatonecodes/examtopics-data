{"pageProps":{"questions":[{"id":"UFhIq8AyXUBc14b42MVE","exam_id":23,"answer_ET":"D","answers_community":["D (74%)","B (23%)","3%"],"topic":"1","answer":"D","question_text":"A DevOps engineer has developed an AWS Lambda function. The Lambda function starts an AWS CloudFormation drift detection operation on all supported resources for a specific CloudFormation stack. The Lambda function then exits its invocation.\n\nThe DevOps engineer has created an Amazon EventBridge scheduled rule that invokes the Lambda function every hour. An Amazon Simple Notification Service (Amazon SNS) topic already exists in the AWS account. The DevOps engineer has subscribed to the SNS topic to receive notifications.\n\nThe DevOps engineer needs to receive a notification as soon as possible when drift is detected in this specific stack configuration.\n\nWhich solution will meet these requirements?","answer_images":[],"choices":{"A":"Configure the existing EventBridge rule to also target the SNS topic. Configure an SNS subscription filter policy to match the CloudFormation stack. Attach the subscription filter policy to the SNS topic.","D":"Configure AWS Config in the account. Use the cloudformation-stack-drift-detection-check managed rule. Create a second EventBridge rule that reacts to a compliance change event for the CloudFormation stack. Configure the SNS topic as a target of the second EventBridge rule.","C":"Configure Amazon GuardDuty in the account with drift detection for all CloudFormation stacks. Create a second EventBridge rule that reacts to the GuardDuty drift detection event finding for the specific CloudFormation stack. Configure the SNS topic as a target of the second EventBridge rule.","B":"Create a second Lambda function to query the CloudFormation API for the drift detection results for the stack. Configure the second Lambda function to publish a message to the SNS topic if drift is detected. Adjust the existing EventBridge rule to also target the second Lambda function."},"question_id":121,"discussion":[{"poster":"Nano803","upvote_count":"7","comments":[{"comment_id":"1244615","timestamp":"1720483800.0","content":"Info gleaned from following the link(++):\n\ncloudformation-stack-drift-detection-check\nAWS Config rule that checks if the actual configuration of a AWS CloudFormation (AWS CloudFormation) stack differs, or has drifted, from the expected configuration. \n\nMaximumExecutionFrequency\nThe maximum frequency with which AWS Config runs evaluations for a rule.\n\nExample stack to detect and notify on drift:\n[...]\nMaximumExecutionFrequency:\n Description: \"The maximum frequency with which drift in CloudFormation stacks need to be evaluated (default - One_Hour)\"\n Type: \"String\"\n Default: \"One_Hour\"\n AllowedValues: [\"One_Hour\",\"Three_Hours\",\"Six_Hours\",\"Twelve_Hours\",\"TwentyFour_Hours\"]\n[...]","poster":"Gomer","upvote_count":"1"}],"content":"Selected Answer: D\nI recommend checking out this blog which utilizes AWS Config and discusses Edenbridge. Here is the link: https://aws.amazon.com/blogs/mt/implementing-an-alarm-to-automatically-detect-drift-in-aws-cloudformation-stacks/\"","timestamp":"1708664520.0","comment_id":"1156919"},{"upvote_count":"5","poster":"kyuhuck","timestamp":"1708330200.0","content":"Selected Answer: D\nGiven the options and the requirement for immediate notification upon drift detection, Option D is the most appropriate solution. It leverages AWS Config to continuously monitor and evaluate the configurations of AWS resources, including CloudFormation stacks. When AWS Config detects a drift from the desired configuration, it can trigger an EventBridge rule, which in turn can notify the interested parties via the SNS topic. This approach does not require additional custom logic to check for drift results, as AWS Config handles the evaluation and notification process based on configuration changes.","comment_id":"1153772"},{"comments":[{"upvote_count":"1","content":"This approach introduces additional complexity by adding another Lambda function to query and check for drift manually. Who is going to trigger this Lambda function? Even if you do it on a interval, it defeats the purpose of getting notified immediately. \n\nAWS Config provides a more straightforward and managed way to detect and notify on drift with a managed rule, cloudformation-stack-drift-detection-check.\nhttps://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-drift-detection-check.html","poster":"chinchin97","comment_id":"1274937","timestamp":"1724996580.0"}],"upvote_count":"3","comment_id":"1261064","content":"Selected Answer: B\nThe solution that will meet the requirements of receiving a notification as soon as possible when drift is detected in the specific CloudFormation stack configuration is: \n\nB. Create a second Lambda function to query the CloudFormation API for the drift detection results for the stack. Configure the second Lambda function to publish a message to the SNS topic if drift is detected. Adjust the existing EventBridge rule to also target the second Lambda function.\n\nOption D (Using AWS Config) would introduce additional complexity and potential delays, as AWS Config periodically evaluates resource configurations and may not provide immediate notifications upon drift detection.\n\nBy creating a separate Lambda function dedicated to monitoring drift detection results and publishing notifications to the existing SNS topic, you can ensure timely and reliable notifications while maintaining a modular and scalable architecture.","poster":"iulian0585","timestamp":"1722860820.0"},{"poster":"dkp","timestamp":"1712976720.0","content":"Selected Answer: D\nanswer D\nAWS Config Integration: AWS Config is specifically designed to monitor and detect configuration changes and drifts in AWS resources, including CloudFormation stacks. Using AWS Config's built-in cloudformation-stack-drift-detection-check managed rule ensures comprehensive and reliable drift detection for CloudFormation stacks.\n\nEvent-Driven Architecture: Creating an EventBridge rule that reacts to a compliance change event for the CloudFormation stack allows you to trigger an alert as soon as drift is detected. This event-driven approach ensures timely detection and alerting for CloudFormation stack drift.\n\nSNS Notification: By configuring the SNS topic as a target of the EventBridge rule, you can easily send notifications/alerts to various endpoints, including email, SMS, or other AWS services, ensuring immediate alerting when drift is detected.","comment_id":"1194621","upvote_count":"4"},{"comment_id":"1186070","timestamp":"1711799100.0","poster":"WhyIronMan","content":"Selected Answer: D\nD, Use the cloudformation-stack-drift-detection-check managed rule\nB uses scheduled rule will not notify as soon as possible as it runs hourly","upvote_count":"4"},{"comment_id":"1174874","content":"Selected Answer: D\nD woudl be suitable - https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-drift-detection-check.html\nB would not work as it would still only be triggered once per hour as is using the same event bridge rule","poster":"DanShone","timestamp":"1710580740.0","upvote_count":"5"},{"upvote_count":"2","comment_id":"1173262","poster":"Shasha1","content":"D\nrefer this: https://docs.aws.amazon.com/config/latest/developerguide/cloudformation-stack-drift-detection-check.html","timestamp":"1710407940.0"},{"poster":"dzn","comments":[{"timestamp":"1709994360.0","content":"Any reference to 1 hour limit, ?","poster":"sejar","upvote_count":"1","comment_id":"1169550"}],"comment_id":"1167069","content":"Selected Answer: B\nThe minimum interval for the `cloudformation-stack-drift-detection-check` managed rule in AWS config is 1 hour and does not meet the following requirements.\n`as soon as possible when drift is detected`","upvote_count":"1","timestamp":"1709719620.0"},{"comment_id":"1164624","content":"Selected Answer: B\nB is a suitable solution for meeting the requirements:\nThis solution provides a more direct and responsive approach.\nThe other options involve additional services like GuardDuty (Option C), which is not designed for CloudFormation drift detection, or AWS Config with managed rules (Option D), which may introduce unnecessary complexity for this specific scenario. Option A doesn't provide a straightforward way to react to drift detection events.","poster":"fdoxxx","upvote_count":"2","timestamp":"1709457000.0"},{"content":"Selected Answer: A\nLeverages existing infrastructure: This approach utilizes the existing EventBridge rule and SNS topic, avoiding the need for additional resources or complex configurations.\nImmediate notification: Since the EventBridge rule already triggers the Lambda function every hour, adding the SNS topic as a target ensures drift detection results are published directly to the topic for immediate notification.\nFiltering for specific stack: Implementing an SNS subscription filter policy ensures you only receive notifications for the specific CloudFormation stack you're interested in, avoiding irrelevant noise.","timestamp":"1707848280.0","upvote_count":"1","poster":"Ramdi1","comment_id":"1149457","comments":[{"upvote_count":"1","poster":"Ramdi1","comment_id":"1149458","timestamp":"1707848340.0","content":"B: Introduces an additional Lambda function and complexity, and requires polling for drift status, possibly delaying notification compared to real-time detection.\nC: While GuardDuty offers centralized drift detection, setting up a separate EventBridge rule and relying on event findings adds extra steps and might not be as timely as direct notification from the Lambda function.\nD: Although Config's cloudformation-stack-drift-detection-check rule identifies drift, triggering an EventBridge rule on compliance changes adds another layer of complexity and might not offer real-time notification like option A."}]},{"poster":"thanhnv142","comment_id":"1148286","content":"Selected Answer: B\nB: is correct\nA: SNS topic would be trigger consistenly by the existing evenbridge, so this is incorrect\nC: Guarduty is for threat detection, not this\nD: irrelevant, the question requires using ACF drif detection, not AWS config for drift detection","timestamp":"1707752700.0","upvote_count":"1"},{"poster":"Chelseajcole","timestamp":"1707331320.0","upvote_count":"2","comment_id":"1143674","content":"D. AWS Config"},{"comment_id":"1143503","content":"Selected Answer: B\nB is the most appropriate solution for this scenario.\n\nA is incorrect because although it involves configuring the existing EventBridge rule to target the SNS topic and using an SNS subscription filter policy, it does not involve querying the CloudFormation API for drift detection results.\n\nC is incorrect because it involves using Amazon GuardDuty, which is not specifically designed for CloudFormation drift detection.\n\nD is incorrect because although it involves using AWS Config and EventBridge to react to compliance change events, it does not directly address CloudFormation drift detection.\n\nWith CloudWatch Events (now a part of EventBridge) https://aws.amazon.com/fr/blogs/mt/implement-automatic-drift-remediation-for-aws-cloudformation-using-amazon-cloudwatch-and-aws-lambda/","timestamp":"1707322680.0","upvote_count":"2","poster":"Arnaud92"},{"poster":"Spavanko","comment_id":"1142464","upvote_count":"4","content":"Selected Answer: D\nB is wrong, you can not query the CloudFormation API","timestamp":"1707244020.0"}],"question_images":[],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/133084-exam-aws-certified-devops-engineer-professional-dop-c02/","isMC":true,"timestamp":"2024-02-06 19:27:00","unix_timestamp":1707244020},{"id":"4qO9kI8oOLBMWTZlye6V","question_text":"A company has deployed a complex container-based workload on AWS. The workload uses Amazon Managed Service for Prometheus for monitoring. The workload runs in an Amazon\nElastic Kubernetes Service (Amazon EKS) cluster in an AWS account.\n\nThe company’s DevOps team wants to receive workload alerts by using the company’s Amazon Simple Notification Service (Amazon SNS) topic. The SNS topic is in the same AWS account as the EKS cluster.\n\nWhich combination of steps will meet these requirements? (Choose three.)","answer":"BCD","question_id":122,"answer_description":"","unix_timestamp":1707244260,"topic":"1","choices":{"C":"Create an alert manager configuration for the SNS topic.","B":"Create an alerting rule that checks the availability of each of the workload’s containers.","F":"Create an OpenID Connect (OIDC) provider for the EKS cluster. Create a cluster service account. Grant the account the sns:Publish permission and the sns:GetTopicAttributes permission by using an IAM role.","D":"Modify the access policy of the SNS topic. Grant the aps.amazonaws.com service principal the sns:Publish permission and the sns:GetTopicAttributes permission for the SNS topic.","E":"Modify the IAM role that Amazon Managed Service for Prometheus uses. Grant the role the sns:Publish permission and the sns:GetTopicAttributes permission for the SNS topic.","A":"Use the Amazon Managed Service for Prometheus remote write URL to send alerts to the SNS topic"},"exam_id":23,"answer_ET":"BCD","answer_images":[],"isMC":true,"answers_community":["BCD (73%)","BCE (18%)","4%"],"url":"https://www.examtopics.com/discussions/amazon/view/133085-exam-aws-certified-devops-engineer-professional-dop-c02/","timestamp":"2024-02-06 19:31:00","question_images":[],"discussion":[{"content":"Selected Answer: BCD\nhttps://docs.aws.amazon.com/prometheus/latest/userguide/Troubleshooting-alerting-no-policy.html","poster":"xdkonorek2","timestamp":"1719068940.0","comment_id":"1235458","upvote_count":"5"},{"poster":"Gomer","timestamp":"1720493460.0","content":"Selected Answer: BCD\nB:(YES) Steps towards \"configuring rules and the alert manager in Amazon Managed Service for Prometheus via the AWS management console.\"\n\"define an alerting rule that causes the Alert Manager to send a notification if a certain condition (defined in expr) holds true for a specified time period (for).\"\ncat << EOF > rules.yaml\ngroups:\n[...]\n rules:\n - alert: metric:alerting_rule\n expr: rate(adot_test_counter0[5m]) > 0.014\n for: 5m\nEOF\n\nC:(YES) Add \"SNS receiver to\" \"alert manager configuration\" using ARN of \"SNS topic\"(Q208.5)\n\nD:(YES) \"Give Amazon Managed Service for Prometheus permission to send messages to\" SNS\n\"Choose Access policy and add the following policy statement to the existing policy.\"\n[...]\n \"Principal\": {\n \"Service\": \"aps.amazonaws.com\"\n },\n \"Action\": [\n \"sns:Publish\",\n \"sns:GetTopicAttributes\"","comments":[{"timestamp":"1720493520.0","content":"https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-config.html\nhttps://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html\nhttps://aws.amazon.com/blogs/mt/amazon-managed-service-for-prometheus-is-now-generally-available/","poster":"Gomer","comment_id":"1244655","upvote_count":"1"}],"comment_id":"1244654","upvote_count":"5"},{"poster":"teo2157","content":"Selected Answer: BCD\nhttps://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver.html","timestamp":"1733839980.0","comment_id":"1324607","upvote_count":"2"},{"comment_id":"1271658","poster":"seetpt","content":"I think BCD is true","upvote_count":"1","timestamp":"1724502000.0"},{"poster":"[Removed]","comment_id":"1269460","timestamp":"1724157660.0","content":"Selected Answer: BCD\nBCD for me","upvote_count":"3"},{"poster":"jamesf","comment_id":"1258057","timestamp":"1722330960.0","upvote_count":"4","content":"Selected Answer: BCD\nBCD\nFor D as You must give Amazon Managed Service for Prometheus permission to send messages to your Amazon SNS topic. The following policy statement will give that permission. ...\n https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html"},{"content":"Selected Answer: BCD\nAgree with BCD","timestamp":"1720666740.0","comment_id":"1245848","upvote_count":"4","poster":"trungtd"},{"timestamp":"1719672720.0","upvote_count":"4","content":"Selected Answer: BCD\nBCD is answer","poster":"KaranNishad","comment_id":"1239332"},{"upvote_count":"5","comment_id":"1211016","comments":[{"content":"https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html Agree with BCD","poster":"vn_thanhtung","upvote_count":"2","comment_id":"1214881","timestamp":"1716289500.0"}],"poster":"that1guy","timestamp":"1715623920.0","content":"Selected Answer: BCD\nB, C, D, you need to grant the AMP Workspace access to the SQS queue via the SQS resource policy."},{"upvote_count":"1","comment_id":"1205546","content":"Selected Answer: BCE\nBCE for me","timestamp":"1714654560.0","poster":"seetpt"},{"comment_id":"1202705","comments":[{"content":"This is incorrect. This is for users/tools to manage alerts, not to publish to SQS from AMP.","poster":"that1guy","comment_id":"1211014","upvote_count":"1","timestamp":"1715623800.0"}],"content":"Selected Answer: BCE\nAmazon Managed Service for Prometheus uses an IAM role to assume permissions, not a service principal. https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-IAM-permissions.html","poster":"c3518fc","upvote_count":"2","timestamp":"1714151100.0"},{"upvote_count":"5","comment_id":"1194629","content":"Selected Answer: BCD\nill go with bcd","poster":"dkp","timestamp":"1712978880.0"},{"comment_id":"1186068","poster":"WhyIronMan","upvote_count":"5","content":"Selected Answer: BCD\nB,C,D.\nThere is no way to exclude D, as it is really necessary as per all AWS documentations.\nYou can be in doubt of all the others, but not D","timestamp":"1711798920.0"},{"content":"Selected Answer: BCE\nI'll go with BC & E. Im convinced that the Prometheus service role will need permissions added to push messages to SNS topic","comment_id":"1181340","poster":"CloudHandsOn","timestamp":"1711260180.0","upvote_count":"4"},{"timestamp":"1710872700.0","content":"Selected Answer: BCE\nhttps://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alert-manager.html","upvote_count":"2","comment_id":"1177614","poster":"ogerber"},{"upvote_count":"3","timestamp":"1710700080.0","comment_id":"1176014","content":"Selected Answer: BCD\nB: https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-APIReference-CreateAlertManagerAlerts.html\nC: https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html\nD: https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html","poster":"L1_"},{"content":"Selected Answer: BCD\nBCD Makes the most sense from the docs \nhttps://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html","upvote_count":"4","comment_id":"1174869","timestamp":"1710579600.0","poster":"DanShone"},{"timestamp":"1710409320.0","comment_id":"1173291","content":"BCD\nAccording to this reference D is for sure : https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html","poster":"Shasha1","upvote_count":"1"},{"comment_id":"1164671","upvote_count":"1","content":"Selected Answer: ADE\nUse the Amazon Managed Service for Prometheus remote write URL: You can configure Prometheus to send alerts to an external service, such as an SNS topic, by using the remote write URL. This URL can be obtained from Amazon Managed Service for Prometheus.\nModify the access policy of the SNS topic: Grant the aps.amazonaws.com service principal the necessary permissions (sns:Publish and sns:GetTopicAttributes) to publish to the SNS topic and get its attributes. This allows Amazon Managed Service for Prometheus to interact with the SNS topic.\nModify the IAM role that Amazon Managed Service for Prometheus uses: Grant the IAM role associated with Amazon Managed Service for Prometheus the necessary permissions (sns:Publish and sns:GetTopicAttributes) to interact with the SNS topic.\nOptions B, C, and F are not directly related to integrating Amazon Managed Service for Prometheus with Amazon SNS","poster":"fdoxxx","timestamp":"1709459280.0"},{"poster":"Jonalb","timestamp":"1709280180.0","comment_id":"1163318","upvote_count":"1","content":"Selected Answer: BCF\nB. Create an alerting rule that checks the availability of each of the workload’s containers.\nC/F. Given the options and AWS services' functionalities, a direct integration approach as described is not straightforward. However, understanding the need for configuration and permission settings, a combination of creating alerting rules (B) and configuring permissions correctly either through IAM roles or service accounts (F) seems most relevant. Implementing a custom solution or using third-party tools that can act as an intermediary might be necessary.\nF. Create an OpenID Connect (OIDC) provider for the EKS cluster and configure permissions appropriately, which is a fundamental step in setting up Kubernetes services to interact with AWS services securely."},{"timestamp":"1709280120.0","poster":"Jonalb","comment_id":"1163317","upvote_count":"1","content":"Answer:BCF"},{"poster":"Diego1414","timestamp":"1708987680.0","content":"Selected Answer: BCD\nAnswer: BCD – Create Alert manager, create alert rule, modify access policy \nhttps://docs.aws.amazon.com/prometheus/latest/userguide/AMP-alertmanager-receiver-AMPpermission.html","upvote_count":"1","comment_id":"1160129"},{"content":"Selected Answer: BCE\nIs related to Prometheus permission, not EKS, you need to give access to AMP send messages to SNS","poster":"testhard","upvote_count":"2","comment_id":"1157336","timestamp":"1708709400.0"},{"poster":"kyuhuck","comment_id":"1153358","upvote_count":"1","content":"Selected Answer: BCF\nAmazon Managed Service for Prometheus primarily deals with metrics collection and querying. Alerting is managed by the Alertmanager, which does not use the Prometheus service’s IAM role for sending alerts to SNS. The configuration for notifications is managed within Alertmanager itself and may require custom integration for SNS.\nTherefore, the correct steps are B, C, and F to set up alerting from Amazon Managed Service for Prometheus to an Amazon SNS topic, with proper monitoring, alert management configuration, and permissions setup for integration.","timestamp":"1708268700.0"},{"comment_id":"1152719","timestamp":"1708190460.0","upvote_count":"1","content":"Selected Answer: BCF\nIn summary, the best approach involves defining alerting rules within Prometheus (B), potentially customizing Alertmanager or using an intermediary service for integration with SNS (C, but with the note that direct SNS configuration requires custom setup), and securely configuring permissions for Kubernetes workloads to interact with AWS services (F), acknowledging that some of the steps might involve additional customization or tools beyond the default capabilities of the mentioned AWS services.","poster":"kyuhuck"},{"upvote_count":"1","comments":[{"comment_id":"1149521","upvote_count":"1","poster":"Ramdi1","content":"A: While Prometheus can utilize remote write URLs, it's not recommended for directly sending alerts to SNS due to limitations in message formatting and routing logic.\nB: Setting up an availability check rule is valuable for monitoring containers, but it's not directly related to sending alerts to SNS. It helps identify issues but doesn't trigger notifications.\nF: Using OIDC and service accounts can be part of a more complex setup for accessing resources securely, but it's not strictly necessary for the given scenario where both Prometheus and SNS reside in the same account.","timestamp":"1707852780.0"}],"content":"Selected Answer: CDE\nD & E: These steps are essential for enabling communication between Prometheus and SNS. Modifying the SNS topic policy allows the specific service principal and IAM role to publish and get attributes, respectively.\nC: An alert manager configuration is crucial for routing Prometheus alerts to the desired destination (SNS topic in this case). It defines how and where to send alerts based on specific criteria.","poster":"Ramdi1","timestamp":"1707852720.0","comment_id":"1149520"},{"content":"Selected Answer: BCE\nBCE are correct:\nA: There is nothing called Amazon Managed Service for Prometheus remote write URL\nB: ok\nC: ok. Both B and C mention creating alert\nD: irrelevant\nE: Granting permissions for Prometheus\nF: irrelevant","poster":"thanhnv142","comment_id":"1148311","timestamp":"1707753660.0","upvote_count":"2"},{"content":"Selected Answer: BCD\nOptions B (Create an alerting rule), C (Create an alert manager configuration for the SNS topic), and D (Modify the access policy of the SNS topic) are the correct choices. These steps ensure that alerting rules are in place, Alertmanager is configured to route alerts to SNS, and the necessary permissions are set for AMP to publish alerts to the SNS topic.","timestamp":"1707625980.0","upvote_count":"4","poster":"vortegon","comment_id":"1146983"},{"comment_id":"1146357","poster":"LeoSantos121212121212121","content":"I go with BDE.","timestamp":"1707575580.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"1143679","poster":"Chelseajcole","content":"BDE? Why need OIDC?","timestamp":"1707331620.0"},{"comment_id":"1143511","upvote_count":"1","poster":"Arnaud92","timestamp":"1707323340.0","content":"Selected Answer: ADE\nOption A is necessary to configure Amazon Managed Service for Prometheus to send alerts to the specified destination, which in this case is the SNS topic.\nOption D is necessary to ensure that the SNS topic allows the Amazon Managed Service for Prometheus service principal to publish messages to the topic.\nOption E is necessary to grant the required permissions to the IAM role used by Amazon Managed Service for Prometheus to interact with the SNS topic.\nOptions B, C, and F are not directly related to integrating Amazon Managed Service for Prometheus alerts with Amazon SNS for the given scenario."},{"timestamp":"1707244260.0","poster":"Spavanko","upvote_count":"1","content":"Selected Answer: BDF\nI think different","comment_id":"1142469"}]},{"id":"pfU5orIFleZm2k03yENr","answer":"B","url":"https://www.examtopics.com/discussions/amazon/view/133293-exam-aws-certified-devops-engineer-professional-dop-c02/","answer_images":[],"timestamp":"2024-02-07 17:39:00","exam_id":23,"question_images":[],"discussion":[{"timestamp":"1713036780.0","content":"Selected Answer: B\nB obviously : https://aws.amazon.com/blogs/security/how-to-use-policies-to-restrict-where-ec2-instance-credentials-can-be-used-from/","upvote_count":"5","comment_id":"1195111","poster":"devakram"},{"poster":"RajAWSDevOps007","timestamp":"1734346320.0","upvote_count":"1","content":"Answer is B here.\n\nHowever, pls note SCPs can be applied directly to member accounts as well- \nhttps://docs.aws.amazon.com › orgs_manage_policies_scps","comment_id":"1327289"},{"comment_id":"1240185","poster":"6ef9a08","content":"NOT C,D:\n\"Apply the SCP to each account in the organization\" - SCPs apply to OUs, not accounts","upvote_count":"1","timestamp":"1719842760.0"},{"comment_id":"1164680","timestamp":"1709459700.0","content":"Selected Answer: B\nB is the most appropriate solution:\nOption A introduces unnecessary complexity with multiple conditions and may not provide the intended restriction.\nOption C suggests creating an SCP with lists of acceptable values, but it might be challenging to maintain and is less straightforward.\nOption D has the same issues as option A, introducing complexity with multiple conditions.","poster":"fdoxxx","upvote_count":"4"},{"upvote_count":"4","comment_id":"1160132","poster":"Diego1414","content":"Selected Answer: B\nAnswer: B - aws:EC2InstanceSourceVPC = aws:SourceVpc and aws:EC2InstanceSourcePrivateIPv4 = aws:VpcSourceIp\nhttps://aws.amazon.com/blogs/security/how-to-use-policies-to-restrict-where-ec2-instance-credentials-can-be-used-from/","timestamp":"1708988220.0"},{"comments":[{"timestamp":"1707753420.0","poster":"thanhnv142","upvote_count":"2","comment_id":"1148305","content":"Finally, I 've made it to the last one"}],"content":"Selected Answer: B\nB is correct: aws:EC2InstanceSourceVPC and aws:SourceVpc must be the same. Additionally, aws:EC2InstanceSourcePrivateIPv4 and aws:VpcSourceIp must be the same\nA: irrelevant\nC: <define a list of acceptable IP address values> is not correct\nD: <aws:EC2InstanceSourceVPC and aws:VpcSourceIp> is incorrect","timestamp":"1707753420.0","upvote_count":"4","comment_id":"1148303","poster":"thanhnv142"},{"poster":"vortegon","content":"Selected Answer: B\nhttps://aws.amazon.com/fr/blogs/security/how-to-use-policies-to-restrict-where-ec2-instance-credentials-can-be-used-from/","comment_id":"1146984","upvote_count":"2","timestamp":"1707626400.0"},{"comment_id":"1143682","content":"B. checks whether the values of the aws:EC2InstanceSourceVPC and aws:SourceVpc condition keys are the same and Apply the SCP to the OU.","upvote_count":"1","poster":"Chelseajcole","timestamp":"1707331740.0"},{"content":"Source: https://aws.amazon.com/fr/blogs/security/how-to-use-policies-to-restrict-where-ec2-instance-credentials-can-be-used-from/","upvote_count":"1","timestamp":"1707323940.0","comment_id":"1143525","poster":"Arnaud92"}],"question_text":"A company's organization in AWS Organizations has a single OU. The company runs Amazon EC2 instances in the OU accounts. The company needs to limit the use of each EC2 instance’s credentials to the specific EC2 instance that the credential is assigned to. A DevOps engineer must configure security for the EC2 instances.\n\nWhich solution will meet these requirements?","answer_ET":"B","answers_community":["B (100%)"],"answer_description":"","question_id":123,"choices":{"A":"Create an SCP that specifies the VPC CIDR block. Configure the SCP to check whether the value of the aws:VpcSourcelp condition key is in the specified block. In the same SCP check, check whether the values of the aws:EC2InstanceSourcePrivatelPv4 and aws:SourceVpc condition keys are the same. Deny access if either condition is false. Apply the SCP to the OU.","D":"Create an SCP that checks whether the values of the aws:EC2InstanceSourceVPC and aws:VpcSourceIp condition keys are the same. Deny access if the values are not the same. In the same SCP check, check whether the values of the aws:EC2InstanceSourcePrivateIPv4 and aws:SourceVpc condition keys are the same. Deny access if the values are not the same. Apply the SCP to each account in the organization.","B":"Create an SCP that checks whether the values of the aws:EC2InstanceSourceVPC and aws:SourceVpc condition keys are the same. Deny access if the values are not the same. In the same SCP check, check whether the values of the aws:EC2InstanceSourcePrivateIPv4 and aws:VpcSourceIp condition keys are the same. Deny access if the values are not the same. Apply the SCP to the OU.","C":"Create an SCP that includes a list of acceptable VPC values and checks whether the value of the aws:SourceVpc condition key is in the list. In the same SCP check, define a list of acceptable IP address values and check whether the value of the aws:VpcSourceIp condition key is in the list. Deny access if either condition is false. Apply the SCP to each account in the organization."},"unix_timestamp":1707323940,"isMC":true,"topic":"1"},{"id":"WWyDZSo2X6S27M13wjrJ","timestamp":"2023-04-07 17:07:00","answer_images":[],"answer_description":"","question_images":[],"answer":"D","url":"https://www.examtopics.com/discussions/amazon/view/105524-exam-aws-certified-devops-engineer-professional-dop-c02/","question_id":124,"exam_id":23,"answer_ET":"D","isMC":true,"choices":{"C":"Leverage AWS CodePipeline with a build action and encrypt the artifacts using AWS Secrets Manager.","B":"Deploy Jenkins to an Amazon ECS cluster and copy build artifacts to an Amazon S3 bucket with default encryption enabled.","D":"Use AWS CodeBuild with artifact encryption to replace the Jenkins instance running on EC2 instances.","A":"Automate patching and upgrading using AWS Systems Manager on EC2 instances and encrypt Amazon EBS volumes by default."},"question_text":"A company has containerized all of its in-house quality control applications. The company is running Jenkins on Amazon EC2 instances, which require patching and upgrading. The compliance officer has requested a DevOps engineer begin encrypting build artifacts since they contain company intellectual property.\nWhat should the DevOps engineer do to accomplish this in the MOST maintainable manner?","unix_timestamp":1680880020,"discussion":[{"upvote_count":"22","poster":"sb333","timestamp":"1687647120.0","comment_id":"932973","content":"Selected Answer: D\nThe question wants you to know which solution is the easiest to maintain. It's important not to get thrown by information provided about their current environment. Only the question they ask matters. The question asks which solution is the easiest to \"maintain\". The question did not ask whether it would be easy to transition from one solution to another or ask you to leverage containers like other parts of their environment.\n\nAs a managed service, AWS CodeBuild does not require patching and upgrading. AWS CodeBuild, using Amazon S3, provides automatic artifact encryption. So this solution is the easiest to maintain of all the solutions listed.\n\nhttps://docs.aws.amazon.com/codebuild/latest/userguide/welcome.html\nhttps://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html"},{"upvote_count":"11","content":"Selected Answer: D\nWhile B will require less changes to the build process I assume AWS is promoting managed services here and expects D answer.","timestamp":"1686245640.0","poster":"madperro","comment_id":"918525"},{"poster":"Ravi_Bulusu","content":"The answer is B\nContainerized Jenkins on ECS:\nBy deploying Jenkins on Amazon ECS (Elastic Container Service), you can leverage containerized environments to easily scale and manage Jenkins. This reduces the operational overhead of patching and upgrading EC2 instances running Jenkins.\nArtifact Storage with Encryption:Storing build artifacts in Amazon S3 with default encryption enabled ensures that all files in the bucket are automatically encrypted at rest using either SSE-S3 or SSE-KMS. This complies with the requirement to protect intellectual property by ensuring encryption of artifacts.\nThis approach ensures a fully managed and scalable solution for both Jenkins (containerized) and the artifact storage, aligning with best practices for security and compliance.","timestamp":"1731858600.0","upvote_count":"1","comment_id":"1313635"},{"upvote_count":"1","content":"while option D could be easier for simple projects or when starting from scratch, it may not be the most maintainable solution for a company that already has a significant investment in Jenkins. Option B provides a balanced approach, leveraging Jenkins' capabilities while improving infrastructure management and security.","timestamp":"1727068800.0","comment_id":"1287991","poster":"newpotato"},{"poster":"HarryLy","timestamp":"1717742580.0","comment_id":"1225934","content":"Selected Answer: D\nAWS codebuild use kms encryption key by default","upvote_count":"1"},{"content":"Selected Answer: D\n\"D\" for me based on sb333's comments, etc.","poster":"Gomer","upvote_count":"1","timestamp":"1716939480.0","comment_id":"1220588"},{"upvote_count":"1","poster":"01037","timestamp":"1715815620.0","comment_id":"1212167","content":"Selected Answer: D\nD isn't cost effective, but most maintainable"},{"upvote_count":"1","poster":"zijo","timestamp":"1709143620.0","comment_id":"1161891","content":"Answer is D\nAWS CodeBuild can be seamlessly integrated with containerized applications deployed on Amazon ECS.\nAWS CodeBuild utilizes multiple layers of encryption to safeguard your data at rest, in transit, and during execution."},{"poster":"Vitalydt","upvote_count":"1","content":"Selected Answer: D\nD Seems the best option","timestamp":"1709123460.0","comment_id":"1161618"},{"upvote_count":"3","timestamp":"1706497500.0","content":"D is correct: codebuild has encryption by default -> easiest to maintain\nA: No mention of encrypting build artifacts\nB: Amazon S3 excryption only protect data at rest, not encrypting the data\nC: Using both AWS codepipline and AWS secret manager incurs more costs and makes maintenance much more difficult","comment_id":"1134621","poster":"thanhnv142"},{"timestamp":"1702565220.0","poster":"DucSiu","comment_id":"1096565","content":"D is the right answer","upvote_count":"1"},{"content":"Selected Answer: D\nD is the right answer","timestamp":"1701076140.0","poster":"Sazeka","comment_id":"1081334","upvote_count":"1"},{"content":"Selected Answer: B\nB is the answer . The ask is not to re engineer the whole solution it's just a simple task which needs encrypt the artifact. \nJenkins on Amazon ECS: Running Jenkins in an Amazon ECS cluster allows you to containerize your Jenkins setup, making it easier to manage and scale. ECS offers high availability, scalability, and easy maintenance.\n\nNormally Jenkin should run on ECS so it can handle multiple agents while use S3 as the default encryption.","timestamp":"1699073700.0","poster":"2pk","upvote_count":"1","comment_id":"1061902"},{"poster":"RVivek","comment_id":"1010347","content":"Selected Answer: D\nMOST maintainable manner is repacing jenkins with Codebuild a fully managed service\nIf the question had been with minimal chnage to the envornment then B would be best","timestamp":"1695021660.0","upvote_count":"2"},{"timestamp":"1694053620.0","upvote_count":"1","poster":"DaddyDee","content":"Answer is D: MOST maintainable manner/managed service is the key word and there is no need to patch and upgrade. There is ECS with EC2 instances and ECS with fargate and the question is not explicit. Hence maintenance wise, a managed service is the way to go.\nhttps://jenkinshero.com/jenkins-vs-aws-codebuild-for-building-docker-images/","comment_id":"1001112"},{"poster":"habros","upvote_count":"1","content":"Selected Answer: D\nTechnically CodeBuild runs on a VM… albeit disposable. Switching on EC2 24/7 is not cost effective either.","timestamp":"1688786580.0","comment_id":"946119"},{"upvote_count":"2","poster":"tartarus23","comment_id":"927891","timestamp":"1687206120.0","content":"Selected Answer: D\nD. Use AWS CodeBuild with artifact encryption to replace the Jenkins instance running on EC2 instances.\n\nExplanation: AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your own build servers. It also provides built-in support for artifact encryption, which would satisfy the compliance officer's requirements. This would eliminate the need for patching and upgrading Jenkins on EC2 instances, as well as the need to handle encryption at the storage level."},{"comment_id":"925325","poster":"bakamon","timestamp":"1686929160.0","upvote_count":"2","content":"Selected Answer: B\nB is the right answer.. no one said to replace jenkins"},{"comments":[{"comment_id":"921279","content":"Codebuild not codedeploy.","upvote_count":"1","poster":"Mail1964","timestamp":"1686561240.0"}],"upvote_count":"2","poster":"Mail1964","comment_id":"921277","timestamp":"1686561000.0","content":"Selected Answer: D\nI think they are trying to take us down the code deploy route -The company is running Jenkins on Amazon EC2 instances, which require patching and upgrading. This suggest to me they want something that does not require this level of maintenance and is AWS."},{"timestamp":"1685713380.0","content":"Replacing Jenkins with CodeBuild may require changes in all the deployment scripts. So, ECS is better way. Lift and Shift to ECS and the question mentions that company has already containerized most of its applications.\n\nCodeBuild is definitely more managed but then it means rewriting existing pipelines to work with CodeBuild.","poster":"paali","upvote_count":"3","comment_id":"912862"},{"upvote_count":"2","poster":"rdoty","comment_id":"911175","content":"Selected Answer: D\nthis is a managed service question... the answer is D. CodeBuild offers artifact encryption and is easily maintained. If you think managing jenkins on ECS is less overhead, you are certainly mistaken.","timestamp":"1685533260.0"},{"content":"Selected Answer: D\nD for me. CodeBuild would encrypt the artifacts and require no maintenance. Any option of running jenkins requires maintenance. Jenkins is a high-maintenance tool. I use it every day. You have to maintain plugins updated every week and maintain the OS, deal with all the administrative stuff. We use it because we need it and for other reasons codebuild is not suitable for our project. But maintenance is a nightmare!","upvote_count":"2","poster":"bcx","comment_id":"910353","timestamp":"1685458620.0"},{"comment_id":"889075","timestamp":"1683161760.0","poster":"5aga","content":"Selected Answer: B\nThe most maintainable solution for encrypting build artifacts in this scenario would be to deploy Jenkins to an Amazon ECS cluster and copy build artifacts to an Amazon S3 bucket with default encryption enabled. This approach ensures that the build artifacts are automatically encrypted at rest without the need for additional configuration, reducing the risk of accidentally unencrypted data exposure.\n\nOn the other hand, for Option D, while using AWS CodeBuild with artifact encryption can also achieve the goal of encrypting build artifacts, it requires additional setup and may not be as easy to maintain as the ECS cluster and S3 bucket solution. Furthermore, this option involves replacing Jenkins with CodeBuild, which may require changes to existing CI/CD pipelines and scripts.","upvote_count":"2"},{"timestamp":"1682988180.0","poster":"haazybanj","content":"Selected Answer: B\nThe MOST maintainable solution to encrypt build artifacts would be to deploy Jenkins to an Amazon ECS cluster and copy build artifacts to an Amazon S3 bucket with default encryption enabled. \n\nOption A is a good solution for patching and upgrading EC2 instances, but it does not address the artifact encryption requirement. Option C is not ideal because it involves using a build action, which may add complexity to the build process. Option D would require replacing Jenkins with AWS CodeBuild, which may not be feasible for the company's current environment.","upvote_count":"1","comment_id":"886910"},{"comment_id":"878828","upvote_count":"1","content":"Selected Answer: B\nB ... not a great soln, but the best in this situation","poster":"henryyvr","timestamp":"1682286900.0"},{"comment_id":"870468","content":"don't like Jenkins so for me the answer is D","poster":"alce2020","upvote_count":"1","timestamp":"1681504920.0"},{"poster":"jqso234","timestamp":"1681493700.0","content":"The MOST maintainable solution for encrypting build artifacts from Jenkins running on EC2 instances is to deploy Jenkins to an Amazon ECS cluster and copy build artifacts to an Amazon S3 bucket with default encryption enabled. This solution provides high availability, scalability, and security for Jenkins and ensures that artifacts are encrypted when they are stored in S3. Using an ECS cluster allows for easy management and scaling of Jenkins instances, and S3 provides automatic encryption of objects at rest with default encryption enabled. Therefore, the correct answer is B. \nOption D is not the most maintainable solution since it requires replacing Jenkins with AWS CodeBuild and may require significant changes to the existing build process.","comment_id":"870365","upvote_count":"4"},{"content":"Selected Answer: D\nD for me. https://docs.aws.amazon.com/codebuild/latest/userguide/security-encryption.html","poster":"Dimidrol","timestamp":"1680953280.0","upvote_count":"6","comment_id":"864647"},{"poster":"ele","upvote_count":"3","timestamp":"1680880020.0","content":"Selected Answer: B\nB makes sense.","comment_id":"864004"}],"answers_community":["D (85%)","B (15%)"],"topic":"1"},{"id":"Gz348mIrHfKQJpQIJfT3","answer_ET":"AD","question_id":125,"exam_id":23,"isMC":true,"answer_description":"","question_images":[],"discussion":[{"content":"Selected Answer: AD\nA. Ensure that the Amazon CloudWatch agent is installed on all EC2 instances.\n\nThe Amazon CloudWatch agent can collect system-level metrics, including disk space usage, and send them to Amazon CloudWatch. This will allow you to monitor the available disk space on each EC2 instance.\n\nD. Create an Amazon CloudWatch alarm to monitor available disk space on all EC2 instances. Add the alarm as a safety control to the Systems Manager Automation task.\n\nBy setting up a CloudWatch alarm to monitor the available disk space, you can trigger actions or notifications when the disk space falls below a certain threshold. Adding this alarm as a safety control to the Systems Manager Automation task ensures that the patching process will only proceed if there is sufficient available disk space.","poster":"trungtd","comment_id":"1245852","upvote_count":"3","timestamp":"1720668000.0"},{"upvote_count":"3","timestamp":"1712980980.0","comment_id":"1194638","poster":"dkp","content":"Selected Answer: AD\nanswer A & D\nto configure disk usage, we can use custom metrics in the Cloudwatch agent configuration. don't need a cron job to pipe the disk usage."},{"poster":"WhyIronMan","timestamp":"1711798140.0","upvote_count":"4","content":"Selected Answer: AD\nA,D, Simple and accurate","comment_id":"1186061"},{"timestamp":"1710343560.0","upvote_count":"4","comment_id":"1172679","poster":"Nano803","content":"Selected Answer: AD\nThis article details the solution: \nhttps://aws.amazon.com/blogs/mt/avoid-patching-failures-due-to-low-disk-space-with-aws-systems-manager-automation-and-cloudwatch-alarms/"},{"comment_id":"1172242","content":"Selected Answer: AD\nA: Install AWS CloudWatch agent which will push disk information to a log group.\nB: Alarm depends on disk space.","timestamp":"1710307260.0","poster":"Seoyong","upvote_count":"4"}],"answers_community":["AD (100%)"],"unix_timestamp":1710307260,"question_text":"A company has a fleet of Amazon EC2 instances that run Linux in a single AWS account. The company is using an AWS Systems Manager Automation task across the EC2 instances.\n\nDuring the most recent patch cycle, several EC2 instances went into an error state because of insufficient available disk space. A DevOps engineer needs to ensure that the EC2 instances have sufficient available disk space during the patching process in the future.\n\nWhich combination of steps will meet these requirements? (Choose two.)","choices":{"A":"Ensure that the Amazon CloudWatch agent is installed on all EC2 instances.","E":"Create an AWS Lambda function to periodically check for sufficient available disk space on all EC2 instances by evaluating each EC2 instance's respective Amazon CloudWatch log stream.","B":"Create a cron job that is installed on each EC2 instance to periodically delete temporary files.","C":"Create an Amazon CloudWatch log group for the EC2 instances. Configure a cron job that is installed on each EC2 instance to write the available disk space to a CloudWatch log stream for the relevant EC2 instance.","D":"Create an Amazon CloudWatch alarm to monitor available disk space on all EC2 instances. Add the alarm as a safety control to the Systems Manager Automation task."},"topic":"1","timestamp":"2024-03-13 06:21:00","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/135847-exam-aws-certified-devops-engineer-professional-dop-c02/","answer":"AD"}],"exam":{"provider":"Amazon","isMCOnly":true,"name":"AWS Certified DevOps Engineer - Professional DOP-C02","lastUpdated":"11 Apr 2025","isBeta":false,"numberOfQuestions":355,"isImplemented":true,"id":23},"currentPage":25},"__N_SSP":true}