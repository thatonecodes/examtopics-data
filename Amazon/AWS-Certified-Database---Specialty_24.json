{"pageProps":{"questions":[{"id":"BUlhocUTDwdvimZJne88","discussion":[{"comment_id":"658724","poster":"mbar94","content":"Selected Answer: C\nImmutable history of changes - agree with C.","timestamp":"1662228720.0","upvote_count":"5"},{"content":"Selected Answer: C\nC. Create an Amazon QLDB ledger \n\nhttps://aws.amazon.com/qldb/faqs/","upvote_count":"1","comment_id":"1006143","poster":"Pranava_GCP","timestamp":"1694574120.0"},{"timestamp":"1683730560.0","content":"Agreed C, QLDB is best for this req","upvote_count":"1","comment_id":"894095","poster":"tsk9921"},{"content":"C : Amazon Quantum Ledger Database (QLDB) - Maintain an immutable, cryptographically verifiable log of data changes","comment_id":"754363","poster":"Don2021","timestamp":"1671813960.0","upvote_count":"3"},{"poster":"khun","timestamp":"1671417540.0","comment_id":"749391","upvote_count":"1","content":"Ans is C"},{"upvote_count":"4","content":"Selected Answer: C\nimmutable","timestamp":"1664208360.0","poster":"cloudsunriser","comment_id":"679930"},{"upvote_count":"1","comment_id":"665299","timestamp":"1662804660.0","poster":"SonamDhingra","content":"Selected Answer: C\nC is correct"}],"question_id":116,"answers_community":["C (100%)"],"answer_description":"","isMC":true,"exam_id":22,"question_images":[],"choices":{"C":"Create an Amazon QLDB ledger to store the insurance details. Validate the data by choosing the ledger name in the digest request to verify the data lineage of an insurance claim.","B":"Create an Amazon DynamoDB table to store the insurance details. Validate the data using AWS DMS validation by moving the data to Amazon S3 to verify the data lineage of an insurance claim.","A":"Create a blockchain to store the insurance details. Validate the data using a hash function to verify the data lineage of an insurance claim.","D":"Create an Amazon Aurora database to store the insurance details. Validate the data using AWS DMS validation by moving the data to Amazon S3 to verify the data lineage of an insurance claim."},"unix_timestamp":1662228720,"answer_ET":"C","question_text":"A vehicle insurance company needs to choose a highly available database to track vehicle owners and their insurance details. The persisted data should be immutable in the database, including the complete and sequenced history of changes over time with all the owners and insurance transfer details for a vehicle.\nThe data should be easily verifiable for the data lineage of an insurance claim.\nWhich approach meets these requirements with MINIMAL effort?","timestamp":"2022-09-03 20:12:00","topic":"1","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/79883-exam-aws-certified-database-specialty-topic-1-question-202/","answer":"C"},{"id":"1Cz9O4w0Lb3TePGyPYEd","question_images":[],"question_id":117,"choices":{"A":"Create an AWS Step Functions state machine with a DynamoDB DeleteItem operation that uses the ConditionExpression parameter to delete items older than a week. Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled rule that runs the Step Functions state machine on a weekly basis.","C":"Enable Amazon DynamoDB Streams on the table. Use a stream to invoke an AWS Lambda function to delete items older than a week from the DynamoDB table","D":"Enable TTL on the DynamoDB table and set a Number data type as the TTL attribute. DynamoDB will automatically delete items that have a TTL that is less than the current time.","B":"Create an AWS Lambda function to delete items older than a week from the DynamoDB table. Create an Amazon EventBridge (Amazon CloudWatch Events) scheduled rule that triggers the Lambda function on a weekly basis."},"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/79885-exam-aws-certified-database-specialty-topic-1-question-203/","question_text":"A company stores session history for its users in an Amazon DynamoDB table. The company has a large user base and generates large amounts of session data.\nTeams analyze the session data for 1 week, and then the data is no longer needed. A database specialist needs to design an automated solution to purge session data that is more than 1 week old.\nWhich strategy meets these requirements with the MOST operational efficiency?","topic":"1","answer_description":"","answer":"D","timestamp":"2022-09-03 20:16:00","answer_images":[],"exam_id":22,"answer_ET":"D","answers_community":["D (100%)"],"discussion":[{"comment_id":"658728","poster":"mbar94","upvote_count":"7","timestamp":"1662228960.0","content":"Selected Answer: D\nTextbook question for TTL - https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html"},{"timestamp":"1694574540.0","upvote_count":"1","content":"Selected Answer: D\nD. Enable TTL on the DynamoDB table","comment_id":"1006148","poster":"Pranava_GCP"},{"timestamp":"1671417720.0","upvote_count":"1","content":"Selected Answer: D\nD. TTL less effort","comment_id":"749392","poster":"khun"},{"comments":[{"poster":"aviathor","content":"TTL is a misnomer in the case of DynamoDB. It is actually \"the time after which an item is no longer needed\"","comment_id":"904699","upvote_count":"1","timestamp":"1684827960.0"},{"comment_id":"1022588","poster":"Germaneli","timestamp":"1696182780.0","upvote_count":"2","content":"Yes. The value would be set to the time in exactly one week. Then it expires automatically."}],"upvote_count":"1","content":"This is wrong : delete items that have a TTL that is less than the current time. Most Voted\nthey need to delete 1 week old , not old than current time","poster":"Jiang_aws1","timestamp":"1669145280.0","comment_id":"724607"},{"comment_id":"665300","timestamp":"1662804660.0","content":"Selected Answer: D\nD is correct","upvote_count":"1","poster":"SonamDhingra"}],"unix_timestamp":1662228960},{"id":"z6p4qpcwhnrhzHxriq0D","isMC":true,"exam_id":22,"unix_timestamp":1662265020,"topic":"1","answer_images":[],"question_text":"A company conducted a security audit of its AWS infrastructure. The audit identified that data was not encrypted in transit between application servers and a\nMySQL database that is hosted in Amazon RDS.\nAfter the audit, the company updated the application to use an encrypted connection. To prevent this problem from occurring again, the company's database team needs to configure the database to require in-transit encryption for all connections.\nWhich solution will meet this requirement?","question_images":[],"discussion":[{"upvote_count":"3","comment_id":"1006167","poster":"Pranava_GCP","timestamp":"1694577000.0","content":"Selected Answer: A\nA. Update the parameter group in use by the DB instance, and set the require_secure_transport parameter to ON\n\nhttps://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/mysql-ssl-connections.html\n\n\n\"Use the require_secure_transport parameter to require that all user connections to your MySQL DB instance use SSL/TLS. By default, the require_secure_transport parameter is set to OFF. You can set the require_secure_transport parameter to ON to require SSL/TLS for connections to your DB instance.\""},{"upvote_count":"2","comment_id":"679931","poster":"cloudsunriser","content":"Selected Answer: A\nhttps://aws.amazon.com/about-aws/whats-new/2022/08/amazon-rds-mysql-supports-ssl-tls-connections/","timestamp":"1664208480.0"},{"upvote_count":"4","poster":"mbar94","content":"Selected Answer: A\nIt's A. https://aws.amazon.com/about-aws/whats-new/2022/08/amazon-rds-mysql-supports-ssl-tls-connections/","comment_id":"658935","timestamp":"1662265020.0"}],"choices":{"B":"Connect to the database, and use ALTER USER to enable the REQUIRE SSL option on the database user.","A":"Update the parameter group in use by the DB instance, and set the require_secure_transport parameter to ON.","C":"Update the security group in use by the DB instance, and remove port 80 to prevent unencrypted connections from being established.","D":"Update the DB instance, and enable the Require Transport Layer Security option."},"url":"https://www.examtopics.com/discussions/amazon/view/79939-exam-aws-certified-database-specialty-topic-1-question-204/","answer":"A","timestamp":"2022-09-04 06:17:00","answer_ET":"A","answer_description":"","answers_community":["A (100%)"],"question_id":118},{"id":"a7g4lvCPwWwxS9Lk2bBo","answers_community":["C (82%)","A (18%)"],"unix_timestamp":1662265260,"question_id":119,"exam_id":22,"discussion":[{"content":"Selected Answer: C\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.cluster-management.html#DAX.cluster-management.custom-settings.ttl","upvote_count":"5","timestamp":"1664208780.0","poster":"cloudsunriser","comment_id":"679939"},{"timestamp":"1681147080.0","comments":[{"upvote_count":"1","comment_id":"870144","poster":"Mintwater","content":"Agree, TTL setting default time is 5 minutes, to adjust TTL time to a longer time.","timestamp":"1681471800.0"}],"poster":"mbadioum","upvote_count":"3","comment_id":"866469","content":"C is right\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.cluster-management.html"},{"poster":"Sathish_dbs","timestamp":"1673189820.0","comment_id":"769541","content":"A is the wrong answer.Reasons\n- it is not setting to change, it is function that returns The number of read capacity units consumed over the specified time period, so you can track how much of your provisioned throughput is used.\n- it is talking about dynamoDB metric, nothing to do with DAX","upvote_count":"2"},{"timestamp":"1662947460.0","comment_id":"666535","upvote_count":"2","poster":"hcltechaws","content":"Selected Answer: C\nI think C.\n\nWhen you create a DAX cluster, the following default settings are used:\n\nAutomatic cache eviction enabled with Time to Live (TTL) of 5 minutes\n\nNo preference for Availability Zones\n\nNo preference for maintenance windows\n\nNotifications disabled"},{"poster":"SonamDhingra","upvote_count":"2","content":"Selected Answer: C\nC is correct","comment_id":"665305","timestamp":"1662804900.0"},{"timestamp":"1662265260.0","poster":"mbar94","upvote_count":"2","comment_id":"658937","content":"Selected Answer: A\nAgree with A - https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.sizing-guide.html","comments":[{"upvote_count":"1","poster":"khun","comment_id":"749399","content":"Agree on this we should check first the cache missed stats,\n\nIf you also already have a DAX cluster, remember that the DynamoDB ConsumedReadCapacityUnits metric only accounts for cache misses. So, to get an idea of the read capacity units per second handled by your DAX cluster, divide the number by your cache miss rate (that is, 1 - cache hit rate).","timestamp":"1671418260.0"}]}],"timestamp":"2022-09-04 06:21:00","choices":{"B":"The trust relationship to perform the DynamoDB API calls","D":"The validity of customer-specified AWS Key Management Service (AWS KMS) keys for DAX encryption at rest","C":"The DAX cluster's TTL setting","A":"The DynamoDB ConsumedReadCapacityUnits metric"},"question_images":[],"answer":"C","url":"https://www.examtopics.com/discussions/amazon/view/79941-exam-aws-certified-database-specialty-topic-1-question-205/","question_text":"A database specialist is designing an enterprise application for a large company. The application uses Amazon DynamoDB with DynamoDB Accelerator (DAX).\nThe database specialist observes that most of the queries are not found in the DAX cache and that they still require DynamoDB table reads.\nWhat should the database specialist review first to improve the utility of DAX?","topic":"1","answer_ET":"C","isMC":true,"answer_description":"","answer_images":[]},{"id":"3oAOxxA11l6EkoGDMxkT","timestamp":"2022-09-05 06:09:00","answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/80194-exam-aws-certified-database-specialty-topic-1-question-206/","exam_id":22,"unix_timestamp":1662350940,"question_text":"A company plans to use AWS Database Migration Service (AWS DMS) to migrate its database from one Amazon EC2 instance to another EC2 instance as a full load task. The company wants the database to be inactive during the migration. The company will use a dms.t3.medium instance to perform the migration and will use the default settings for the migration.\nWhich solution will MOST improve the performance of the data migration?","topic":"1","answer_images":[],"answers_community":["B (52%)","A (33%)","14%"],"answer_ET":"B","choices":{"A":"Increase the number of tables that are loaded in parallel.","C":"Change the processing mode from the batch optimized apply option to transactional mode.","D":"Enable Multi-AZ on the target database while the full load task is in progress.","B":"Drop all indexes on the source tables."},"question_id":120,"answer":"B","isMC":true,"question_images":[],"discussion":[{"upvote_count":"1","timestamp":"1705306200.0","poster":"MultiAZ","content":"A\nDropping indexes on the source will not help; this is intended for the target.","comment_id":"1123171"},{"timestamp":"1704218040.0","upvote_count":"3","poster":"missipssamarsh","content":"Selected Answer: B\nBy default, AWS DMS loads eight tables at a time. You might see some performance improvement by increasing this slightly when using a very large replication server, such as a dms.c4.xlarge or larger instance. However, at some point, increasing this parallelism reduces performance. If your replication server is relatively small, such as a dms.t2.medium, we recommend that you reduce the number of tables loaded in parallel.\n\nFor a full load task, we recommend that you drop primary key indexes, secondary indexes, referential integrity constraints, and data manipulation language (DML) triggers. Or you can delay their creation until after the full load tasks are complete. You don't need indexes during a full load task, and indexes incur maintenance overhead if they are present. Because the full load task loads groups of tables at a time, referential integrity constraints are violated. Similarly, insert, update, and delete triggers can cause errors, for example if a row insert is triggered for a previously bulk loaded table. Other types of triggers also affect performance due to added processing.","comment_id":"1112116"},{"upvote_count":"1","timestamp":"1703247420.0","comment_id":"1103352","poster":"rrshah83","content":"Selected Answer: B\nA is not recommended for smaller instances like t2/t3. C is not correct because they will run in default settings which is transactional mode. D is distractor as it is not relevant for performance."},{"timestamp":"1696269120.0","poster":"Germaneli","comment_id":"1023364","content":"Selected Answer: B\nx A. Actually, for a medium replication instance it's recommended to decrease the number of tables that are loaded in parallel... It's not evident that this helps. It probably would for very large instances.\nB. Dropping all indexes on the source tables - YES that clearly helps, because \"Indexes, triggers, and referential integrity constraints can affect your migration performance and cause your migration to fail.\" \nx C. Change the processing mode from the batch optimized apply option to transactional mode. - NO, the opposite would be good for performance (batch mode).\nx D. Enable Multi-AZ on the target database while the full load task is in progress. - Nice try - a distractor. Multi-AZ increases reliability, but that's not a direct boost to performance really.\n\nHence, B should be the right answer.\n\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html","upvote_count":"3"},{"comments":[{"comment_id":"1101350","content":"By default, AWS DMS loads eight tables at a time. You might see some performance improvement by increasing this slightly when using a very large replication server, such as a dms.c4.xlarge or larger instance. However, at some point, increasing this parallelism reduces performance. If your replication server is relatively small, such as a dms.t2.medium, we recommend that you reduce the number of tables loaded in parallel.","poster":"abhiavril","upvote_count":"1","timestamp":"1703058180.0"}],"comment_id":"1004714","poster":"Pranava_GCP","content":"Selected Answer: A\nA. Increase the number of tables that are loaded in parallel.\n\n\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html#CHAP_BestPractices.Performance","upvote_count":"1","timestamp":"1694432400.0"},{"upvote_count":"3","timestamp":"1684830000.0","comment_id":"904728","poster":"aviathor","content":"Selected Answer: A\nA. Increase the number of tables that are loaded in parallel. - that MIGHT help\nB. Drop all indexes on the source tables.- dropping indexes on the destination tables would help, but not on the source tables\nC. Change the processing mode from the batch optimized apply option to transactional mode. - actually it is quite the opposite - the purpose of transactional mode is to preserve data consistency at all time, which is not required here\nD. Enable Multi-AZ on the target database while the full load task is in progress. - that would slow down the migration since it would consume CPU and IO for other purposes than data migration\n\nSo A it is..."},{"comment_id":"769566","poster":"Sathish_dbs","timestamp":"1673190900.0","comments":[{"comment_id":"769575","poster":"Sathish_dbs","content":"https://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html","upvote_count":"1","timestamp":"1673191380.0"},{"comment_id":"769579","upvote_count":"1","content":"-AWS DMS loads eight tables at a time - recommend instance dms.c4.xlarge or larger, on dms.t2.medium reduce parellism \n-Optimizing change processing - batches rather transaction - if you are ok with temporary lapse and disable referential at the destination\n-multiple tasks for a single migration can improve performance- not related tables in a group in a task\n-turn off backups and Multi-AZ on the target, also if any logs\n-full load task, drop primary key indexes, secondary indexes, referential integrity constraints. \n-On full load+CDC - pause the replication task before the CDC phase to build indexes and create referential integrity constraints before you restart the task\n-parallel full load for bigger tables based on partitions","timestamp":"1673191620.0","poster":"Sathish_dbs"}],"upvote_count":"1","content":"xA. Increase the number of tables that are loaded in parallel. - weak instance\nxB. Drop all indexes on the source tables. - should be on destination\nC. Change the processing mode from the batch optimized apply option to transactional mode. - database is already off-line and full load mode so temporarily lapse is very much NOT a concern as eventually it gets caught at the end.\nxD. Enable Multi-AZ on the target database while the full load task is in progress. - it slow down the process"},{"poster":"Kanwar_89","upvote_count":"1","comment_id":"759339","content":"Selected Answer: A\nSo i dont get it , \n\nA -- may be helpful \nB - DMS doesnt take indexes into account during migration , unless they are manually created on target\nC - transaction mode is default setting - no need to switch it from batch \nD- Not helpful","timestamp":"1672199940.0"},{"upvote_count":"2","poster":"Sab","comment_id":"738532","content":"Selected Answer: A\nTo indicate the maximum number of tables to load in parallel, set the MaxFullLoadSubTasks option. The default is 8; the maximum value is 49.\n\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.FullLoad.html","timestamp":"1670465580.0"},{"timestamp":"1669895580.0","upvote_count":"1","poster":"satishstechie","comment_id":"732557","content":"There is no much confusion on the query.. Most of the action items are for the target DB as per the URL.. Answer should be C.."},{"content":"A : Correct\nXB Drop index on target DB \nXC Using batch \nXD. Not help","upvote_count":"2","poster":"Jiang_aws1","timestamp":"1669158000.0","comment_id":"724741"},{"timestamp":"1667024760.0","poster":"rags1482","content":"B is correct","upvote_count":"1","comment_id":"707024"},{"timestamp":"1666324980.0","poster":"RBSK","content":"Selected Answer: C\nOptimizing change processing\nBy default, AWS DMS processes changes in a transactional mode, which preserves transactional integrity. If you can afford temporary lapses in transactional integrity, you can use the batch optimized apply option instead. This option efficiently groups transactions and applies them in batches for efficiency purposes. Using the batch optimized apply option almost always violates referential integrity constraints. So we recommend that you turn these constraints off during the migration process and turn them on again as part of the cutover process.","upvote_count":"2","comment_id":"700496"},{"upvote_count":"3","comment_id":"679953","timestamp":"1664209500.0","poster":"cloudsunriser","content":"Selected Answer: B\nC is incorrect as it's mentioned in questions that DMS is running with default setting and default is transactional mode. D will have no effect on performance. A will help but dms.t3.medium is not strong enough to handle excess parallelism. It may in fact degrade performance. With all these I feel B seems to be answer. Even with B I guess best practice will be to drop indexes on Destination side and not on source. But It's mentioned database will be inactive I believe dropping indexes on source and recreating later can help. \nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html#CHAP_BestPractices.Performance","comments":[{"content":"They mention it's running with default so that you understand what's being used currently. Changing to batch optimized from transactional will improve performance as described.","poster":"hogtrough","comment_id":"710737","timestamp":"1667501880.0","comments":[{"poster":"hogtrough","comment_id":"711275","upvote_count":"1","content":"Had this backwards. B is correct.","timestamp":"1667582640.0"}],"upvote_count":"1"}]},{"poster":"saran123","timestamp":"1664022120.0","content":"Selected Answer: B\nFor a full load task, we recommend that you drop primary key indexes, secondary indexes, referential integrity constraints, and data manipulation language (DML) triggers. Or you can delay their creation until after the full load tasks are complete. You don't need indexes during a full load task, and indexes incur maintenance overhead if they are present. Because the full load task loads groups of tables at a time, referential integrity constraints are violated. Similarly, insert, update, and delete triggers can cause errors, for example if a row insert is triggered for a previously bulk loaded table. Other types of triggers also affect performance due to added processing.\n\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html","comments":[{"comment_id":"700493","comments":[{"content":"I will go with C - Same Doc explains it - Optimizing change processing\nBy default, AWS DMS processes changes in a transactional mode, which preserves transactional integrity. If you can afford temporary lapses in transactional integrity, you can use the batch optimized apply option instead. This option efficiently groups transactions and applies them in batches for efficiency purposes. Using the batch optimized apply option almost always violates referential integrity constraints. So we recommend that you turn these constraints off during the migration process and turn them on again as part of the cutover process.","comment_id":"700494","upvote_count":"1","timestamp":"1666324920.0","poster":"RBSK"}],"content":"Whole phrase mentioned above, in the doc refers to the target, not the source.","poster":"RBSK","timestamp":"1666324860.0","upvote_count":"2"}],"comment_id":"677799","upvote_count":"1"},{"comment_id":"673699","content":"B, t3 medium still too weak to handle large parallel workload.","poster":"yxyj","timestamp":"1663631040.0","upvote_count":"2"},{"timestamp":"1663495680.0","content":"I go with A, its mentioned as Full load task and not CDC, so as per this link, it should be A\nhttps://docs.aws.amazon.com/dms/latest/userguide/CHAP_BestPractices.html#CHAP_BestPractices.Performance","upvote_count":"2","poster":"saran123","comment_id":"672210"},{"comment_id":"661668","timestamp":"1662501660.0","upvote_count":"2","content":"C is not the correct answer \"By default, AWS DMS processes changes in a transactional mode, which preserves transactional integrity.\"","poster":"Adi_M"},{"timestamp":"1662350940.0","comment_id":"659716","comments":[{"timestamp":"1662965220.0","poster":"mbar94","upvote_count":"1","comment_id":"666670","content":"Switching to B, removing indexes may reduce overhead."}],"content":"Selected Answer: C\nAgree with C as DB will be inactive during migration. Otherwise, I'd be opting for B.","upvote_count":"1","poster":"mbar94"}]}],"exam":{"isBeta":false,"name":"AWS Certified Database - Specialty","isMCOnly":false,"isImplemented":true,"id":22,"numberOfQuestions":359,"lastUpdated":"11 Apr 2025","provider":"Amazon"},"currentPage":24},"__N_SSP":true}