{"pageProps":{"questions":[{"id":"biawlWhCUuop9hEfCWMb","question_images":[],"exam_id":33,"answer_images":[],"discussion":[{"timestamp":"1731205980.0","content":"B is most appropriate and no additional overhead.","poster":"AzureDP900","upvote_count":"1","comment_id":"1309289"},{"content":"A is the correct answer, not B is focused primarily on scanning Amazon EC2 instances for vulnerabilities and does not natively support scanning Amazon EKS nodes or Amazon ECR repositories","timestamp":"1717202220.0","poster":"9f02c8d","comment_id":"1222399","upvote_count":"1"},{"timestamp":"1717085640.0","poster":"iulian0585","comment_id":"1221699","upvote_count":"3","content":"Selected Answer: B\nA. Activate AWS Security Hub: While AWS Security Hub aggregates security findings from various AWS services, it is not primarily designed for continuous scanning of EKS nodes or ECR repositories. Security Hub is more suited for compliance checks and aggregation of security alerts from multiple sources."},{"poster":"blackname","upvote_count":"4","comment_id":"1216977","content":"Selected Answer: B\nA -> False. Security Hub is just a Finding aggregator of other services like AWS config, Inspector, Macie, ..., even security hub controls are in the end config rules.\nB -> True. Inspector scans EC2, ECR, lambda functions (either layer analysis, either deep scan of the code), ...\nC -> False. Has a lot of effort. Plus \"perform a basic scan on push\" is a deprecated thing, inspector should be used.\nD -> False. CW Agent does not report vulns. Inspector uses SSM Agent to perform vulnerability scans. Plus \"perform a basic scan on push\" is a deprecated thing, inspector should be used.","timestamp":"1716494040.0"},{"comment_id":"1202597","upvote_count":"2","poster":"Fu7ed","content":"Selected Answer: B\nConfiguration and vulnerability analysis in Amazon EKS\n- You can use Amazon Inspector to check for unintended network accessibility of your nodes and for vulnerabilities on those Amazon EC2 instances.\nhttps://docs.aws.amazon.com/eks/latest/userguide/configuration-vulnerability-analysis.html\n\nAmazon Inspector automatically discovers and scans running Amazon EC2 instances, container images in Amazon Elastic Container Registry (Amazon ECR), and AWS Lambda functions for known software vulnerabilities and unintended network exposure.\nhttps://docs.aws.amazon.com/inspector/latest/user/what-is-inspector.html\n\nSo, answer is B.","timestamp":"1714136460.0"},{"poster":"4555894","timestamp":"1713586020.0","upvote_count":"1","content":"Selected Answer: B\nEKS nodes == EC2 , ECR repository = AWS Inspector","comment_id":"1198934"},{"comment_id":"1197771","timestamp":"1713425340.0","content":"B. Inspector","poster":"tushar321","upvote_count":"2"},{"comment_id":"1196229","timestamp":"1713219420.0","content":"Selected Answer: A\nInspector not suppot for eks","poster":"AwsZora","upvote_count":"1"},{"comment_id":"1195897","timestamp":"1713168540.0","poster":"teo2157","upvote_count":"4","content":"Selected Answer: B\nSecurity hub integrates many Security features but the scaning itself is done by Amazon Inspector so going for B."},{"timestamp":"1713028620.0","comment_id":"1195063","upvote_count":"4","poster":"Zas1","content":"Selected Answer: B\nYou can use Amazon Inspector to check for unintended network accessibility of your nodes and for vulnerabilities on those Amazon EC2 instances.\nhttps://docs.aws.amazon.com/eks/latest/userguide/configuration-vulnerability-analysis.html"},{"comment_id":"1194966","poster":"Russs99","timestamp":"1713012780.0","content":"Selected Answer: A\nA is the correct answer for the given scenario","upvote_count":"1"},{"poster":"devnv","timestamp":"1713004680.0","comment_id":"1194877","content":"A is correct","upvote_count":"1"}],"url":"https://www.examtopics.com/discussions/amazon/view/138594-exam-aws-certified-solutions-architect-professional-sap-c02/","answer":"B","topic":"1","question_id":421,"answers_community":["B (90%)","10%"],"question_text":"A company is deploying a new application on AWS. The application consists of an Amazon Elastic Kubernetes Service (Amazon EKS) cluster and an Amazon Elastic Container Registry (Amazon ECR) repository. The EKS cluster has an AWS managed node group.\n\nThe company's security guidelines state that all resources on AWS must be continuously scanned for security vulnerabilities.\n\nWhich solution will meet this requirement with the LEAST operational overhead?","choices":{"B":"Activate Amazon Inspector to scan the EKS nodes and the ECR repository.","A":"Activate AWS Security Hub. Configure Security Hub to scan the EKS nodes and the ECR repository.","C":"Launch a new Amazon EC2 instance and install a vulnerability scanning tool from AWS Marketplace. Configure the EC2 instance to scan the EKS nodes. Configure Amazon ECR to perform a basic scan on push.","D":"Install the Amazon CloudWatch agent on the EKS nodes. Configure the CloudWatch agent to scan continuously. Configure Amazon ECR to perform a basic scan on push."},"unix_timestamp":1713004680,"isMC":true,"answer_ET":"B","answer_description":"","timestamp":"2024-04-13 12:38:00"},{"id":"jAOHvzPwAMDeVvjbUlh1","url":"https://www.examtopics.com/discussions/amazon/view/138597-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_description":"","question_text":"A company needs to improve the reliability of its ticketing application. The application runs on an Amazon Elastic Container Service (Amazon ECS) cluster. The company uses Amazon CloudFront to serve the application. A single ECS service of the ECS cluster is the CloudFront distributionâ€™s origin.\n\nThe application allows only a specific number of active users to enter a ticket purchasing flow. These users are identified by an encrypted attribute in their JSON Web Token (JWT). All other users are redirected to a waiting room module until there is available capacity for purchasing.\n\nThe application is experiencing high loads. The waiting room module is working as designed, but load on the waiting room is disrupting the applications availability.\nThis disruption is negatively affecting the application's ticket sale transactions.\n\nWhich solution will provide the MOST reliability for ticket sale transactions during periods of high load?","choices":{"D":"Move the application to an Amazon Elastic Kubernetes Service (Amazon EKS) cluster. Split the waiting room module into a pod that is separate from the ticketing pod. Use AWS App Mesh by provisioning the App Mesh controller for Kubernetes. Enable mTLS authentication and service-to-service authentication for communication between the ticketing pod and the waiting room pod. Ensure that the ticketing pod uses the JWT information and appropriately forwards requests to the waiting room pod.","C":"Create a separate service in the ECS cluster for the waiting room. Use a separate scaling configuration. Create a CloudFront function that inspects the JWT information and appropriately forwards requests to the ticketing service or the waiting room service.","A":"Create a separate service in the ECS cluster for the waiting room. Use a separate scaling configuration. Ensure that the ticketing service uses the JWT information and appropriately forwards requests to the waiting room service.","B":"Move the application to an Amazon Elastic Kubernetes Service (Amazon EKS) cluster. Split the waiting room module into a pod that is separate from the ticketing pod. Make the ticketing pod part of a StatefulSet. Ensure that the ticketing pod uses the JWT information and appropriately forwards requests to the waiting room pod."},"question_images":[],"answers_community":["C (100%)"],"isMC":true,"topic":"1","timestamp":"2024-04-13 12:43:00","exam_id":33,"answer_images":[],"question_id":422,"answer_ET":"C","discussion":[{"comment_id":"1195115","upvote_count":"11","content":"Selected Answer: C\nCFFunctions:You can validate hashed authorization tokens, such as JSON web tokens (JWT), by inspecting authorization headers or other request metadata.\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html","poster":"Zas1","timestamp":"1713037560.0"},{"timestamp":"1731784920.0","comment_id":"1313196","poster":"0b43291","upvote_count":"1","content":"Selected Answer: C\nBy separating the waiting room service, using separate scaling configurations, and leveraging CloudFront functions for efficient routing, Option C provides a reliable and scalable solution while minimizing architectural changes and operational overhead.\n\nThe other options have the following drawbacks:\nOption A: While it separates the waiting room service, it still relies on the ticketing service to handle the routing logic based on JWT information, which could become a bottleneck during high loads.\n\nOption B: Migrating to Amazon EKS and using StatefulSets may not be necessary for this use case and could introduce additional complexity and operational overhead.\n\nOption D: While using Amazon EKS and App Mesh provides advanced traffic management and security features, it may be an overkill for this specific requirement and could add unnecessary complexity to the architecture."},{"timestamp":"1726377120.0","upvote_count":"1","poster":"liuliangzhou","comment_id":"1283915","content":"Selected Answer: C\nA. No mention of finer control at the CloudFront level\nB. When it comes to migrating to EKS, it may bring additional complexity and cost.\nC. It combines the flexibility of ECS and the edge computing capability of CloudFront.\nD. It involves complex migration, configuration, and authentication mechanisms."},{"content":"Selected Answer: C\nOption A involves creating a separate service in the ECS cluster for the waiting room but relies on the ticketing service to forward requests to the waiting room service based on JWT information. This approach still puts some load and decision-making logic on the ticketing service, which can affect its performance during high load periods.","timestamp":"1718243220.0","upvote_count":"2","poster":"trungtd","comment_id":"1229582"},{"comment_id":"1214578","upvote_count":"1","timestamp":"1716233700.0","poster":"Win007","content":"A is correct"},{"timestamp":"1713004980.0","content":"A is correct","comment_id":"1194887","upvote_count":"1","poster":"devnv"}],"answer":"C","unix_timestamp":1713004980},{"id":"8Bws6gUv2S0UI4IsaiXD","discussion":[{"timestamp":"1673645520.0","poster":"masetromain","comments":[{"timestamp":"1673645520.0","content":"A. Using the cluster endpoint of the Aurora database instead of the reader endpoint would not help improve performance in this case, because the solution architect is already using read replicas to offload read traffic from the primary instance.\n\nC. Using the Lambda Provisioned Concurrency feature would not help improve performance in this case, as the problem is related to the number of connections to the database, not the number of instances running the Lambda function.\n\nE. Changing the API Gateway endpoint to an edge-optimized endpoint would not help improve performance in this case, as the problem is related to the number of connections to the database, not the location of the API Gateway endpoint.","upvote_count":"13","poster":"masetromain","comments":[{"poster":"mnsait","timestamp":"1732176420.0","upvote_count":"1","content":"This phrase helped me understand why A is not correct \"the solution architect is already using read replicas to offload read traffic from the primary instance\". Thank you @masetromain for the explanation.","comment_id":"1315712"}],"comment_id":"774877"}],"content":"Selected Answer: BD\nThe correct answer is B and D.\n\nB. Using RDS Proxy to set up a connection pool to the reader endpoint of the Aurora database can help improve the performance of the application by reducing the number of connections opened to the database. RDS Proxy manages the connection pool and routes incoming connections to the available read replicas, which can help with connection management and reduce the number of connections that need to be opened and closed.\n\nD. Moving the code for opening the database connection in the Lambda function outside of the event handler can help to improve the performance of the application by allowing the database connection to be reused across multiple requests. This avoids the need to open and close a new connection for each request, which can be time-consuming and resource-intensive.","upvote_count":"47","comment_id":"774876"},{"upvote_count":"1","poster":"amministrazione","content":"B. Use RDS Proxy to set up a connection pool to the reader endpoint of the Aurora database.\nD. Move the code for opening the database connection in the Lambda function outside of the event handler.","comment_id":"1275496","timestamp":"1725094500.0"},{"poster":"Malcnorth59","upvote_count":"1","comment_id":"1215012","content":"Selected Answer: BD\nThe issue is with the number of database connections, thee are the only two changes that would impact the number of concurrent DB connections.","timestamp":"1716300720.0"},{"content":"Selected Answer: BD\nB and D","poster":"gofavad926","upvote_count":"1","comment_id":"1175419","timestamp":"1710632340.0"},{"upvote_count":"3","timestamp":"1696172520.0","poster":"totten","content":"Selected Answer: BD\nB. Use RDS Proxy to set up a connection pool to the reader endpoint of the Aurora database.\n\nRDS Proxy helps manage and efficiently pool database connections, reducing the number of database connections required by the application. It helps improve performance and reduces the load on the database.\nD. Move the code for opening the database connection in the Lambda function outside of the event handler.\n\nBy reusing database connections, you can reduce the overhead of opening and closing connections for each Lambda invocation. You can use the Lambda execution context to keep the database connection open and reuse it across multiple requests within the same execution context.","comment_id":"1022389"},{"upvote_count":"1","content":"Selected Answer: BD\nBD for sure","poster":"NikkyDicky","timestamp":"1688306760.0","comment_id":"940953"},{"poster":"mfsec","content":"Selected Answer: BD\nRDS proxy + Lambda function","timestamp":"1680001320.0","comment_id":"853138","upvote_count":"4"},{"content":"Selected Answer: BD\nRDX proxy & connecting outside the handler method is up to 5 times faster than connecting inside.","timestamp":"1678927860.0","poster":"dev112233xx","upvote_count":"3","comment_id":"840446"},{"comment_id":"832831","content":"Selected Answer: BD\nhe Lambda function only queries an Amazon Aurora MySQL database- so i would reject option C","upvote_count":"2","timestamp":"1678272180.0","poster":"kiran15789"},{"upvote_count":"3","content":"This may be too logical answer :-) - Setting up RDS proxy will help connection pooling, So B is one answer. Now C vs D\nThis question focuses on serverless solutions and best practices of lambda. and question hints that lambda only contains simple code.so lambda concurrency improvements may not be be the cause for performance issues detected while testing, and guess what - app is still in testing phase. so code might have a flaw can be reviewed and changed as per lambda best practices - https://docs.aws.amazon.com/lambda/latest/dg/best-practices.html. I choose B and D","comment_id":"821649","poster":"God_Is_Love","timestamp":"1677342900.0"},{"upvote_count":"2","content":"Selected Answer: BD\nAccording to ChatGPT,\nBy reusing the same database connection across multiple invocations of the function, you can reduce the number of database connections that are opened and closed, which can help conserve resources and reduce the risk of running into database connection limits.","comment_id":"804873","timestamp":"1676074200.0","poster":"moota"},{"timestamp":"1675564140.0","comment_id":"798563","poster":"Amac1979","upvote_count":"4","content":"BD\nhttps://awstut.com/en/2022/04/30/connect-to-rds-outside-of-lambda-handler-method-to-improve-performance-en/"},{"content":"B/C\nlambda provisioned concurrency and RDS proxy are mentioned in same page.\nhttps://quintagroup.com/blog/aws-lambda-provisioned-concurrency","poster":"masssa","timestamp":"1674233820.0","comment_id":"782532","upvote_count":"1"},{"content":"Selected Answer: BC\nhttps://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-proxy.howitworks.html\nhttps://docs.aws.amazon.com/lambda/latest/dg/provisioned-concurrency.html","timestamp":"1674196440.0","upvote_count":"1","comment_id":"781929","poster":"Untamables"},{"comment_id":"779429","upvote_count":"1","timestamp":"1674002340.0","content":"B/C\nProvisioned Concurrency needed: https://www.reddit.com/r/aws/comments/gcwtqt/lambda_provisioned_concurrency_with_aurora/\nWith connection Pool, no to worry D","poster":"jhonivy"}],"answer_ET":"BD","exam_id":33,"topic":"1","timestamp":"2023-01-13 22:32:00","url":"https://www.examtopics.com/discussions/amazon/view/95100-exam-aws-certified-solutions-architect-professional-sap-c02/","answer":"BD","answer_description":"","question_id":423,"question_images":[],"question_text":"A solutions architect has developed a web application that uses an Amazon API Gateway Regional endpoint and an AWS Lambda function. The consumers of the web application are all close to the AWS Region where the application will be deployed. The Lambda function only queries an Amazon Aurora MySQL database. The solutions architect has configured the database to have three read replicas.\n\nDuring testing, the application does not meet performance requirements. Under high load, the application opens a large number of database connections. The solutions architect must improve the applicationâ€™s performance.\n\nWhich actions should the solutions architect take to meet these requirements? (Choose two.)","unix_timestamp":1673645520,"choices":{"B":"Use RDS Proxy to set up a connection pool to the reader endpoint of the Aurora database.","A":"Use the cluster endpoint of the Aurora database.","D":"Move the code for opening the database connection in the Lambda function outside of the event handler.","C":"Use the Lambda Provisioned Concurrency feature.","E":"Change the API Gateway endpoint to an edge-optimized endpoint."},"answer_images":[],"isMC":true,"answers_community":["BD (98%)","2%"]},{"id":"X2RGwcKMm6c89zeAqUuB","discussion":[{"comment_id":"1203266","timestamp":"1714245720.0","content":"Answer is A . \nThe error occurs because the trust relationship in the parent account that allows the EC2 instance to assume a role may have been broken or misconfigured. This can happen when a role is recreated with a different ARN but the same role name. The trust policy must be updated to reflect the correct ARN.\nOption A addresses this by ensuring that the trust policy in the parent account contains the correct ARN for the role in the child account, allowing the sts:AssumeRole action.\nOption B, which allows the root principal to assume the role, is risky and should be avoided due to security implications.","upvote_count":"8","poster":"SKS"},{"upvote_count":"5","comment_id":"1203256","content":"Selected Answer: A\nIt is A.\nB is incorrect because specifying the root principal opens access up to all principals in the child account that are allowed to use sts.","poster":"jtzt2003","timestamp":"1714244700.0"},{"upvote_count":"1","comment_id":"1321364","timestamp":"1733230560.0","poster":"dv1","content":"Selected Answer: B\nThere is no role ARN in the statement of a trust policy (only principal), so A is not correct."},{"poster":"TomTom","content":"Selected Answer: A\nA is correct.\nThere is a statement in the question: \"The EC2 instance has an instance profile that the EC2 instance uses to assume a role in a parent account.\"\nTherefore:\nOption A is the most accurate solution to address the issue of the EC2 instance not being able to assume the role in the parent account.","timestamp":"1732243920.0","comment_id":"1316124","upvote_count":"1"},{"poster":"liuliangzhou","content":"Selected Answer: A\nThis option is directly related to the issue mentioned in the explanation. When a character is recreated in a sub account, its ARN will change, but the character name may remain unchanged. If the ARN in the trust policy is not updated to reflect the new ARN, the EC2 instance will not be able to successfully assume that role. Therefore, updating the trust policy to include the correct ARN is the key to solving the problem. The 'correct ARN' here should refer to the ARN currently held by the character recreated in the parent account. That is to say, the corresponding ARN in the parent account policy needs to be updated.\nOption B adds a statement that allows the sub account root principal to perform the sts: AssemeRole operation. This is usually not the best practice, as allowing the root account to directly assume roles would pose security risks. The root account is the most powerful identity in AWS accounts and should be strictly protected.","upvote_count":"2","timestamp":"1726379580.0","comment_id":"1283927"},{"timestamp":"1723465320.0","content":"Selected Answer: B\nIt's B for sure","poster":"asquared16","comment_id":"1264639","upvote_count":"1"},{"timestamp":"1722126300.0","poster":"RotterDam","comment_id":"1256523","upvote_count":"2","content":"Selected Answer: A\n(A) Because EC2 Instance 's role must be added as a trusted principal so that the parent role can trust it"},{"comment_id":"1248265","content":"Selected Answer: B\nThe issue is that the EC2 instance in the child account cannot assume the role in the parent account due to insufficient permissions, even though the role has been recreated in the CloudFormation template with the same name.\n\nEditing the trust policy of the role in the parent account and ensuring the target role ARN is correct does not grant the necessary permissions for the child account to assume the role. The trust policy governs which principals (accounts, users, roles, or services) are allowed to assume the role.\n\nIn this case, the correct solution is option B","poster":"mark_232323","upvote_count":"2","timestamp":"1721039280.0"},{"timestamp":"1717482120.0","comment_id":"1223979","upvote_count":"1","content":"Selected Answer: C\nit's custom IAM role name so C","poster":"trungtd"},{"comment_id":"1218556","content":"Selected Answer: A\nShould be \"A\".","poster":"titi_r","timestamp":"1716667920.0","upvote_count":"4"},{"content":"In IAM roles, use the Principal element in the role trust policy to specify who can assume the role. For cross-account access, you must specify the 12-digit identifier of the trusted account. [â€¦]\nWhen you allow access to a different account, an administrator in that account must then grant access to an identity (IAM user or role) in that account. When you specify an AWS account, you can use the account ARN (arn:aws:iam::account-ID:root), or a shortened form that consists of the \"AWS\": prefix followed by the account ID.","upvote_count":"1","poster":"titi_r","comments":[{"upvote_count":"1","comment_id":"1202858","content":"E.g.:\n\"Principal\": { \"AWS\": \"arn:aws:iam::123456789012:root\" }\n\"Principal\": { \"AWS\": \"123456789012\" }\nThe account ARN and the shortened account ID behave the same way. Both delegate permissions to the account. Using the account ARN in the Principal element does not limit permissions to only the root user of the account.\n\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html\nhttps://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles\n\nA or B?!","timestamp":"1714173240.0","poster":"titi_r"}],"timestamp":"1714173240.0","comment_id":"1202857"},{"content":"C\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_CreateStack.html#:~:text=If%20you%20have%20IAM%20resources%20with%20custom%20names%2C%20you%20must%20specify%20CAPABILITY_NAMED_IAM","comment_id":"1197781","timestamp":"1713426120.0","upvote_count":"2","poster":"tushar321"},{"timestamp":"1713177420.0","content":"Selected Answer: B\nThe solutions architect should ensure that the trust relationship of the role in the parent account allows the child account to assume the role. The trust relationship is defined in the role's trust policy. The trust policy should specify the AWS account ID of the child account as a Principal.","poster":"teo2157","comment_id":"1195981","upvote_count":"2"},{"poster":"devnv","upvote_count":"1","content":"B is the correct answer","timestamp":"1713005160.0","comment_id":"1194891"}],"question_images":[],"topic":"1","isMC":true,"question_id":424,"answer":"A","answer_ET":"A","unix_timestamp":1713005160,"answer_images":[],"choices":{"A":"In the parent account, edit the trust policy for the role that the EC2 instance needs to assume. Ensure that the target role ARN in the existing statement that allows the sts:AssumeRole action is correct. Save the trust policy.","D":"Update the CloudFormation stack again. Specify the CAPABILITY_IAM capability and the CAPABILITY_NAMED_IAM capability.","B":"In the parent account, edit the trust policy for the role that the EC2 instance needs to assume. Add a statement that allows the sts:AssumeRole action for the root principal of the child account. Save the trust policy.","C":"Update the CloudFormation stack again. Specify only the CAPABILITY_NAMED_IAM capability."},"exam_id":33,"answers_community":["A (67%)","B (29%)","5%"],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/138598-exam-aws-certified-solutions-architect-professional-sap-c02/","question_text":"A solutions architect is creating an AWS CloudFormation template from an existing manually created non-production AWS environment. The CloudFormation template can be destroyed and recreated as needed. The environment contains an Amazon EC2 instance. The EC2 instance has an instance profile that the EC2 instance uses to assume a role in a parent account.\n\nThe solutions architect recreates the role in a CloudFormation template and uses the same role name. When the CloudFormation template is launched in the child account, the EC2 instance can no longer assume the role in the parent account because of insufficient permissions\n\nWhat should the solutions architect do to resolve this issue?","timestamp":"2024-04-13 12:46:00"},{"id":"XPiuZ3LA7NzWpJPk87yf","url":"https://www.examtopics.com/discussions/amazon/view/138599-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_description":"","question_text":"A company's web application has reliability issues. The application serves customers globally. The application runs on a single Amazon EC2 instance and performs read-intensive operations on an Amazon RDS for MySQL database.\n\nDuring high load, the application becomes unresponsive and requires a manual restart of the EC2 instance. A solutions architect must improve the application's reliability.\n\nWhich solution will meet this requirement with the LEAST development effort?","choices":{"B":"Run the application on EC2 instances that are in an Auto Scaling group. Place the EC2 instances behind an Elastic Load Balancing (ELB) load balancer. Replace the database service with Amazon Aurora. Use Aurora Replicas for the read-intensive operations.","A":"Create an Amazon CloudFront distribution. Specify the EC2 instance as the distributionâ€™s origin. Configure a Multi-AZ deployment for the RDS for MySQL database. Use the standby DB instance for the read-intensive operations.","D":"Migrate the application to AWS Lambda functions. Create read replicas for the RDS for MySQL database. Use the read replicas for the read-intensive operations.","C":"Deploy AWS Global Accelerator. Configure a Multi-AZ deployment for the RDS for MySQL database. Use the standby DB instance for the read-intensive operations."},"question_images":[],"answers_community":["B (79%)","7%","7%"],"isMC":true,"topic":"1","exam_id":33,"timestamp":"2024-04-13 12:48:00","answer_images":[],"question_id":425,"answer_ET":"B","discussion":[{"upvote_count":"1","poster":"0b43291","comment_id":"1313204","content":"Selected Answer: B\nWhile the Classic Load Balancer may have limitations compared to the newer Application Load Balancers (ALB) or Network Load Balancers (NLB), it still provides significant benefits over a single EC2 instance architecture.\n\nTherefore, if we consider Option B with the assumption that \"ELB\" refers to the Classic Load Balancer, it would still be a better solution than Option A, which relies on a single EC2 instance as the origin for the CloudFront distribution.\n\nCombining an ELB (even the Classic Load Balancer) with an Auto Scaling group and a scalable database solution like Amazon Aurora with read replicas would provide a more reliable and scalable architecture than a single EC2 instance and a Multi-AZ RDS for MySQL database.","timestamp":"1731785880.0"},{"timestamp":"1731785700.0","poster":"0b43291","comment_id":"1313203","upvote_count":"1","content":"B is all great apart from the ELB instead of an ALB"},{"content":"B is right answer , A sound right but there is no need of cloud front for this use case.","comment_id":"1309282","poster":"AzureDP900","upvote_count":"1","timestamp":"1731205140.0"},{"poster":"Nandha2021","content":"Answer B","timestamp":"1719462900.0","upvote_count":"1","comment_id":"1237871"},{"content":"Selected Answer: B\nObviously B","upvote_count":"2","poster":"blackname","comment_id":"1216975","timestamp":"1716493680.0"},{"timestamp":"1716373140.0","upvote_count":"1","poster":"Win007","content":"D is the answer","comment_id":"1215658"},{"upvote_count":"1","poster":"titi_r","comment_id":"1202874","timestamp":"1714175400.0","content":"Selected Answer: B\nAnswer: B."},{"timestamp":"1714137480.0","comment_id":"1202611","upvote_count":"3","content":"Selected Answer: B\nThe answer is B.\n\n- Automatically restart using health check when not responding ->>ASG\n- Global customers and read-intensive >> 'Read Replica' should be available.\n\nA: EC2 is still alone\nC: EC2 is still alone\nD: It's not a minimum development effort","poster":"Fu7ed"},{"content":"Selected Answer: D\nD. Migrate the application to AWS Lambda functions. Create read replicas for the RDS for MySQL database. Use the read replicas for the read-intensive operations.\n\nHere's why the other options require more development effort:\n\nA. CloudFront with Multi-AZ RDS: This requires setting up CloudFront and configuring it to point to the EC2 instance. It also requires switching to a Multi-AZ RDS deployment, which might involve downtime.\nB. Auto Scaling with ELB and Aurora: This requires the most effort. You need to migrate the application to run on multiple EC2 instances managed by Auto Scaling, set up an ELB to distribute traffic, migrate the database to Aurora, and configure Aurora Replicas.\nC. Global Accelerator with Multi-AZ RDS: Similar to option A, this involves setting up Global Accelerator and requires a Multi-AZ RDS deployment.","poster":"4555894","comment_id":"1198935","upvote_count":"1","timestamp":"1713586620.0","comments":[{"comment_id":"1203258","upvote_count":"3","timestamp":"1714244880.0","content":"You are dangerously stupid. It is B","comments":[{"poster":"TiredDad","timestamp":"1725579900.0","content":"This comment made me laugh! I would also go with B.","upvote_count":"1","comment_id":"1279245"}],"poster":"jtzt2003"}]},{"timestamp":"1713427500.0","comment_id":"1197788","poster":"tushar321","content":"B is correct","upvote_count":"1"},{"comment_id":"1197647","upvote_count":"4","content":"Selected Answer: B\nRDS need readable standby instance","poster":"noisonnoiton","timestamp":"1713406800.0"},{"upvote_count":"1","comment_id":"1195543","content":"Selected Answer: A\nB is obviously correct for LEAST effort","poster":"federikinho","timestamp":"1713101820.0"},{"comment_id":"1195071","comments":[{"content":"B Excuse me...\n\"Use the standby DB instance for the read-intensive operations\" --> NOT","poster":"Zas1","comment_id":"1218898","timestamp":"1716717540.0","upvote_count":"1"}],"content":"Selected Answer: C\nCustomers globally sounds good Global Accelerator\nMore Work develope migrate app to Lambda\nAmazon Relational Database Service (Amazon RDS) for PostgreSQL and for MySQL now support a new Amazon RDS Multi-AZ deployment option with one primary and two readable STANDBY database (DB) instances across three Availability Zones (AZs). \nhttps://pages.awscloud.com/Deep-dive-on-Amazon-RDS-Multi-AZ-with-two-readable-standbys_2022_0408-DAT_OD.html\nFor a standard accelerator, you can add one or more regional resources, such as load balancers or EC2 instances endpoints,\nhttps://docs.aws.amazon.com/global-accelerator/latest/dg/introduction-get-started.html","timestamp":"1713030240.0","upvote_count":"1","poster":"Zas1"},{"poster":"devnv","upvote_count":"2","content":"B is correct","comment_id":"1194892","timestamp":"1713005280.0"}],"answer":"B","unix_timestamp":1713005280}],"exam":{"id":33,"provider":"Amazon","isMCOnly":true,"lastUpdated":"11 Apr 2025","numberOfQuestions":529,"name":"AWS Certified Solutions Architect - Professional SAP-C02","isImplemented":true,"isBeta":false},"currentPage":85},"__N_SSP":true}