{"pageProps":{"questions":[{"id":"1kOaRvbAAK5iQYonuh5v","exam_id":31,"discussion":[{"upvote_count":"29","comment_id":"784413","timestamp":"1674399720.0","content":"Selected Answer: B\nOption D is similar to option B in that it uses Amazon API Gateway to handle the API requests, but it also includes an EC2 instance to perform the tax computations. However, using an EC2 instance in this way is less scalable and less elastic than using AWS Lambda to perform the computations. An EC2 instance is a fixed resource and requires manual scaling and management, while Lambda is an event-driven, serverless compute service that automatically scales with the number of requests, making it more suitable for handling variable workloads and reducing response times during high traffic periods. Additionally, Lambda is more cost-efficient than EC2 instances, as you only pay for the compute time consumed by your functions, making it a more cost-effective solution.","poster":"bullrem"},{"comment_id":"748326","comments":[{"poster":"pentium75","content":"Even though you can scale EC2 instances (which is less flexible as Lambda), D does not mention scaling but rather a single EC2 instance. Thus it's clearly out.","comment_id":"1106580","timestamp":"1703654520.0","upvote_count":"2"}],"poster":"career360guru","timestamp":"1671304800.0","content":"Selected Answer: B\nOption B. Though D is also possible B is more scalable as Lambda will autoscale to meet the dynamic load.","upvote_count":"6"},{"content":"Selected Answer: B\nBoth API Gateway and Lambda are suitable as they are scalable.","comment_id":"1353523","poster":"satyaammm","timestamp":"1739034420.0","upvote_count":"1"},{"content":"Selected Answer: B\nAns B - I was going for option D... but then I saw bullrem's response (1 year, 9 mth ago): \n\"Option D is similar to option B in that it uses Amazon API Gateway to handle the API requests, but it also includes an EC2 instance to perform the tax computations. However, using an EC2 instance in this way is less scalable and less elastic than using AWS Lambda to perform the computations.\"","poster":"PaulGa","upvote_count":"2","comment_id":"1303237","timestamp":"1729939080.0"},{"timestamp":"1716892920.0","content":"Selected Answer: B\nb. easy","comment_id":"1220147","upvote_count":"2","poster":"lofzee"},{"comment_id":"1182953","content":"Option B: Lamda = scalable and elastic","poster":"TruthWS","upvote_count":"3","timestamp":"1711421820.0"},{"content":"Selected Answer: B\nOption B leverages AWS Lambda, which is a serverless compute service that automatically scales in response to incoming requests. When a request is made to the API hosted on Amazon API Gateway, API Gateway triggers the associated AWS Lambda function, passing the item names as input parameters. The Lambda function then performs the tax computations based on the provided item names. AWS Lambda automatically manages the compute capacity, ensuring that there is no need to provision or manage servers. This serverless architecture offers scalability and elasticity, as Lambda functions can scale out to handle a larger number of inquiries during the holiday season and scale in during periods of lower demand. Additionally, AWS Lambda is a fully managed service, reducing operational overhead for the company.","comment_id":"1181822","upvote_count":"2","poster":"Uzbekistan","timestamp":"1711295940.0"},{"content":"The thing that bothers me about B is that the request sends the name and then based on the name, the tax is calculated. How do you calculate a value e.g. tax if you just have a name...","poster":"app12","timestamp":"1705740060.0","upvote_count":"3","comment_id":"1127147"},{"content":"Selected Answer: B\nEC2 without autoscaling is not elastic so A, C & D won't be suitable. B uses AWS Lambda which is elastic and scalable by design.","upvote_count":"4","poster":"awsgeek75","timestamp":"1704060000.0","comment_id":"1110837"},{"content":"Selected Answer: B\nThough EC2 can scale (even if less flexible than Lambda), neither A, C nor D involve scaling. All these answers are about a single EC2 instance or a pair of EC2 instances. The only answer that includes scaling and elasticity is B.","timestamp":"1703654580.0","upvote_count":"5","comment_id":"1106581","poster":"pentium75","comments":[{"timestamp":"1705327080.0","comment_id":"1123421","upvote_count":"1","content":"I agree.","poster":"LoXoL"}]},{"timestamp":"1701343440.0","poster":"Ruffyit","content":"scalable and elastic = serverless = API gateway and AWS Lambda","comment_id":"1084290","upvote_count":"3"},{"upvote_count":"1","poster":"paniya93","comment_id":"1022844","content":"Selected Answer: B\nin 002 answer is B. Why is that?","timestamp":"1696225500.0"},{"poster":"vijaykamal","content":"Selected Answer: B\nOptions A, C, and D involve EC2 instances, which are not as inherently scalable and elastic as serverless AWS Lambda functions, and they would require more manual management and operational overhead. Therefore, option B is the most appropriate choice for a scalable and elastic API solution.","timestamp":"1695824520.0","upvote_count":"3","comment_id":"1018883"},{"upvote_count":"3","comment_id":"1006021","content":"Selected Answer: B\nREST API using Amazon API Gateway and integrating it with AWS Lambda (option B) is the recommended approach to achieve a scalable and elastic solution for the company's API during the holiday season.\n________\nNo good EC2 in this case\nusing an EC2 instance in this way is less scalable and less elastic than using AWS Lambda to perform the computations","timestamp":"1694548380.0","poster":"Guru4Cloud"},{"upvote_count":"2","content":"Selected Answer: B\nscalable and elastic = serverless = API gateway and AWS Lambda","comment_id":"1005347","timestamp":"1694492160.0","poster":"TariqKipkemei"},{"poster":"Guru4Cloud","content":"B) Design a REST API using Amazon API Gateway that accepts the item names. API Gateway passes item names to AWS Lambda for tax computations.\n\nThis option provides the most scalable and elastic solution:\n\nAPI Gateway handles creating the REST API frontend to receive requests\nLambda functions scale automatically to handle spikes in traffic during peak seasons\nNo servers to manage for the computations, providing high scalability","timestamp":"1692284460.0","comment_id":"983759","upvote_count":"3"},{"comment_id":"934175","timestamp":"1687765140.0","poster":"cookieMr","content":"Selected Answer: B\nOption A (hosting an API on an Amazon EC2 instance) would require manual management and scaling of the EC2 instances, making it less scalable and elastic compared to a serverless solution.\n\nOption C (creating an Application Load Balancer with EC2 instances for tax computations) also involves manual management of the instances and does not offer the same level of scalability and elasticity as a serverless solution.\n\nOption D (designing a REST API using API Gateway and connecting it with an API hosted on an EC2 instance) adds unnecessary complexity and management overhead. It is more efficient to directly integrate API Gateway with AWS Lambda for tax computations.\n\nTherefore, designing a REST API using Amazon API Gateway and integrating it with AWS Lambda (option B) is the recommended approach to achieve a scalable and elastic solution for the company's API during the holiday season.","upvote_count":"3"},{"upvote_count":"2","poster":"Bmarodi","comment_id":"905903","timestamp":"1684933140.0","content":"Selected Answer: B\nOption B is the solution that is scalable and elastic, hence this meets requirements."},{"upvote_count":"2","timestamp":"1682465040.0","comment_id":"880957","content":"Selected Answer: B\nI also prefer B over D. However, it is quite vague since the question doesn't provide the processing time. The maximum processing time for AWS Lambda is 15 minutes.","poster":"jayce5"},{"upvote_count":"5","timestamp":"1674983760.0","poster":"ProfXsamson","comment_id":"791490","content":"B. Serverless option wins over EC2"},{"content":"Lambda is serverless is scalable so answer should be B.","timestamp":"1671866280.0","upvote_count":"2","poster":"sona21","comment_id":"754749"},{"poster":"Buruguduystunstugudunstuy","comments":[{"content":"You are only explained the \"front\" part of scalable, unless you have end to end scalable solution it doesn't matter how scalable is your front end. Here in D it ONLY covers the api front end but the constraint is EC2 instance which is ONE and not in a scalable mode. I think B is more suitable given how little information is provided.","comment_id":"926085","poster":"markw92","upvote_count":"3","timestamp":"1687014900.0"},{"comment_id":"753569","upvote_count":"1","content":"Option A (providing an API hosted on an EC2 instance) would not be a suitable solution as it may not be scalable or elastic enough to handle the increased demand during the holiday season.\n\nOption B (designing a REST API using API Gateway that passes item names to Lambda for tax computations) would not be a suitable solution as it may not be suitable for computations that require a larger amount of resources or longer execution times.\n\nOption C (creating an Application Load Balancer with two EC2 instances behind it) would not be a suitable solution as it may not provide the necessary scalability and elasticity. Additionally, it would not provide the benefits of using API Gateway, such as API management and monitoring capabilities.","poster":"Buruguduystunstugudunstuy","timestamp":"1671733560.0","comments":[{"comment_id":"767668","comments":[{"content":"Sorry, it should say \"Therefore D is wrong, and B is possible.\"","upvote_count":"4","timestamp":"1673008920.0","poster":"JayBee65","comment_id":"767670"}],"poster":"JayBee65","timestamp":"1673008920.0","upvote_count":"4","content":"But Option D is not scalable. The requirements state \"A solutions architect needs to design a solution that is scalable and elastic\". D fails to meet these requirements. C on the other hand is scalable. There is nothing in the question to suggest that a longer execution than lambda can handle happens. Therefore D is wrong, and C is possible."}]}],"timestamp":"1671733560.0","content":"Selected Answer: D\nTo design a scalable and elastic solution for providing an API for tax computations, the solutions architect should design a REST API using Amazon API Gateway that connects with an API hosted on an Amazon EC2 instance (Option D).\n\nAPI Gateway is a fully managed service that makes it easy to create, publish, maintain, monitor, and secure APIs at any scale. By designing a REST API using API Gateway, the solutions architect can create an API that is scalable, flexible, and easy to use. The API Gateway can accept and pass the item names to the EC2 instance for tax computations, and the EC2 instance can perform the required computations when the API request is made.","upvote_count":"2","comment_id":"753568"},{"content":"B is the option","timestamp":"1671509280.0","poster":"BENICE","upvote_count":"1","comment_id":"750483"},{"timestamp":"1670154420.0","comment_id":"735045","upvote_count":"3","content":"Selected Answer: B\nB. Lambda scales much better","poster":"Gil80"},{"content":"B is the correct ans","timestamp":"1669659720.0","poster":"Kapello10","upvote_count":"2","comment_id":"729516"},{"poster":"Gabs90","content":"Selected Answer: B\nB is correct, lamba is a better choice","comment_id":"729225","upvote_count":"2","timestamp":"1669645920.0"},{"upvote_count":"2","timestamp":"1669384560.0","content":"B is the right answer","poster":"VISHNUKANDH","comment_id":"726819"},{"comment_id":"724478","upvote_count":"2","timestamp":"1669135080.0","poster":"Wpcorgan","content":"B is correct"},{"timestamp":"1668678060.0","comment_id":"720371","poster":"BENICE","content":"Seems like B is the correct option","upvote_count":"4"},{"comment_id":"719190","poster":"goatbernard","timestamp":"1668556380.0","content":"Selected Answer: B\nLambda","upvote_count":"2"},{"upvote_count":"4","poster":"sdasdawa","content":"Selected Answer: B\nhttps://www.examtopics.com/discussions/amazon/view/35849-exam-aws-certified-solutions-architect-associate-saa-c02/","comment_id":"718904","timestamp":"1668525720.0"},{"poster":"Ohnet","upvote_count":"5","timestamp":"1668524880.0","comment_id":"718892","content":"It should be B,Lambda server-less is scalable and elastic than EC2 api gateway solution"},{"content":"B. Lambda serverless is scalable and elastic than EC2 api gateway solution","poster":"Nigma","comment_id":"718885","timestamp":"1668524160.0","upvote_count":"5"}],"question_id":101,"topic":"1","answer_images":[],"isMC":true,"answer_ET":"B","question_images":[],"choices":{"A":"Provide an API hosted on an Amazon EC2 instance. The EC2 instance performs the required computations when the API request is made.","B":"Design a REST API using Amazon API Gateway that accepts the item names. API Gateway passes item names to AWS Lambda for tax computations.","D":"Design a REST API using Amazon API Gateway that connects with an API hosted on an Amazon EC2 instance. API Gateway accepts and passes the item names to the EC2 instance for tax computations.","C":"Create an Application Load Balancer that has two Amazon EC2 instances behind it. The EC2 instances will compute the tax on the received item names."},"answer_description":"","answers_community":["B (98%)","3%"],"answer":"B","timestamp":"2022-11-15 15:56:00","unix_timestamp":1668524160,"question_text":"A company provides an API to its users that automates inquiries for tax computations based on item prices. The company experiences a larger number of inquiries during the holiday season only that cause slower response times. A solutions architect needs to design a solution that is scalable and elastic.\n\nWhat should the solutions architect do to accomplish this?","url":"https://www.examtopics.com/discussions/amazon/view/87529-exam-aws-certified-solutions-architect-associate-saa-c03/"},{"id":"QMRFUqzpqyl5RU5fIETf","answer_images":[],"unix_timestamp":1668520500,"url":"https://www.examtopics.com/discussions/amazon/view/87517-exam-aws-certified-solutions-architect-associate-saa-c03/","exam_id":31,"answers_community":["C (83%)","Other"],"answer_description":"","discussion":[{"content":"CCCCCCCCC\nField-level encryption allows you to enable your users to securely upload sensitive information to your web servers. The sensitive information provided by your users is encrypted at the edge, close to the user, and remains encrypted throughout your entire application stack. This encryption ensures that only applications that need the data—and have the credentials to decrypt it—are able to do so.","timestamp":"1669099920.0","upvote_count":"58","comment_id":"724130","poster":"Bobbybash"},{"timestamp":"1720326420.0","upvote_count":"2","content":"Selected Answer: C\nfield level encryption allow to protect sensitive information throughout the application stack","poster":"jatric","comment_id":"1243693"},{"timestamp":"1712130600.0","upvote_count":"4","poster":"zinabu","content":"With Amazon CloudFront, you can enforce secure end-to-end connections to origin servers by using HTTPS. Field-level encryption adds an additional layer of security that lets you protect specific data throughout system processing so that only certain applications can see it.\n\nField-level encryption allows you to enable your users to securely upload sensitive information to your web servers. The sensitive information provided by your users is encrypted at the edge, close to the user, and remains encrypted throughout your entire application stack. This encryption ensures that only applications that need the data—and have the credentials to decrypt it—are able to do so.","comment_id":"1188519"},{"poster":"huzaifaharoun","content":"C: \nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","upvote_count":"3","comment_id":"1165349","timestamp":"1709534640.0"},{"poster":"NayeraB","upvote_count":"3","content":"Selected Answer: C\nC is the only one that addresses handling sensitive information.","comment_id":"1150889","timestamp":"1707993000.0"},{"comment_id":"1125122","poster":"bujuman","upvote_count":"2","content":"Selected Answer: C\nReviewing my first vote after research. It seems that C is the best answer:\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","timestamp":"1705508700.0"},{"timestamp":"1704061620.0","upvote_count":"2","comment_id":"1110849","content":"Selected Answer: C\nA if for fetch. B requires cookies. D just enforces HTTPS which is already mentioned for the solution (CloudFront only allows HTTPS) and does not add another layer of security. \nC provides field level encryption security which is another layer of security.","poster":"awsgeek75"},{"comment_id":"1096968","upvote_count":"2","poster":"master9","timestamp":"1702604700.0","content":"Selected Answer: A\nPlease go through below link: \n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-signed-urls.html","comments":[{"timestamp":"1703654820.0","content":"This is about controlling access for downloads (making sure that the download request is coming from an authenticated user), it has nothing to do with protecting data that is sent to the application.","comment_id":"1106583","upvote_count":"3","poster":"pentium75"}]},{"timestamp":"1702361460.0","content":"cccc,this link https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","upvote_count":"3","poster":"Leo1688","comment_id":"1094174"},{"upvote_count":"4","poster":"vijaykamal","timestamp":"1695824820.0","comment_id":"1018889","content":"Selected Answer: C\nOptions A and B (signed URL and signed cookie) are used for controlling access to specific resources and are typically used for restricting access based on URLs or cookies. They do not provide field-level encryption for sensitive data within HTTP requests.\n\nOption D (configuring CloudFront with the Origin Protocol Policy set to HTTPS Only for the Viewer Protocol Policy) is related to enforcing HTTPS communication between CloudFront and the viewer (end-user). While important for security, it doesn't address the specific requirement of protecting sensitive data within the application stack."},{"poster":"Guru4Cloud","timestamp":"1692286740.0","content":"Selected Answer: C\nC) Configure a CloudFront field-level encryption profile.\n\nField-level encryption allows you to encrypt sensitive information at the edge before distributing content through CloudFront. It provides an additional layer of security for sensitive user-submitted data.\n\nThe other options would not provide field-level encryption","upvote_count":"2","comment_id":"983775"},{"upvote_count":"1","timestamp":"1690493400.0","comment_id":"965056","poster":"mr_D3v1n3","content":"Would the HTTPS imply that the cert was signed by a CA"},{"content":"Selected Answer: C\nOption A and Option B are used for controlling access to specific resources or content based on signed URLs or cookies. While they provide security and access control, they do not provide field-level encryption for sensitive data within the requests.\n\nOption D ensures that communication between the viewer and CloudFront is encrypted with HTTPS. However, it does not specifically address the protection and encryption of sensitive information within the application stack.\n\nTherefore, the most appropriate action to protect sensitive information throughout the entire application stack and restrict access to certain applications is to configure a CloudFront field-level encryption profile (Option C).","upvote_count":"3","poster":"cookieMr","comment_id":"934181","timestamp":"1687765860.0"},{"content":"Selected Answer: C\nWith Amazon CloudFront, you can enforce secure end-to-end connections to origin servers by using HTTPS. Field-level encryption adds an additional layer of security that lets you protect specific data throughout system processing so that only certain applications can see it.","poster":"Jeeva28","comment_id":"907791","upvote_count":"2","timestamp":"1685166720.0"},{"timestamp":"1678165860.0","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html\n\n\"Field-level encryption allows you to enable your users to securely upload sensitive information to your web servers. The sensitive information provided by your users is encrypted at the edge, close to the user, and remains encrypted throughout your entire application stack\".","comment_id":"831574","upvote_count":"4","poster":"WherecanIstart"},{"comment_id":"795237","timestamp":"1675263660.0","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-levelencryption.\nhtml\n\"With Amazon CloudFront, you can enforce secure end-to-end connections to origin servers by using\nHTTPS. Field-level encryption adds an additional layer of security that lets you protect specific data\nthroughout system processing so that only certain applications can see it.\"","poster":"bdp123","upvote_count":"4"},{"comment_id":"791506","upvote_count":"2","timestamp":"1674984360.0","poster":"ProfXsamson","content":"C, field-level encryption should be used when necessary to protect sensitive data."},{"timestamp":"1673422080.0","content":"It should be C","comment_id":"772176","upvote_count":"3","poster":"ayanshbhaiji"},{"timestamp":"1672839480.0","poster":"HayLLlHuK","upvote_count":"4","comment_id":"765701","content":"Selected Answer: C\nC!\nCloudFront’s field-level encryption further encrypts sensitive data in an HTTPS form using field-specific encryption keys (which you supply) before a POST request is forwarded to your origin. This ensures that sensitive data can only be decrypted and viewed by certain components or services in your application stack.\nhttps://aws.amazon.com/about-aws/whats-new/2017/12/introducing-field-level-encryption-on-amazon-cloudfront/"},{"timestamp":"1672812360.0","poster":"kbaruu","upvote_count":"2","comment_id":"765304","content":"Selected Answer: C\nField-Level Encryption allows you to securely upload user-submitted sensitive information to your web servers. x Signed cookie - provides access to download multiple private files (from Tutorial Dojo)"},{"upvote_count":"3","poster":"Mindvision","timestamp":"1672669680.0","comment_id":"763783","content":"C = Answer\n\nI concur. why? CloudFront's field-level encryption further encrypts sensitive data in an HTTPS form using field-specific encryption keys (which you supply) before a POST request is forwarded to your origin. This ensures that sensitive data can only be decrypted and viewed by certain components or services in your application stack."},{"upvote_count":"2","content":"Selected Answer: B\nhe correct answer is B. Configure a CloudFront signed cookie.\n\nCloudFront signed cookies can be used to protect sensitive information by requiring users to authenticate with a signed cookie before they can access content that is served through CloudFront. This can be used to restrict access to certain applications and ensure that the sensitive information is protected throughout the entire application stack.\n\nOption A, Configure a CloudFront signed URL, would also provide an additional layer of security by requiring users to authenticate with a signed URL before they can access content served through CloudFront. However, this option would not protect the sensitive information throughout the entire application stack.","comment_id":"763466","comments":[{"comment_id":"763467","comments":[{"poster":"JayBee65","content":"CloudFront signed cookie are used to control user access to sensitive documents but that is not what is required. \"Some of the information submitted by users is sensitive\" This is what you are looking to protect, when it's in the system, (not when users are trying to access it and this is not mentioned in the Q).\nField-level encryption encrypts sensitive data ... This ensures sensitive data can only be decrypted and viewed by certain components or services. (q states \"access to the information should be restricted to certain applications.\"), so C is a perfect match","comment_id":"767680","timestamp":"1673009400.0","upvote_count":"2"}],"timestamp":"1672626960.0","poster":"Zerotn3","upvote_count":"2","content":"Option C, Configure a CloudFront field-level encryption profile, can be used to protect sensitive information that is stored in Amazon S3 and served through CloudFront. However, this option would not provide an additional layer of security for the entire application stack."}],"timestamp":"1672626900.0","poster":"Zerotn3"},{"content":"Selected Answer: B\nconfiguring a CloudFront signed cookie is a better solution for protecting sensitive information and restricting access to certain applications throughout the entire application stack, This will allow them to restrict access to content based on the viewer’s identity and ensure that the sensitive information is protected throughout the entire application stack","upvote_count":"1","poster":"muhtoy","comment_id":"757818","timestamp":"1672086360.0","comments":[{"comment_id":"1106585","poster":"pentium75","content":"It's not about \"restricting access to certain applications\" or \"restricting access to content based on the viewer's identity\", it is about protecting sensitive data that is submitted by the user.","upvote_count":"1","timestamp":"1703654880.0"}]},{"poster":"techhb","timestamp":"1671991440.0","comment_id":"755887","content":"Selected Answer: C\nOption B, \"Configure a CloudFront signed cookie,\" is not a suitable solution for this scenario because signed cookies are used to grant temporary access to specific content in your CloudFront distribution. They do not provide an additional layer of security for the sensitive information submitted by users, nor do they allow you to restrict access to certain applications.","upvote_count":"2"},{"timestamp":"1671851760.0","poster":"NV305","upvote_count":"1","content":"Selected Answer: B\nField-level encryption profiles, which you create in CloudFront, define the fields that you want to be encrypted.","comment_id":"754677"},{"timestamp":"1671851460.0","poster":"NV305","upvote_count":"1","comment_id":"754674","content":"Use signed URLs in the following cases:\n\nYou want to restrict access to individual files, for example, an installation download for your application.\n\nYour users are using a client (for example, a custom HTTP client) that doesn't support cookies.\n\nUse signed cookies in the following cases:\n\nYou want to provide access to multiple restricted files, for example, all of the files for a video in HLS format or all of the files in the subscribers' area of website.\n\nYou don't want to change your current URLs."},{"comments":[{"upvote_count":"2","comment_id":"755893","content":"Field-level encryption profiles, which you create in CloudFront, define the fields that you want to be encrypted.","poster":"techhb","timestamp":"1671991740.0"},{"comments":[{"upvote_count":"2","poster":"JayBee65","timestamp":"1673009520.0","comment_id":"767685","content":"You are not told that the entire content requires protection, just some sensitive information. \nAnd yes \"Field-level encryption ensures ... sensitive data can only be decrypted and viewed by certain components or services\" so does achieve the requirements."},{"content":"Option D (configuring CloudFront and setting the Origin Protocol Policy setting to HTTPS Only for the Viewer Protocol Policy) would not be a suitable solution as the Origin Protocol Policy setting determines whether CloudFront sends HTTP or HTTPS requests to the origin, rather than protecting the content or restricting access to certain applications.","comment_id":"753579","poster":"Buruguduystunstugudunstuy","timestamp":"1671733980.0","upvote_count":"1"}],"poster":"Buruguduystunstugudunstuy","timestamp":"1671733980.0","upvote_count":"1","content":"Option A (configuring a CloudFront signed URL) would not be a suitable solution as signed URLs are temporary URLs that allow users to access specific objects in an S3 bucket or a custom origin without requiring AWS credentials. While signed URLs can be useful for providing limited and secure access to specific objects, they are not designed for protecting content throughout the entire application stack or for restricting access to certain applications.\n\nOption C (configuring a CloudFront field-level encryption profile) would not be a suitable solution as field-level encryption is a feature of CloudFront that allows you to encrypt specific fields in an HTTP request or response, rather than the entire content. While field-level encryption can be useful for protecting specific fields of sensitive information, it is not designed for protecting the entire content or for restricting access to certain applications.","comment_id":"753578"}],"comment_id":"753576","poster":"Buruguduystunstugudunstuy","timestamp":"1671733860.0","upvote_count":"3","content":"Selected Answer: B\nTo protect sensitive information throughout the entire application stack and restrict access to certain applications, the solutions architect should configure a CloudFront signed cookie (Option B).\n\nCloudFront signed cookies are a feature of CloudFront that allows you to limit access to content in your distribution by requiring users to present a valid cookie with a signed value. By creating a signed cookie and requiring users to present the cookie in order to access the content, you can restrict access to the content to only those users who have a valid cookie. This can help protect sensitive information throughout the entire application stack and ensure that only authorized applications have access to the information."},{"timestamp":"1671509220.0","poster":"BENICE","comment_id":"750482","content":"C is the option","upvote_count":"1"},{"poster":"career360guru","comment_id":"748333","upvote_count":"1","content":"Selected Answer: C\nOption C","timestamp":"1671305160.0"},{"comment_id":"743572","upvote_count":"3","content":"Answer is : C\nField-level encryption allows you to enable your users to securely upload sensitive information to your web servers. The sensitive information provided by your users is encrypted at the edge, close to the user, and remains encrypted throughout your entire application stack. This encryption ensures that only applications that need the data—and have the credentials to decrypt it—are able to do so.\n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","poster":"Qjb8m9h","timestamp":"1670903280.0"},{"content":"Selected Answer: C\nc is the correct answer","timestamp":"1670824380.0","poster":"sanyoc","upvote_count":"1","comment_id":"742434"},{"content":"The best answer is B.\n Configure a CloudFront signed cookie. This will provide an additional layer of security for the user's sensitive information to ensure that only authorized applications have access to it. A CloudFront signed cookie is used to restrict access to content by verifying that the requestor is from a trusted source and has a valid session ID. This ensures that the application stack is protected and that any requests are coming from a known, authenticated source. \nCloudFront field-level encryption profiles are the ability to customize how data is encrypted when it is stored in Amazon CloudFront. It allows users to specify different cryptographic requirements for individual files and folders, such as key lengths or encryption algorithms\nAccording to the question they need additional layer of security for sensitive data over https. So answer is B","timestamp":"1670767920.0","poster":"Shasha1","upvote_count":"2","comment_id":"741769"},{"content":"C is correct","comment_id":"724479","timestamp":"1669135080.0","poster":"Wpcorgan","upvote_count":"1"},{"timestamp":"1668525840.0","poster":"sdasdawa","upvote_count":"3","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","comment_id":"718906"},{"timestamp":"1668525060.0","comment_id":"718895","upvote_count":"3","content":"It should be C.https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","poster":"Ohnet"},{"poster":"Nigma","content":"C\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html","upvote_count":"4","comment_id":"718889","timestamp":"1668524280.0"},{"timestamp":"1668520500.0","poster":"goatbernard","upvote_count":"3","comment_id":"718801","content":"Selected Answer: C\nCloudFront signed URLs provide a mechanism to control access to the content served through a distribution. Unlike the Origin Access Identity, it restricts access to which users can see the content. When you create a distribution, by default, it is open to everybody who knows the URL. But sometimes you want to limit that."}],"isMC":true,"timestamp":"2022-11-15 14:55:00","topic":"1","question_id":102,"question_images":[],"answer_ET":"C","answer":"C","choices":{"B":"Configure a CloudFront signed cookie.","A":"Configure a CloudFront signed URL.","D":"Configure CloudFront and set the Origin Protocol Policy setting to HTTPS Only for the Viewer Protocol Policy.","C":"Configure a CloudFront field-level encryption profile."},"question_text":"A solutions architect is creating a new Amazon CloudFront distribution for an application. Some of the information submitted by users is sensitive. The application uses HTTPS but needs another layer of security. The sensitive information should.be protected throughout the entire application stack, and access to the information should be restricted to certain applications.\n\nWhich action should the solutions architect take?"},{"id":"s85OSiqnX6fd5PNSyljr","unix_timestamp":1668525360,"answers_community":["B (92%)","8%"],"question_images":[],"choices":{"B":"Deploy an Amazon CloudFront web distribution in front of the S3 bucket.","A":"Deploy an AWS Global Accelerator accelerator in front of the web servers.","C":"Deploy an Amazon ElastiCache for Redis instance in front of the web servers.","D":"Deploy an Amazon ElastiCache for Memcached instance in front of the web servers."},"question_id":103,"topic":"1","exam_id":31,"answer":"B","url":"https://www.examtopics.com/discussions/amazon/view/87530-exam-aws-certified-solutions-architect-associate-saa-c03/","isMC":true,"answer_ET":"B","answer_images":[],"question_text":"A gaming company hosts a browser-based application on AWS. The users of the application consume a large number of videos and images that are stored in Amazon S3. This content is the same for all users.\n\nThe application has increased in popularity, and millions of users worldwide accessing these media files. The company wants to provide the files to the users while reducing the load on the origin.\n\nWhich solution meets these requirements MOST cost-effectively?","discussion":[{"timestamp":"1684156560.0","poster":"Nigma","upvote_count":"23","content":"B. Cloud front is best for content delivery. Global Accelerator is best for non-HTTP (TCP/UDP) cases and supports HTTP cases as well but with static IP (elastic IP) or anycast IP address only.","comment_id":"718899"},{"upvote_count":"5","timestamp":"1703584560.0","content":"Selected Answer: B\nOption A is not the most cost-effective solution for this scenario. While Global Accelerator can improve global application performance, it is primarily used for accelerating TCP and UDP traffic, such as gaming and real-time applications, rather than serving static media files.\n\nOptions C and D are used for caching frequently accessed data in-memory to improve application performance. However, they are not specifically designed for caching and serving media files like CloudFront, and therefore, may not provide the same cost-effectiveness and scalability for this use case.\n\nHence, deploying an CloudFront web distribution in front of the S3 is the most cost-effective solution for delivering media files to millions of users worldwide while reducing the load on the origin.","comment_id":"934184","poster":"cookieMr"},{"poster":"rlamberti","content":"Selected Answer: B\nCloudFront will cache the data in Edge Locations, offloading it partially from the source location (s3)\nB looks good to me.","upvote_count":"3","comment_id":"1051104","timestamp":"1713819660.0"},{"timestamp":"1710224820.0","upvote_count":"2","content":"Selected Answer: B\nDeploy an Amazon CloudFront web distribution in front of the S3 bucket","poster":"TariqKipkemei","comment_id":"1005353"},{"poster":"Guru4Cloud","content":"Selected Answer: B\nB) Deploy an Amazon CloudFront web distribution in front of the S3 bucket.\n\nCloudFront is the most cost-effective solution for this use case because:\n\nCloudFront can cache static assets like videos and images at edge locations closer to users. This improves performance.\nServing files from the CloudFront cache reduces load on the S3 origin.\nCloudFront pricing is very low for data transfer and requests.","upvote_count":"2","comment_id":"983777","timestamp":"1708191660.0"},{"comment_id":"960058","upvote_count":"1","content":"Selected Answer: B\nElasticCache is for DB Cache(RDS) nor for S3","poster":"Kiki_Pass","timestamp":"1705990620.0"},{"poster":"kruasan","timestamp":"1698435480.0","upvote_count":"4","content":"Selected Answer: B\nElastiCache, enhances the performance of web applications by quickly retrieving information from fully-managed in-memory data stores. It utilizes Memcached and Redis, and manages to considerably reduce the time your applications would, otherwise, take to read data from disk-based databases. \n\nAmazon CloudFront supports dynamic content from HTTP and WebSocket protocols, which are based on the Transmission Control Protocol (TCP) protocol. Common use cases include dynamic API calls, web pages and web applications, as well as an application's static files such as audio and images. It also supports on-demand media streaming over HTTP.\n\nAWS Global Accelerator supports both User Datagram Protocol (UDP) and TCP-based protocols. It is commonly used for non-HTTP use cases, such as gaming, IoT and voice over IP. It is also good for HTTP use cases that need static IP addresses or fast regional failover","comment_id":"882989"},{"timestamp":"1689544320.0","upvote_count":"2","comments":[{"timestamp":"1719459000.0","comment_id":"1106587","upvote_count":"2","poster":"pentium75","content":"ElastiCache for Redis (C) can be used by an application to store key-value pairs. It does not cache videos or images and it is not an automatic process (the application can put and retrieve values)."},{"poster":"pentium75","timestamp":"1719458940.0","upvote_count":"4","content":"\"Some form of caching would cache content and deliver to users without going to the origin for each request\", isn't this EXACTLY what CloudFront does?","comment_id":"1106586"},{"comment_id":"1124481","upvote_count":"3","content":"CloudFront's only main purpose is to serve these kind of scenarios!","poster":"awsgeek75","timestamp":"1721152980.0"}],"comment_id":"778392","content":"Selected Answer: C\nThe company wants to provide the files to the users while reducing the load on the origin.\nCloudfront speeds-up content delivery but I'm not sure it reduces the load on the origin.\nSome form of caching would cache content and deliver to users without going to the origin for each request.","poster":"LuckyAro"},{"upvote_count":"4","comments":[{"comment_id":"755890","content":"Please dont post ChatGPT answers here,chatgpt keeps on changing its answers,its not the right way to copy paste,thanks.","comments":[{"content":"why not? if the answers are correct and offer best possible explanation for the wrong options, I see no reason why it shouldn't be posted here. Also, most of his answers were right, although reasons for the wrong options were sometimes lacking, but all in all, his responses were very good.","poster":"Bofi","timestamp":"1693542120.0","comment_id":"825558","upvote_count":"2"},{"comment_id":"793730","poster":"ocbn3wby","upvote_count":"2","timestamp":"1690778220.0","content":"Answers are mostly correct. Only a small percentage were wrong"},{"comment_id":"793729","poster":"ocbn3wby","upvote_count":"3","content":"Woaaaa! I always wondered where this kind of logic and explanation came from in this guy's answers. Nice catch TECHHB!","timestamp":"1690778160.0"}],"poster":"techhb","upvote_count":"2","timestamp":"1687709220.0"}],"poster":"Buruguduystunstugudunstuy","comment_id":"753584","content":"Selected Answer: B\nTo provide media files to users while reducing the load on the origin and meeting the requirements cost-effectively, the gaming company should deploy an Amazon CloudFront web distribution in front of the S3 bucket (Option B).\n\nCloudFront is a content delivery network (CDN) that speeds up the delivery of static and dynamic web content, such as images and videos, to users. By using CloudFront, the media files will be served to users from the edge location that is closest to them, resulting in faster delivery and a better user experience. CloudFront can also handle the high traffic and large number of requests expected from the millions of users, ensuring that the media files are available and accessible to users around the world.","timestamp":"1687452780.0"},{"content":"Selected Answer: B\nOption B","comment_id":"748334","poster":"career360guru","timestamp":"1687022940.0","upvote_count":"1"},{"poster":"k1kavi1","timestamp":"1686826020.0","comment_id":"746073","upvote_count":"1","content":"Selected Answer: B\nAgreed"},{"poster":"rewdboy","comment_id":"727252","upvote_count":"1","content":"Selected Answer: B\nB is the correct answer","timestamp":"1685067240.0"},{"timestamp":"1684766340.0","comment_id":"724481","upvote_count":"2","poster":"Wpcorgan","content":"B is correct"}],"answer_description":"","timestamp":"2022-11-15 16:16:00"},{"id":"QGinP7nC0xv0xn1vEjwm","url":"https://www.examtopics.com/discussions/amazon/view/87531-exam-aws-certified-solutions-architect-associate-saa-c03/","timestamp":"2022-11-15 16:19:00","question_images":[],"exam_id":31,"discussion":[{"comment_id":"718902","content":"B. auto scaling groups can not span multi region","timestamp":"1700061540.0","upvote_count":"30","poster":"Nigma"},{"poster":"cookieMr","upvote_count":"10","content":"Selected Answer: B\nOption A (creating an Auto Scaling group across two Regions) introduces additional complexity and potential replication challenges, which may not be necessary for achieving high availability within a single Region.\n\nOption C (creating an Auto Scaling template for another Region) suggests multi-region redundancy, which may not be the most straightforward solution for achieving high availability without modifying the application.\n\nOption D (changing the ALB to a round-robin configuration) does not provide the desired high availability. Round-robin configuration alone does not ensure fault tolerance and does not leverage multiple Availability Zones for resilience.\n\nHence, modifying the Auto Scaling group to use three instances across each of two Availability Zones is the appropriate choice to provide high availability for the multi-tier application.","timestamp":"1719389580.0","comment_id":"934198"},{"content":"Selected Answer: B\nModifying the ALB is the most suitable option here.","poster":"satyaammm","timestamp":"1739034960.0","upvote_count":"1","comment_id":"1353527"},{"content":"Selected Answer: B\nModify the Auto Scaling group to use three instances across each of two Availability Zones","upvote_count":"4","comment_id":"1005354","poster":"TariqKipkemei","timestamp":"1726115340.0"},{"upvote_count":"3","timestamp":"1723912020.0","poster":"Guru4Cloud","comment_id":"983814","content":"Selected Answer: B\nOption B. Modify the Auto Scaling group to use three instances across each of the two Availability Zones."},{"comment_id":"756091","content":"B. auto scaling groups cannot span multi region","upvote_count":"6","poster":"techhb","timestamp":"1703547600.0"},{"upvote_count":"5","timestamp":"1703272020.0","content":"Selected Answer: B\nOption B. Modify the Auto Scaling group to use three instances across each of the two Availability Zones.\n\nThis option would provide high availability by distributing the front-end web servers across multiple Availability Zones. If there is an issue with one Availability Zone, the other Availability Zone would still be available to serve traffic. This would ensure that the application remains available and highly available even if there is a failure in one of the Availability Zones.","poster":"Buruguduystunstugudunstuy","comment_id":"753590"},{"comment_id":"748338","timestamp":"1702841460.0","upvote_count":"1","content":"Selected Answer: B\nOption B","poster":"career360guru"},{"poster":"k1kavi1","content":"Selected Answer: B\nAgreed","upvote_count":"1","timestamp":"1702644540.0","comment_id":"746076"},{"timestamp":"1702304580.0","upvote_count":"2","content":"B\noption B This architecture provides high availability by having multiple Availability Zones hosting the same application. This allows for redundancy in case one Availability Zone experiences downtime, as traffic can be served by the other Availability Zone. This solution also increases scalability and performance by allowing traffic to be spread across two Availability Zones.","comment_id":"741779","poster":"Shasha1"},{"content":"Selected Answer: B\nB is rightt","comment_id":"726978","upvote_count":"2","poster":"mricee9","timestamp":"1700932800.0"},{"timestamp":"1700671260.0","content":"B is correct","comment_id":"724484","poster":"Wpcorgan","upvote_count":"1"},{"comment_id":"721976","poster":"xua81376","content":"B auto scaling i multiple AZ","upvote_count":"1","timestamp":"1700395680.0"}],"question_text":"A company has a multi-tier application that runs six front-end web servers in an Amazon EC2 Auto Scaling group in a single Availability Zone behind an Application Load Balancer (ALB). A solutions architect needs to modify the infrastructure to be highly available without modifying the application.\n\nWhich architecture should the solutions architect choose that provides high availability?","topic":"1","unix_timestamp":1668525540,"answer_ET":"B","answer_description":"","question_id":104,"choices":{"C":"Create an Auto Scaling template that can be used to quickly create more instances in another Region.","B":"Modify the Auto Scaling group to use three instances across each of two Availability Zones.","D":"Change the ALB in front of the Amazon EC2 instances in a round-robin configuration to balance traffic to the web tier.","A":"Create an Auto Scaling group that uses three instances across each of two Regions."},"answer_images":[],"answer":"B","isMC":true,"answers_community":["B (100%)"]},{"id":"Q00zq1eNCs1YV1SwvicB","timestamp":"2022-11-15 16:24:00","question_text":"An ecommerce company has an order-processing application that uses Amazon API Gateway and an AWS Lambda function. The application stores data in an Amazon Aurora PostgreSQL database. During a recent sales event, a sudden surge in customer orders occurred. Some customers experienced timeouts, and the application did not process the orders of those customers.\n\nA solutions architect determined that the CPU utilization and memory utilization were high on the database because of a large number of open connections. The solutions architect needs to prevent the timeout errors while making the least possible changes to the application.\n\nWhich solution will meet these requirements?","isMC":true,"question_id":105,"unix_timestamp":1668525840,"answers_community":["B (100%)"],"topic":"1","answer_description":"","answer_images":[],"exam_id":31,"answer_ET":"B","question_images":[],"discussion":[{"content":"Selected Answer: B\nMany applications, including those built on modern serverless architectures, can have a large number of open connections to the database server and may open and close database connections at a high rate, exhausting database memory and compute resources. Amazon RDS Proxy allows applications to pool and share connections established with the database, improving database efficiency and application scalability.\nhttps://aws.amazon.com/id/rds/proxy/","comments":[{"upvote_count":"2","content":"Are you sure?","poster":"rexxxx_x","comment_id":"1129295","timestamp":"1705996740.0"}],"timestamp":"1669032600.0","comment_id":"723450","poster":"handyplazt","upvote_count":"38"},{"comment_id":"934200","content":"Selected Answer: B\nOption A (configuring provisioned concurrency and creating a global database) does not directly address the high connection utilization issue on the database, and creating a global database may introduce additional complexity without immediate benefit to solving the timeout errors.\n\nOption C (creating a read replica in a different AWS Region) introduces additional data replication and management complexity, which may not be necessary to address the timeout errors.\n\nOption D (migrating to Amazon DynamoDB) involves a significant change in the data storage technology and requires modifying the application to use DynamoDB instead of Aurora PostgreSQL. This may not be the most suitable solution when the goal is to make minimal changes to the application.\n\nTherefore, using Amazon RDS Proxy and modifying the Lambda function to use the RDS Proxy endpoint is the recommended solution to prevent timeout errors and reduce the impact on the database during peak loads.","upvote_count":"11","poster":"cookieMr","timestamp":"1687767360.0"},{"content":"Selected Answer: B\nRDS proxy helps tackle the problem of sudden hikes as it plays a medium between the users and the application","timestamp":"1739035140.0","upvote_count":"1","poster":"satyaammm","comment_id":"1353531"},{"poster":"lofzee","content":"Selected Answer: B\nAmazon RDS Proxy is a fully managed, highly available database proxy for Amazon Relational Database Service (RDS) that makes applications more scalable, more resilient to database failures, and more secure.\n\nB","timestamp":"1716893580.0","upvote_count":"3","comment_id":"1220156"},{"comments":[{"upvote_count":"2","comment_id":"1288992","timestamp":"1727268300.0","poster":"tonybuivannghia","content":"Improving database efficiency by reducing the stress on database resources (e.g., CPU, RAM) and minimize open connections (and timeouts)."}],"timestamp":"1705435620.0","poster":"awsgeek75","comment_id":"1124482","content":"Selected Answer: B\nConnection problems causing high CPU and Memory usage? Use RDS proxy!","upvote_count":"3"},{"comment_id":"1005357","upvote_count":"3","content":"Selected Answer: B\nUse Amazon RDS Proxy to create a proxy for the database. Modify the Lambda function to use the RDS Proxy endpoint instead of the database endpoint.","timestamp":"1694493120.0","poster":"TariqKipkemei"},{"comment_id":"983816","timestamp":"1692289740.0","upvote_count":"2","content":"Selected Answer: B\nusing Amazon RDS Proxy and modifying the Lambda function to use the RDS Proxy endpoint is the recommended solution to prevent timeout errors and reduce the impact on the database during peak loads.","poster":"Guru4Cloud"},{"comment_id":"778362","upvote_count":"2","comments":[{"content":"RDS Proxy can be used with Aurora\nhttps://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-proxy.html","poster":"everfly","upvote_count":"6","comment_id":"824548","timestamp":"1677572460.0"}],"timestamp":"1673910480.0","poster":"sairam","content":"I also think the answer is B. However can RDS Proxy be used with Amazon Aurora PostgreSQL database?"},{"timestamp":"1672687620.0","content":"Selected Answer: B\nI expect a answer with database replica but there is not, so B is most suitable","poster":"gustavtd","comment_id":"763934","upvote_count":"2"},{"upvote_count":"2","comments":[{"content":"Option A is not a valid solution because configuring provisioned concurrency for the Lambda function does not address the issue of high CPU utilization and memory utilization on the database. \n\nOption C is not a valid solution because creating a read replica in a different Region does not address the issue of high CPU utilization and memory utilization on the database. \n\nOption D is not a valid solution because migrating the data from Aurora PostgreSQL to DynamoDB would require significant changes to the application and may not be the best solution for this particular problem.","poster":"Buruguduystunstugudunstuy","comment_id":"753648","timestamp":"1671744360.0","upvote_count":"3"}],"poster":"Buruguduystunstugudunstuy","comment_id":"753645","timestamp":"1671744300.0","content":"Selected Answer: B\nOption B. Use Amazon RDS Proxy to create a proxy for the database. Modify the Lambda function to use the RDS Proxy endpoint instead of the database endpoint.\n\nUsing Amazon RDS Proxy can help reduce the number of connections to the database and improve the performance of the application. RDS Proxy establishes a connection pool to the database and routes connections to the available connections in the pool. This can help reduce the number of open connections to the database and improve the performance of the application. The Lambda function can be modified to use the RDS Proxy endpoint instead of the database endpoint to take advantage of this improvement."},{"comment_id":"750481","timestamp":"1671509220.0","upvote_count":"2","poster":"BENICE","content":"Option --- B"},{"poster":"career360guru","content":"Selected Answer: B\nAs it is mentioned that issue was due to high CPU and Memory due to many open corrections to DB, B is the right answer.","comment_id":"748340","upvote_count":"2","timestamp":"1671305640.0"},{"upvote_count":"4","timestamp":"1670770200.0","poster":"Shasha1","comment_id":"741797","content":"B\nUsing Amazon RDS Proxy will allow the application to handle more connections and higher loads without timeouts, while making the least possible changes to the application. The RDS Proxy will enable connection pooling, allowing multiple connections from the Lambda function to be served from a single proxy connection. This will reduce the number of open connections on the database, which is causing high CPU and memory utilization"},{"comment_id":"724487","timestamp":"1669135380.0","upvote_count":"2","content":"B is correct","poster":"Wpcorgan"},{"comment_id":"721974","poster":"xua81376","upvote_count":"3","content":"B - Proxy to manage connections","timestamp":"1668859620.0"},{"timestamp":"1668600480.0","upvote_count":"8","comment_id":"719598","content":"Selected Answer: B\nIssue related to opening many connections and the solution requires least code changes so B satisfies the conditions","poster":"babaxoxo"},{"timestamp":"1668525840.0","upvote_count":"2","comment_id":"718905","content":"Correct B","poster":"Nigma"}],"choices":{"D":"Migrate the data from Aurora PostgreSQL to Amazon DynamoDB by using AWS Database Migration Service (AWS DMS). Modify the Lambda function to use the DynamoDB table.","C":"Create a read replica for the database in a different AWS Region. Use query string parameters in API Gateway to route traffic to the read replica.","B":"Use Amazon RDS Proxy to create a proxy for the database. Modify the Lambda function to use the RDS Proxy endpoint instead of the database endpoint.","A":"Configure provisioned concurrency for the Lambda function. Modify the database to be a global database in multiple AWS Regions."},"answer":"B","url":"https://www.examtopics.com/discussions/amazon/view/87533-exam-aws-certified-solutions-architect-associate-saa-c03/"}],"exam":{"numberOfQuestions":1019,"id":31,"provider":"Amazon","lastUpdated":"11 Apr 2025","isImplemented":true,"isMCOnly":true,"isBeta":false,"name":"AWS Certified Solutions Architect - Associate SAA-C03"},"currentPage":21},"__N_SSP":true}