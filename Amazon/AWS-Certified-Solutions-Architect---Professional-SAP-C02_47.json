{"pageProps":{"questions":[{"id":"MHAmfeDR4o46ghLTwzO6","question_images":[],"answer":"AB","answer_images":[],"exam_id":33,"unix_timestamp":1698585840,"topic":"1","discussion":[{"upvote_count":"1","comments":[{"content":"the question affirms the following: \"The research center's compliance officer is worried that scientists will be able to access each other's work. \" it is equal to say that each scientist only must have access to his own data and not other data","upvote_count":"1","comment_id":"1356672","poster":"juanife","timestamp":"1739582700.0"}],"content":"Selected Answer: AB\nBUT, The question is not clearly formulated. \nNothing mentions the requirement that a scientist must only access his own folder.","timestamp":"1736851740.0","comment_id":"1340294","poster":"FZA24"},{"upvote_count":"1","timestamp":"1731904080.0","poster":"AzureDP900","content":"Option A allows for secure and isolated access to each scientist's personal folder by prefixing the S3 paths with $(aws:username), ensuring that scientists can only access their own documents. This aligns with the research center's compliance officer's concern about preserving data isolation.\nOption B configures a CloudTrail trail to capture all object-level events in the S3 bucket, providing detailed information on who accessed which documents. This meets the requirement for reporting on document access by scientists.","comment_id":"1313842"},{"upvote_count":"1","poster":"Daniel76","comment_id":"1297854","timestamp":"1728946020.0","content":"Selected Answer: AB\nOption E problem is cloudwatch need to be exported to s3 bucket to be queried by Athena."},{"upvote_count":"1","timestamp":"1717273740.0","content":"Option AB","comment_id":"1222890","poster":"9f02c8d"},{"comments":[{"content":"To elaborate further, \"The completeness and timeliness of server logging is not guaranteed. The log record for a particular request might be delivered long after the request was actually processed, or it might not be delivered at all. \"","poster":"hogtrough","timestamp":"1709320440.0","comment_id":"1163691","upvote_count":"1"}],"upvote_count":"4","poster":"ele","content":"Selected Answer: AB\nNot C: Server access log records are delivered on a best-effort basis.","comment_id":"1152495","timestamp":"1708167960.0"},{"content":"AB is correct. They key here is that the logs are required to be accurate for compliance reasons. Server access isn't good enough here. \"Server access log records are delivered on a best-effort basis. Most requests for a bucket that is properly configured for logging result in a delivered log record. Most log records are delivered within a few hours of the time that they are recorded, but they can be delivered more frequently\"","comment_id":"1145102","poster":"07c2d2a","timestamp":"1707435360.0","upvote_count":"3"},{"upvote_count":"1","comment_id":"1125601","timestamp":"1705563360.0","poster":"mhampar12","content":"Selected Answer: AC\n\"The team that is responsible for these reports has little AWS experience and wants a ready-to-use solution that minimizes operational overhead.\""},{"content":"A and C\n\"The team that is responsible for these reports has little AWS experience and wants a ready-to-use solution that minimizes operational overhead.\"","poster":"mhampar12","comment_id":"1125599","upvote_count":"1","timestamp":"1705563240.0"},{"poster":"vibzr2023","comments":[{"poster":"altonh","content":"Both B & C use Athena to query the logs and generate reports","upvote_count":"1","timestamp":"1740701580.0","comment_id":"1362780"}],"timestamp":"1705439280.0","content":"Answer: AB\nOption C is incorrect because enabling S3 server access logging and delivering the logs to another S3 bucket does not directly address the requirement to report on which scientist accesses which documents. While the logs can be queried, it does not provide a straightforward solution for generating the required reports.\nOption D is incorrect because creating an S3 bucket policy that grants read and write access to users in the scientists' IAM user group does not address the compliance officer's concern about scientists being able to access each other's work. It also does not provide a solution for reporting on which scientist accesses which documents.","comment_id":"1124512","upvote_count":"2"},{"comment_id":"1081105","timestamp":"1701048600.0","content":"Answer: AB\nhttps://aws.amazon.com/blogs/security/writing-iam-policies-grant-access-to-user-specific-folders-in-an-amazon-s3-bucket/","upvote_count":"4","poster":"George88"},{"timestamp":"1700479440.0","content":"Selected Answer: AB\nIn Amazon S3, you can identify requests using an AWS CloudTrail event log. AWS CloudTrail is the preferred way of identifying Amazon S3 requests, but if you are using Amazon S3 server access logs, see Using Amazon S3 access logs to identify requests.\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/cloudtrail-request-identification.html","poster":"D10SJoker","upvote_count":"1","comment_id":"1075352"},{"content":"Selected Answer: BD\nIt doesn't mention that the folder name is the AWS username. There is no guarantee that alternative “A” will be effective.","comment_id":"1069785","poster":"kairosfc","upvote_count":"2","timestamp":"1699911960.0","comments":[{"comment_id":"1083456","content":"I think BD as well","timestamp":"1701262680.0","poster":"Jay_2pt0_1","upvote_count":"1"}]},{"comment_id":"1067834","content":"Selected Answer: AB\nCloudTrail + Identify so A and B, there was another question on CloudTrail vs. S3 Server Access logging, always CloudTrail wins","poster":"LS1168","upvote_count":"3","timestamp":"1699707240.0"},{"comment_id":"1066347","content":"Selected Answer: AB\nAB\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/logging-with-S3.html","upvote_count":"1","poster":"Andres123456","timestamp":"1699526280.0"},{"timestamp":"1699297200.0","comments":[{"timestamp":"1700219880.0","content":"Look for\nTurn on logs for a subset of objects (prefix)\n-> Only possible for CloudTrail","poster":"Tofu13","upvote_count":"1","comment_id":"1073245"}],"content":"AB\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/logging-with-S3.html","upvote_count":"2","comment_id":"1064176","poster":"AMohanty"},{"content":"Selected Answer: AB\nTo Audit: B is the correct one\nTo Act: A is the correct one but not so effective.","timestamp":"1698985620.0","upvote_count":"1","comment_id":"1061073","poster":"Ustad"},{"timestamp":"1698948420.0","content":"Selected Answer: AB\ncloudtrail always for compliance","upvote_count":"2","poster":"[Removed]","comment_id":"1060756"},{"content":"Selected Answer: AB\nCloudTrail provides more detailed logging than S3 server access logging\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/using-s3-access-logs-to-identify-requests.html","upvote_count":"2","comment_id":"1057737","timestamp":"1698671880.0","poster":"s61"},{"comment_id":"1057444","timestamp":"1698652320.0","content":"Selected Answer: AC\nWhy not c? As objects are being accessed within the bucket.","upvote_count":"2","poster":"gonzales"},{"poster":"KungLjao","upvote_count":"1","timestamp":"1698585840.0","content":"Selected Answer: AB\nhttps://stackoverflow.com/questions/34136861/aws-s3-bucket-logs-vs-aws-cloudtrail","comment_id":"1056837"}],"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/124882-exam-aws-certified-solutions-architect-professional-sap-c02/","timestamp":"2023-10-29 14:24:00","question_id":231,"answer_ET":"AB","choices":{"A":"Create an identity policy that grants the user read and write access. Add a condition that specifies that the S3 paths must be prefixed with $(aws:username). Apply the policy on the scientists’ IAM user group.","C":"Enable S3 server access logging. Configure another S3 bucket as the target for log delivery. Use Amazon Athena to query the logs and generate reports.","D":"Create an S3 bucket policy that grants read and write access to users in the scientists’ IAM user group.","B":"Configure a trail with AWS CloudTrail to capture all object-level events in the S3 bucket. Store the trail output in another S3 bucket. Use Amazon Athena to query the logs and generate reports.","E":"Configure a trail with AWS CloudTrail to capture all object-level events in the S3 bucket and write the events to Amazon CloudWatch. Use the Amazon Athena CloudWatch connector to query the logs and generate reports."},"answer_description":"","answers_community":["AB (77%)","14%","9%"],"question_text":"A research center is migrating to the AWS Cloud and has moved its on-premises 1 PB object storage to an Amazon S3 bucket. One hundred scientists are using this object storage to store their work-related documents. Each scientist has a personal folder on the object store. All the scientists are members of a single IAM user group.\n\nThe research center's compliance officer is worried that scientists will be able to access each other's work. The research center has a strict obligation to report on which scientist accesses which documents. The team that is responsible for these reports has little AWS experience and wants a ready-to-use solution that minimizes operational overhead.\n\nWhich combination of actions should a solutions architect take to meet these requirements? (Choose two.)"},{"id":"irUVY5OA5E67c74rDROe","url":"https://www.examtopics.com/discussions/amazon/view/124883-exam-aws-certified-solutions-architect-professional-sap-c02/","exam_id":33,"answer_images":[],"answer":"A","discussion":[{"poster":"AzureDP900","upvote_count":"1","comment_id":"1313838","content":"Option A\nA private repository in Amazon ECR restricts access to only authorized accounts within the company's organization.\n\nThe permissions policy ensures that only required ECR operations are allowed, reducing operational overhead.\n\nThe condition in the permissions policy allows ECR operations for accounts within the company's organization, further reducing overhead.\n\nFinally, adding a lifecycle rule to delete untagged images over the count of five simplifies image management and reduces storage costs.","timestamp":"1731903900.0"},{"poster":"ftaws","upvote_count":"1","content":"How to associate the policy in ECR repository ? \nI think A is also wrong....","timestamp":"1706340240.0","comment_id":"1133129"},{"comment_id":"1086735","content":"Answer A. Use ECR Lifecycle policy. Also using OrgId is more scalable with more accounts will be added than adding accounts individually. Less operational overhead.","timestamp":"1701598380.0","poster":"shaaam80","upvote_count":"4"},{"timestamp":"1700371500.0","comment_id":"1074455","poster":"career360guru","content":"Selected Answer: A\nA is right option.","upvote_count":"2"},{"comment_id":"1073304","poster":"nublit","timestamp":"1700224140.0","upvote_count":"2","content":"Selected Answer: A\nOnly A is a good idea"},{"upvote_count":"4","poster":"joleneinthebackyard","content":"Selected Answer: A\nB, D: stop reading at \"public repository\" \nA: policy specific to aws:PrincipalOrgId equal company's organization ID\nC: policy allow all account ID (effectively the same actually) but use Eventbridge + lambda while ECR has lifecycle policy.","comment_id":"1060098","timestamp":"1698878400.0"},{"poster":"s61","timestamp":"1698672000.0","content":"Selected Answer: A\nAlso A","comment_id":"1057740","upvote_count":"1"},{"poster":"KungLjao","timestamp":"1698586140.0","upvote_count":"1","comment_id":"1056840","content":"Selected Answer: A\nA works for all requirements"}],"timestamp":"2023-10-29 14:29:00","question_images":[],"isMC":true,"answer_ET":"A","question_id":232,"topic":"1","unix_timestamp":1698586140,"question_text":"A company uses AWS Organizations to manage a multi-account structure. The company has hundreds of AWS accounts and expects the number of accounts to increase. The company is building a new application that uses Docker images. The company will push the Docker images to Amazon Elastic Container Registry (Amazon ECR). Only accounts that are within the company’s organization should have access to the images.\n\nThe company has a CI/CD process that runs frequently. The company wants to retain all the tagged images. However, the company wants to retain only the five most recent untagged images.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","answers_community":["A (100%)"],"answer_description":"","choices":{"D":"Create a public repository in Amazon ECR. Configure Amazon ECR to use an interface VPC endpoint with an endpoint policy that includes the required permissions for images that the company needs to pull. Include a condition to allow the ECR operations for all account IDs in the company’s organization. Schedule a daily Amazon EventBridge rule to invoke an AWS Lambda function that deletes all untagged images over the count of five.","B":"Create a public repository in Amazon ECR. Create an IAM role in the ECR account. Set permissions so that any account can assume the role if the value of the aws:PrincipalOrglD condition key is equal to the ID of the company’s organization. Add a lifecycle rule to the ECR repository that deletes all untagged images over the count of five.","C":"Create a private repository in Amazon ECR. Create a permissions policy for the repository that includes only required ECR operations. Include a condition to allow the ECR operations for all account IDs in the organization Schedule a daily Amazon EventBridge rule to invoke an AWS Lambda function that deletes all untagged images over the count of five.","A":"Create a private repository in Amazon ECR. Create a permissions policy for the repository that allows only required ECR operations. Include a condition to allow the ECR operations if the value of the aws:PrincipalOrglD condition key is equal to the ID of the company’s organization. Add a lifecycle rule to the ECR repository that deletes all untagged images over the count of five"}},{"id":"dOUBvoOGviytL8NFZx4X","url":"https://www.examtopics.com/discussions/amazon/view/124807-exam-aws-certified-solutions-architect-professional-sap-c02/","exam_id":33,"answer":"A","answer_images":[],"discussion":[{"upvote_count":"6","poster":"KungLjao","content":"Selected Answer: A\nCrossaccount management is a feature of only the aws backup service.","timestamp":"1698586440.0","comment_id":"1056844"},{"timestamp":"1731903720.0","poster":"AzureDP900","comment_id":"1313837","content":"This solution uses AWS Backup, which provides a centralized view of all backups across accounts.\nIt allows for automatic snapshotting every 6 hours, meeting the requirement for frequent snapshots.\nThe retention period of 30 days is also easily managed using AWS Backup policies.\nUsing tags to apply the backup plan and monitor the status of backups simplifies the process and reduces operational overhead. Therefore, using AWS Backup (Option A) with cross-account management enabled provides the least operational overhead while still meeting the requirements for frequent snapshots and long-term retention","upvote_count":"1"},{"timestamp":"1700371680.0","content":"Selected Answer: A\nOption A","upvote_count":"3","comment_id":"1074458","poster":"career360guru"},{"poster":"s61","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/aws-backup/latest/devguide/create-cross-account-backup.html","upvote_count":"3","timestamp":"1698672180.0","comment_id":"1057742"},{"upvote_count":"3","timestamp":"1698533100.0","poster":"AM_aws","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/aws-backup/latest/devguide/create-cross-account-backup.html","comment_id":"1056477"},{"comment_id":"1056132","content":"Answer: A\nUser BAWS BAckup > Cross Accounr > backup plan for frequency and retention and health of the backup","upvote_count":"2","poster":"airgead","timestamp":"1698490800.0"}],"timestamp":"2023-10-28 13:00:00","question_images":[],"isMC":true,"answer_ET":"A","topic":"1","question_id":233,"unix_timestamp":1698490800,"question_text":"A solutions architect is reviewing a company's process for taking snapshots of Amazon RDS DB instances. The company takes automatic snapshots every day and retains the snapshots for 7 days.\n\nThe solutions architect needs to recommend a solution that takes snapshots every 6 hours and retains the snapshots for 30 days. The company uses AWS Organizations to manage all of its AWS accounts. The company needs a consolidated view of the health of the RDS snapshots.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","answers_community":["A (100%)"],"choices":{"B":"Turn on the cross-account management feature in Amazon RDS. Create a snapshot global policy that specifies the frequency and retention requirements. Use the RDS console in the management account to monitor the status of the backups.","C":"Turn on the cross-account management feature in AWS CloudFormation. From the management account, deploy a CloudFormation stack set that contains a backup plan from AWS Backup that specifies the frequency and retention requirements. Create an AWS Lambda function in the management account to monitor the status of the backups. Create an Amazon EventBridge rule in each account to run the Lambda function on a schedule.","A":"Turn on the cross-account management feature in AWS Backup. Create a backup plan that specifies the frequency and retention requirements. Add a tag to the DB instances. Apply the backup plan by using tags. Use AWS Backup to monitor the status of the backups.","D":"Configure AWS Backup in each account. Create an Amazon Data Lifecycle Manager lifecycle policy that specifies the frequency and retention requirements. Specify the DB instances as the target resource Use the Amazon Data Lifecycle Manager console in each member account to monitor the status of the backups."},"answer_description":""},{"id":"j1Jh6qwZ1EENRbp1ZCog","answer_images":[],"answer":"ACE","question_text":"A company is using AWS Organizations with a multi-account architecture. The company's current security configuration for the account architecture includes SCPs, resource-based policies, identity-based policies, trust policies, and session policies.\n\nA solutions architect needs to allow an IAM user in Account A to assume a role in Account B.\n\nWhich combination of steps must the solutions architect take to meet this requirement? (Choose three.)","isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/124808-exam-aws-certified-solutions-architect-professional-sap-c02/","question_id":234,"answer_ET":"ACE","discussion":[{"content":"Answer: C, E, F\nAttach a policy to the IAM user in Account A > Trust Policy in Account B > GetSessionToken API operation","upvote_count":"11","comment_id":"1056136","timestamp":"1698491160.0","poster":"airgead","comments":[{"comment_id":"1152505","timestamp":"1708168800.0","content":"F is wrong, you cannot use GetSessionToken to configure session policy. \nYou can pass a single inline session policy programmatically by using the policy parameter with the AssumeRole, AssumeRoleWithSAML, AssumeRoleWithWebIdentity, and GetFederationToken API operations.\nACE is correct answer.","poster":"ele","upvote_count":"2"}]},{"upvote_count":"9","content":"Selected Answer: BCE\n- C) Attach an identity-based policy to the IAM user in Account A (allowed to assume IAM role in Acccount B)\n- E) Configure the trust policy on the target role in Account B (accountID of the trusted account which is Account A)\n- B) Configure a resource-based policy which allows certain actions on resources which reside in Account B)\n\nreference:\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html","comments":[{"timestamp":"1704356280.0","poster":"JMAN1","content":"IAM roles and resource-based policies delegate access across accounts only within a single partition. For example, assume that you have an account in US West (N. California) in the standard aws partition. You also have an account in China (Beijing) in the aws-cn partition. You can't use an Amazon S3 resource-based policy in your account in China (Beijing) to allow access for users in your standard aws account.\n\nSo B can't be answer.","comment_id":"1113421","upvote_count":"1"}],"comment_id":"1064990","poster":"Andres123456","timestamp":"1699374180.0"},{"content":"Selected Answer: ACE\n✅C. Configure the identity-based policy on the user in Account A to allow the action.\n\n The IAM user in Account A needs permission to assume the role in Account B.\n This is done by attaching an identity-based policy that allows the sts:AssumeRole action on the target role in Account B.\n\n✅ E. Configure the trust policy on the target role in Account B to allow the action.\n\n The IAM role in Account B must trust the user from Account A.\n This is done by adding a trust policy to the role, specifying Account A’s user or a specific IAM principal from Account A.\n\n✅ A. Configure the SCP for Account A to allow the action.\n\n Service Control Policies (SCPs) act as guardrails at the AWS Organizations level.\n If there is an SCP that denies cross-account role assumption, it must be modified to allow sts:AssumeRole for Account A.","comment_id":"1400452","poster":"eesa","upvote_count":"1","timestamp":"1742378220.0"},{"content":"Selected Answer: ACE\nIAM Role does not support Resource-Based Policy, we should apply Trust Policy instead.","poster":"albert_kuo","comment_id":"1366738","upvote_count":"1","timestamp":"1741487220.0"},{"timestamp":"1731903540.0","poster":"AzureDP900","comment_id":"1313836","upvote_count":"1","content":"Option A (Configure the SCP for Account A to allow the action) is correct because the SCP would need to be configured to allow the assumption of roles from one account to another.\n\nOption C (Configure the identity-based policy on the user in Account A to allow the action) is also correct, as it would define the permissions that the IAM user has within their own account.\n\nAnd finally, Option E (Configure the trust policy on the target role in Account B to allow the action) is necessary because it specifies the external identity provider and the roles that can be assumed by users from that identity provider."},{"timestamp":"1730359980.0","upvote_count":"1","comment_id":"1305315","content":"Selected Answer: ACE\nRevising my earlier vote to ACE, agree that resource based policies is not required. SCP though apply restriction rather than allow, reviewing it to ensure it doesn't block this access does make sense.","poster":"Daniel76"},{"poster":"sashenka","timestamp":"1729730100.0","upvote_count":"5","content":"Correct Options:\n\nA. Configure the SCP for Account A to allow the action.\n\nC. Configure the identity-based policy on the user in Account A to allow the action.\n\nE. Configure the trust policy on the target role in Account B to allow the action.\n\nExplanation of Incorrect Options:\n\nB. Configure the resource-based policies to allow the action:\n\nResource-based policies are typically used to control access to specific resources like S3 buckets, not for cross-account role assumption.\n\nD. Configure the identity-based policy on the user in Account B to allow the action:\n\nThe identity-based policy for users in Account B is not relevant here, as the user in Account A needs permission to assume the role.","comment_id":"1302245"},{"upvote_count":"1","content":"Selected Answer: BCE\nSCPs are not necessary at all here...","timestamp":"1727786940.0","comment_id":"1291961","poster":"Syre"},{"content":"Selected Answer: ACE\nthe ask is steps to \"ASSUME A ROLE\" not to \"access the resource\" . so option B and F are wrong as with A, C, E I can still assume the role regardless of the configuration of resource policy and session policy who can still deny access to the resource","timestamp":"1727480580.0","poster":"wbedair","upvote_count":"1","comment_id":"1290438"},{"upvote_count":"1","timestamp":"1723549320.0","content":"Selected Answer: BCE\nTo allow an IAM user in Account A to assume a role in Account B - we only need identity-based , resource-based and trust policies. Session policy and SCP not required.","comment_id":"1265128","poster":"Daniel76"},{"upvote_count":"1","comments":[{"content":"A: SCPs (Service Control Policies) are used to set permission boundaries at the organizational or account level. SCPs can restrict or allow certain actions, but they do not grant permissions directly. An SCP in Account A would typically not be responsible for directly allowing a user to assume a role in Account B, though it could block the action if not configured properly.","timestamp":"1723364340.0","comments":[{"content":"B: Resource-based policies are policies attached directly to AWS resources (like S3 buckets or IAM roles). However, in this scenario, resource-based policies are less relevant because the focus is on role assumption, which is governed by identity policies and trust policies rather than resource-based policies.","poster":"kgpoj","comment_id":"1263932","timestamp":"1723364340.0","upvote_count":"1"}],"comment_id":"1263930","upvote_count":"1","poster":"kgpoj"}],"poster":"kgpoj","comment_id":"1263927","content":"Selected Answer: ACE\nA (SCP) is more relevant than B (resource-based policies) because, while SCPs are not granting permissions, they could potentially restrict actions. Therefore, ensuring that the SCP in Account A (and Account B) does not block the necessary sts:AssumeRole action is important. B (resource-based policies) isn't relevant for the cross-account role assumption in this context.","timestamp":"1723364340.0"},{"comment_id":"1242532","timestamp":"1720161480.0","content":"Selected Answer: CDE\nE Trust policy in B\nD Identity-based policy on the ROLE in Account B to allow the action (I think typo in question)\nC Configure the identity-based policy on the user in Account A to allow the action.\n\nJust try it in AWS env.","upvote_count":"1","poster":"alex_heavy"},{"timestamp":"1718147340.0","comment_id":"1228691","content":"Selected Answer: BCE\nyou generally do not need to modify the Service Control Policies (SCPs) to allow one account's IAM users to assume roles in another account, as long as the SCPs do not explicitly deny the required actions (like sts:AssumeRole).","upvote_count":"2","poster":"trungtd"},{"comment_id":"1222895","poster":"9f02c8d","upvote_count":"2","timestamp":"1717274280.0","content":"BCE - SCP is not required here & used for deny not for allow"},{"comment_id":"1216625","upvote_count":"2","timestamp":"1716472440.0","content":"Selected Answer: BCE\nAnswer is BCE.\nSCPs are not used for ALLOW actions but for DENY actions at Org level.","poster":"red_panda"},{"timestamp":"1715604840.0","content":"Selected Answer: ACE\nThe key point here is \"The company's current security configuration for the account architecture includes SCPs,\" so if SCPs are in place, the SCP in the account A has to be configured to allow the action.","upvote_count":"2","comment_id":"1210867","poster":"teo2157"},{"poster":"seetpt","comment_id":"1206003","upvote_count":"2","content":"Selected Answer: ACE\nACE for me","timestamp":"1714726620.0"},{"comment_id":"1195559","upvote_count":"2","poster":"titi_r","timestamp":"1713103980.0","content":"Selected Answer: BCE\nB, C, E are correct answers."},{"timestamp":"1711729440.0","poster":"VerRi","comment_id":"1185577","content":"Selected Answer: CEF\nA: By default, an account is created and added to an AWS Organization inherits a \"FullAWSAccess\" policy, we don't have to \"allow\" the action","upvote_count":"2"},{"upvote_count":"3","poster":"mav3r1ck","timestamp":"1711661280.0","comment_id":"1185036","content":"Selected Answer: ACE\nOptions B, D, and F are not directly relevant to enabling cross-account role assumption in this context:\n\nB. Resource-based policies are not typically configured on IAM users but on resources like S3 buckets or KMS keys.\nD. The identity-based policy on a user in Account B is irrelevant since the action is being initiated by a user in Account A.\nF. Session policies are used to pass permissions when you create a session for a role or federated user. The GetSessionToken API operation is used with IAM users to create a session with MFA, not for assuming roles across accounts.\nTherefore, the correct combination of steps is A, C, and E."},{"poster":"Dgix","comment_id":"1173378","upvote_count":"3","content":"Selected Answer: ACE\nA: if \"allow\" is taken to mean \"not deny\"\nB: Resource policies have nothing to do with this\nC: required\nD: The user is in account A, not in account B, so this is out\nE: required\nF: Not how things are done when assuming roles","timestamp":"1710418260.0"},{"poster":"Wardove","upvote_count":"6","timestamp":"1707755220.0","comment_id":"1148356","content":"Selected Answer: ACE\nOption F is not applicable because session policies are intended to be used in conjunction with the AssumeRole operation to further refine permissions for the assumed role session, rather than being associated with the GetSessionToken operation. They are optional policies that you can pass when assuming a role to further restrict permissions for that session, not for enabling the role assumption itself.\n\nCompany uses SCP policies so if there has to be an SCP in place"},{"poster":"LazyAutonomy","timestamp":"1706598240.0","content":"Selected Answer: ACE\nFun fact - an IAM role trust policy is in fact a resource policy. So just like Service Control Policies (SCPs) are a guardrail for IAM permission policies, AWS will soon announce Resource Control Policies (RCPs) which will be a guardrail for resource policies, like IAM trust policies. Neat, eh? Check out https://www.zeuscloud.io/post/an-aws-iam-wishlist","comment_id":"1135558","upvote_count":"5"},{"upvote_count":"1","comment_id":"1124501","timestamp":"1705437720.0","poster":"vibzr2023","content":"Answer: CEF\nOption A incorrect coz, Service Control Policies (SCPs) are used to set permission guardrails for the entire organization or organizational units. They are not directly related to allowing IAM users to assume roles in other accounts."},{"comment_id":"1124113","upvote_count":"4","content":"Selected Answer: ACE\nF Cannot be the answer.\nhttps://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html\n---\nThe temporary security credentials created by AssumeRole can be used to make API calls to any AWS service with the following exception: You cannot call the AWS STS GetFederationToken or GetSessionToken API operations.\n---","poster":"JMAN1","timestamp":"1705402320.0"},{"content":"Selected Answer: ACE\nF is wrong.\n\n'You can create role session and pass session policies programmatically using the AssumeRole, AssumeRoleWithSAML, or AssumeRoleWithWebIdentity API operations'\n\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session","comments":[{"poster":"tmlong18","content":"Also, GetSessionToken is for MFA and Session Policy not grant permission","comment_id":"1123098","timestamp":"1705298880.0","upvote_count":"2"}],"comment_id":"1123095","upvote_count":"3","poster":"tmlong18","timestamp":"1705298100.0"},{"upvote_count":"2","poster":"yuliaqwerty","timestamp":"1703669760.0","comment_id":"1106690","content":"BCE Here are the basic steps:\n\nCreate an IAM role in the target account that will be assumed. This role should have the necessary permissions for the actions that will be performed.\n\nAttach a trust policy to the role that allows the source account to assume it. The trust policy specifies the principals (accounts, users, roles) that are trusted to assume the role. It would list the source account as a trusted entity.\n\nWhen a user in the source account wants to assume the role, they call the \naws sts assume-role\n CLI command or \nAssumeRole\n API action. They specify the ARN of the role in the target account.\n\nAWS security credentials will be returned that can be used by the source account user to make API calls and access resources as permitted by the permissions of the assumed role in the target account."},{"comment_id":"1103937","content":"A,C,E -ANS\n1. Configure the SCP for Account A to allow the action.\n2. Configure the identity-based policy on the user in Account A to allow the action.\n3. Configure the trust policy on the target role in Account B to allow the action.\n\nHere's a breakdown of why these steps are necessary:\n\nSCP (Service Control Policy):\n\nIt acts as a guardrail, enforcing a baseline of permissions across accounts.\nIt must explicitly allow cross-account role assumption for it to be possible.\nIdentity-Based Policy on User in Account A:\n\nThis policy grants permissions directly to the IAM user.\nIt must include the sts:AssumeRole action to allow the user to assume the role in Account B.\nTrust Policy on Target Role in Account B:\n\nIt specifies which entities are trusted to assume the role.\nIt must include the principal (IAM user or account) from Account A in its trust policy to permit the assumption.","poster":"duriselvan","timestamp":"1703320740.0","upvote_count":"3"},{"comment_id":"1102528","upvote_count":"7","content":"Selected Answer: ACE\nA - SCP's by default deny so you must have an explicit allow. Often that is done with the FullAwsAccess, but this answer fits most (see reasoning for other answers)\nB - Resource-based policies are attached to a resources, and not IAM user/group/role so not applicable here\nC - The IAM user needs the policy to do sts:AssumeRole, so this one is needed\nD - The IAM role in account B only needs permissions to access resources in account B. Also, the answer talks about \"user\" and there is no user in account B (or at least not in the scope of the question)\nE - The IAM role in account B needs to trust the action of the user in account A, so this is needed as well.\nF - GetSessionToken is used to get a session for an IAM user. This users is in account A and we don't need a session in account A, but we need an assumerole to account B. Therefore this is not needed. If the question talks about MFA then this might come into play.","timestamp":"1703163180.0","poster":"Impromptu"},{"upvote_count":"1","comment_id":"1086742","timestamp":"1701599520.0","content":"Selected Answer: CEF\nAnswer - CEF\nIdentity policy on Account A \nTrust policy on Account B\nSession token for temporary creds using GetSessionToken API. \nhttps://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html\n\nThe temporary security credentials created by GetSessionToken can be used to make API calls to any AWS service with the following exceptions:\nYou cannot call any AWS STS API except AssumeRole or GetCallerIdentity.","poster":"shaaam80"},{"content":"A, C and E are right options. \n1. SCP can be used to Allow or Deny a action. \n2. Actual permission for doing an action has to be granted to user in the account\n3. Target Account B should have have a resource based policy to allow that action.","comment_id":"1074460","poster":"career360guru","upvote_count":"3","timestamp":"1700372040.0"},{"content":"Selected Answer: CEF\nCEF - SCP DOES NOT ALLOW IT, JUST DENYS IT.","upvote_count":"3","poster":"kairosfc","comment_id":"1069791","timestamp":"1699912860.0"},{"comment_id":"1064499","upvote_count":"2","poster":"AMohanty","content":"SCP only affects IAM in same Accounts so NOT A\nQuestion is about assuming Role -> No question about Resource based policy\nIdentity policy to be defined in same account as its created so NOT D\n\nAnswer: CEF","timestamp":"1699333200.0"},{"timestamp":"1698672300.0","upvote_count":"1","comment_id":"1057747","poster":"s61","content":"Selected Answer: CEF\nCEF is correct"},{"upvote_count":"3","content":"Selected Answer: BCE\n- C) Attach an identity-based policy to the IAM user in Account A (allowed to assume IAM role in Acccount B)\n- E) Configure the trust policy on the target role in Account B (accountID of the trusted account which is Account A)\n- B) Configure a resource-based policy which allows certain actions on resources which reside in Account B)\n\nreference:\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html","poster":"gonzales","timestamp":"1698601560.0","comment_id":"1057044"},{"comment_id":"1056859","poster":"KungLjao","timestamp":"1698587820.0","content":"Selected Answer: CEF\nSCPs should not have to do anything witht his","upvote_count":"4"}],"choices":{"A":"Configure the SCP for Account A to allow the action.","B":"Configure the resource-based policies to allow the action.","D":"Configure the identity-based policy on the user in Account B to allow the action.","F":"Configure the session policy to allow the action and to be passed programmatically by the GetSessionToken API operation.","C":"Configure the identity-based policy on the user in Account A to allow the action.","E":"Configure the trust policy on the target role in Account B to allow the action."},"timestamp":"2023-10-28 13:06:00","topic":"1","unix_timestamp":1698491160,"question_images":[],"exam_id":33,"answer_description":"","answers_community":["ACE (57%)","BCE (27%)","Other"]},{"id":"jBemoCiF3kqFVpx9jgVf","answer_description":"","answer":"C","topic":"1","question_text":"An enterprise company wants to allow its developers to purchase third-party software through AWS Marketplace. The company uses an AWS Organizations account structure with full features enabled, and has a shared services account in each organizational unit (OU) that will be used by procurement managers. The procurement team’s policy indicates that developers should be able to obtain third-party software from an approved list only and use Private Marketplace in AWS Marketplace to achieve this requirement. The procurement team wants administration of Private Marketplace to be restricted to a role named procurement-manager-role, which could be assumed by procurement managers. Other IAM users, groups, roles, and account administrators in the company should be denied Private Marketplace administrative access.\nWhat is the MOST efficient way to design an architecture to meet these requirements?","discussion":[{"comments":[{"timestamp":"1692304740.0","upvote_count":"3","poster":"SK_Tyagi","content":"The catch is the \"Create an organization root-level SCP to deny permissions\". I'd refrain from creating a root-level SCP","comment_id":"983987"}],"comment_id":"774824","poster":"masetromain","upvote_count":"16","content":"Selected Answer: C\nThe most efficient way to design an architecture to meet these requirements is option C. By creating an IAM role named procurement-manager-role in all the shared services accounts in the organization and adding the AWSPrivateMarketplaceAdminFullAccess managed policy to the role, the procurement managers will have the necessary permissions to administer Private Marketplace. Then, by creating an organization root-level SCP to deny permissions to administer Private Marketplace to everyone except the role named procurement-manager-role and another organization root-level SCP to deny permissions to create an IAM role named procurement-manager-role to everyone in the organization, the company can restrict access to Private Marketplace administrative access to only the procurement managers.","timestamp":"1673641260.0"},{"upvote_count":"1","timestamp":"1725093240.0","content":"C. Create an IAM role named procurement-manager-role in all the shared services accounts in the organization. Add the AWSPrivateMarketplaceAdminFullAccess managed policy to the role. Create an organization root-level SCP to deny permissions to administer Private Marketplace to everyone except the role named procurement-manager-role. Create another organization root-level SCP to deny permissions to create an IAM role named procurement-manager-role to everyone in the organization.","poster":"amministrazione","comment_id":"1275473"},{"comment_id":"1264031","poster":"MAZIADI","content":"Selected Answer: C\nNot D, why ? : D. Placing the procurement-manager-role in developer accounts with full Private Marketplace admin access increases the risk of mismanagement. Additionally, applying an SCP only to shared services accounts does not adequately restrict access across the entire organization.","upvote_count":"1","timestamp":"1723374060.0"},{"poster":"cnethers","upvote_count":"1","content":"Why C is right and D is wrong....\nFocus on the end of the question :\nOther IAM users, groups, roles, and account administrators in the company should be denied Private Marketplace administrative access.\nWhat is the MOST efficient way to design an architecture to meet these requirements? \n\nWho should be excluded? Other IAM users, groups, roles, and account administrators in the company\nWhat is the MOST efficient way? Apply SCP at the root level\nD is more work than C, this is a good reason to choose C over D","timestamp":"1718794020.0","comment_id":"1232833"},{"upvote_count":"1","content":"Selected Answer: C\nC. Most efficient and secure:\n\nCreating the procurement-manager-role in shared services accounts limits its scope to specific OUs, aligning with the organizational structure.\nGranting AWSPrivateMarketplaceAdminFullAccess to this role provides the necessary permissions for managing Private Marketplace within the OU.\nAn organization root-level SCP denying Private Marketplace administration to everyone except the procurement-manager-role ensures centralized control and restricts unauthorized access.\nAnother SCP preventing the creation of the procurement-manager-role outside of shared services accounts adds an extra layer of security.","timestamp":"1714787160.0","comment_id":"1206319","poster":"Chakanetsa"},{"content":"Selected Answer: C\nC, D doesn't make sense.","poster":"anubha.agrahari","upvote_count":"1","comment_id":"1166819","timestamp":"1709681700.0"},{"upvote_count":"2","timestamp":"1703004660.0","content":"Selected Answer: C\nNot A as it does not implement the requirement to enforce procurement managers to use the shared services account in each organizational unit\nNot B as this would allow developers to administer private market place\nnot D as this would allow developers to administer private market place\n\nC is correct as it configure the required role (with required permission) only in the shared service account, uses an SCP to deny private market place management to to everyone except the role named procurement-manager-role and another SCP to prevent creating a role nmaed procurement-manager-role","poster":"ninomfr64","comments":[{"poster":"ninomfr64","timestamp":"1703004840.0","upvote_count":"1","comment_id":"1100835","content":"Actually D would to the job, but creating a role in every account is nt strictly necessary and would cause more work"}],"comment_id":"1100833"},{"upvote_count":"2","timestamp":"1701778560.0","content":"C is the better one than D . because we need to apply scp to the root level with deny policy is the best practices. create the role and apply to each account is not a correct way and it is overhead to the adminstrator.","poster":"subbupro","comment_id":"1088467"},{"timestamp":"1699776120.0","poster":"severlight","upvote_count":"1","comment_id":"1068363","content":"Selected Answer: C\nlook on whenthan's answer"},{"upvote_count":"3","timestamp":"1697632560.0","content":"Selected Answer: C\ncreation of role in all shared services\nadding required policy to the role\ncreation of org root-level to guardrail who can have those privileges\ncreation of SCP to close out workaround of creation of another role with same access","poster":"whenthan","comment_id":"1046905"},{"upvote_count":"2","poster":"Tarun4b7","comment_id":"1020209","content":"Selected Answer: D\nC and D options are most relevant. Once you create a role, you cannot create another role with same name. So option C doesn't make sense. So my answer Option D","comments":[{"comment_id":"1143940","timestamp":"1707355320.0","upvote_count":"1","poster":"_Jassybanga_","comments":[{"content":"its C - the role should be in shared service accounts and not all accounts","timestamp":"1707355380.0","poster":"_Jassybanga_","upvote_count":"1","comment_id":"1143941"}],"content":"i am on same page"}],"timestamp":"1695931260.0"},{"comment_id":"998979","content":"Selected Answer: C\nClearly, it's C.","upvote_count":"1","poster":"qxy","timestamp":"1693882560.0"},{"comment_id":"981595","poster":"Karamen","comments":[{"content":"the first sentense \"An enterprise company wants to allow its developers to purchase third-party software through AWS Marketplace.\"","comment_id":"1047281","poster":"alicewsm","upvote_count":"1","timestamp":"1697668260.0","comments":[{"content":"Developers has to ask procurement manager and not purchase by themselves.","timestamp":"1700802000.0","comment_id":"1079042","poster":"jainparag1","upvote_count":"2"}]}],"content":"Selected answer: C\n\noption D: \"Create an IAM role named procurement-manager-role in all AWS accounts that will be used by developers\", the procurement-manager-role is used by manager not used by developers","upvote_count":"2","timestamp":"1692099420.0"},{"poster":"SorenBendixen","upvote_count":"2","comment_id":"977936","timestamp":"1691687460.0","content":"Selected Answer: D\nIts D - According to this : https://aws.amazon.com/blogs/awsmarketplace/controlling-access-to-a-well-architected-private-marketplace-using-iam-and-aws-organizations/","comments":[{"upvote_count":"2","comment_id":"977957","poster":"SorenBendixen","content":"Its C. D is wrong - missed : \"procurement-manager-role in all AWS accounts that will be used by DEVELOPERS\"","timestamp":"1691688900.0"}]},{"timestamp":"1688842140.0","content":"Selected Answer: C\nIts a C","comment_id":"946688","poster":"NikkyDicky","upvote_count":"1"},{"comment_id":"933021","upvote_count":"1","poster":"gd1","content":"Selected Answer: C\nC is correct-","timestamp":"1687650360.0"},{"content":"Selected Answer: C\nD is a distractor since the developers do not need to administer the private marketplace. Plus that the procurement team acts only in the shared accounts. That leaves C as the only option","poster":"Maria2023","upvote_count":"4","comment_id":"927814","timestamp":"1687199580.0"},{"poster":"Jackhemo","comment_id":"926910","timestamp":"1687122720.0","content":"Selected Answer: C\nFrom olabiba.ai:\nThe MOST efficient way to design an architecture to meet these requirements is option C. \n\nExplanation: \n- Create an IAM role named procurement-manager-role in all the shared services accounts in the organization. \n- Add the AWSPrivateMarketplaceAdminFullAccess managed policy to the role. \n- Create an organization root-level SCP to deny permissions to administer Private Marketplace to everyone except the role named procurement-manager-role. \n- Create another organization root-level SCP to deny permissions to create an IAM role named procurement-manager-role to everyone in the organization. \n\nThis approach ensures that only the procurement managers, who assume the procurement-manager-role, have administrative access to Private Marketplace. Other IAM users, groups, roles, and account administrators in the company are denied access to Private Marketplace administrative functions.","upvote_count":"3"},{"timestamp":"1684944240.0","upvote_count":"1","poster":"rtguru","comments":[{"comment_id":"910161","timestamp":"1685443200.0","content":"answer without proper justifications won't add up \nadditionally, the 4th option does not mention \"root\" level which in-turn is most efficient way of solving the problem\nso the correct answer is C\nthe correct answe","poster":"chikorita","upvote_count":"2"}],"content":"Correct answer is D","comment_id":"906028"},{"comment_id":"873170","timestamp":"1681774620.0","poster":"Sarutobi","content":"Selected Answer: C\nVery similar to this blog https://aws.amazon.com/blogs/awsmarketplace/controlling-access-to-a-well-architected-private-marketplace-using-iam-and-aws-organizations/. In here there are more details.","upvote_count":"3"},{"timestamp":"1679987400.0","upvote_count":"1","poster":"mfsec","comment_id":"852916","content":"Selected Answer: C\nCreate an IAM role named procurement-manager-role in all the shared services accounts in the organization."},{"content":"Selected Answer: C\nConfirmed","comment_id":"821883","timestamp":"1677365520.0","upvote_count":"1","poster":"cudbyanc"},{"timestamp":"1675090800.0","content":"Selected Answer: C\nshould be C i guess","comment_id":"792947","upvote_count":"1","poster":"zozza2023"},{"timestamp":"1674211560.0","poster":"ask4cloud","content":"Selected Answer: C\nThis approach allows the procurement managers to assume the procurement-manager-role in shared services accounts, which have the AWSPrivateMarketplaceAdminFullAccess managed policy attached to it and can then manage the Private Marketplace. The organization root-level SCP denies the permission to administer Private Marketplace to everyone except the role named procurement-manager-role and another SCP denies the permission to create an IAM role named procurement-manager-role to everyone in the organization, ensuring that only the procurement team can assume the role and manage the Private Marketplace. This approach provides a centralized way to manage and restrict access to Private Marketplace while maintaining a high level of security.","comment_id":"782128","upvote_count":"3"},{"comment_id":"744242","upvote_count":"3","poster":"masetromain","timestamp":"1670946840.0","content":"Selected Answer: C\nhttps://www.examtopics.com/discussions/amazon/view/28410-exam-aws-certified-solutions-architect-professional-topic-1/"}],"question_id":235,"answer_images":[],"choices":{"C":"Create an IAM role named procurement-manager-role in all the shared services accounts in the organization. Add the AWSPrivateMarketplaceAdminFullAccess managed policy to the role. Create an organization root-level SCP to deny permissions to administer Private Marketplace to everyone except the role named procurement-manager-role. Create another organization root-level SCP to deny permissions to create an IAM role named procurement-manager-role to everyone in the organization.","B":"Create an IAM role named procurement-manager-role in all AWS accounts in the organization. Add the AdministratorAccess managed policy to the role. Define a permissions boundary with the AWSPrivateMarketplaceAdminFullAccess managed policy and attach it to all the developer roles.","A":"Create an IAM role named procurement-manager-role in all AWS accounts in the organization. Add the PowerUserAccess managed policy to the role. Apply an inline policy to all IAM users and roles in every AWS account to deny permissions on the AWSPrivateMarketplaceAdminFullAccess managed policy.","D":"Create an IAM role named procurement-manager-role in all AWS accounts that will be used by developers. Add the AWSPrivateMarketplaceAdminFullAccess managed policy to the role. Create an SCP in Organizations to deny permissions to administer Private Marketplace to everyone except the role named procurement-manager-role. Apply the SCP to all the shared services accounts in the organization."},"answers_community":["C (92%)","8%"],"unix_timestamp":1670946840,"timestamp":"2022-12-13 16:54:00","isMC":true,"exam_id":33,"question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/91461-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_ET":"C"}],"exam":{"isBeta":false,"provider":"Amazon","id":33,"name":"AWS Certified Solutions Architect - Professional SAP-C02","numberOfQuestions":529,"lastUpdated":"11 Apr 2025","isMCOnly":true,"isImplemented":true},"currentPage":47},"__N_SSP":true}