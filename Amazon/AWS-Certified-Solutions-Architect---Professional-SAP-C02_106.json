{"pageProps":{"questions":[{"id":"UR58bqv0B8h3TcEzaZ72","answers_community":["A (100%)"],"timestamp":"2023-01-15 10:16:00","answer_images":[],"answer":"A","topic":"1","choices":{"A":"kms:GenerateDataKey","B":"kms:GetKeyPolicy","C":"kms:GetPublicKey","D":"kms:Sign"},"question_images":["https://img.examtopics.com/aws-certified-solutions-architect-professional-sap-c02/image7.png"],"answer_description":"","discussion":[{"poster":"masetromain","upvote_count":"15","comment_id":"776317","timestamp":"1689405360.0","content":"Selected Answer: A\nA. kms:GenerateDataKey\n\nThe solutions architect needs to add the \"kms:GenerateDataKey\" action to the IAM policy in order to generate a data key for client-side encryption. Without this action, the IAM role does not have the necessary permissions to generate a data key, which causes the error message when attempting to upload a new object.","comments":[{"timestamp":"1689405480.0","poster":"masetromain","content":"The other options are not correct because they are not required for this use case. kms:GetKeyPolicy allows for the retrieval of the key policy for a CMK but it does not have any relation to client-side encryption of S3 objects, kms:GetPublicKey allows for the retrieval of the public key of a CMK, but it does not have any relation to client-side encryption of S3 objects and kms:Sign allows for signing a message using a CMK but it does not have any relation to client-side encryption of S3 objects.","upvote_count":"2","comment_id":"776320"}]},{"comment_id":"1339878","content":"Selected Answer: A\nThe answers don't make sense. The requirement is that it will be client-side encryption, which means the object is already encrypted when sent to S3. S3 will not do any encryption, so S3 does not need to access the KMS key,","upvote_count":"1","timestamp":"1736770860.0","poster":"altonh"},{"upvote_count":"3","timestamp":"1721383200.0","comment_id":"1126639","content":"Selected Answer: A\nA = correct (you encrypt data with KMS Data Key and not KMS Key directly, unless data is < 4K)\nB = getting the policy would allow to get the data key needed for encryption\nC = client side encryption uses symmetric key not asymmetric keys\nD = sign allows for signing messages, API calls, etc.","poster":"ninomfr64"},{"poster":"career360guru","comment_id":"1103687","content":"Selected Answer: A\nOption A","upvote_count":"1","timestamp":"1719080520.0"},{"content":"Selected Answer: A\nA - need data key for client-side encr","poster":"NikkyDicky","upvote_count":"1","timestamp":"1704238020.0","comment_id":"941250"},{"content":"I don't understand since it's client side encryption, it means both encryption and key and tools are maintained in client side before submitting to aws s3, why we need add kms:GenerateDatakey ? We don't need kms to do anything since it's client-side encryption all is done outside of aws.","poster":"Jesuisleon","comments":[{"content":"When you want to do the client side encryption, your files are most likely above 4K in size. So, you would be performing envelope encryption.\nFor that, you need a data key.\nYou ask KMS to generate and give you the data key, supplying the kms CMK.\nKMS would generate a new data key, encrypt it with the CMK and return you both the encrypted and plain data key. AWS would never retain the data key; they will immediately discard it.\nYou would now encrypt your data using the plain data key and immediately delete the plain data key (unencrypted). You store the encrypted data key that you got from KMS along with the encrypted data, which is then uploaded to s3. Note that AWS does NOT know about the data key at this point; only you know. KMS just holds the kms CMK that was used to encrypt the data key.\nSo, you need access to KMS to decrypt the data key before using that decrypted data key to unencrypt your data.\nSimilarly AWS cannot read your data, even though it has the KMS CMK and also the encrypted data key stored in s3.\nThis is why you need the generateDataKey permission. Hope this helps.","timestamp":"1709200680.0","comments":[{"content":"Of course the answer is A","upvote_count":"1","timestamp":"1709200800.0","poster":"venvig","comment_id":"992902"}],"upvote_count":"11","poster":"venvig","comment_id":"992899"},{"timestamp":"1703005680.0","poster":"bcx","upvote_count":"2","comment_id":"927622","content":"Indeed, the question says client side encryption but the answer is all about S3-KMS."}],"comment_id":"899504","timestamp":"1700168160.0","upvote_count":"4"},{"comment_id":"851055","timestamp":"1695734220.0","upvote_count":"1","content":"Selected Answer: A\nA for sure","poster":"mfsec"},{"comment_id":"790792","timestamp":"1690553880.0","poster":"Untamables","upvote_count":"3","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/kms/latest/cryptographic-details/client-side-encryption.html"},{"poster":"masssa","comment_id":"786002","upvote_count":"1","timestamp":"1690150860.0","content":"Selected Answer: A\nI Vote A.\nhttps://repost.aws/ja/knowledge-center/s3-large-file-encryption-kms-key\nAdding kms:GenerateDataKey is necessary."}],"question_id":526,"unix_timestamp":1673774160,"exam_id":33,"url":"https://www.examtopics.com/discussions/amazon/view/95392-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_ET":"A","isMC":true,"question_text":"A solutions architect needs to implement a client-side encryption mechanism for objects that will be stored in a new Amazon S3 bucket. The solutions architect created a CMK that is stored in AWS Key Management Service (AWS KMS) for this purpose.\n\nThe solutions architect created the following IAM policy and attached it to an IAM role:\n\n//IMG//\n\n\nDuring tests, the solutions architect was able to successfully get existing test objects in the S3 bucket. However, attempts to upload a new object resulted in an error message. The error message stated that the action was forbidden.\n\nWhich action must the solutions architect add to the IAM policy to meet all the requirements?"},{"id":"6dJ5zv2DxEWx4P0EI2mp","answer_images":[],"question_images":[],"isMC":true,"topic":"1","question_id":527,"answer_ET":"A","url":"https://www.examtopics.com/discussions/amazon/view/95394-exam-aws-certified-solutions-architect-professional-sap-c02/","exam_id":33,"answer":"A","answer_description":"","question_text":"A company has developed a web application. The company is hosting the application on a group of Amazon EC2 instances behind an Application Load Balancer. The company wants to improve the security posture of the application and plans to use AWS WAF web ACLs. The solution must not adversely affect legitimate traffic to the application.\n\nHow should a solutions architect configure the web ACLs to meet these requirements?","answers_community":["A (100%)"],"unix_timestamp":1673774400,"timestamp":"2023-01-15 10:20:00","discussion":[{"content":"Selected Answer: A\nAWS WAF allows you to create web ACL (Access Control List) rules in \"Count\" mode, which allows you to monitor traffic without actually blocking it. In Count mode, AWS WAF counts the number of requests that match a particular rule, but doesn't take any action to block those requests.\n\nCount mode can be useful in several ways:\n\n Testing new rules: You can create new rules and test them in Count mode before enabling them to block traffic. This allows you to evaluate the effectiveness of your rules without risking false positives or false negatives.\n\n Analyzing traffic: You can use Count mode to analyze traffic patterns and identify potential security threats. By monitoring the number of requests that match a particular rule, you can detect patterns that may indicate an attack or vulnerability.\n\n Compliance reporting: Count mode can be used for compliance reporting, where you need to demonstrate that certain rules are being enforced. By counting the number of requests that match a rule, you can provide evidence that your security policies are being followed.","timestamp":"1693950840.0","upvote_count":"22","poster":"God_Is_Love","comment_id":"830443"},{"content":"Selected Answer: A\nhttps://www.examtopics.com/discussions/amazon/view/74273-exam-aws-certified-solutions-architect-professional-topic-1/\n\nThe correct answer is A. Set the action of the web ACL rules to Count. Enable AWS WAF logging. Analyze the requests for false positives. Modify the rules to avoid any false positive. Over time, change the action of the web ACL rules from Count to Block.\n\nThis approach allows for monitoring of the incoming traffic and its behavior before taking any action that can affect the legitimate traffic. By setting the action to count, the web ACL will only log the requests that match the conditions of the rules, but it will not block them. This way, the company can analyze the requests and check for any false positives. Once they identify and correct any false positives, they can gradually change the action of the web ACL rules from count to block, thus improving the security posture of the application without adversely affecting legitimate traffic.","poster":"masetromain","timestamp":"1689405600.0","comments":[{"poster":"masetromain","content":"Option B is not correct because using only rate-based rules can lead to false positives and blocking of legitimate traffic. Option C is not correct because using only AWS managed rule groups can limit the flexibility and specificity of the web ACLs. Option D is not correct because using only custom rule groups with action set to allow can lead to security vulnerabilities.","timestamp":"1689405660.0","upvote_count":"1","comment_id":"776330"}],"comment_id":"776329","upvote_count":"6"},{"comment_id":"1175857","content":"Selected Answer: A\nA, configure the rules on COUNT","timestamp":"1726573140.0","upvote_count":"1","poster":"gofavad926"},{"poster":"Explorer_30","timestamp":"1708351080.0","upvote_count":"1","comment_id":"985165","content":"vote A"},{"timestamp":"1704238140.0","upvote_count":"1","poster":"NikkyDicky","content":"Selected Answer: A\nIts an A","comment_id":"941251"},{"comment_id":"851058","upvote_count":"1","poster":"mfsec","timestamp":"1695734340.0","content":"Selected Answer: A\nA. Set the action of the web ACL rules to Count. Enable AWS WAF logging."},{"timestamp":"1690554000.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/waf/latest/developerguide/web-acl-testing.html","comment_id":"790794","upvote_count":"1","poster":"Untamables"}],"choices":{"D":"Use only custom rule groups in the web ACLs, and set the action to Allow. Enable AWS WAF logging. Analyze the requests for false positives. Modify the rules to avoid any false positive. Over time, change the action of the web ACL rules from Allow to Block.","B":"Use only rate-based rules in the web ACLs, and set the throttle limit as high as possible. Temporarily block all requests that exceed the limit. Define nested rules to narrow the scope of the rate tracking.","A":"Set the action of the web ACL rules to Count. Enable AWS WAF logging. Analyze the requests for false positives. Modify the rules to avoid any false positive. Over time, change the action of the web ACL rules from Count to Block.","C":"Set the action of the web ACL rules to Block. Use only AWS managed rule groups in the web ACLs. Evaluate the rule groups by using Amazon CloudWatch metrics with AWS WAF sampled requests or AWS WAF logs."}},{"id":"anfQ2HWCoulULdhj9qLt","answer_ET":"C","discussion":[{"poster":"masetromain","comments":[{"poster":"masetromain","comment_id":"779098","upvote_count":"2","content":"Option A is not correct because it requires setting up an SNS topic in the security team's AWS account, and deploying an AWS Lambda function in each AWS account. This increases the operational overhead as it requires setting up and maintaining the SNS topic, and deploying and configuring the Lambda function in each account.\n\nOption B is not correct because it requires creating new customer-managed prefix lists in each AWS account within the organization, which increases the operational overhead as it requires the security team to create and maintain multiple prefix lists.\n\nOption D is not correct because it requires creating an IAM role in each account in the organization, which increases the operational overhead as it requires the security team to set up and maintain multiple roles. Additionally, it also deploys an AWS Lambda function in the security team’s AWS account, which increases complexity and operational overhead.","timestamp":"1689606180.0"}],"content":"Selected Answer: C\nC. Create a new customer-managed prefix list in the security team’s AWS account. Populate the customer-managed prefix list with all internal CIDR ranges. Share the customer-managed prefix list with the organization by using AWS Resource Access Manager. Notify the owner of each AWS account to allow the new customer-managed prefix list ID in their security groups.\n\nThis solution meets the requirements with the least amount of operational overhead as it requires the security team to create and maintain a single customer-managed prefix list, and share it with the organization using AWS Resource Access Manager. The owners of each AWS account are then responsible for allowing the prefix list in their security groups, which eliminates the need for the security team to manually notify each account owner when changes are made. This solution also eliminates the need for a separate AWS Lambda function in each account, reducing the overall complexity of the solution.","comment_id":"779097","timestamp":"1689606120.0","upvote_count":"11"},{"poster":"bur4an","content":"masetromain is ChatGPT and might have outdated answers since it doesnt know aws latest update to services","upvote_count":"8","comment_id":"1002965","timestamp":"1709971500.0"},{"upvote_count":"1","poster":"AlbertC","content":"Human cost is major overhead. I will go A. This is one time setup.","timestamp":"1727099820.0","comment_id":"1180993"},{"upvote_count":"1","content":"Selected Answer: C\nCentralised management and standard use case for prefix lists and RAM","timestamp":"1726610220.0","poster":"StevePace","comment_id":"1176116"},{"poster":"career360guru","timestamp":"1719081600.0","upvote_count":"1","content":"Selected Answer: C\nOption C","comment_id":"1103706"},{"poster":"NikkyDicky","upvote_count":"1","content":"Selected Answer: C\nC - basic RAM use case","timestamp":"1704238260.0","comment_id":"941252"},{"timestamp":"1703006220.0","poster":"bcx","upvote_count":"1","content":"Selected Answer: C\nTypical use case for RAM. It is the typical question that leads you to the solution without even finishing reading the question.","comment_id":"927628"},{"comment_id":"926833","timestamp":"1702929720.0","poster":"SkyZeroZx","content":"Selected Answer: C\nKEYWORD = AWS Resource Access Manager\nThen C","upvote_count":"1"},{"content":"Selected Answer: D\noperational overhead","timestamp":"1701361320.0","upvote_count":"1","poster":"johnballs221","comment_id":"910312"},{"comment_id":"851126","timestamp":"1695737580.0","upvote_count":"2","poster":"mfsec","content":"Selected Answer: C\nPrefix lists + RAM"},{"timestamp":"1693955160.0","upvote_count":"5","poster":"God_Is_Love","comment_id":"830468","content":"Prefix lists + Resource Access Manager RAM is the solution."},{"upvote_count":"1","content":"Selected Answer: C\nClearly","comment_id":"795542","timestamp":"1690918920.0","poster":"Musk"},{"timestamp":"1690749480.0","content":"Selected Answer: C\nCreate a new customer-managed prefix list in the security team’s AWS account","poster":"zozza2023","comment_id":"793418","upvote_count":"1"},{"upvote_count":"3","poster":"Untamables","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html","comment_id":"790797","timestamp":"1690554060.0"},{"upvote_count":"1","poster":"zhangyu20000","timestamp":"1689455460.0","comment_id":"777160","content":"C is correct. The prefix list is managed by security team and shared with other accounts. Other accounts can directly use it."},{"content":"Selected Answer: D\nThe correct answer is D.\n\nOption D creates an IAM role in each account in the organization which grants permissions to update security groups. Then, it deploys an AWS Lambda function in the security team’s AWS account, this lambda function is able to assume the IAM roles in each account and update the security groups with the new IP CIDR ranges. This solution allows the security team to easily distribute and update the common set of IP CIDR ranges across all accounts with minimal operational overhead.\n\nOption A, uses an SNS topic, where the security team would need to notify all account owners every time an update is made to the allow list and would require the developers in each account to run a Lambda function which updates the security group. This solution would require a lot of manual work, and is not automated.","timestamp":"1689405900.0","comments":[{"content":"Option B, requires the security team to notify the owners of each AWS account to allow the new customer-managed prefix list IDs in their accounts in their security groups, this solution would not provide a centralized control of the IP CIDR ranges and would require a lot of manual work.\n\nOption C, uses a customer-managed prefix list in the security team’s AWS account. But, it still requires the owners of each account to allow the new customer-managed prefix list ID in their security groups, this solution would not provide a centralized control of the IP CIDR ranges and would require a lot of manual work.","timestamp":"1689405900.0","upvote_count":"1","comments":[{"comments":[{"comment_id":"912948","timestamp":"1701541980.0","content":"It's ChatGPT talking","upvote_count":"1","poster":"BabaP"}],"comment_id":"830457","timestamp":"1693953120.0","poster":"God_Is_Love","content":"Create an IAM role in each account in the organization. this does not add up to operational overhead right.","upvote_count":"1"}],"poster":"masetromain","comment_id":"776341"}],"comment_id":"776340","poster":"masetromain","upvote_count":"2"}],"answers_community":["C (88%)","12%"],"question_id":528,"answer_images":[],"question_text":"A company has an organization that has many AWS accounts in AWS Organizations. A solutions architect must improve how the company manages common security group rules for the AWS accounts in the organization.\n\nThe company has a common set of IP CIDR ranges in an allow list in each AWS account to allow access to and from the company’s on-premises network. Developers within each account are responsible for adding new IP CIDR ranges to their security groups. The security team has its own AWS account. Currently, the security team notifies the owners of the other AWS accounts when changes are made to the allow list.\n\nThe solutions architect must design a solution that distributes the common set of CIDR ranges across all accounts.\n\nWhich solution meets these requirements with the LEAST amount of operational overhead?","topic":"1","timestamp":"2023-01-15 10:25:00","choices":{"B":"Create new customer-managed prefix lists in each AWS account within the organization. Populate the prefix lists in each account with all internal CIDR ranges. Notify the owner of each AWS account to allow the new customer-managed prefix list IDs in their accounts in their security groups. Instruct the security team to share updates with each AWS account owner.","C":"Create a new customer-managed prefix list in the security team’s AWS account. Populate the customer-managed prefix list with all internal CIDR ranges. Share the customer-managed prefix list with the organization by using AWS Resource Access Manager. Notify the owner of each AWS account to allow the new customer-managed prefix list ID in their security groups.","D":"Create an IAM role in each account in the organization. Grant permissions to update security groups. Deploy an AWS Lambda function in the security team’s AWS account. Configure the Lambda function to take a list of internal IP addresses as input, assume a role in each organization account, and add the list of IP addresses to the security groups in each account.","A":"Set up an Amazon Simple Notification Service (Amazon SNS) topic in the security team's AWS account. Deploy an AWS Lambda function in each AWS account. Configure the Lambda function to run every time an SNS topic receives a message. Configure the Lambda function to take an IP address as input and add it to a list of security groups in the account. Instruct the security team to distribute changes by publishing messages to its SNS topic."},"exam_id":33,"url":"https://www.examtopics.com/discussions/amazon/view/95397-exam-aws-certified-solutions-architect-professional-sap-c02/","isMC":true,"question_images":[],"unix_timestamp":1673774700,"answer_description":"","answer":"C"},{"id":"hByI9NxUDNVGL0msVnxU","answer_description":"","answer_images":[],"question_id":529,"answers_community":["B (51%)","C (49%)"],"question_images":[],"topic":"1","unix_timestamp":1673774820,"exam_id":33,"isMC":true,"answer_ET":"B","choices":{"A":"Create a Client VPN endpoint in each AWS account. Configure required routing that allows access to internal applications.","C":"Create a Client VPN endpoint in the main AWS account. Provision a transit gateway that is connected to each AWS account. Configure required routing that allows access to internal applications.","B":"Create a Client VPN endpoint in the main AWS account. Configure required routing that allows access to internal applications.","D":"Create a Client VPN endpoint in the main AWS account. Establish connectivity between the Client VPN endpoint and the AWS Site-to-Site VPN."},"url":"https://www.examtopics.com/discussions/amazon/view/95398-exam-aws-certified-solutions-architect-professional-sap-c02/","timestamp":"2023-01-15 10:27:00","discussion":[{"comments":[{"poster":"artazar","timestamp":"1741573560.0","content":"Direct link from the docs for the scenario:\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/how-it-works.html#scenario-peered\n\nTransitive peering is VPC A <-peer-> VPC B <-peer-> VPC C ---> here VPC A cannot communicate to VPC C. But Client VPN is not a peering connection.","upvote_count":"1","comment_id":"1375720"},{"content":"The VPC in the company's main AWS account has peering connections established with VPCs in other AWS accounts => no need transit gw","comment_id":"995611","poster":"vn_thanhtung","timestamp":"1693536000.0","upvote_count":"13"},{"upvote_count":"12","content":"The question asks a scalable Client VPN solution (i.e. no openvpn on an EC2 instance or something like that), and asks for the most cost-effective. So AWS Client VPN is the scalable option. Reusing the current VPC peering is the most cost-effective compared to the far more expensive transit gateway solution.\nI do agree that the peering does not support transitive peering. But for AWS Client VPN you get an ENI in the main account VPC and using the ENI you can access the VPCs over the VPC peering. So that does really work (in contrast to the Site-To-Site VPN): https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","timestamp":"1703060820.0","poster":"Impromptu","comments":[{"timestamp":"1724901480.0","content":"Most cost effective - Transit gateway option is more costlier then B","poster":"_Jassybanga_","comment_id":"1274315","upvote_count":"3"}],"comment_id":"1101378"}],"content":"Selected Answer: C\nC.\nHave you guys worked in a place where the configuration of B works?\n\nThe question clearly ask to design something scalable, and on C, the Transit Gateway serves as a network transit hub, allowing VPN connections to access resources across multiple VPCs in different AWS accounts.\nVPC peering connections do not support transitive peering relationships, which means that if a user is connected to one VPC via AWS Client VPN, they cannot access resources in another VPC that's connected via a peering connection.","upvote_count":"34","comment_id":"940944","timestamp":"1688305860.0","poster":"hexie"},{"upvote_count":"24","content":"Selected Answer: B\nhttps://www.examtopics.com/discussions/amazon/view/80782-exam-aws-certified-solutions-architect-professional-topic-1/\n\nB. Create a Client VPN endpoint in the main AWS account. Configure required routing that allows access to internal applications is the MOST cost-effective solution that meets these requirements. This solution allows employees to connect to the main AWS account using a Client VPN endpoint, and then use peering connections established with other AWS accounts to access the internal applications. This eliminates the need for additional Client VPN endpoints in each AWS account, reducing costs. \n\nOption A, creating a Client VPN endpoint in each AWS account, would be more expensive as it would require multiple endpoints. \n\nOption C, creating a transit gateway, would also add unnecessary costs. \n\nOption D, connecting the Client VPN endpoint to the Site-to-Site VPN, may not provide a scalable solution for remote employees.","timestamp":"1673774820.0","comment_id":"776346","poster":"masetromain"},{"content":"Selected Answer: C\nThis provides a scalable and centralized routing solution to connect VPCs across multiple AWS accounts.","poster":"BennyMao","comment_id":"1387371","upvote_count":"1","timestamp":"1741693740.0"},{"upvote_count":"1","content":"Selected Answer: B\nOption B is the most cost-effective solution as it only requires creating a single Client VPN endpoint in the main AWS account and configuring the required routing to access the internal applications across the VPC peering connections.\n\nOption C would involve additional costs for provisioning a transit gateway and connecting it to each AWS account, which is not necessary in this scenario since the VPCs are already peered.","timestamp":"1737090120.0","comment_id":"1342014","poster":"Liliwood"},{"content":"Selected Answer: B\nOption B is the MOST cost-effective solution that meets the requirements.","poster":"henrikhmkhitaryan59","upvote_count":"2","timestamp":"1732569060.0","comment_id":"1317772"},{"poster":"Hibiki761","timestamp":"1732247340.0","upvote_count":"1","comment_id":"1316142","content":"Selected Answer: B\nVPC peering is enough"},{"content":"Selected Answer: B\nBy choosing option B, you can provide a scalable and cost-effective solution for remote employees to access internal applications hosted in multiple AWS accounts, while leveraging the existing VPC peering connections and minimizing the number of AWS resources required.\n\nThe other options are either more complex, less cost-effective, or introduce unnecessary components:\nA. Creating a Client VPN endpoint in each AWS account would be more expensive and harder to manage, as you would need to configure and maintain multiple endpoints.\nC. Provisioning a Transit Gateway in addition to the Client VPN endpoint would introduce an additional service and associated costs, which may not be necessary if the existing VPC peering connections are sufficient.\nD. Establishing connectivity between the Client VPN endpoint and the AWS Site-to-Site VPN would introduce unnecessary complexity, as the Site-to-Site VPN is intended for connecting the on-premises office network, not individual remote employees.","timestamp":"1731988200.0","comment_id":"1314408","upvote_count":"1","poster":"0b43291"},{"timestamp":"1731959220.0","content":"answer is B, should take advantage of existing VPC peering connections which works with current network topology","poster":"youonebe","upvote_count":"1","comment_id":"1314191"},{"poster":"Halliphax","timestamp":"1730751300.0","upvote_count":"1","comment_id":"1307078","content":"Selected Answer: B\nB. \nIt asks for a scalable solution and it has to be cost effective. Adding Transit Gateway is not cost effective and also not required as the main AWS account has peering connections to VPCs in other accounts already."},{"comment_id":"1306622","content":"Selected Answer: B\nNo tgw needed","upvote_count":"2","poster":"sammyhaj","timestamp":"1730663220.0"},{"upvote_count":"1","timestamp":"1726335780.0","content":"Selected Answer: C\nAlways find possible solutions first. Then look for cost effective. A cost effective option that does not solve the requirements is by default the most expensive option.\n\nRequirement: most scalable option","comment_id":"1283733","poster":"Johnoppong101"},{"comment_id":"1276374","content":"B. Create a Client VPN endpoint in the main AWS account. Configure required routing that allows access to internal applications.","poster":"amministrazione","upvote_count":"1","timestamp":"1725251520.0"},{"poster":"Syre","timestamp":"1722531300.0","comment_id":"1259479","upvote_count":"1","content":"Selected Answer: B\nC introduces additional costs."},{"comment_id":"1253001","content":"Selected Answer: B\nAnswer is B, right now you have VPC Peering from main VPC to others account VPC, you can re-use that configuration, also transit-gateway has a cost based on connections and traffic and the solution must be MOST cost-effective","upvote_count":"2","poster":"zolthar_z","timestamp":"1721643540.0"},{"poster":"sse69","upvote_count":"2","comment_id":"1211002","content":"Selected Answer: B\nThe current AWS S2S VPN works fine without a TGW for app access\nOnly requirement is to have users use the Client VPN\nSo just deploy it in the main account, where the S2S VPN terminates and users will have the same level of access they have from onprem using VPC peerings.\nThat's the most cost effective way (even though client VPN is one expensive service for what it does...)","timestamp":"1715622420.0"},{"upvote_count":"1","content":"B is correct answer(Also gives scalable solution), \n\naws transit gateway bit high cost","timestamp":"1714226760.0","comment_id":"1203147","poster":"43c89f4"},{"comment_id":"1200646","upvote_count":"1","poster":"teo2157","content":"Selected Answer: B\nmarszalekm gave the key AWS doc\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","timestamp":"1713866160.0"},{"upvote_count":"1","comment_id":"1197390","content":"Selected Answer: B\nCost Effective with Peering Working","timestamp":"1713378960.0","poster":"Zas1"},{"timestamp":"1712323080.0","content":"Selected Answer: C\nFor me the question clearly wants to test our scalability solution. And for sure C is the best answer in my mind","comment_id":"1189937","poster":"red_panda","upvote_count":"2"},{"upvote_count":"2","poster":"TonytheTiger","timestamp":"1712235300.0","comments":[{"upvote_count":"1","comment_id":"1189338","poster":"TonytheTiger","timestamp":"1712235420.0","content":"We (AWS) recommend this configuration if you need to give clients access to the resources inside an on-premises network only.\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-onprem.html"}],"content":"Selected Answer: B\nOption B: - the question is asking for \" MOST cost-effective\" solution. AWS Transit gateway charged for the number of connections that you make to the Transit Gateway per hour and the amount of traffic that flows through AWS Transit Gateway. AWS Site-to-Site VPN connection pricing still applies in addition to AWS Transit Gateway VPN attachment pricing.\n\nhttps://aws.amazon.com/transit-gateway/pricing/\n\nAWS Client VPN is a fully-managed remote access VPN solution used by your remote workforce to securely access resources within both AWS and your on-premises network. Fully elastic, it automatically scales up, or down, based on demand.\nhttps://aws.amazon.com/vpn/client-vpn/","comment_id":"1189335"},{"upvote_count":"1","poster":"VerRi","content":"Selected Answer: B\nNo need TGW...","timestamp":"1711876920.0","comment_id":"1186701"},{"timestamp":"1710684000.0","content":"Selected Answer: C\nC, This setup leverages a central point of access through the transit gateway, minimizing the need to manage multiple VPN endpoints across accounts and simplifying network administration","poster":"gofavad926","comment_id":"1175868","upvote_count":"2"},{"content":"Selected Answer: C\nit's C","comment_id":"1175132","timestamp":"1710608460.0","upvote_count":"2","poster":"k23319"},{"content":"Not B - Not Transit Gateway, not the most cost-effective. In AWS Transit Gateway you are charged for the number of connections that you make to the Transit Gateway per hour and the amount of traffic that flows through AWS Transit Gateway. - https://aws.amazon.com/transit-gateway/pricing/","timestamp":"1709914140.0","poster":"TonytheTiger","comment_id":"1168932","upvote_count":"2"},{"content":"Selected Answer: B\nIn the case of client VPN, your device is considered as an ENI inside the VPC, due to which you get the private IP from the VPC CIDR Block. If your VPC is peered with another VPC, then just edit the route tables appropriately just like you do, and your client VPN's ENI will be able to communicate with the peered VPC resources.","timestamp":"1709906100.0","poster":"Adzz","comment_id":"1168848","upvote_count":"3"},{"poster":"a54b16f","content":"Selected Answer: B\nRead \"The VPC in the company's main AWS account has peering connections established with VPCs in other AWS accounts.\" , so no need for TG","timestamp":"1709484360.0","upvote_count":"1","comment_id":"1164936"},{"poster":"VerRi","upvote_count":"1","timestamp":"1708851180.0","content":"Selected Answer: B\nChoose B for cost-effectiveness, though both B & C work.","comment_id":"1158499"},{"poster":"marszalekm","comment_id":"1158072","content":"https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","timestamp":"1708796700.0","upvote_count":"3"},{"upvote_count":"2","content":"Selected Answer: B\nNo need for TGW.. Simple VPN client --> VPN endpoint --> Routing (Peering already)","comment_id":"1136606","poster":"AimarLeo","timestamp":"1706694540.0"},{"timestamp":"1705803120.0","poster":"Mungi","content":"Selected Answer: B\nClient VPN, unlike Site to Site VPN, allows communication between peered VPCs. The requirement here is to add Client VPN at the minimum cost. Consequently, there's no need to alter the already peered architecture by adding a Transit Gateway (TGW). Although it's possible to configure with TGW, it's entirely feasible and more cost-efficient to configure with the current peering status simply by changing routing.","comment_id":"1127585","upvote_count":"2"},{"timestamp":"1705659060.0","upvote_count":"1","poster":"ninomfr64","content":"Selected Answer: B\nA = no need for a Client VPN for each account, expensive\nB = correct (see https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html)\nC = no need for TGW, expensive\nD = we need client to access app in the peered VPC not the on-premisehttps://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/view/10/#","comment_id":"1126593"},{"timestamp":"1704176820.0","poster":"learnwithaniket","upvote_count":"3","content":"Selected Answer: C\nEven though VPCs are peered there is no transitive communication possible. A <-> B, B <-> C then VPC A can not access resources in VPC C. This is not possible.\nAs a reason you need Transit Gateway.","comment_id":"1111637"},{"content":"Selected Answer: C\nScaleable = TGW","comment_id":"1111587","poster":"wmp7039","timestamp":"1704170160.0","upvote_count":"3"},{"poster":"Jay_2pt0_1","timestamp":"1703607120.0","upvote_count":"2","content":"Like others have thankfully already communicated, B doesn't work. The VPCs would need to be peered. If you have a lot of VPCs, the answer is TGW.","comment_id":"1106192","comments":[{"poster":"Jay_2pt0_1","comments":[{"timestamp":"1704139140.0","comments":[{"poster":"tmlong18","comment_id":"1120544","timestamp":"1705047120.0","upvote_count":"1","content":"You are right !"}],"poster":"0c118eb","upvote_count":"3","content":"I agreed with you until I re-read the question. A client VPN is not a VPC- it is access into a VPC. The VPN puts you inside the Main VPC from which you are able to access resources in the peered VPC. Transitive peering does not come into play. https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","comment_id":"1111413"}],"comment_id":"1106195","upvote_count":"1","timestamp":"1703607180.0","content":"lol Maybe I'm wrong. It does say cost effective."}]},{"poster":"career360guru","content":"Selected Answer: B\nAs per this document, Option B seems to be best https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","upvote_count":"1","comment_id":"1103713","timestamp":"1703278200.0"},{"comment_id":"1101085","comments":[{"poster":"tural_nasirov","upvote_count":"1","content":"You can access to other accounts. It is not about peering mesh It is just creating VPC peering from all VPCs to the VPC where VPN connects. \nIt is cheap and scalable also, as new VPCs will be created, you can create another VPC peering between new VPC and VPN VPC.","timestamp":"1731879600.0","comment_id":"1313748"}],"upvote_count":"1","content":"Obviously B is not correct b/c you cannot access other accounts via peering connections. You can only connect to the main account resources in this case. So, transit gateway is the right option here","timestamp":"1703031960.0","poster":"GoKhe"},{"content":"C here is https://aws.amazon.com/blogs/networking-and-content-delivery/using-aws-client-vpn-to-scale-your-work-from-home-capacity/","comment_id":"1098755","poster":"yuliaqwerty","timestamp":"1702803000.0","upvote_count":"2"},{"timestamp":"1702485900.0","content":"B is right!!! Read this sentence \"The VPC in the company's main AWS account has peering connections established with VPCs in other AWS accounts.\"","poster":"ixdb","comment_id":"1095663","upvote_count":"3"},{"content":"Selected Answer: B\nThe most cost-effective and straightforward solution seems to be B. It simplifies management by using a single Client VPN endpoint and leverages existing VPC peering connections for cross-account access. This approach balances cost, complexity, and the need for scalable access to resources across multiple AWS accounts.","upvote_count":"1","comment_id":"1076830","timestamp":"1700613240.0","poster":"heatblur"},{"timestamp":"1699952400.0","content":"Selected Answer: B\nclient vpn gives you access to the eni inside vpc, so you can utilize peering connections","comment_id":"1070171","upvote_count":"1","poster":"severlight"},{"poster":"Sab","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","comment_id":"1064221","timestamp":"1699302000.0","upvote_count":"4"},{"poster":"SfQ","comments":[{"timestamp":"1702372860.0","content":"but not the most cost effective one though :)","upvote_count":"2","poster":"ayadmawla","comment_id":"1094310"}],"content":"Selected Answer: C\nTransit GW is the only scalable solution here.","timestamp":"1697780880.0","comment_id":"1048426","upvote_count":"4"},{"timestamp":"1697460720.0","content":"Selected Answer: C\nAlthough Transit Gateway introduces a new cost, VPC peering across mutliple VPCs is not transitive, and cannot be done without a transit gateway","upvote_count":"4","poster":"KungLjao","comment_id":"1044963"},{"comment_id":"1002970","poster":"bur4an","content":"masetromain voting is ruining the genuine most voted answers :(","timestamp":"1694240160.0","upvote_count":"5"},{"timestamp":"1694003220.0","content":"Selected Answer: C\nRef: https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html #limitation\n\nOption B (just create a Client VPN endpoint in the main AWS account and set up routing via VPC peering) really won't meet the needs.\n\nThe transitive peering restriction states that traffic between VPC B and VPC C cannot be routed through VPC A, even if there are VPC peering connections between VPC A and VPC B, and between VPC A and VPC C. In other words, if employees connect to the VPC of the master AWS account through Client VPN, they will not be able to access other VPCs connected to that master VPC through VPC peering.","comments":[{"content":"That's too much of a leap in logic.\nWhere did the situation of continuous VPC peering come from?","timestamp":"1701172380.0","upvote_count":"1","poster":"Japanese1","comment_id":"1082517"}],"upvote_count":"5","comment_id":"1000593","poster":"uC6rW1aB"},{"comment_id":"962788","timestamp":"1690293720.0","upvote_count":"4","poster":"aviathor","content":"Selected Answer: C\nAlthough B might work, it is not scalable. It is limited to 50 VPCs, or maybe 125 if you increase the quota.\n\nSo the better option is C\n\nhttps://aws.amazon.com/blogs/networking-and-content-delivery/using-aws-client-vpn-to-scale-your-work-from-home-capacity/"},{"upvote_count":"3","comments":[{"content":"About your explanation in B. No, sorry, the answer says \"Create a Client VPN endpoint in the main AWS account\", then we should be worried by Concurrent client connections per Client VPN endpoint. Their maximum - even in the lowest scenario - is 7,000. Please check:\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/limits.html\n\nI think that the answer is B","comments":[{"poster":"zanhsieh","comment_id":"1127906","timestamp":"1705851060.0","content":"I preferred C because my company already reached the hardware limit of VPC peering just like dkx stated back to year 2021. We migrate to TGW since then. Also it doesn't mention what hassle would be for just a internal call among VPCs.","upvote_count":"1"}],"timestamp":"1690014960.0","upvote_count":"2","poster":"santi1975","comment_id":"959361"}],"timestamp":"1689883980.0","comment_id":"957884","poster":"dkx","content":"Let's start by realizing they want a SCALABLE solution, so let's assume 1000 customers:\n\nA. No, because one Client VPN per account will obviously be expensive\nB. No, because the maximum active VPC peering connections per VPC is 125, thus not SCALABLE\nC. Yes, because Transit Gateway enables customers to connect thousands of VPCs\nD. No, because this is just bad\n\nhttps://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-connection-quotas.html"},{"comment_id":"953949","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","poster":"azizmo","upvote_count":"2","timestamp":"1689580500.0"},{"upvote_count":"3","comments":[{"timestamp":"1692864600.0","comment_id":"988983","content":"i missed this part, answer is B\nwithout peering, answer is C","upvote_count":"1","poster":"chikorita"}],"timestamp":"1688333820.0","comment_id":"941255","content":"Selected Answer: B\nB. since VPCs are already peered o need for TGW","poster":"NikkyDicky"},{"poster":"SmileyCloud","comment_id":"940023","upvote_count":"5","content":"Selected Answer: C\nIt’s C. Use case : https://aws.amazon.com/blogs/networking-and-content-delivery/using-aws-client-vpn-to-scale-your-work-from-home-capacity/","timestamp":"1688220000.0"},{"comment_id":"893577","content":"Selected Answer: B\nIn terms of cost effectiveness first there is a cost for VPN endpoints, so the cheapest option is to create the Client VPN Endpoint in the main account which leaves between options B and C. Since there is a cost for provisioning a Transit Gateway which is highlighted by option C, hence the answer should be B.","upvote_count":"1","timestamp":"1683689580.0","poster":"rbm2023"},{"upvote_count":"4","poster":"RaghavendraPrakash","content":"Answer is C. VPC Peering does not allow transit connections.","comments":[{"timestamp":"1683910380.0","poster":"Sarutobi","comment_id":"896078","upvote_count":"1","content":"Exactly right.","comments":[{"timestamp":"1683910560.0","poster":"Sarutobi","comment_id":"896081","content":"Exactly right, and that is when the source and destination IP addresses are not in the VPC, but in this case when you VPN into one VPC, you get an IP address of that VPC, so technically there is not \"transit peering\" here.","upvote_count":"2"}]},{"poster":"lxrdm","comment_id":"941642","timestamp":"1688374680.0","upvote_count":"1","content":"When using AWS Client VPN, your are essentially NATing your packets via the VPC.. your client machine is actually egressing from a VPC ENI which VPN client is using.. therefore its like your machine is actually inside the VPC and since all VPC's are peered in this case, b updating the route is enoug"}],"comment_id":"891762","timestamp":"1683514200.0"},{"upvote_count":"1","content":"Selected Answer: B\nB is the answer","comment_id":"851129","timestamp":"1679840220.0","poster":"mfsec"},{"timestamp":"1678066500.0","comment_id":"830481","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/images/vpn/latest/clientvpn-admin/images/client-vpn-scenario-peer-vpc.png","comments":[{"content":"Tip - If there is no site-site gateway already and question asks for scalable solution then answer would be C","upvote_count":"3","poster":"God_Is_Love","timestamp":"1678066740.0","comment_id":"830482"}],"poster":"God_Is_Love","upvote_count":"2"},{"poster":"Zek","comment_id":"828825","upvote_count":"1","content":"Support B","timestamp":"1677926400.0"},{"content":"Selected Answer: B\nIt's B as explained here: https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/scenario-peered.html","upvote_count":"3","poster":"Musk","timestamp":"1675288200.0","comment_id":"795543"},{"comment_id":"793420","poster":"zozza2023","upvote_count":"1","content":"Selected Answer: B\nshould be B","timestamp":"1675118340.0"}],"answer":"B","question_text":"A company has introduced a new policy that allows employees to work remotely from their homes if they connect by using a VPN. The company is hosting internal applications with VPCs in multiple AWS accounts. Currently, the applications are accessible from the company's on-premises office network through an AWS Site-to-Site VPN connection. The VPC in the company's main AWS account has peering connections established with VPCs in other AWS accounts.\n\nA solutions architect must design a scalable AWS Client VPN solution for employees to use while they work from home.\n\nWhat is the MOST cost-effective solution that meets these requirements?"}],"exam":{"name":"AWS Certified Solutions Architect - Professional SAP-C02","isBeta":false,"lastUpdated":"11 Apr 2025","numberOfQuestions":529,"id":33,"isMCOnly":true,"isImplemented":true,"provider":"Amazon"},"currentPage":106},"__N_SSP":true}