{"pageProps":{"questions":[{"id":"p8lc78d8aekd54hQ15vu","unix_timestamp":1679292660,"url":"https://www.examtopics.com/discussions/amazon/view/103334-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_ET":"A","timestamp":"2023-03-20 07:11:00","choices":{"D":"Store the API credentials in an Amazon DynamoDB table. Restrict access to the table by using resource-based policies. Retrieve the API credentials at runtime by using the AWS SDK. Use the credentials to make the API call.","A":"Store the API credentials in AWS Secrets Manager. Retrieve the API credentials at runtime by using the AWS SDK. Use the credentials to make the API call.","B":"Store the API credentials in a local code variable. Push the code to a secure Git repository. Use the local code variable at runtime to make the API call.","C":"Store the API credentials as an object in a private Amazon S3 bucket. Restrict access to the S3 object by using IAM policies. Retrieve the API credentials at runtime by using the AWS SDK. Use the credentials to make the API call."},"discussion":[{"poster":"Kristijan92","upvote_count":"13","timestamp":"1679895660.0","comment_id":"851760","content":"Selected Answer: A\nanswer A"},{"comment_id":"968809","timestamp":"1690873380.0","content":"Selected Answer: A\nWhy B is marked as correct ????","comments":[{"content":"Why is developer being a benchod? A, b, c or d?","poster":"ACurryDeveloper","comment_id":"1259799","timestamp":"1722591300.0","upvote_count":"1"}],"upvote_count":"9","poster":"elfinka9"},{"comment_id":"1558811","poster":"ocharo","upvote_count":"1","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html","timestamp":"1744092300.0"},{"upvote_count":"3","content":"Selected Answer: A\nAWS Secrets Manager is purpose-built for securely managing sensitive data such as API keys","timestamp":"1734708720.0","comment_id":"1329540","poster":"sumanshu"},{"poster":"trieudo","upvote_count":"2","content":"Selected Answer: A\nkeyword: MOST securely\n\n==> discard B first: If the code repository is compromised, the API key could be exposed. \n==> discard C, D after: this requires setting up and managing the DynamoDB table and resource-based policies ==> can make mistake from ppl, then creating issue about security\n\nA: AWS Secrets Manager is a specialized service designed to securely store sensitive information like API keys.","comment_id":"1325296","timestamp":"1733960820.0"},{"timestamp":"1727238180.0","upvote_count":"2","comment_id":"890704","content":"Selected Answer: A\nThe MOST secure solution to manage the API key while ensuring that the integration of the API key with the application code does not affect application performance is to store the API key in AWS Secrets Manager. The API key can be retrieved at runtime by using the AWS SDK, which does not impact application performance. Therefore, option A is the correct answer.\n\nOption B is not secure as it exposes the API key to anyone with access to the code repository, which increases the risk of unauthorized access.\n\nOption C and D may work, but they require additional configuration and permissions management. Storing the API key in an S3 bucket or a DynamoDB table could expose the key to unauthorized users if proper IAM policies are not in place. Therefore, option A is the most secure and simple solution to manage the API key while not affecting the application's performance.","poster":"Bibay"},{"upvote_count":"1","content":"B is certainly a wrong answer because if you read the application development with AWS case study and also the best practices then in it the AWS itself does not encourage the developer to store the sensitive API and license keys in code on the other hand it encourages to use the provided solutions like KMS, Secrets Manager and Parameter Store.","comment_id":"1242196","timestamp":"1720112940.0","poster":"nkroker"},{"poster":"297dfbb","upvote_count":"1","comment_id":"1230144","content":"Selected Answer: A\nA is correct. B is wrong because you never store credentials in source control.","timestamp":"1718324220.0"},{"upvote_count":"2","timestamp":"1718281620.0","content":"Selected Answer: A\nMost secure","comment_id":"1229791","poster":"c949c84"},{"poster":"65703c1","timestamp":"1716297180.0","comment_id":"1214966","upvote_count":"1","content":"Selected Answer: A\nA is the correct answer."},{"timestamp":"1715031840.0","upvote_count":"1","content":"A is it","comment_id":"1207583","poster":"Prosen2522"},{"upvote_count":"1","timestamp":"1712170200.0","comment_id":"1188846","content":"Straight A","poster":"badsati"},{"poster":"bednark","upvote_count":"1","comment_id":"1127865","timestamp":"1705845900.0","content":"Selected Answer: A\nA is correct"},{"poster":"leonardoliveros","content":"Selected Answer: A\nB isn't secury\nA is the best option for this scenary","timestamp":"1700091840.0","comment_id":"1072014","upvote_count":"2"},{"timestamp":"1696292520.0","poster":"gullyboy77","content":"Selected Answer: A\nSecret Manager is the safest way to store secrets in AWS.","comment_id":"1023510","upvote_count":"2"},{"comment_id":"1003641","upvote_count":"2","poster":"chvtejaswi","content":"Selected Answer: A\nAnswer A","timestamp":"1694314320.0"},{"timestamp":"1693234500.0","content":"Selected Answer: A\nA seems to be the most secure and correct. Always use Secret Manger to store secrets, as the name implies.","upvote_count":"1","poster":"hmdev","comment_id":"992314"},{"timestamp":"1693141260.0","comment_id":"991463","upvote_count":"1","poster":"Yuxing_Li","content":"Selected Answer: A\nA is correct"},{"content":"Selected Answer: A\nThe other options (B, C and D) are not as safe or manageable:","poster":"sivuca1","timestamp":"1692982920.0","comment_id":"990252","upvote_count":"1"},{"content":"Selected Answer: A\nparameter store is secure, so A","upvote_count":"2","timestamp":"1692066900.0","poster":"sp323","comment_id":"981229"},{"upvote_count":"1","comment_id":"978323","timestamp":"1691734500.0","poster":"ssoratroi","content":"Selected Answer: A\nparameter store is the better solution so A"},{"upvote_count":"4","timestamp":"1691557860.0","poster":"jayvarma","comment_id":"976260","content":"obviously we are not going to store the API credentials in the local code variables. So option B is ruled out\n\nComing to Option D, It is not wrong to store the API credentials in the DynamoDB table as long as you encrypt them. But, Considering the extent of human error, there is a chance for the DynamoDB to be given too many permissions. \n\nAs Option A, A secrets manager or a parameter store's primary purpose is to store a secret, It is ideal to use such kind of service to store the API credentials."},{"content":"Selected Answer: A\nCorrect answer is A, option B is not secure at all","comment_id":"967123","timestamp":"1690722240.0","upvote_count":"2","poster":"Kashan6109"},{"upvote_count":"4","timestamp":"1689306000.0","comment_id":"951179","poster":"tttamtttam","comments":[{"poster":"Solovey","content":"for you to read this comments","timestamp":"1697291160.0","comment_id":"1043496","upvote_count":"3"},{"comment_id":"1138125","upvote_count":"1","poster":"SD_CS","timestamp":"1706850900.0","content":"I had to re-read the question after seeing the answer - whether they had asked for the LEAST favourable option"}],"content":"Selected Answer: A\nWhy it is marked as B???????????????"},{"upvote_count":"1","poster":"MrPie","content":"It's A, but at least on react native to retrieve secrets from AWS you need the API key so this option doesn't work. You would need to make an HTTP gateway for a lambda function that retrieves the secret.","comment_id":"944913","timestamp":"1688667000.0"},{"upvote_count":"3","comment_id":"893254","poster":"Devon_Fazekas","content":"We all know option A is the most secure and efficient method. Who decided the answer was B?","timestamp":"1683646440.0"},{"comment_id":"867262","poster":"zk1200","content":"Selected Answer: A\nsecrets manager seems most likely since it is meant for storing items like API keys.","timestamp":"1681213140.0","upvote_count":"1"},{"timestamp":"1681183620.0","comment_id":"866882","upvote_count":"4","poster":"hmmm0101","content":"Selected Answer: A\nAnswer A"},{"poster":"DollyNeekhra","timestamp":"1680849300.0","content":"Selected Answer: A\nnever save secrets in code","comment_id":"863549","upvote_count":"2"},{"content":"We should not forget performance is not only the factor but most securely. Hence Secrets Manager access at runtime sounds good","comment_id":"844768","upvote_count":"1","poster":"prabhay786","timestamp":"1679308800.0"},{"upvote_count":"2","poster":"prabhay786","content":"It should be A","comment_id":"844765","timestamp":"1679308680.0"},{"upvote_count":"4","timestamp":"1679292660.0","poster":"Warlord_92","content":"Selected Answer: A\nItâ€™s not secure to store API keys in git repository. Hence storing it in secret manger is a most secure to way to handle this scenario.","comment_id":"844576"}],"exam_id":24,"question_images":[],"answers_community":["A (100%)"],"topic":"1","question_id":541,"isMC":true,"answer":"A","answer_description":"","answer_images":[],"question_text":"A company wants to share information with a third party. The third party has an HTTP API endpoint that the company can use to share the information. The company has the required API key to access the HTTP API.\nThe company needs a way to manage the API key by using code. The integration of the API key with the application code cannot affect application performance.\nWhich solution will meet these requirements MOST securely?"},{"id":"DSHFO82IwLMGva6zA0si","choices":{"C":"S3 bucket policy","B":"S3 presigned URLs","D":"Amazon Cognito identity pool","A":"Amazon Cognito user pool"},"isMC":true,"discussion":[{"content":"Selected Answer: B\nEmployees log into the serverless application using an Amazon Cognito User Pool.\nOnce logged in, the application's back-end logic (possibly a Lambda function) generates an S3 pre-signed URL for the requested file.\nThe pre-signed URL is then given to the authenticated user, allowing them secure, time-limited access to that specific S3 object.\nSo, while both Amazon Cognito User Pool and S3 Pre-signed URLs would be used in the solution, S3 Pre-signed URLs (Option B) are the specific feature that allows for the secure, temporary sharing of S3 files. \nTherefore, Option B would be the best answer to the question of how to \"share and access the files securely.\"","poster":"Dushank","timestamp":"1694286360.0","upvote_count":"25","comment_id":"1003443"},{"timestamp":"1684043580.0","comments":[{"poster":"jipark","timestamp":"1690984920.0","comment_id":"970258","content":"I agree 'log in' would go user pool.","upvote_count":"2"},{"poster":"rimaSamir","comment_id":"1151793","timestamp":"1708068120.0","upvote_count":"3","content":"But we need to answer a question not task condition"}],"upvote_count":"20","content":"Selected Answer: A\nthe key words are ability to log in and securely share the files. It is A","poster":"loctong","comment_id":"897289"},{"comment_id":"1366467","content":"Selected Answer: D\nA presigned URL doesn't allow you to share files with others. The last line of the question specifically asks which service would give you the ability not only to access but also to share files too. In that case, CIP seems to be the service to give temporary credentials to AWS resources and perform whatever is specified in the bucket policy","upvote_count":"1","poster":"Shamalka","timestamp":"1741402620.0"},{"content":"Selected Answer: B\nA) Eliminated - While Cognito is useful for managing user authentication, it does not directly provide the capability to securely share files from an S3 bucket.","poster":"sumanshu","upvote_count":"1","timestamp":"1735216020.0","comment_id":"1331908"},{"content":"Selected Answer: B\nI had my doubt on this, but once more they are evaluating if you are reading with attention and not if you have knowldge hehe tricky question, but the punch line question is What feature would be used to share the files securely, ignoring the login part.","timestamp":"1724148600.0","poster":"wh1t4k3r","comment_id":"1269334","upvote_count":"4"},{"poster":"[Removed]","comment_id":"1243212","content":"Selected Answer: B\nI'll go with B. The question is what the company should use to share and access the files securely. We can ignore the task condition","timestamp":"1720244760.0","upvote_count":"3"},{"timestamp":"1716406560.0","poster":"65703c1","content":"Selected Answer: B\nB is the correct answer.","upvote_count":"1","comment_id":"1215966"},{"timestamp":"1709037000.0","comment_id":"1160577","content":"Selected Answer: B\nThis option allows secure, temporary access to specific objects in an S3 bucket. By generating presigned URLs, the serverless application can grant users time-limited access to download or upload files without altering the permissions of the S3 bucket or the objects. This method ensures secure access management and is suitable for sharing private files among authenticated users.","poster":"SerialiDr","upvote_count":"3"},{"poster":"SD_CS","content":"Selected Answer: A\nin order to log in you need to use cognito user pools","upvote_count":"3","comment_id":"1139154","timestamp":"1706955300.0"},{"upvote_count":"4","comment_id":"1135763","content":"Actually, the quesion is about \"what feature will be used by the new serverless application to share and access the files securely\". Ability to log in is about \"Amazon Cognito user pool\". Imagine \"Lambda function\" and \"API Gateway\" are created as a serverless app to provide some API. When you call API endpoint, it will login to \"Amazon Cognito user pool\" and then share files using SDK. How it will share is the next question.\nMy answer is A","poster":"rimaSamir","timestamp":"1706617620.0"},{"poster":"Ashwinvdm22","content":"Selected Answer: B\nThe answer must be B. So although in the question it says \"gives its employees the ability to log in\" (which is hinting towards Cognito User Pools) the question is actually asking: \"Which AWS feature should the company use to share and access the files securely?\"\n\nThe question is actually about how to share and access the files securely. Hence it must be the S3 pre-signed URL option. To read up more on S3 pre-signed URLs check here: https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html","comment_id":"1135566","upvote_count":"4","timestamp":"1706598420.0"},{"poster":"peekingpicker","content":"Selected Answer: B\nWhich AWS feature should the company use to share and access the files securely?\nSo, It's B. S3 Pre-signed URL can used to share S3 object to other people securely.","comment_id":"1127225","timestamp":"1705748880.0","upvote_count":"3"},{"upvote_count":"1","content":"It's not A, Cognito user pool is not needed, only employees need ability to log in, they can be provided with IAM accounts.","timestamp":"1704112620.0","comment_id":"1111152","poster":"gqs3119"},{"comment_id":"1105063","upvote_count":"4","content":"Selected Answer: D\nAn Amazon Cognito identity pool provides temporary AWS credentials for users who authenticate via Amazon Cognito. This allows your application users (employees, in this case) to securely authenticate and gain access to AWS services like S3 based on their assigned roles and permissions.\n\nThrough Amazon Cognito, you can manage user identities, control user access to resources, and provide temporary, limited-privilege credentials to access the S3 bucket securely.","poster":"a_win","timestamp":"1703486460.0"},{"comment_id":"1099742","content":"Selected Answer: B\nI will go with B because its purely asking about sharing and no mention about external logins so we should go by default AWS feature which provides this feature,\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html","poster":"KarBiswa","upvote_count":"3","timestamp":"1702906560.0"},{"upvote_count":"3","comment_id":"1086030","poster":"tqiu654","timestamp":"1701511200.0","content":"Selected Answer: B\nChatGPT: B"},{"upvote_count":"1","comment_id":"1053377","timestamp":"1698198360.0","poster":"didorins","content":"Login of external to AWS users, we can use Cognito. Identity Pool is specifically for DynamoDB and S3.\n\nUse an identity pool when you need to:\n\nGive your users access to AWS resources, such as an Amazon Simple Storage Service (Amazon S3) bucket or an Amazon DynamoDB table.\n\nhttps://repost.aws/knowledge-center/cognito-user-pools-identity-pools"},{"timestamp":"1697563740.0","comment_id":"1046234","comments":[{"timestamp":"1702157460.0","upvote_count":"3","poster":"[Removed]","content":"I agree... B is the only option that is specific to sharing of files. Identity/User pools are for authentication (log in to the S3 bucket).","comment_id":"1092072"}],"poster":"Rameez1","content":"Selected Answer: B\nActual ask is in the final line \"Which AWS feature should the company use to share and access the files securely?\" -> S3 Pre-signed URL provides the most secure feature.","upvote_count":"4"},{"timestamp":"1694958900.0","comment_id":"1009837","poster":"EMPERBACH","content":"Selected Answer: B\nSecure solution for sharing private s3 resource","upvote_count":"3"},{"timestamp":"1694463300.0","content":"Selected Answer: B\nI say 'B' because:\nThe question is \"Which AWS feature should the company use to share and access the files securely?\"\nif you look at this part there is no mention about login part. Though there is requirement for the application as a whole, the question targets only about sharing and accessing files securely.","upvote_count":"6","comment_id":"1005150","poster":"Iamtany"},{"comment_id":"993605","poster":"fossil123","upvote_count":"2","content":"Selected Answer: A\n'Login' points to A","timestamp":"1693355940.0"},{"comment_id":"992714","poster":"Yuxing_Li","timestamp":"1693273500.0","content":"Selected Answer: D\nYou need access to S3","upvote_count":"2"},{"upvote_count":"2","comment_id":"991794","poster":"breadops","timestamp":"1693197300.0","content":"Selected Answer: B\nWhich AWS feature should the company use to share and access the files securely?\nIt's B - S3 Presigned URLs."},{"comment_id":"988385","content":"I think it's A cuz we need to log in. The context doesn't say anything indicating federated users so doesn't look like D. Also, A user needs to log in to create a pre-signed URL.","upvote_count":"1","poster":"hmdev","timestamp":"1692799500.0"},{"comment_id":"985751","upvote_count":"3","poster":"Naj_64","content":"Selected Answer: D\nhttps://www.techtarget.com/searchcloudcomputing/feature/Cognito-user-pools-vs-identity-pools-what-AWS-users-should-know\n\n\"On the other hand, identity pools are primarily used for authorization. This second Cognito feature, also known as federated identities, has two common use cases -- to provide access to different AWS resources and to create temporary credentials for unauthenticated users\"\n\n\"User pools alone do not deal with any IAM-level permissions but provide critical information so the enterprise can authorize the users\"","timestamp":"1692532080.0"},{"comment_id":"983555","upvote_count":"2","poster":"andrevus","content":"Selected Answer: B\nquestion is a key. \nWhich AWS feature should the company use to share and access the files securely?\nyou cannot share files with cognito!","timestamp":"1692272160.0"},{"poster":"Sbon24","content":"Selected Answer: D\nOption D is correct.\nhttps://repost.aws/knowledge-center/cognito-user-pools-identity-pools","comment_id":"974546","upvote_count":"3","timestamp":"1691400840.0"},{"content":"B. S3 presigned URLs\n\nExplanation:\n\nUsing S3 presigned URLs is the most secure way to give employees the ability to access and share files securely from a private S3 bucket.\nUsing Amazon Cognito user pool (Option A) and Amazon Cognito identity pool (Option D) can help with user authentication and identity management, but they don't directly handle secure sharing and access to files from a private S3 bucket.\n\nOption C (S3 bucket policy) is used to control access to the S3 bucket and its objects, but it's not recommended to make the bucket public or grant access to unauthorized users. Using S3 presigned URLs is a more secure approach to control access to specific objects for a limited time.","timestamp":"1691059320.0","comment_id":"971007","poster":"bindu545","upvote_count":"1"},{"timestamp":"1690396140.0","comment_id":"964102","poster":"r3mo","upvote_count":"1","content":"Option D\n(Amazon Cognito identity pool) is the correct choice to securely share and access the files in the private S3 bucket, providing a secure and managed way for employees to log in and access the files while controlling access to other users."},{"content":"Selected Answer: D\nOnly Cognito Identity pool (combined with User pool) allows users from social networks to log in and get access to AWS resources.","upvote_count":"3","timestamp":"1690271340.0","comment_id":"962476","poster":"bobo777"},{"upvote_count":"3","poster":"jasper_pigeon","comment_id":"961443","timestamp":"1690192740.0","content":"For both ability to log in and securely share the files, Cognito identity pool is the only answer.\nUsers can log in via public social, OIDC, SAML and Cognito User Pools. S3 presigned URLs are for temporaray usage."},{"timestamp":"1689673800.0","comment_id":"955201","poster":"ancomedian","content":"Selected Answer: D\nIt is D cause we need to make them sign up, so presigned URL is not the option\nalso, user pool is for authentication but for authorization, we need identity pool","upvote_count":"4"},{"poster":"HONGGGGGGG","upvote_count":"2","comment_id":"947679","content":"Selected Answer: B\nB is the answer","timestamp":"1688956500.0"},{"poster":"bakamon","timestamp":"1688097780.0","content":"Selected Answer: B\nB is the answer","comment_id":"938791","upvote_count":"1"},{"comment_id":"916406","upvote_count":"3","poster":"csG13","content":"Selected Answer: B\nPersonally I believe this is a very tricky question and needless to say a bit more context is required. Nonetheless, I vote for B because the question asks for the following:\n\n\"Which AWS feature should the company use to share and access the files securely?\"\n\nThey want to develop an application for their employees to log in **AND** securely share the files with other users. The answer to this last bit is a presigned URL with a meaningful expiry date.\n\nCognito services can help to setup a log in system (User pools) and apply specific policies per the request (identity pool), but to me this isn't what the question asks about.","timestamp":"1686065400.0"},{"comment_id":"906140","poster":"imvb88","timestamp":"1684959300.0","content":"Selected Answer: D\nRemember User Pool is to verify who you are, Identity Pool is for knowing if you are authorized to do something. \n-> it's D, not A.","upvote_count":"3"},{"content":"B. S3 presigned URLs","upvote_count":"1","comment_id":"902975","poster":"Bibay","timestamp":"1684652220.0"}],"question_images":[],"question_text":"A company moved some of its secure files to a private Amazon S3 bucket that has no public access. The company wants to develop a serverless application that gives its employees the ability to log in and securely share the files with other users.\n\nWhich AWS feature should the company use to share and access the files securely?","url":"https://www.examtopics.com/discussions/amazon/view/109208-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer":"B","answer_ET":"B","answer_description":"","question_id":542,"exam_id":24,"unix_timestamp":1684043580,"topic":"1","answers_community":["B (60%)","A (21%)","D (19%)"],"timestamp":"2023-05-14 07:53:00","answer_images":[]},{"id":"bgCpIGDvGoz45TkPQW4b","topic":"1","unix_timestamp":1684043940,"answer_description":"","question_text":"A company needs to develop a proof of concept for a web service application. The application will show the weather forecast for one of the company's office locations. The application will provide a REST endpoint that clients can call. Where possible, the application should use caching features provided by AWS to limit the number of requests to the backend service. The application backend will receive a small amount of traffic only during testing.\n\nWhich approach should the developer take to provide the REST endpoint MOST cost-effectively?","answer":"B","timestamp":"2023-05-14 07:59:00","answer_images":[],"exam_id":24,"answer_ET":"B","question_id":543,"choices":{"B":"Create an AWS Lambda function by using the AWS Serverless Application Model (AWS SAM). Expose the Lambda functionality by using Amazon API Gateway.","A":"Create a container image. Deploy the container image by using Amazon Elastic Kubernetes Service (Amazon EKS). Expose the functionality by using Amazon API Gateway.","C":"Create a container image. Deploy the container image by using Amazon Elastic Container Service (Amazon ECS). Expose the functionality by using Amazon API Gateway.","D":"Create a microservices application. Deploy the application to AWS Elastic Beanstalk. Expose the AWS Lambda functionality by using an Application Load Balancer."},"question_images":[],"answers_community":["B (100%)"],"discussion":[{"timestamp":"1699948740.0","comments":[{"timestamp":"1706913660.0","comment_id":"970543","upvote_count":"3","content":"Yes, Lambda bery certain great.","poster":"JamalDaBoss"}],"content":"Selected Answer: B\nAWS Lambda function absolutely ability to do the requirements.","comment_id":"897293","poster":"loctong","upvote_count":"9"},{"timestamp":"1735232880.0","content":"Selected Answer: B\nA) Eliminated - Amazon EKS is designed for large-scale, containerized applications that require Kubernetes orchestration. For a simple proof of concept with small traffic, it is overkill and introduces unnecessary complexity and cost.\n\nC) Eliminated - ECS introduces additional operational overhead compared to a serverless solution like Lambda.\n\nD) Elastic Beanstalk is not designed for a lightweight serverless application; it requires provisioning and managing compute resources, which increases cost and complexity.","comment_id":"1332014","poster":"sumanshu","upvote_count":"2"},{"comment_id":"1215969","poster":"65703c1","upvote_count":"1","timestamp":"1732311480.0","content":"Selected Answer: B\nB is the correct answer."},{"upvote_count":"4","comment_id":"1160936","content":"Selected Answer: B\nThis solution is cost-effective because AWS Lambda charges are based on the number of requests and the duration of code execution, making it ideal for applications with low to moderate traffic. Amazon API Gateway can efficiently manage the REST endpoint and offers built-in caching capabilities to reduce the number of requests to the backend Lambda function, further optimizing costs. This setup also leverages the serverless model, reducing the operational overhead and cost associated with provisioning and managing servers.","timestamp":"1724780460.0","poster":"SerialiDr"},{"content":"Selected Answer: B\nyes B is correct","poster":"a5fc516","timestamp":"1722927420.0","comment_id":"1141977","upvote_count":"1"},{"timestamp":"1708704420.0","comment_id":"988387","upvote_count":"3","content":"Selected Answer: B\nB is the cost-effective one.","poster":"hmdev"}],"url":"https://www.examtopics.com/discussions/amazon/view/109210-exam-aws-certified-developer-associate-dva-c02-topic-1/","isMC":true},{"id":"L6adHb7ufctOOBE3WzZh","answer_ET":"A","unix_timestamp":1683547320,"timestamp":"2023-05-08 14:02:00","discussion":[{"comment_id":"1332016","content":"Selected Answer: A\nB) Eliminated - Amazon CloudFront is a content delivery network (CDN) designed for distributing static and dynamic content globally.\n\nC) Eliminated - it is not designed for low-latency use cases like session management.\n\nD) Eliminated - it is not highly scalable, as it ties user sessions to specific servers, which can lead to uneven load distribution and scaling issues.","timestamp":"1735233000.0","upvote_count":"1","poster":"sumanshu"},{"poster":"Saudis","content":"Selected Answer: A\nA is Correct, the store the session state is a key word","timestamp":"1726202040.0","comment_id":"1283003","upvote_count":"1"},{"timestamp":"1716406740.0","comment_id":"1215971","upvote_count":"2","poster":"65703c1","content":"Selected Answer: A\nA is the correct answer."},{"comment_id":"1160940","poster":"SerialiDr","upvote_count":"4","content":"Selected Answer: A\nAmazon ElastiCache is a high-performance, in-memory data store that provides sub-millisecond latency to applications. It supports data structures such as strings, hashes, lists, sets, and sorted sets, making it suitable for storing session state data. ElastiCache offers both Redis and Memcached engines, with Redis providing more advanced data structures and features such as persistence, replication, and transaction support. This solution is fault-tolerant and highly scalable, ensuring that any service interruption does not affect the user experience.","timestamp":"1709063460.0"},{"poster":"Phongsanth","upvote_count":"4","timestamp":"1687686000.0","content":"Selected Answer: A\nI vote A\n\nhttps://aws.amazon.com/blogs/developer/elasticache-as-an-asp-net-session-store/","comment_id":"933427"},{"upvote_count":"3","timestamp":"1684044120.0","poster":"loctong","comment_id":"897297","content":"Selected Answer: A\nthe answer came from the discussion at https://www.examtopics.com/discussions/amazon/view/8789-exam-aws-certified-developer-associate-topic-1-question-176/"},{"upvote_count":"4","content":"Selected Answer: A\nhttps://www.examtopics.com/discussions/amazon/view/8789-exam-aws-certified-developer-associate-topic-1-question-176/","comment_id":"892125","timestamp":"1683547320.0","poster":"zodraz"}],"answer_description":"","answer_images":[],"answers_community":["A (100%)"],"answer":"A","question_text":"An e-commerce web application that shares session state on-premises is being migrated to AWS. The application must be fault tolerant, natively highly scalable, and any service interruption should not affect the user experience.\n\nWhat is the best option to store the session state?","choices":{"C":"Store the session state in Amazon S3.","D":"Enable session stickiness using elastic load balancers.","A":"Store the session state in Amazon ElastiCache.","B":"Store the session state in Amazon CloudFront."},"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/108741-exam-aws-certified-developer-associate-dva-c02-topic-1/","question_images":[],"exam_id":24,"topic":"1","question_id":544},{"id":"nwbwP3zKvrxqfQtyNcYz","discussion":[{"upvote_count":"12","poster":"MrTee","content":"Selected Answer: A\nA Is the correct answer with the minimum impact on the database.","timestamp":"1682093700.0","comment_id":"876693"},{"content":"Selected Answer: A\nhttps://beabetterdev.com/2022/10/12/dynamodb-getitem-vs-query-when-to-use-what/#:~:text=If%20you'd%20like%20to%20retrieve%20multiple%20items%20at%20once,retrieve%20multiple%20items%20at%20once.","comment_id":"883973","timestamp":"1682732340.0","comments":[{"poster":"jipark","comment_id":"970657","timestamp":"1691026500.0","upvote_count":"15","content":"tons of thanks.\n\nLooking for just a single item on the main table index? Use GetItem\nLooking for just a single item on a GSI? Use Query.\nLooking for multiple items with different partition key and sort key combinations at once? Use BatchGetItem\nLooking for multiple items that share the same partition key? Use Query"}],"upvote_count":"9","poster":"dan80"},{"upvote_count":"1","comment_id":"1332018","content":"Selected Answer: A\nB) Eliminated - The GetItem API retrieves only one specific item at a time by its primary key.\n\nC) Eliminated - The Scan API retrieves all items in a table or index by sequentially scanning every item.\n\nD) Eliminated - The Query API retrieves all items that match a specific partition key and optionally filters them by sort key or other criteria.","comments":[{"poster":"sumanshu","comments":[{"timestamp":"1739031600.0","upvote_count":"1","content":"Suppose you need to retrieve multiple orders, but for different customers:\nCustomerID OrderID OrderDetails\n123 A001 Shoes\n456 B002 Laptop\n789 C003 Phone\nHere, the partition keys are different (123, 456, 789).\nA Query won't work because it can only retrieve items for one partition key at a time.\nBatchGetItem is the best choice because it allows retrieving specific items across multiple partition keys in a single API call.","poster":"sumanshu","comment_id":"1353495"}],"comment_id":"1353494","upvote_count":"1","timestamp":"1739031540.0","content":"CustomerID OrderID OrderDetails\n123 A001 Shoes\n123 A002 Jacket\n123 A003 Watch\nIf you need to retrieve all orders for CustomerID = 123, a Query would work well because all the needed items share the same partition key"}],"timestamp":"1735233480.0","poster":"sumanshu"},{"comment_id":"1283006","timestamp":"1726202340.0","poster":"Saudis","upvote_count":"1","content":"A key word is retrieve multiple specific items"},{"poster":"65703c1","comment_id":"1215972","upvote_count":"1","content":"Selected Answer: A\nA is the correct answer.","timestamp":"1716406800.0"},{"poster":"Moralles","timestamp":"1712751720.0","comment_id":"1192961","content":"Selected Answer: A\nâ€¢ GetItem: recupera um Ãºnico item de uma tabela.\nâ€¢ BatchGetItem: retorna atÃ© 100 itens de uma ou mais tabelas limitados a 16MB por chamada.","upvote_count":"1"},{"comment_id":"1126007","poster":"prathameshpathak","timestamp":"1705592280.0","upvote_count":"1","content":"Selected Answer: A\n..........................."},{"timestamp":"1695330900.0","poster":"marolisa","upvote_count":"1","content":"D.\n\"Query\" allows you to use filter - multiple specific items and is less expensive than the Sacan operation.","comment_id":"1013396"},{"timestamp":"1686758760.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html","comment_id":"923368","upvote_count":"1","poster":"Baba_Eni"},{"content":"Selected Answer: A\nNeed specific Item -> cannot be Scan or Query since they are for retrieving items that match conditions. \nWe need multiple item then A is the option left.","comment_id":"906144","upvote_count":"2","poster":"imvb88","timestamp":"1684960020.0"}],"choices":{"B":"GetItem","C":"Scan","A":"BatchGetItem","D":"Query"},"answer_description":"","answer":"A","url":"https://www.examtopics.com/discussions/amazon/view/106941-exam-aws-certified-developer-associate-dva-c02-topic-1/","exam_id":24,"answers_community":["A (100%)"],"question_text":"A developer is building an application that uses Amazon DynamoDB. The developer wants to retrieve multiple specific items from the database with a single API call.\n\nWhich DynamoDB API call will meet these requirements with the MINIMUM impact on the database?","answer_ET":"A","answer_images":[],"timestamp":"2023-04-21 18:15:00","isMC":true,"unix_timestamp":1682093700,"topic":"1","question_id":545,"question_images":[]}],"exam":{"isBeta":false,"isMCOnly":true,"isImplemented":true,"numberOfQuestions":551,"id":24,"lastUpdated":"11 Apr 2025","name":"AWS Certified Developer - Associate DVA-C02","provider":"Amazon"},"currentPage":109},"__N_SSP":true}