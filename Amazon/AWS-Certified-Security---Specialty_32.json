{"pageProps":{"questions":[{"id":"kStPNJ5omjww9RAcV2Xs","answers_community":["C (53%)","B (24%)","A (24%)"],"question_images":[],"choices":{"B":"Tell the application teams to use two different S3 buckets with a single AWS Key Management Service (AWS KMS) AWS managed CMK. Limit the key policy to allow encryption and decryption of the CMK only. Do not allow the teams to use encryption context to encrypt and decrypt.","A":"Tell the application teams to use two different S3 buckets with separate AWS Key Management Service (AWS KMS) AWS managed CMKs. Limit the key policies to allow encryption and decryption of the CMKs to their respective teams only. Force the teams to use encryption context to encrypt and decrypt.","C":"Tell the application teams to use two different S3 buckets with separate AWS Key Management Service (AWS KMS) customer managed CMKs. Limit the key policies to allow encryption and decryption of the CMKs to their respective teams only. Force the teams to use encryption context to encrypt and decrypt.","D":"Tell the application teams to use two different S3 buckets with a single AWS Key Management Service (AWS KMS) customer managed CMK. Limit the key policy to allow encryption and decryption of the CMK only. Do not allow the teams to use encryption context to encrypt and decrypt."},"answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/47578-exam-aws-certified-security-specialty-topic-1-question-239/","question_text":"A company has two software development teams that are creating applications that store sensitive data in Amazon S3. Each team's data must always be separate. The company's security team must design a data encryption strategy for both teams that provides the ability to audit key usage. The solution must also minimize operational overhead.\nWhat should the security team recommend?","exam_id":29,"topic":"1","answer_description":"","unix_timestamp":1616006880,"timestamp":"2021-03-17 19:48:00","discussion":[{"content":"C is answer. You can not change key policy with option A.\nOption A: You can view the AWS managed CMKs in your account, view their key policies, and audit their use in AWS CloudTrail logs. However, you cannot manage these CMKs, rotate them, or change their key policies. And, you cannot use AWS managed CMKs in cryptographic operations directly; the service that creates them uses them on your behalf.","poster":"Hungdv","comment_id":"349138","timestamp":"1635324300.0","upvote_count":"42"},{"poster":"skipbaylessfor3","comments":[{"content":"+1 on comments regarding comments :)\nDo your own research to make sure.","poster":"wahlbergusa","comment_id":"415473","timestamp":"1635992460.0","upvote_count":"3"}],"timestamp":"1635991500.0","upvote_count":"14","comment_id":"404768","content":"I understand that A has less operational overhead. But, the keys are not going to be separate, they are the same. When you select AWS Managed CMKs for S3, it will choose the aws/s3 CMK in your account, of which there is only one. So there is only one key. Further, it says \"limit the key policies to allow encryption and decryption of the CMKs to their respective teams only\" - how can you do that with an AWS Managed CMK? You can't. Therefore I'm sticking with C. I'm surprised, some names in the comments who I thought usually have trustworthy answers are siding with A, not sure why. Best to do your own research for each question I guess"},{"timestamp":"1692615120.0","poster":"kiwi123","upvote_count":"1","comment_id":"986415","content":"Selected Answer: B\nI think B suffices the requirement, cause \"data must always be separate\" doesnt mean key should be separated?"},{"comment_id":"984738","poster":"gsax","timestamp":"1692384960.0","upvote_count":"1","content":"Selected Answer: A\nA - the solution must also minimize operational overhead which it does with AWS managed CMKs. That's the only diff between A & C."},{"content":"A - the solution must also minimize operational overhead which it does with AWS managed CMKs. That's the only diff between A & C.","upvote_count":"1","comment_id":"984737","poster":"gsax","timestamp":"1692384900.0"},{"content":"Selected Answer: A\nA. Tell the application teams to use two different S3 buckets with separate AWS Key Management Service (AWS KMS) AWS managed CMKs. Limit the key policies to allow encryption and decryption of the CMKs to their respective teams only. Force the teams to use encryption context to encrypt and decrypt.\n\nThe security team should recommend using separate S3 buckets for each team with distinct AWS managed CMKs. This approach ensures data segregation and allows for fine-grained access control by limiting encryption and decryption permissions to the respective teams. By enforcing the use of encryption context during encryption and decryption operations, auditability of key usage can be achieved. This solution minimizes operational overhead while meeting the requirement of keeping the teams' data separate and auditable.\n\nOption C introduces the use of customer managed CMKs, which may increase operational overhead, as the security team would need to manage and rotate the CMKs for each team.","comment_id":"922899","poster":"samCarson","timestamp":"1686732240.0","upvote_count":"1"},{"timestamp":"1685148720.0","comment_id":"907669","poster":"pal40sg","upvote_count":"1","content":"Selected Answer: A\noption A: Tell the application teams to use two different S3 buckets with separate AWS Key Management Service (AWS KMS) AWS managed customer master keys (CMKs). Limit the key policies to allow encryption and decryption of the CMKs to their respective teams only. Force the teams to use encryption context to encrypt and decrypt.","comments":[{"content":"Option B, which suggests using a single AWS managed CMK for both teams, does not satisfy the requirement\nOption C suggests using separate customer managed CMKs, introduces additional operational overhead\nOption D, similar to option B, does not provide data separation between the teams","comment_id":"907671","timestamp":"1685148780.0","poster":"pal40sg","upvote_count":"1"}]},{"upvote_count":"1","timestamp":"1682285580.0","comment_id":"878818","content":"The best way to audit the key is to create a single key for each group. That way we can limit who gets to encrypt and decrypt the data. The question is testing your ability to follow the principal of least privilege. C","poster":"ITGURU51"},{"poster":"kvirk","timestamp":"1679781000.0","comment_id":"850485","upvote_count":"1","comments":[{"upvote_count":"1","comment_id":"893155","timestamp":"1683641160.0","poster":"gerches","content":"you cannot edit key polilcies of an aws managed key"}],"content":"Selected Answer: A\nThis approach ensures that the data of both teams is always separate, as each team has its own S3 bucket and CMK. Additionally, the key policies can be limited to only allow encryption and decryption of the CMKs to their respective teams, ensuring that the data cannot be accessed by the wrong team.\n\nEnforcing the use of encryption context ensures that the teams are using the keys correctly and helps prevent unauthorized access. Finally, using AWS managed CMKs instead of customer managed CMKs minimizes operational overhead, as AWS automatically manages the key rotation and other maintenance tasks.\n\nOption B is not recommended as it does not ensure that the data of both teams is always separate. Option C is a good alternative, but using AWS managed CMKs is preferable to minimize operational overhead. Option D is not recommended as it does not enforce the use of encryption context, which is important for security."},{"comment_id":"773559","timestamp":"1673533260.0","content":"Selected Answer: C\nFirstly, using AWS managed CMKs may not provide as much control over the key as using customer managed CMKs, as it is managed by AWS and not the security team.\n\nSecondly, while using encryption context is a good practice to ensure proper encryption and decryption of the data and to track key usage, it adds an additional layer of complexity to the process, which may increase the operational overhead. In some cases, the added complexity may be unnecessary and the security team could use other security controls to achieve the same level of security.\n\nFinally, while separating the data in different S3 bucket is a good practice, it may not be enough to separate the teams data, as the encryption key is shared among all the data in the bucket. So, even though the data is separate, the key is not.\n\nFor those reasons, option C is the more optimal choice for this scenario.","poster":"boooliyooo","upvote_count":"1"},{"poster":"sapien45","content":"Selected Answer: C\n* Each team's data must always be separate : two keys\n* Sensitive data : two keys\n* limit the key policies to allow encryption and decryption of the CMKs to their respective teams only : only doable with Customer CMKs","comment_id":"652588","timestamp":"1661607720.0","upvote_count":"2"},{"timestamp":"1658239920.0","poster":"xaocho","content":"Selected Answer: C\nI think C, agree with @skipbaylessfor3","comment_id":"633615","upvote_count":"2"},{"upvote_count":"2","content":"Selected Answer: C\nAnswer is C","timestamp":"1655030520.0","poster":"lotfi50","comment_id":"615268"},{"comment_id":"606407","poster":"jackfei","timestamp":"1653356640.0","upvote_count":"1","content":"C. different S3 buckets with separate AWS Key Management Service (AWS KMS)"},{"timestamp":"1649943480.0","poster":"TigerInTheCloud","comment_id":"585791","content":"Selected Answer: B\nLet AWS manage the key to \"reduce operating costs\"; and with separate S3, there is no need of having the complexity (an operating cost) of using encryption context.","upvote_count":"3"},{"comment_id":"574958","upvote_count":"2","poster":"MoreOps","timestamp":"1648206900.0","content":"Selected Answer: C\nI think C makes the most sense, i would want to have more control over the key , so its customer managed."},{"timestamp":"1643243880.0","poster":"Radhaghosh","content":"limit the key policies to allow encryption and decryption of the CMKs to their respective teams only --> 2 separate Keys --> Customer Managed Key and 2 separate S3 buckets \nAnswer is C","upvote_count":"1","comment_id":"533370"},{"upvote_count":"2","content":"with AWS managed key there're no separate keys and you can't change the policy either. \nAnswer is C. although there's an operational overhead point there in the question but the options don't make sense.","comment_id":"525411","timestamp":"1642386840.0","poster":"sam_live"},{"upvote_count":"2","timestamp":"1640971500.0","content":"C. \nLet's break it down.\nTwo buckets + Two separate keys (Either AWS managed or customer managed). AWS managed, you can only choose one aws/s3. so other team can also decrypt the same bucket. That eliminates AWS managed keys. \nTo keep the S3 content isolated, it should be customer managed.","poster":"roger8978","comment_id":"514173"},{"poster":"munish3420","comment_id":"483469","timestamp":"1637514180.0","upvote_count":"2","content":"There two requirements here - 1 Auditable and second less operating cost\nUsing two separate AWS managed - So less operating cost, Its auditable as well using Cloud trail. I am not sure why should go with C"},{"comment_id":"433736","timestamp":"1636009380.0","content":"minimize operational overhead is the key So A is the answer","poster":"TollaMS","upvote_count":"2"},{"poster":"DerekKey","content":"AWS managed CMK - means 1 key for S3 with applied permissions\nC should be CORRECT","upvote_count":"2","timestamp":"1635863700.0","comment_id":"386170"},{"upvote_count":"3","timestamp":"1635688800.0","comment_id":"353291","poster":"sanjaym","comments":[{"content":"Right, that is if you have no idea of what make a CMK unique","upvote_count":"1","timestamp":"1658160660.0","comment_id":"633086","poster":"sapien45"}],"content":"Answer: A. A should work. customer managed key is not required."},{"timestamp":"1635323460.0","upvote_count":"2","poster":"Huy","comment_id":"344063","content":"For each service that has SSE, the AWS-managed CMK is unique to your AWS account and the Region in which it’s used. Going with A means both team share same key. I think C is more correct."},{"poster":"disposable1989","content":"custoemr managed!!!\naws managed theres 1 key for s3.","timestamp":"1635240900.0","comment_id":"343753","upvote_count":"1"},{"upvote_count":"1","content":"I think its C. also though A is the next best option but A is less complex. I think the key for this one needs to be CMK.","timestamp":"1634895840.0","poster":"Ayusef","comment_id":"326877"},{"timestamp":"1634848380.0","comment_id":"326695","poster":"Larsson","upvote_count":"2","content":"A seems good enough"},{"comment_id":"325713","timestamp":"1634010120.0","poster":"weurseuk","upvote_count":"2","content":"C is correct sensitive data: don't use Aws managed key, becaus when by accident the bucket is made public, your data can'be seen, that's why choose Cmk and different for a simple audit"},{"comment_id":"318500","timestamp":"1633754940.0","content":"A doesnt fit as key is managed by AWS including permissions https://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html\ncorrect answer is C","poster":"Marcis","upvote_count":"1","comments":[{"content":"A fits in perfectly. There is nothing in the question that suggets to use either AWS KMS - AWS Managed or Customer Managed. Question ask for lesse operational overhead, With A. You have less to do.","comments":[{"upvote_count":"1","comment_id":"386166","timestamp":"1635721080.0","poster":"DerekKey","content":"how do you want to make it happen?\n\"separate AWS Key Management Service (AWS KMS) AWS managed CMKs\""}],"upvote_count":"4","timestamp":"1633812840.0","comment_id":"325071","poster":"ChinkSantana"}]},{"upvote_count":"3","comment_id":"317858","content":"A. \nSeparate keys \nAWS managed keys - can audit usage in CT","timestamp":"1633716720.0","poster":"cldy"},{"comments":[{"poster":"uninit","comment_id":"519750","upvote_count":"1","content":"You cannot use 2 separate AWS Managed CMKs. You can only have one \"aws/s3\" AWS CMK.","timestamp":"1641671460.0"}],"content":"A is more secure but has more operational overhead. I'll go with A still.","comment_id":"313662","poster":"DayQuil","upvote_count":"5","timestamp":"1633597620.0"},{"comment_id":"313523","timestamp":"1633045200.0","content":"I think A is the best option. Separate AWS Key + AWS managed CMKs","upvote_count":"5","poster":"viestner"}],"answer_ET":"C","answer":"C","isMC":true,"question_id":156},{"id":"jdXF7ZL3pFEiCRP1a2hj","question_id":157,"discussion":[{"timestamp":"1632126660.0","upvote_count":"49","poster":"Moon","content":"Answer B. Because enabling the rotation, would immediately change the credentials, and that would cause the applications to fail if they uses the imbedded/old credentials.","comment_id":"2483"},{"content":"B. It states on the documentation. \nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/enable-rotation-rds.html","comment_id":"5294","timestamp":"1632454380.0","comments":[{"timestamp":"1670094420.0","comment_id":"734646","upvote_count":"1","poster":"Mimikabs","content":"The documentation you provided also says that \"After rotation is successful, applications that Retrieve secrets from AWS Secrets Manager automatically get the updated credentials.\" So I don't think B will be a correct answer."}],"poster":"rm29","upvote_count":"11"},{"upvote_count":"1","poster":"Deyemzy","content":"B\n\nWhen rotation is enabled, Secrets Manager might rotate the credentials immediately. If applications are still using the old credentials, they will fail to authenticate. Ensure applications are configured to dynamically retrieve and use the updated credentials from Secrets Manager.","comment_id":"1229209","timestamp":"1718201400.0"},{"poster":"Raphaello","content":"Selected Answer: B\nThis is a VERY badly written question, cause 2 options are fully and equally qualified to be the key.\nA and B both are correct, and there is nothing in the question of favour one over the other.\n\nAuthentication failure could be because the creds are still hard-coded in the application, which now has to request creds through Secrets Manager APIs, or could be because that once creds rotation is enabled on Secrets Manager, it rotates secrets immediately.","timestamp":"1707694260.0","comment_id":"1147720","upvote_count":"2"},{"comments":[{"timestamp":"1703678760.0","content":"This \"cause\" would ultimately be that the RoleToRetrieveSecretAtRuntime was not present in the Secret Policy.","poster":"bob_bobbins","upvote_count":"1","comment_id":"1106767"}],"timestamp":"1703678580.0","comment_id":"1106762","content":"Selected Answer: A\nI would argue for A because of resources already mentioned; which say when \" the credentials are no longer stored with the application, rotating credentials no longer requires updating your applications and deploying changes to application clients.\"","upvote_count":"1","poster":"bob_bobbins"},{"timestamp":"1695622320.0","comment_id":"1016510","content":"Selected Answer: A\nA is the right","upvote_count":"1","poster":"Joeylee"},{"comment_id":"1002278","content":"Selected Answer: A\nGuys already present evidence below. I could find out where is written that Secret Manager forces to immediately rotate a secret, as I see you must specify rotation interval.","timestamp":"1694160180.0","poster":"addy_prepare","upvote_count":"1"},{"comment_id":"983228","poster":"Nuha_23","upvote_count":"1","content":"Selected Answer: A\nA is the most likely cause. see the link : https://docs.aws.amazon.com/secretsmanager/latest/userguide/hardcoded-db-creds.html","timestamp":"1692249420.0"},{"comment_id":"926502","content":"Selected Answer: B\nb is the only correct","upvote_count":"3","timestamp":"1687072740.0","poster":"vherman"},{"timestamp":"1684207500.0","upvote_count":"1","comment_id":"898854","content":"Selected Answer: A\nA is the answer. I present the evidence below. https://docs.aws.amazon.com/ko_kr/secretsmanager/latest/userguide/rotate-secrets_now.html","poster":"Blue15"},{"timestamp":"1683659940.0","content":"A. Once you store your credentials in secrets manager, even the application should be updated.","poster":"Joes87","upvote_count":"1","comment_id":"893387"},{"poster":"SaucyVip3r","content":"Selected Answer: B\nI think B is the right option. Since when the keys are rotated immediately this will impact the applications","timestamp":"1683043200.0","upvote_count":"2","comment_id":"887649"},{"content":"Selected Answer: B\nAnswer B. Because enabling the rotation, would immediately change the credentials, and that would cause the applications to fail if they uses the imbedded/old credentials.","poster":"matrpro","comment_id":"884919","upvote_count":"1","timestamp":"1682835840.0"},{"poster":"Trap_D0_r","comment_id":"873588","upvote_count":"3","timestamp":"1681820280.0","content":"Selected Answer: A\nAnswer A:\nThis is CLASSIC Developer behavior--A Developer JUST moved credentials to Secrets Manager AND (at the same time) enabled rotation, then a bunch of applications started failing authentication. What's the most likely culprit for the failure? A: The developer did not also update his applications to use Secrets Manager for credentialed access, and the RDS instance won't accept connections."},{"comment_id":"847171","poster":"gvramana","content":"The keyword is \"failed with authentication errors\", primary problem is authentication\nhence the Answer A","timestamp":"1679497260.0","upvote_count":"2"},{"upvote_count":"1","poster":"Mmaxwell00","comment_id":"798467","content":"A. After rotation is successful, applications that Retrieve secrets from AWS Secrets Manager from Secrets Manager automatically get the updated credentials. For more details about how each step of rotation works, see the AWS Secrets Manager rotation function templates.\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/enable-rotation-rds.html","timestamp":"1675552320.0"},{"timestamp":"1669658700.0","upvote_count":"3","content":"Selected Answer: B\nFore those who vote for A, they're asking about a root cause, not a solution !!!","comment_id":"729496","poster":"hubekpeter"},{"comment_id":"703546","upvote_count":"2","content":"It says after 30 days\n\nA is correct","timestamp":"1666672320.0","poster":"arae"},{"poster":"ele","comment_id":"692919","content":"Selected Answer: A\nI’ll enable rotation after I’ve updated my applications to use Secrets Manager APIs to retrieve secrets.","upvote_count":"2","timestamp":"1665568320.0"},{"upvote_count":"3","content":"its A, the app needs to get the credentials through Secret Manager","timestamp":"1665415500.0","poster":"arae","comment_id":"691298"},{"upvote_count":"7","poster":"CDV_fr","comment_id":"674903","content":"Selected Answer: B\nA is correct. App should retrieves the credentials through Secret Manger but can cache it, and only update it on error for example. Plus, access to database is not made \"through\" Secret Manager...\n\nB was right. Before 2021, rotation enabling would immediately rotate secrets. It is no longer the case. By default, it rotates automatically, but you can specify to wait.\n\nI would still go for B, as you could use CLI without specifying the argument to wait, and so rotation would make your not-up-to-date apps visible immediately.","timestamp":"1663747140.0"},{"timestamp":"1663305420.0","comments":[{"content":"https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html","timestamp":"1663305420.0","upvote_count":"1","comment_id":"670479","poster":"ceeee"}],"poster":"ceeee","upvote_count":"1","content":"Selected Answer: B\nThe application needs to be updated to retrieve the new credentials from the Secrets manager. Basically the old way of these apps to connect was having the credentials stored somewhere in a file inside of them. The old credentials were compromised obviously","comment_id":"670478"},{"upvote_count":"3","comments":[{"timestamp":"1663828020.0","comment_id":"675786","upvote_count":"1","content":"wrong correct answer is B","poster":"ceeee"}],"timestamp":"1662230160.0","comment_id":"658740","content":"Selected Answer: A\nIts A.\nApplications that retrieve the secret from Secrets Manager automatically get the new secret value after rotation.\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html\n \nB is wrong: \nit doesnt rotate the secret immediately (its an option):\n(Optional) Choose Rotate immediately when the secret is stored to rotate your secret when you save your changes. If you clear the checkbox, then the first rotation will begin on the schedule you set.\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_turn-on-for-db.html","poster":"Root_Access"},{"comment_id":"655158","poster":"bobsmith2000","content":"Selected Answer: A\nIt's A.\nApp failed because some of them didn't use secret manager to acquire credentials so that after rotation they lost access.","timestamp":"1661954520.0","upvote_count":"2"},{"content":"B does not make sense: the whole idea of using the secret server is to avoid storing secrets on the application. Apps get the credentials from the secret server and are available as soon as the secret changes on the secret manager.\nD is wrong, because resource-based policy that you can attach to a secret, to allow apps access to this secret, is NOT IAM policy.\nA is the right answer.","timestamp":"1661264640.0","comment_id":"650856","poster":"ele","upvote_count":"1"},{"content":"Selected Answer: B\nB for sure.","comment_id":"639276","poster":"dcasabona","upvote_count":"1","timestamp":"1659105360.0"},{"comment_id":"602849","content":"A is the correct answer because in B it is optional the rotation immidliatly. It takes 3 hours to rotate by default.\n(Optional) Choose Rotate immediately when the secret is stored to rotate your secret when you save your changes. If you clear the checkbox, then the first rotation will begin on the schedule you set.\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/rotate-secrets_turn-on-for-db.html","timestamp":"1652776560.0","poster":"wafam","upvote_count":"4"},{"upvote_count":"1","poster":"MillarD","timestamp":"1641680220.0","comment_id":"519797","content":"Selected Answer: B\nReader comments"},{"poster":"jj22222","comment_id":"512690","timestamp":"1640810520.0","upvote_count":"1","content":"B. Enabling rotation in Secrets Manager causes the secret to rotate immediately, and the applications are using the earlier credential."},{"upvote_count":"1","comment_id":"437261","timestamp":"1636294980.0","poster":"hk436","content":"B is my answer.!"},{"timestamp":"1636037340.0","content":"The correct answer here is B:","upvote_count":"1","comment_id":"355967","poster":"Mikeclue"},{"timestamp":"1635847080.0","poster":"sanjaym","upvote_count":"1","comment_id":"353785","content":"Ans: B 100%"},{"timestamp":"1635770760.0","upvote_count":"1","content":"B is Correct","comment_id":"275931","poster":"NANDY666"},{"upvote_count":"4","poster":"dinhvu111","timestamp":"1635592560.0","content":"B,\nEnabling rotation causes the secret to rotate once immediately when you save the secret. Before you enable rotation, be sure you update all of your applications using this secret credentials to retrieve the secret from Secrets Manager. The original credentials might not be usable after the initial rotation. Any applications you fail to update break as soon as the old credentials become invalid.\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/enable-rotation-rds.html","comment_id":"253876"},{"poster":"kalzht00","upvote_count":"1","comment_id":"235569","content":"B is correct","timestamp":"1635501600.0"},{"timestamp":"1635451500.0","comment_id":"221042","poster":"devjava","upvote_count":"1","content":"Ans > B"},{"content":"B, no question about it. \n\n\"When you enable rotation for a secret by using the Credentials for RDS database, Credentials for Redshift cluster, or Credentials for DocumentDB database secret type, Secrets Manager provides a Lambda rotation function for you and populates the function automatically with the Amazon Resource Name (ARN) in the secret. You provide a few details for this to work. For example, you specify the secret with permissions to rotate the credentials, and how often you want to rotate the secret.\"","poster":"DanMuniz","comment_id":"186371","timestamp":"1635188880.0","upvote_count":"1"},{"content":"B is correct","comment_id":"154602","upvote_count":"2","poster":"enthuguys","timestamp":"1635167400.0"},{"timestamp":"1635103560.0","upvote_count":"3","poster":"YounesAouad","content":"We're talking about migrating credentials FROM Amazon RDS to AWS Secret Manager. \n\nA. How can: A be the correct answer when \"A. Migrating the credential TO RDS requires that all access come through requests to the Secrets Manager.\" \n\nB. Wouldn't apps call a function to request to retrieve \"current and active\" credentials from Secret manager? in this case, old of new, apps would still get the current credentials from the Secret Manager. Unless they don't have permission to do so, which led me to think of D as a possible answer.\n\nFurther thoughts? where am I wrong? thank you!","comment_id":"114203"},{"timestamp":"1635096300.0","poster":"RB80","comment_id":"109437","upvote_count":"1","content":"B....."},{"comment_id":"104190","upvote_count":"1","content":"while B is the actual cause but if they have configured that right which is pointed in a then it would have worked, A is the main reason..","timestamp":"1635049680.0","poster":"RajeshNayyar"},{"poster":"Smart","comment_id":"81504","upvote_count":"1","content":"My understanding is that scenario emphasizes on recent changes (\"just\" with \"also\"). With that, I would assume that applications have NOT yet been updated. Enabling rotation led to immediate credential change - that is the main cause in the current situation. \n\nIf the applications had been updated appropriately, then D would have been the problem.","timestamp":"1634842380.0"},{"upvote_count":"2","content":"B is correct, it asking for possible cause of error and not the solution so A is incorrect","comment_id":"79534","timestamp":"1634787180.0","poster":"TechGuru"},{"upvote_count":"1","poster":"ADVIT","content":"Enabling rotation causes the secret to rotate once immediately when you save the secret. Before you enable rotation, be sure you update all of your applications using this secret credentials to retrieve the secret from Secrets Manager. The original credentials might not be usable after the initial rotation. Any applications you fail to update break as soon as the old credentials become invalid\n\nA - is correct","timestamp":"1634716320.0","comment_id":"78079"},{"content":"https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access.html","comment_id":"69897","poster":"ourking","upvote_count":"1","timestamp":"1634663880.0"},{"upvote_count":"1","poster":"simplimarvelous","content":"I has to be B.\nIn the question\n1)RDS creds were migrated to AWS Secrets Manager\n2) All applications that needed the correct credentials were not already using secrets manager=> \"after a short time a number of applications have failed with authentications errors\"\nNote: they didn't fail until after Rotation was enabled for every 30 days\nSo the credentials were already migrated to secrets manager just not being rotated so all credentials were in sync until ROTATION was enabled then secrets manager changed the credentials on the RDS deployment, and the apps that were not updated were forced out of sync","comment_id":"69103","timestamp":"1634629620.0"},{"timestamp":"1634623860.0","comment_id":"68546","content":"In my opinion, \"A\" is correct in this context, even though alternative \"B\" seems also correct, we cannot assume \"the applications are using the earlier credential\" since the question does not provide any information about how those applications handle credentials.","poster":"rribeiro1","upvote_count":"1"},{"poster":"RaySmith","timestamp":"1634612580.0","content":"B is correct","upvote_count":"1","comment_id":"68317"},{"timestamp":"1634523720.0","comment_id":"63182","poster":"ryanle","upvote_count":"1","content":"B: enable rotation rotate immediately that break the app"},{"upvote_count":"1","poster":"graesaunders","comments":[{"comment_id":"75108","timestamp":"1634678160.0","content":"Not true, if Applications do not have access to the Secrets Manager, it will fail right from the beginning, not after short period of time as the question states. Also the applications are failing with \"Authentication\" error, which is an password/key issue. Answers is B.","upvote_count":"1","poster":"BigZ"}],"timestamp":"1634508840.0","comment_id":"60944","content":"B cannot be correct. The statement is correct that the credentials will rotate immediately but if the permissions were setup correctly then it would not matter if the credentials were rotated now or in 30 days. \n\nI believe the answer is D because the permissions need to be set (https://docs.aws.amazon.com/secretsmanager/latest/userguide/manage_retrieve-secret.html)\n\nBut honestly this feels like a chicken egg question.."},{"upvote_count":"1","timestamp":"1634351700.0","content":"A is the correct one, even looks like B is right but when you migrate RDS requires that all access come through requests to the Secret Manager. so once it set whether rotation policy changes the password or not it doesn't make a difference. so B is wrong and A is the right answer.","poster":"ankurpatel18","comment_id":"59817"},{"timestamp":"1634138280.0","poster":"Bach999","comment_id":"52419","content":"This question in my exam on 2020-Feb-19.","upvote_count":"4"},{"poster":"aws_learner","upvote_count":"2","content":"Read carefully... Migration is done first then the enabling the rotation done. So, the impact of it is based on migration NOT on enabling the password rotation.\nSo, correct answer is \"A\"","timestamp":"1634044500.0","comments":[{"comment_id":"56321","timestamp":"1634286240.0","upvote_count":"1","poster":"Reza215r","content":"nope B is correct"}],"comment_id":"51024"},{"poster":"delirium","content":"B\nEnabling rotation causes the secret to rotate once immediately when you save the secret. Before you enable rotation, be sure you update all of your applications using this secret credentials to retrieve the secret from Secrets Manager. The original credentials might not be usable after the initial rotation. Any applications you fail to update break as soon as the old credentials become invalid.","upvote_count":"1","timestamp":"1634031480.0","comment_id":"46918"},{"timestamp":"1633996380.0","comment_id":"45649","content":"When u implement secrets manager auto rotation, it immediately rotate the secret, causes authentication errors. You need use backoff algorithm for that. Answer is B.","poster":"RakeshTaninki","upvote_count":"2"},{"content":"B is correct","poster":"amehim","upvote_count":"1","comment_id":"40332","timestamp":"1633745520.0"},{"content":"B is right","comments":[{"timestamp":"1633689000.0","poster":"pgcloud","upvote_count":"1","content":"B is the correct answer","comment_id":"39595"}],"comment_id":"37586","poster":"henry76","timestamp":"1633681020.0","upvote_count":"1"},{"upvote_count":"1","content":"For what it's worth here's what I found by myself \nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/enable-rotation-other.html\nTo configure rotation of a secret for a database other than the supported RDS databases or some other service, you must manually perform a few extra steps. Primarily, you must create and provide the code for the Lambda rotation function.\nWarning\n\nConfiguring rotation causes the secret to rotate once as soon as you store the secret. Before you do this, you must make sure that all of your applications that use the credentials stored in the secret are updated to retrieve the secret from AWS Secrets Manager. The old credentials might not be usable after the initial rotation. Any applications that you fail to update break as soon as the old credentials are no longer valid.\nWhich for me makes B the strongest candidate ever !","timestamp":"1633675680.0","comment_id":"30680","poster":"johndoe"},{"comment_id":"23134","poster":"AWSE","upvote_count":"1","content":"B will be the correct answer","timestamp":"1633551240.0"},{"poster":"AWSE","upvote_count":"1","comment_id":"23133","content":"Configuring rotation causes the secret to rotate once as soon as you store the secret. Before you do this, you must ensure that all of your applications that use the credentials stored in the secret are updated to retrieve the secret from AWS Secrets Manager. The old credentials might no longer be usable after the initial rotation and any applications that you fail to update will break as soon as the old credentials are no longer valid.","timestamp":"1633535220.0"},{"timestamp":"1633380240.0","content":"A and D both looks correct at first look:\nRef: https://aws.amazon.com/blogs/security/rotate-amazon-rds-database-credentials-automatically-with-aws-secrets-manager/\n\nBased on this URL , IAM policy is attached to a Role (attached to EC2) so D is incorrect.\n\nA wins :)","upvote_count":"1","comments":[{"upvote_count":"2","comment_id":"13000","poster":"exams","timestamp":"1633448940.0","content":"opps sorry... I messed with alphabets.. \n\nB and D looks correct and B wins"},{"upvote_count":"1","content":"The question tells us that the database credential has been migrated to Secrets Manager (ie FROM RDS), but answer A mentions migrating the credentials TO RDS, which is the wrong direction.\nTherefore answer A is wrong.","poster":"rip72","timestamp":"1635398940.0","comment_id":"218426"}],"comment_id":"12999","poster":"exams"},{"comment_id":"10801","timestamp":"1633350060.0","content":"B is correct for sure","poster":"INASR","upvote_count":"2"},{"upvote_count":"1","comment_id":"10318","timestamp":"1633156380.0","poster":"josellama2000","content":"an app request the credentials when trying to establish a new connection to the RDS. The app does not need new credentials until disconnected. Changing the secret wil not disconnect the apps from the RDS."},{"content":"B does not make sense to me. Applications does not cache/store credentials. The whole idea of using the secret server is to avoid storing secrets on the application. Apps get the credentials from the secret server and are available as soon as the secret changes on the secret manager.\nI would say that D is the correct answer","poster":"josellama2000","comment_id":"10317","comments":[{"upvote_count":"2","poster":"rip72","timestamp":"1635338820.0","content":"They do store their own credentials if they have been programmed badly & since they have just been migrated to Secrets Manager, I think this is what the question is asking us to identify, but it is worded badly.","comment_id":"218422"},{"upvote_count":"1","timestamp":"1636078980.0","comment_id":"388434","poster":"skipbaylessfor3","content":"josellama2000, I think you make a good point but I still think its B. Because they mentioned \"JUST migrated\" and a number of \"EXISTING applications\" so I think its implying the applications haven't been configured yet to retrieve from Secrets Manager"},{"comment_id":"650852","upvote_count":"1","poster":"ele","timestamp":"1661264400.0","content":"D is wrong, because resource-based policy that you can attach to a secret, to allow apps access to this secret, is NOT IAM policy.\nA is the right answer."}],"upvote_count":"4","timestamp":"1632925920.0"},{"comment_id":"10185","content":"B is correct","poster":"ugreenhost","timestamp":"1632915420.0","upvote_count":"2"},{"content":"B is the right answer.","upvote_count":"2","timestamp":"1632914700.0","poster":"cloudguy365","comment_id":"9915"},{"upvote_count":"2","poster":"BillyC","content":"Yes B is correct","timestamp":"1632841440.0","comment_id":"8502"},{"poster":"dpvnme","upvote_count":"2","timestamp":"1632631980.0","comment_id":"5873","content":"BBBBBBBB"},{"upvote_count":"4","timestamp":"1632204060.0","comment_id":"3648","poster":"sensor","comments":[{"comment_id":"3993","content":"B is the cause, A is solution.","timestamp":"1632286560.0","poster":"sensor","upvote_count":"3"}],"content":"B is correct"}],"answers_community":["B (58%)","A (42%)"],"unix_timestamp":1560098340,"timestamp":"2019-06-09 18:39:00","answer_images":[],"isMC":true,"answer":"B","question_images":[],"question_text":"A company's database developer has just migrated an Amazon RDS database credential to be stored and managed by AWS Secrets Manager. The developer has also enabled rotation of the credential within the Secrets Manager console and set the rotation to change every 30 days.\nAfter a short period of time, a number of existing applications have failed with authentication errors.\nWhat is the MOST likely cause of the authentication errors?","answer_description":"","exam_id":29,"topic":"1","choices":{"A":"Migrating the credential to RDS requires that all access come through requests to the Secrets Manager.","B":"Enabling rotation in Secrets Manager causes the secret to rotate immediately, and the applications are using the earlier credential.","C":"The Secrets Manager IAM policy does not allow access to the RDS database.","D":"The Secrets Manager IAM policy does not allow access for the applications."},"answer_ET":"B","url":"https://www.examtopics.com/discussions/amazon/view/1661-exam-aws-certified-security-specialty-topic-1-question-24/"},{"id":"0TL6jCqY94DPH9en0ca1","question_text":"A security engineer is designing a solution that will provide end-to-end encryption between clients and Docker containers running in Amazon Elastic Container\nService (Amazon ECS). This solution will also handle volatile traffic patterns.\nWhich solution would have the MOST scalability and LOWEST latency?","exam_id":29,"choices":{"B":"Configure an Application Load Balancer to terminate the TLS traffic and then re-encrypt the traffic to the containers.","C":"Configure a Network Load Balancer with a TCP listener to pass through TLS traffic to the containers.","D":"Configure Amazon Route to use multivalue answer routing to send traffic to the containers.","A":"Configure a Network Load Balancer to terminate the TLS traffic and then re-encrypt the traffic to the containers."},"answer_images":[],"timestamp":"2021-03-15 12:34:00","topic":"1","isMC":true,"question_id":158,"url":"https://www.examtopics.com/discussions/amazon/view/47167-exam-aws-certified-security-specialty-topic-1-question-240/","answer_ET":"C","answers_community":["C (100%)"],"answer_description":"","discussion":[{"poster":"weurseuk","timestamp":"1633700640.0","comment_id":"325716","upvote_count":"15","comments":[{"poster":"Daniel76","timestamp":"1634422680.0","comment_id":"358655","content":"https://aws.amazon.com/blogs/compute/maintaining-transport-layer-security-all-the-way-to-your-container-using-the-network-load-balancer-with-amazon-ecs/","upvote_count":"5"}],"content":"C /Network Load Balancer is optimized to handle sudden and volatile traffic patterns while using a single static IP address per Availability Zone. Network Load Balancer also supports TLS termination, preserves the source IP of the clients, and provides stable IP support and Zonal isolation"},{"timestamp":"1633270320.0","comment_id":"315596","content":"C. lowest latency + e-2-e encryption.","poster":"cldy","upvote_count":"9"},{"content":"Selected Answer: C\nNBL with TCP listener to pass through TLS traffic to the containers for end-to-end encryption (encrypt/decrypt ops handled by the containers).\n\nC is the right answer here.","upvote_count":"1","timestamp":"1709079120.0","comment_id":"1161061","poster":"Raphaello"},{"upvote_count":"1","poster":"samCarson","content":"Selected Answer: C\nC. Configure a Network Load Balancer with a TCP listener to pass through TLS traffic to the containers.\n\nTo achieve the MOST scalability and LOWEST latency for end-to-end encryption between clients and Docker containers in Amazon ECS, configuring a Network Load Balancer (NLB) with a TCP listener to pass through TLS traffic to the containers is the optimal solution. By allowing the NLB to directly route the encrypted traffic without terminating or re-encrypting it, the solution minimizes processing overhead and latency, ensuring high scalability and efficient handling of volatile traffic patterns. This approach eliminates the need for additional decryption and encryption steps, resulting in improved performance.","comment_id":"922903","timestamp":"1686732600.0"},{"timestamp":"1685148900.0","poster":"pal40sg","comment_id":"907673","upvote_count":"1","content":"Selected Answer: C\nOption C is the most suitable because it allows the Network Load Balancer (NLB) to act as a pass-through for TLS traffic without terminating the SSL/TLS connection. This means that the TLS traffic remains encrypted all the way from the clients to the containers, ensuring end-to-end encryption."},{"timestamp":"1679539740.0","content":"C for obvious reasons...\n\nFor those who curious regarding D:\n...multivalue answer routing is a feature of Amazon Route 53, which is a highly scalable Domain Name System (DNS) web service that translates domain names to IP addresses.\n\nMultivalue answer routing allows you to configure Route 53 to respond to DNS queries with multiple IP addresses for a single domain name. When a client requests a DNS resolution for a domain name with multivalue answer routing enabled, Route 53 randomly selects and returns one of the configured IP addresses, distributing traffic across the different resources associated with the domain name.\n\nThis feature is useful when you have multiple resources that can serve a single application or website, and you want to distribute traffic evenly across all available resources. It also provides a measure of fault tolerance, as if one of the resources becomes unavailable, Route 53 will automatically route traffic to the remaining resources.\n\nhttps://repost.aws/knowledge-center/multivalue-versus-simple-policies","upvote_count":"2","poster":"peddyua","comment_id":"847716"},{"upvote_count":"1","comment_id":"787303","poster":"arpgaur","content":"Anything with re-encryption will cause latency. Idk what is happening in option D. so C is the answer.","timestamp":"1674625620.0"},{"timestamp":"1672743720.0","upvote_count":"1","comment_id":"764485","content":"Selected C","poster":"jishrajesh"},{"comment_id":"652592","upvote_count":"1","timestamp":"1661608560.0","content":"Selected Answer: C\nNLB with TCP passthough is detailled below.\nProviding end-to-end TLS communication across ECS services without offloading or terminating the certificates, gives you the ability to achieve high throughput at ultra-low latency for applications that require the TCP protocol.\n\nhttps://aws.amazon.com/blogs/compute/maintaining-transport-layer-security-all-the-way-to-your-container-using-the-network-load-balancer-with-amazon-ecs/","poster":"sapien45"},{"comment_id":"642934","content":"Selected Answer: C\nC is the only option where there is no reencryption hence lowest latency","upvote_count":"2","timestamp":"1659697380.0","poster":"Rja148393"},{"poster":"KasnuSilva","comment_id":"430591","upvote_count":"1","content":"Answer C. As it's end end encryption the TLS should ends at the correct destination and not the ALB.","timestamp":"1636011600.0"},{"comments":[{"comment_id":"404391","content":"the question \" a solution that will provide end-to-end encryption between clients and Docker containers\", so it means that traffic must be encrypted between client and container, not at a middle layer as ALB or NLB.","upvote_count":"2","timestamp":"1635944940.0","poster":"Kdosec"},{"upvote_count":"1","content":"How to re-encrypt? \nAnd maybe if you could re-encrypt then it'll take time.","poster":"rhinozD","timestamp":"1634807880.0","comment_id":"387661"}],"timestamp":"1634172360.0","content":"can I ask why not A?","comment_id":"347375","upvote_count":"2","poster":"tailedman"},{"timestamp":"1632889620.0","upvote_count":"2","poster":"DayQuil","comment_id":"313663","content":"Answer: C"},{"timestamp":"1632358500.0","content":"The answer is C","poster":"asiansensation","upvote_count":"3","comment_id":"311359"}],"answer":"C","question_images":[],"unix_timestamp":1615808040},{"id":"UjY0faozqkPr5xieeiAa","isMC":true,"choices":{"D":"Enable automatic annual key rotation for the existing customer managed CMKs. Update the application encryption library to use a new key ID for all encryption operations. Create a key grant for the old CMKs and update the code to point to the ARN of the grants.","B":"Enable automatic annual key rotation for the existing customer managed CMKs. Update the application encryption library to use a new key ID for all encryption operations. Fall back to the old key ID to decrypt data that was encrypted with previous versions of the key.","C":"Create new AWS managed CMKs. Configure the key schedule for annual rotation. Create an alias to point to the new CMKs.","A":"Create new AWS managed keys. Configure the key schedule for the annual rotation. Create an alias to point to the new keys."},"url":"https://www.examtopics.com/discussions/amazon/view/47989-exam-aws-certified-security-specialty-topic-1-question-241/","timestamp":"2021-03-23 08:30:00","question_text":"A company uses an AWS Key Management Service (AWS KMS) CMK to encrypt application data before it is stored. The company's security policy was recently modified to require encryption key rotation annually. A security engineer must ensure that annual global key rotation is enabled for the key without making changes to the application.\nWhat should the security engineer do to accomplish this requirement?","answer":"C","question_id":159,"answers_community":["C (54%)","B (44%)","2%"],"unix_timestamp":1616484600,"discussion":[{"timestamp":"1632119700.0","upvote_count":"18","comments":[{"poster":"vbal","comment_id":"656356","upvote_count":"1","content":"without making changes to the application, B can't be the answer.","timestamp":"1662042300.0"}],"poster":"cldy","content":"B. Only feasible one ...","comment_id":"317847"},{"upvote_count":"14","comment_id":"373928","poster":"Daniel76","timestamp":"1635687600.0","content":"Answer- B.\n\nThis require a new CMK as if it is a manual key rotation. For decryption of old key, AWS KMS can automatically identify which key to use as long as the old key is not disabled.\n\"When you begin using the new CMK, be sure to keep the original CMK enabled so that AWS KMS can decrypt data that the original CMK encrypted. When decrypting data, KMS identifies the CMK that was used to encrypt the data, and it uses the same CMK to decrypt the data. As long as you keep both the original and new CMKs enabled, AWS KMS can decrypt any data that was encrypted by either CMK.\"\n\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html#rotate-keys-manually\nA, C - AWS Managed KMS cannot enable annual key rotation.\nD - Key grant is not used for referencing to old key.\nhttps://docs.aws.amazon.com/kms/latest/developerguide/grants.html","comments":[{"timestamp":"1635750960.0","content":"Even if the key rotation is 3yrs, by creating a new key every year and updating the alias, no code changes have to be made, like -B-. No correct answer here. Correct answer would be KMS Customer managed Master key rotate every year, change alias.","upvote_count":"4","poster":"DahMac","comment_id":"419390"}]},{"poster":"Arad","upvote_count":"1","comment_id":"1221345","timestamp":"1717027800.0","content":"Selected Answer: B\nI believe that B is correct."},{"timestamp":"1709591040.0","upvote_count":"1","content":"This is a wrong question.\n2 options out of 4 about \"creating new AWS managed key\" and enable key rotation, knowing that we cannot managed any aspect of AWS managed keys, including their lifecycle.\nhttps://docs.aws.amazon.com/kms/latest/cryptographic-details/basic-concepts.html\n\nThe other 2 options includes \"update the application\" which clearly contradicts with the requirements in the question of \"not making changes to the application\".\n\nInitially, I picked C because using key alias means no changes to the application during key rotations. Then noticed it is \"AWS MANAGED\" key, which we cannot control its lifecycle.\n\nBotched question.\nLots of discussions for a very bad question. Not worth it.","comment_id":"1166060","poster":"Raphaello"},{"content":"Selected Answer: C\nC is the correct answer.\nThe benefit of KMS key alias, and what changes at annual key rotation (only key material).","timestamp":"1709082660.0","comment_id":"1161164","poster":"Raphaello","upvote_count":"1"},{"upvote_count":"1","poster":"yorkicurke","content":"Selected Answer: C\nif you watch the YT video at specified time[8:00], you can see that option for 'Key Rotation' is greyed out. so you can NOT modify the existing one to change it's time, hence C.\n\nhttps://youtu.be/GXOhDJ9jmjU?feature=shared&t=480","timestamp":"1703691960.0","comments":[{"comment_id":"1166050","upvote_count":"1","poster":"Raphaello","content":"WRONG!\nAWS Doc clearly says \"you can enable automatic key rotation for an existing KMS key.\"\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html\n\nPlus..\nThere is kms command its actual sole purpose is to enable rotation for existing key.\naws kms enable-key-rotation --key-id <kms_key_id>\nhttps://docs.aws.amazon.com/cli/latest/reference/kms/enable-key-rotation.html\n\nDon't spread wrong information, please.","timestamp":"1709590200.0"}],"comment_id":"1106964"},{"timestamp":"1697221440.0","comment_id":"1042882","content":"Selected Answer: B\nYou cannot just create a bunch of AWS managed keys. AWS managed keys are created by AWS services that need them. For example, S3 would create an AWS managed key for S3 usage, same goes for other services like SNS, SQS, DynamoDb etc. In this case u got to go with the customer managed keys.","poster":"pupsik","upvote_count":"1"},{"comment_id":"986422","poster":"kiwi123","timestamp":"1692615420.0","upvote_count":"2","content":"Selected Answer: C\nC my choice..."},{"timestamp":"1692462780.0","poster":"gsax","upvote_count":"6","comment_id":"985318","content":"Selected Answer: C\nNo app changes, keys can now be rotated yearly."},{"comment_id":"939748","timestamp":"1688199960.0","upvote_count":"2","content":"There is something I don't understand, in all the answers you have to modify the application since if you create a new CMK key with a new alias, you have to modify the code.\n\nIn answer B it says \"Update the application's encryption library to use a new key ID for all encryption operations\" which already implies a modification to the application, since one of the keys in the question is that: \"be enabled for the key without making changes to the application\". You have to modify the configuration so that the library uses in the new keyid, but you also have to modify the application so that if the data was encrypted with the old key, it can decrypt it.\n\nIn answer C the application is not modified because it would only be changing the configuration to be used in the new alias, but the old data could not be decrypted.\n\nI think none of them is 100% correct\n\nTranslated with www.DeepL.com/Translator (free version)","poster":"soyyodario"},{"comment_id":"936618","upvote_count":"1","poster":"dxloader","content":"C. AWS managed key rotate annually\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html","timestamp":"1687953900.0"},{"poster":"Anuragksslr","content":"Selected Answer: A\nIt is AWS KMS not AWS KMS CMK","upvote_count":"1","comment_id":"930759","timestamp":"1687449900.0"},{"comment_id":"925177","timestamp":"1686919860.0","upvote_count":"1","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/kms/latest/APIReference/API_EnableKeyRotation.html\nYou cannot enable or disable automatic rotation for AWS managed KMS keys.","poster":"6_8ftwin"},{"content":"Selected Answer: B\nB. Enable automatic annual key rotation for the existing customer managed CMKs. Update the application encryption library to use a new key ID for all encryption operations. Fall back to the old key ID to decrypt data that was encrypted with previous versions of the key.\n\nBy enabling automatic annual key rotation for the existing customer managed CMKs, the security engineer ensures that the encryption keys are rotated annually. They should then update the application encryption library to use a new key ID for all encryption operations going forward. However, to ensure compatibility with previously encrypted data, the application should also have the ability to fall back to the old key ID for decrypting data that was encrypted with previous versions of the key.","poster":"samCarson","timestamp":"1686723600.0","comment_id":"922795","upvote_count":"1"},{"timestamp":"1686228120.0","poster":"maupka","content":"Selected Answer: B\nThe correct answer is:\n\nB. Enable automatic annual key rotation for the existing customer managed CMKs. Update the application encryption library to use a new key ID for all encryption operations. Fall back to the old key ID to decrypt data that was encrypted with previous versions of the key.\n\nThis is the correct answer because it meets all the requirements. AWS KMS supports automatic key rotation for customer-managed CMKs. When you enable automatic key rotation for a CMK, AWS KMS generates new cryptographic material for the CMK every year. The old cryptographic material remains available to decrypt data that it was used to encrypt. Furthermore, your application does not need to be changed to use the new cryptographic material because the CMK's key ID or alias does not change.","comment_id":"918261","upvote_count":"1"},{"comments":[{"upvote_count":"1","comment_id":"907676","poster":"pal40sg","timestamp":"1685149260.0","content":"Option C also suggests creating new AWS managed CMKs and configuring a key schedule for annual rotation. Similar to option A, this option does not involve the existing customer managed CMK and could lead to additional complications."}],"upvote_count":"1","poster":"pal40sg","comment_id":"907674","content":"Selected Answer: B\noption B: Enable automatic annual key rotation for the existing customer managed CMKs. Update the application encryption library to use a new key ID for all encryption operations. Fall back to the old key ID to decrypt data that was encrypted with previous versions of the key.","timestamp":"1685149200.0"},{"upvote_count":"1","timestamp":"1683621900.0","poster":"pspinelli19","content":"Selected Answer: B\nOption B is the correct approach to enable annual global key rotation for the key without making changes to the application.\n\nOption A is incorrect because creating new AWS managed keys and aliases will require changes to the application, which is not acceptable as per the requirements mentioned in the question.\n\nOption C is also incorrect because creating new AWS managed CMKs and aliases will require changes to the application, which is not acceptable as per the requirements mentioned in the question.\n\nOption D is incorrect because creating key grants and updating the code to point to the ARN of the grants will also require changes to the application, which is not acceptable as per the requirements mentioned in the question.\n\nTherefore, Option B is the best approach to enable annual global key rotation for the existing customer-managed CMKs, without making changes to the application. This option enables automatic key rotation for the existing CMKs, updates the application encryption library to use a new key ID for all encryption operations, and falls back to the old key ID to decrypt data that was encrypted with previous versions of the key.","comment_id":"892931"},{"comment_id":"864688","timestamp":"1680958260.0","upvote_count":"2","poster":"amaltare","content":"Selected Answer: B\nA and C are invalid as you cannot configure key rotation for AWS managed keys\nGrants will not be useful here, so D is invalid..\nB is the only valid answer here"},{"content":"Selected Answer: C\nB literally says UPDATE Application while qeustion saysWITHOUT updating application\nC is answer \n\nTo enable annual global key rotation for an AWS KMS Customer Master Key (CMK) without making changes to the application, use AWS KMS Key Policies to set a Key Rotation policy on the CMK.\nSelect the CMK you want to rotate> key policy editor, \nadd the following statement to the \"Statement\" section of the policy:\n\n{\n \"Sid\": \"Enable Key Rotation\",\n \"Effect\": \"Allow\",\n \"Principal\": {\"AWS\": \"*\"},\n \"Action\": [\n \"kms:EnableKeyRotation\",\n \"kms:UpdateAlias\"\n ],\n \"Resource\": \"*\",\n \"Condition\": {\n \"NumericLessThanEquals\": {\n \"kms:KeyRotationInterval\": \"365\"\n }\n }\n}","comment_id":"847735","poster":"peddyua","upvote_count":"1","timestamp":"1679542140.0"},{"content":"Selected Answer: B\nAnswer B","comment_id":"816231","poster":"Maya77","upvote_count":"1","timestamp":"1676957280.0"},{"timestamp":"1674547500.0","content":"Selected Answer: C\nC is the right one","upvote_count":"2","poster":"selim507","comment_id":"786292"},{"content":"Selected Answer: B\nOption A and C are not valid as they create new AWS managed keys, which would require changes to the application.\nOption D is not valid as it creates key grants for the old CMKs, this would not be necessary if the fall back mechanism for the old key ID is used.","timestamp":"1673534280.0","comment_id":"773586","upvote_count":"1","poster":"boooliyooo"},{"comment_id":"762183","poster":"Teknoklutz","content":"Selected Answer: C\nNo app changes","timestamp":"1672421100.0","upvote_count":"2","comments":[{"comment_id":"762185","content":"Sorry, C can not be. because, you can not configure automatic rotation on AWS managed Key.","timestamp":"1672421220.0","poster":"Teknoklutz","upvote_count":"1"}]},{"comment_id":"760834","timestamp":"1672306800.0","content":"Selected Answer: C\nWithout making changes to the application, B and D can't be the answer.","upvote_count":"2","poster":"sakibmas"},{"timestamp":"1669695480.0","comments":[{"poster":"Mimikabs","upvote_count":"1","comment_id":"744280","content":"Customer managed keys can OPTIONALLY be rotated. AWS managed keys are MANDATORILY rotated. Both rotate in about 365 days. So AWS managed keys will work here too","timestamp":"1670949660.0"}],"poster":"landsamboni","upvote_count":"1","comment_id":"729894","content":"B. Enable automatic annual key rotation for the existing customer managed. \nYou can schedule rotation only for customer managed, not Amazon managed keys"},{"poster":"thuyeinaung","content":"Selected Answer: C\nwithout making changes to the application","upvote_count":"3","comment_id":"702147","timestamp":"1666527720.0"},{"timestamp":"1663278960.0","poster":"cloud_collector","comment_id":"670322","content":"Selected Answer: B\nAutomatic key rotation has the following benefits:\n1.The properties of the KMS key, including its key ID, key ARN, region, policies, and permissions, do not change when the key is rotated.\n2.You do not need to change applications or aliases that refer to the key ID or key ARN of the KMS key.\n3.Rotating key material does not affect the use of the KMS key in any AWS service.\n4.After you enable key rotation, AWS KMS rotates the KMS key automatically every year. You don't need to remember or schedule the update.\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html","upvote_count":"1"},{"timestamp":"1662132780.0","poster":"sapien45","content":"Selected Answer: B\nAutomatic key rotation invalidates AWS Maanged KMS (C)","comment_id":"657558","upvote_count":"2"},{"upvote_count":"2","comment_id":"648452","timestamp":"1660830240.0","poster":"francisco_guerra","comments":[{"timestamp":"1669695420.0","poster":"landsamboni","upvote_count":"1","comment_id":"729893","content":"Be careful, CMK is not referring to \"Customer Managed\" Key, it is Customer Master key. Option C says AWS Managed AWS managed key, in this case, you can't activate the rotation because amazon does it automatically. Answer B is the correct one"}],"content":"Ans C\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html\n\nThe properties of the KMS key, including its key ID, key ARN, region, policies, and permissions, do not change when the key is rotated.\n\nFall back to the old key ID to decrypt data that was encrypted with previous versions of the key.\nThis part does not make sense in B so Ans is C\n\nand yes you can enable automatic rotation to CMK check the table in the next link\nhttps://docs.aws.amazon.com/kms/latest/developerguide/concepts.html"},{"poster":"dcasabona","timestamp":"1658852340.0","upvote_count":"4","comments":[{"content":"The answer is C but yes CMK allow automatic key rotation check this table in the documentation\nhttps://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk\nI think the alias is the best option we need to change the app but also the other options.","upvote_count":"1","poster":"francisco_guerra","comment_id":"648446","timestamp":"1660829700.0"}],"content":"Selected Answer: C\nI would go with option C. As far as I know, CMK does not allow automatic key rotation because it is a manual step to import the new key material. The only way is to create a new CMK with the new key material, schedule to do it annually (manual process) and create a alias to use the cmk, the same been used by the application (Without change the app).","comment_id":"637518"},{"timestamp":"1657893120.0","content":"B.\nThe properties of the KMS key, including its key ID, key ARN, region, policies, and permissions, do not change when the key is rotated.\n\nYou do not need to change applications or aliases that refer to the key ID or key ARN of the KMS key.\n\nRotating key material does not affect the use of the KMS key in any AWS service.\n\nAfter you enable key rotation, AWS KMS rotates the KMS key automatically every year. You don't need to remember or schedule the update.","comment_id":"631780","poster":"sapien45","upvote_count":"1"},{"timestamp":"1657185660.0","content":"Selected Answer: B\nB - you don't have to modify your app: When you enable automatic key rotation for a KMS key, AWS KMS generates new cryptographic material for the KMS key every year. AWS KMS saves all previous versions of the cryptographic material in perpetuity so you can decrypt any data encrypted with that KMS key. AWS KMS does not delete any rotated key material until you delete the KMS key. \nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html","comment_id":"628291","upvote_count":"2","poster":"gofavad926"},{"timestamp":"1654319580.0","poster":"Appsec977","content":"Selected Answer: B\nB is the answer because it said the key needs to be rotated yearly, You cannot rotate AWS-managed CMK every year it takes 3 years instead.","upvote_count":"2","comment_id":"611331"},{"upvote_count":"3","timestamp":"1653537240.0","content":"I'm surprised for the B votes, i think u missing this part: \"Without modifying the program\"","poster":"macabrabits","comment_id":"607460"},{"content":"Selected Answer: B\nAutomatic CMK rotation","comment_id":"604672","timestamp":"1653093420.0","upvote_count":"2","poster":"Tesla_0011"},{"comments":[{"upvote_count":"1","poster":"francisco_guerra","comment_id":"648440","content":"To create new cryptographic material for your customer managed keys, you can create new KMS keys, and then change your applications or aliases to use the new KMS keys. Or, you can enable automatic key rotation for an existing KMS key.\n\nhttps://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html\n\nExactly in that way","timestamp":"1660829220.0"}],"timestamp":"1652246160.0","content":"For all the people who answered C how can you annually schedule AWS managed CMK","comment_id":"599906","upvote_count":"1","poster":"HananS"},{"poster":"TigerInTheCloud","timestamp":"1649858160.0","content":"Selected Answer: C\nA. AWS managed keys are rotated every three years and controlled by AWS.\nB. The Customer managed keys can be scheduled to be rotated annually. It is a good choice if the answer only has the first sentence.\nC. It can be done this way, even if it is not the best way.\nD. Same issue as B","comment_id":"585224","upvote_count":"3"},{"poster":"hi2vaisakh","content":"The Answer is C - It clearly mentions CMK + enable annual rotation(automatic) + not changing the program, B and D are mentioning change program ID, A it says AWS managed keys.","timestamp":"1649686860.0","comment_id":"584241","upvote_count":"2"},{"upvote_count":"1","timestamp":"1645312380.0","comment_id":"551397","content":"B seems correct.","poster":"RaySmith"},{"comment_id":"525197","comments":[{"upvote_count":"1","poster":"samapple","content":"B is the answer.\nhttps://docs.aws.amazon.com/whitepapers/latest/kms-best-practices/aws-managed-and-customer-managed-cmks.html","comment_id":"538321","timestamp":"1643768340.0"},{"poster":"Balki","upvote_count":"1","content":"If we have to keep the same key without changing the program reference, we must go for alias. Only option that helps towards accomplishing that is C","comment_id":"645115","timestamp":"1660157160.0"}],"timestamp":"1642360440.0","content":"If you read the question it does say very clearly: \"Without modifying the program\"\n\nSo this means you can remove answer B and D by default also both mention changing something in your code.\n\nNow if you check the question again you see they have a CMK so you can remove answer A it does not say anything they want to go to a managed key.\n\nCorrect answer is C.\n\nIt does not state anywhere in the question that this app also reads the encrypted info it only mentions about encryption. So nothing states it also needs access to the encrypted data by the previous key.","poster":"caelereth","upvote_count":"3"},{"comment_id":"523380","content":"All the answers don't make sense. When a key is rotated in a CMK only the key materials change but not the Key ID. \n\"When you enable automatic key rotation for a customer managed key, AWS KMS generates new cryptographic material for the KMS key every year. AWS KMS also saves the KMS key's older cryptographic material in perpetuity so it can be used to decrypt data that the KMS key encrypted. AWS KMS does not delete any rotated key material until you delete the KMS key.\"","upvote_count":"1","timestamp":"1642142580.0","poster":"sam_live"},{"upvote_count":"2","comment_id":"509932","content":"Selected Answer: B\nAnswer is B.","poster":"khamrumunnu","timestamp":"1640567700.0"},{"upvote_count":"1","poster":"sam_live","content":"according to the doc the key id or alias don''t change after the rotation. even B & D are invalid in this case. either they're all wrong or AWS has later updated KMS options after this question was designed.","comment_id":"509096","timestamp":"1640434080.0"},{"poster":"timlow84","upvote_count":"1","comment_id":"491297","timestamp":"1638336840.0","content":"Looks like might be B. We still need the old key to decrypt the data, and encrypt using the new key. One will need to use the ReEncrypt operation as per below.\n\nhttps://docs.aws.amazon.com/kms/latest/developerguide/programming-encryption.html#reencryption"},{"timestamp":"1637741520.0","comment_id":"485727","upvote_count":"1","content":"C as the KMS CMK rotation is 1 year and it incur no change to the code","poster":"Cloudvin"},{"upvote_count":"2","content":"A & C are wrong. Those are AWS managed CMK (customer master keys) not Customer-Managed Keys.\nB should be CORRECT","timestamp":"1635702120.0","comment_id":"386178","poster":"DerekKey"},{"comment_id":"373512","content":"C 100%","timestamp":"1635561240.0","upvote_count":"1","poster":"Samoanhulk","comments":[{"comment_id":"387662","poster":"rhinozD","content":"How Aws managed key could annually rotate?","timestamp":"1635729360.0","upvote_count":"5"}]},{"upvote_count":"3","comment_id":"372749","comments":[{"comment_id":"372750","timestamp":"1634736600.0","poster":"pmjcr","upvote_count":"2","content":"I mean. For me s B... C cannot be as stated by AWS article I shared"}],"poster":"pmjcr","timestamp":"1634557500.0","content":"For me is C.. B cannot be as stated by AWS \"AWS managed CMKs. You cannot manage key rotation for AWS managed CMKs. AWS KMS automatically rotates AWS managed CMKs every three years (1095 days).\" in https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html"},{"content":"B and D modify the app so they are out. Between A and C, I would go for C even though none say Customer Managed, but at least with C you force the rotation when creating it, although you would be able to configure it for 1 year, only for 3.","upvote_count":"1","timestamp":"1634531520.0","comment_id":"358814","poster":"eskimolander"},{"upvote_count":"1","content":"the existing CMK is aws managed, bear that in mind","comments":[{"comment_id":"422181","timestamp":"1635815460.0","poster":"DahMac","content":"\"AWS Key Management Service (AWS KMS) CMK \", could be AWS Key Management Service CMK with Customer Managed CMK or AWS managed CMK. Doesn't really say, left that part out. Since B and D modify the app, that leaves A, C. C sounds better. Assume that you can do it (create a new one) either automatically every year, or manually every year. Yet another bad question. -C-","upvote_count":"1"}],"comment_id":"355494","poster":"vnsuk","timestamp":"1632837060.0"},{"timestamp":"1632540480.0","upvote_count":"3","poster":"sanjaym","content":"I'll go with C","comment_id":"353296"},{"upvote_count":"3","poster":"sanjaym","timestamp":"1632522060.0","content":"I'll go with C","comment_id":"353295"},{"content":"I think B","upvote_count":"4","poster":"Hungdv","comment_id":"344002","timestamp":"1632489720.0"},{"timestamp":"1632247800.0","comment_id":"343755","upvote_count":"4","comments":[{"comment_id":"358676","content":"https://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html","upvote_count":"1","timestamp":"1633502460.0","poster":"Daniel76"}],"poster":"disposable1989","content":"C\nno changes to the app, check\nCMK rotated every year, aw s managed every 3"}],"answer_ET":"C","question_images":[],"answer_images":[],"topic":"1","answer_description":"","exam_id":29},{"id":"Ey39cPOwxrjME2YoDUnE","answers_community":["BD (46%)","AD (23%)","AB (15%)","Other"],"unix_timestamp":1616008020,"question_text":"A company is collecting AWS CloudTrail log data from multiple AWS accounts by managing individual trails in each account and forwarding log data to a centralized Amazon S3 bucket residing in a log archive account. After CloudTrail introduced support for AWS Organizations trails, the company decided to further centralize management and automate deployment of the CloudTrail logging capability across all of its AWS accounts.\nThe company's security engineer created an AWS Organizations trail in the master account, enabled server-side encryption with AWS KMS managed keys (SSE-\nKMS) for the log files, and specified the same bucket as the storage location. However, the engineer noticed that logs recorded by the new trail were not delivered to the bucket.\nWhich factors could cause this issue? (Choose two.)","answer_images":[],"isMC":true,"choices":{"D":"The S3 bucket policy does not allow CloudTrail to make PutObject API calls against a folder created for the Organizations trail.","C":"The IAM role used by the CloudTrail trail does not have permissions to make PutObject API calls against a folder created for the Organizations trail.","E":"The CMK key policy does not allow the IAM role used by the CloudTrail trail to use the key for cryptographical operations.","A":"The CMK key policy does not allow CloudTrail to make encrypt and decrypt API calls against the key.","B":"The CMK key policy does not allow CloudTrail to make GenerateDatakey API calls against the key."},"url":"https://www.examtopics.com/discussions/amazon/view/47581-exam-aws-certified-security-specialty-topic-1-question-242/","discussion":[{"content":"Or Sorry, answer is BD -- \"Each time CloudTrail puts a log file into your S3 bucket, Amazon S3 sends a GenerateDataKey request to AWS KMS on behalf of CloudTrail. In response to this request, AWS KMS generates a unique data key and then sends Amazon S3 two copies of the data key, one in plaintext and one that is encrypted with the specified CMK.\"","upvote_count":"14","timestamp":"1633280460.0","comment_id":"317557","poster":"[Removed]","comments":[{"timestamp":"1634309520.0","upvote_count":"1","content":"https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html","comment_id":"385740","poster":"babaseun"},{"comment_id":"453551","content":"How does B make sense? It's an AWS-managed key that was created for SSE. The policy can't be changed and it's set by default when the key is created.","timestamp":"1635822000.0","comments":[{"comment_id":"925198","upvote_count":"1","timestamp":"1686921240.0","poster":"6_8ftwin","content":"B, D\nThe default key policy applies to KMS managed keys: https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html.\nThis default policy \"gives the AWS account that owns the KMS key permission to use IAM policies to allow access to all AWS KMS operations on the KMS key\". \nThe S3 bucket resides in a log archive account; the KMS key account was never specified in the question -- it is likely in the same account and would also be the source of the problem. \nThe AWS Organizations trail is in the master account and would not have access to perform these cryptographic operations, specifically the ability to generate DEKs.\n\nSo use of the KMS managed key is the problem in this case. A better option would be to use a customer managed key so the key policy may be modified."}],"poster":"EricR17","upvote_count":"3"}]},{"comments":[{"comment_id":"773593","timestamp":"1673534580.0","poster":"boooliyooo","upvote_count":"4","content":"The security engineer needs to ensure that the IAM role used by the CloudTrail trail has permissions to make PutObject API calls against the folder created for the Organizations trail. If the IAM role doesn't have the necessary permissions, the logs will not be delivered to the bucket.\n\nSimilarly, the S3 bucket policy also needs to allow CloudTrail to make PutObject API calls against the folder created for the Organizations trail. If the bucket policy doesn't allow this, the logs will not be delivered to the bucket.\n\nOption A, B and E are not applicable as they are related to key encryption and decryption, in this scenario the CloudTrail is already configured to use SSE-KMS."}],"poster":"Shefali85","content":"why not C and D , It is not customer managed key , this is SSE- KMS which is managed by AWS","upvote_count":"8","timestamp":"1635207060.0","comment_id":"435289"},{"timestamp":"1709083080.0","comment_id":"1161169","poster":"Raphaello","upvote_count":"1","content":"Selected Answer: AB\nIn fact all of KMS 3 actions, Encrypt, Decrypt, and GenerateDataKey, are required for CloudTrail to use KMS key. \n-----\nRequired KMS key policy elements for trails\n*Enable CloudTrail log encrypt permissions. See Granting encrypt permissions.\n*Enable CloudTrail log decrypt permissions. See Granting decrypt permissions. If you are using an existing S3 bucket with an S3 Bucket Key, kms:Decrypt permissions are required to create or update a trail with SSE-KMS encryption enabled.\n*Enable CloudTrail to describe KMS key properties. See Enable CloudTrail to describe KMS key \n-----\nReference: https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html\n\nBut again, option D is correct, cause without S3 bucket policy permission to put object that will not work.\n\nA question requesting 2 correct answers, and provides 3! Nice!"},{"content":"Selected Answer: BD\nThe CMK key policy does not allow CloudTrail to make GenerateDatakey API calls against the key.\nThe S3 bucket policy does not allow CloudTrail to make PutObject API calls against a folder created for the Organizations trail.","comment_id":"1043299","timestamp":"1697275320.0","poster":"Passexam4sure_com","upvote_count":"1"},{"comment_id":"1042896","upvote_count":"1","timestamp":"1697222340.0","poster":"pupsik","content":"Selected Answer: CE\nCloudTrail operations are performed via service linked role, therefore we need to ensure those roles across all accounts have necessary permissions. https://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-trail-organization.html"},{"poster":"Joeylee","comment_id":"1018353","comments":[{"poster":"Raphaello","upvote_count":"1","timestamp":"1709083200.0","content":"Have you missed this \"WS KMS managed keys (SSE-KMS) for the log files\" in the question?","comment_id":"1161172"}],"content":"Selected Answer: CD\nAWS managed key policy is fixed","upvote_count":"1","timestamp":"1695780420.0"},{"comment_id":"920849","upvote_count":"2","poster":"Urameshi","timestamp":"1686501780.0","content":"Selected Answer: BD\nOption D is more obvious, but I'm going with option B because of this: https://docs.aws.amazon.com/kms/latest/developerguide/services-cloudtrail.html\n\nThe question: \"the engineer noticed that logs recorded by the new trail were not delivered to the bucket.\"\n\nLink: \"Each time CloudTrail puts a log file into your S3 bucket, Amazon S3 sends a GenerateDataKey request to AWS KMS on behalf of CloudTrail.\""},{"comments":[{"timestamp":"1685149800.0","comment_id":"907682","poster":"pal40sg","upvote_count":"1","comments":[{"content":"Agree, but D is definitely needed. Between A nd B I choose B for the following reason, see \"Granting encrypt permissions, Example Allow CloudTrail to encrypt logs on behalf of specific accounts\" in https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html#required-kms-key-policy-trails","timestamp":"1689781440.0","upvote_count":"1","poster":"captainpike","comment_id":"956780"}],"content":"A. The CMK key policy does not allow CloudTrail to make encrypt and decrypt API calls against the key.\nB. The CMK key policy does not allow CloudTrail to make GenerateDataKey API calls against the key.\n\nBoth factors A and B can cause the issue. CloudTrail requires permission to encrypt and decrypt the log files using the specified AWS KMS CMK (Factor A). Additionally, it needs permission to generate a data encryption key (DEK) for encrypting the log files using the GenerateDataKey API call (Factor B)."}],"timestamp":"1685149680.0","poster":"pal40sg","comment_id":"907681","upvote_count":"3","content":"Selected Answer: AD\nA. The CMK key policy does not allow CloudTrail to make encrypt and decrypt API calls against the key: To enable server-side encryption with AWS KMS managed keys (SSE-KMS), the CloudTrail service needs permission to encrypt and decrypt the log files using the specified AWS KMS CMK. If the key policy does not allow CloudTrail to perform these operations, it will result in logs not being delivered to the S3 bucket.\n\nD. The S3 bucket policy does not allow CloudTrail to make PutObject API calls against a folder created for the Organizations trail: The S3 bucket policy controls access to the S3 bucket. If the bucket policy does not grant CloudTrail the necessary permissions to perform the PutObject API calls to the specific folder created for the Organizations trail, it will prevent the logs from being delivered to the bucket."},{"content":"Still confused after going through the comments why not C & D?","timestamp":"1674551820.0","comment_id":"786342","poster":"arpgaur","upvote_count":"2"},{"upvote_count":"1","content":"Selected Answer: BD\nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html","poster":"sakibmas","comment_id":"762690","timestamp":"1672499820.0"},{"poster":"Root_Access","comment_id":"660599","upvote_count":"1","content":"Selected Answer: BD\nCloudTrail needs explicit permission to use the KMS key to encrypt logs on behalf of specific accounts. \nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html\n\nBecause you are creating a new trail you need to modify bucket policy to allow cloudtrail write to s3.\nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-s3-bucket-policy-for-cloudtrail.html","timestamp":"1662418080.0"},{"timestamp":"1659732780.0","comment_id":"643091","content":"Selected Answer: AB\nI go for A and B. Option D says \"...folder created for the Organizations trail.\"and the question mention to use the same bucket, so this does not apply. On top of it, Encrypted and Decripted permission is also necessary.","upvote_count":"1","poster":"dcasabona"},{"timestamp":"1645484340.0","comment_id":"553330","poster":"ideoignus","upvote_count":"1","content":"Selected Answer: BD\nB & D \nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html"},{"upvote_count":"1","comment_id":"480591","timestamp":"1637230620.0","content":"B & D \nB - \"If you are using an existing S3 bucket with an S3 Bucket Key, CloudTrail must be allowed permission in the key policy to use the AWS KMS actions GenerateDataKey and DescribeKey. If cloudtrail.amazonaws.com is not granted those permissions in the key policy, you cannot create or update a trail.\" \nReference: Note in https://docs.aws.amazon.com/awscloudtrail/latest/userguide/encrypting-cloudtrail-log-files-with-aws-kms.html\nD - obviously needs S3 bucket policy to allow PutObject call","poster":"NivNZ"},{"timestamp":"1635430800.0","upvote_count":"1","poster":"robbyyy","content":"I think is B,D\nB-If you chose Use existing S3 bucket, specify a bucket in Trail log bucket name, or choose Browse to choose a bucket. The bucket policy must grant CloudTrail permission to write to it. For information about manually editing the bucket policy\nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-an-organizational-trail-in-the-console.html\nD-\nhttps://docs.aws.amazon.com/zh_tw/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html#create-kms-key-policy-for-cloudtrail-encrypt","comment_id":"442286"},{"upvote_count":"1","timestamp":"1635120840.0","poster":"Kdosec","content":"Hi Guy, I am still not clear why the point \"However, the engineer noticed that logs recorded by the new trail were not delivered to the bucket.\" is related to CMK policy ? if a log record not delivered to the S3 bucket, it should be a S3 policy or IAM policy, so I can't see any sense to select B.","comment_id":"404437","comments":[{"poster":"babaseun","content":"S3 sends a GenerateDataKey request to AWS KMS on behalf of CloudTrail","upvote_count":"1","timestamp":"1635132000.0","comment_id":"406537"}]},{"upvote_count":"2","content":"B - OK - CMK policy statement:\n{ \n \"Effect\": \"Allow\",\n \"Principal\": {\n \"Service\": \"cloudtrail.amazonaws.com\"\n },\n \"Action\": \"kms:GenerateDataKey*\",\n \"Resource\": \"*\",\n \"Condition\": {\n \"StringLike\": {\n \"kms:EncryptionContext:aws:cloudtrail:arn\": [\n \"arn:aws:cloudtrail:*:111111111111:trail/*\",\n \"arn:aws:cloudtrail:*:222222222222:trail/*\"\n ]\n }\n }\n}\nD - OK - https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-set-bucket-policy-for-multiple-accounts.html","timestamp":"1635002520.0","poster":"DerekKey","comment_id":"386190"},{"content":"B, D\n\nB- A centralized new CMK has been used, so its policy need to be checked.\nSee https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html#create-kms-key-policy-for-cloudtrail-encrypt\n\nD- \"If you want to create or modify an Amazon S3 bucket to receive the log files for an organization trail, you must further modify the bucket policy. \"\nhttps://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-s3-bucket-policy-for-cloudtrail.html\n\nOther options:\nA- Decrypt is needed for retrieval but not needed for trail storage.\nC- IAM role for organization trail is service-linked role which is automatically created. So dont need to check this.\n\"You don't need to manually create a service-linked role. When you create an organization trail in the AWS Management Console, the AWS CLI, or the AWS API, CloudTrail creates the service-linked role for you.\"\nE - Same as C.","timestamp":"1634120460.0","comment_id":"366841","poster":"Daniel76","upvote_count":"4"},{"poster":"argol","upvote_count":"2","content":"Key policy needs to have a permission to create the DataKey via API call\nso B/D are more accurate to me","timestamp":"1633853820.0","comment_id":"345526"},{"poster":"Huy","upvote_count":"2","comment_id":"344077","content":"This is Organization trail. https://docs.aws.amazon.com/awscloudtrail/latest/userguide/creating-trail-organization.html CloudTrail will use a ServiceRole and this question is about the Role of Organization Trail. I think C&E is correct.","timestamp":"1633447440.0"},{"content":"B. & D.","comment_id":"317849","timestamp":"1633440780.0","upvote_count":"3","poster":"cldy"},{"poster":"[Removed]","timestamp":"1633151040.0","comment_id":"317553","upvote_count":"3","content":"A and D: https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html"},{"content":"B and D.\n\nThe key policy will need to allow CloudTrail to GenerateDataKeys in order to encrypt logs. Also, the S3 bucket policy should be checked to make sure that cloudtrail can put logs.","comment_id":"313665","poster":"DayQuil","upvote_count":"4","timestamp":"1632790680.0"},{"comment_id":"313540","poster":"viestner","upvote_count":"2","timestamp":"1632493740.0","content":"A.D agree"}],"question_id":160,"exam_id":29,"answer_description":"","answer":"BD","topic":"1","question_images":[],"answer_ET":"BD","timestamp":"2021-03-17 20:07:00"}],"exam":{"isMCOnly":false,"id":29,"numberOfQuestions":509,"isBeta":false,"lastUpdated":"11 Apr 2025","name":"AWS Certified Security - Specialty","provider":"Amazon","isImplemented":true},"currentPage":32},"__N_SSP":true}