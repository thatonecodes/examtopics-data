{"pageProps":{"questions":[{"id":"LM4O9cz378KwKHNJa04x","question_text":"A company has an application that writes files to an Amazon S3 bucket. Whenever there is a new file, an S3 notification event invokes an AWS Lambda function to process the file. The Lambda function code works as expected. However, when a developer checks the Lambda function logs, the developer finds that multiple invocations occur for every file.\nWhat is causing the duplicate entries?","answer_images":[],"question_images":[],"choices":{"D":"The application stopped intermittently and then resumed, splitting the logs into multiple smaller files.","C":"Amazon S3 is delivering the same event multiple times.","A":"The S3 bucket name is incorrectly specified in the application and is targeting another S3 bucket.","B":"The Lambda function did not run correctly, and Lambda retried the invocation with a delay."},"exam_id":25,"discussion":[{"timestamp":"1664280720.0","poster":"AulaitQM","comments":[{"comment_id":"693040","content":"altough indeed the at least once suggest S3 is possibly triggering multiple times for one event (which supports C) the following troubleshooting is only pointing to the retries (supports B): https://aws.amazon.com/premiumsupport/knowledge-center/lambda-function-duplicate-invocations/","comments":[{"poster":"raaja090","content":"Please note multiple invocation occurs for every file.","timestamp":"1692943020.0","comment_id":"989701","upvote_count":"2"}],"upvote_count":"1","poster":"tbhtp","timestamp":"1665576000.0"},{"upvote_count":"1","comment_id":"1021444","content":"D. Application works intermittently, therefore Lambda will invoke every time app start after it was stopped. Logs were split into multiple smaller files, each file would contain different log entries rather than duplicate entries, because for each new App start each time will new log file.","poster":"dimon_millioner","timestamp":"1696076100.0"}],"content":"Selected Answer: B\nI vote B, although I agree that the question clearly states that the code works correctly. It cannot be A, because if the files are being written to the wrong bucket then the lambda wouldn't trigger even once. C assumes an underlying issue with AWS, which although it could happen, it is unlikely. D makes no sense.","upvote_count":"11","comment_id":"680731"},{"comment_id":"1015642","upvote_count":"5","timestamp":"1695548280.0","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html\n\"Amazon S3 event notifications are designed to be delivered at least once.\"","poster":"kaes"},{"comment_id":"1360134","upvote_count":"1","timestamp":"1740230520.0","content":"Selected Answer: C\nThe correct answer is C. Amazon S3 is delivering the same event multiple times.\n\nExplanation:\n • At-Least-Once Delivery: Amazon S3 notifications follow an at-least-once delivery model, which means that each event may be delivered more than once. This can result in multiple invocations of your Lambda function for a single file.\n • Idempotency: Because of this behavior, it’s recommended to design your Lambda function to be idempotent (able to handle duplicate events without adverse effects).\n\nThus, even if your Lambda function code works correctly, S3 may still send duplicate notifications, leading to multiple invocations.","poster":"Milan_p"},{"poster":"Sinthu_62024","comment_id":"1333623","timestamp":"1735491780.0","upvote_count":"1","content":"Selected Answer: C\nThe question explicitly states that the Lambda function code works as expected, ruling out Lambda retries due to function errors. \nhttps://aws.amazon.com/premiumsupport/knowledge-center/lambda-function-duplicate-invocations/ \nThe duplicate invocations are expected behavior from Amazon S3's event notification system, as highlighted in the article. Hence, Option C is the correct answer."},{"timestamp":"1734500580.0","comments":[{"timestamp":"1734500640.0","upvote_count":"1","comment_id":"1328277","content":"B) Eliminated - If the Lambda function fails, it is retried by default. However, in this scenario, the function works as expected. The issue is not caused by retries but by S3 delivering duplicate events.","poster":"sumanshu","comments":[{"timestamp":"1734500640.0","comment_id":"1328278","upvote_count":"1","content":"D) Eliminated - This explanation pertains to logging issues but does not relate to the duplicate invocations of the Lambda function.","poster":"sumanshu"}]}],"comment_id":"1328276","content":"Selected Answer: C\nA) Eliminated - If this were the case, you would see logs indicating a mismatch between the expected and actual bucket name. However, the issue is about duplicate invocations, not a misconfiguration of the bucket.","poster":"sumanshu","upvote_count":"1"},{"poster":"ma9_panchal","timestamp":"1733123880.0","upvote_count":"1","content":"Selected Answer: C\nI vote C. AWS Lambda retries failed invocations, but these retries would appear in the logs only if the function explicitly failed but in the question it's mentioned that the Lambda function works as expected","comment_id":"1320820"},{"timestamp":"1728474180.0","comments":[{"content":"I agree that this is a contradiction, but C would imply an error in AWS, which is very unlikely.","poster":"JonasKahnwald","timestamp":"1731407580.0","comment_id":"1310524","upvote_count":"1"}],"content":"Selected Answer: C\nIs should be C as question states that no error in lambda","poster":"ayushpantpp","upvote_count":"1","comment_id":"1295122"},{"comment_id":"1251838","poster":"itsonlyjit1990","upvote_count":"1","timestamp":"1721492520.0","content":"Why not A? If wrong S3 bucket is mentioned where somehow same file is being inserted multiple times and as a result that is coming in the log."},{"timestamp":"1721296440.0","poster":"ics_911","content":"Selected Answer: C\nIf the lambda function did not run correctly and lambda retried the invocation as option B stated, this would typically be reflected in the function's error log or metrics. The question states that \"the function code works as expected.\"","comments":[],"upvote_count":"1","comment_id":"1250289"},{"comment_id":"1240516","content":"Answer is C. Now a days so much trust issue is present that instead of confirming that the lambda function works as expected people still don't believe this and still think the option B.","upvote_count":"2","timestamp":"1719892440.0","poster":"itsonlyjit1990"},{"upvote_count":"1","comment_id":"1021446","content":"Selected Answer: D\nD. Application works intermittently, therefore Lambda will invoke every time app start after it was stopped. Logs were split into multiple smaller files, each file would contain different log entries, because for each new App start each time will new log file.","poster":"dimon_millioner","timestamp":"1696076220.0"},{"comment_id":"988952","timestamp":"1692862200.0","content":"Selected Answer: B\nFor me B is correct. C cannot be as if we have same event delivered multiple times we will a different lambda execution (ID) for each events. Different executions goes into different CloudWatch log streams, while retries hold the same execution ID and goes in the same CW log streams","upvote_count":"2","poster":"ninomfr64"},{"content":"Selected Answer: C\nAs per the aws documentation, it is specified that S3 event notification are designed to deliver atleast once which means it can deliver more than once:\n\nAws Ref: https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html\nStackOverflow: https://stackoverflow.com/questions/56772299/s3-notification-creates-multiple-events","upvote_count":"4","timestamp":"1688824140.0","comment_id":"946526","poster":"MalayShah"},{"timestamp":"1687952820.0","upvote_count":"1","poster":"rcaliandro","comment_id":"936602","content":"Selected Answer: B\nB is for sure the correct answer. If a call to a lambda function fails the function will be executed other two times with a delay (that's why we can find 2 or 3 logs with the same ID). Furthermore, if the function throttles three times then it is possible to configure a DLQ to debug and see what's happen for that specific event"},{"poster":"Syre","content":"Selected Answer: C\nThe answer here has to be C guys, it’s the most probable one.","comment_id":"868441","upvote_count":"2","timestamp":"1681308660.0"},{"comment_id":"851990","content":"Selected Answer: C\nOption A is less likely because if the bucket name was incorrectly specified, the Lambda function would not be invoked at all.\n\nOption B is also less likely because if the Lambda function did not run correctly, it would not be invoked at all, and there would be no logs generated.\n\nOption D is not likely because if the logs were split into multiple smaller files, each file would contain different log entries rather than duplicate entries.","upvote_count":"1","poster":"KDennisss","timestamp":"1679912460.0"},{"timestamp":"1678976400.0","poster":"captainpike","content":"C.\n- Lamda has to be idempotent (likely the question is trying to get to this point) https://aws.amazon.com/premiumsupport/knowledge-center/lambda-function-duplicate-invocations/ suggests Lamba should handle duplicated invocation; https://aws.amazon.com/premiumsupport/knowledge-center/lambda-function-idempotent/\nNot B:\nIt does not matter if the code works or does not work correctly. The invocation of lambda would always happens no matter how good or bad the lambda code is. That implies that something is invoking lambda multiple times.","comment_id":"841042","upvote_count":"2"},{"timestamp":"1677525720.0","upvote_count":"2","content":"Selected Answer: C\nOption C is the correct answer for this scenario. The duplicate entries are being caused by Amazon S3 delivering the same S3 notification event multiple times. S3 notification events are not guaranteed to be delivered only once, and it is possible for events to be duplicated or delivered out of order. This can occur due to network issues, processing delays, or other factors.","comment_id":"824070","poster":"sebasbonilla"},{"poster":"clarksu","comment_id":"822109","timestamp":"1677393540.0","content":"Selected Answer: B\nThere is NO conflict between 'Multi invocations for EVERY FILE' & ' The Lambda function code works as expected'.\n\n' Works as expected' does not imply that NO error caught and being backfilled.\n\nIt could be = the Lambda code works but it requires multiple times of execution to finish a file(every file).\n\nIt rings a bell on ASYNC processing , thus I choose B.","upvote_count":"1"},{"content":"Why most answers go with B despite that the question clearly states that \"The Lambda function code works as expected\"\n\nI go with C, here is what ChatGPT thinks \n\nWhen an S3 bucket has a large number of objects, S3 may send multiple S3 event notifications for the same object, especially when the object is uploaded or modified quickly. This is because S3 is designed to provide high durability and availability, and it ensures that all event notifications are delivered. However, this can lead to duplicate event notifications being received by the Lambda function.","timestamp":"1677099900.0","upvote_count":"2","comment_id":"818408","comments":[{"upvote_count":"1","comment_id":"1024845","poster":"sweetheatmn","content":"I'm revisiting the question preparing for the exam and think my original reply is just dumb. Do not depend on ChatGPT, it sometimes gives made-up wrong replies.","timestamp":"1696427100.0"},{"comment_id":"820554","timestamp":"1677247140.0","upvote_count":"1","content":"ask you AI friend for reference, If I were you I would not believe it without one","poster":"Groot2"},{"upvote_count":"1","comment_id":"889204","poster":"Rpod","content":"Hmmm did chatGpt learn something new ? This is is what it says today - The most likely cause of the duplicate invocations is that the Lambda function did not run correctly, and AWS Lambda is automatically retrying the invocation. When a Lambda function returns an error, Lambda automatically retries the invocation twice, with delays between retries. If the function continues to return an error, the invocation is not retried further. The developer can check the Lambda function's error handling and logging to diagnose and resolve the issue. Additionally, the developer can configure the function's concurrency limit to avoid invoking the function multiple times concurrently, and use a dead-letter queue to capture events that are not processed successfully.","timestamp":"1683181140.0"}],"poster":"sweetheatmn"},{"poster":"MMaquis","comment_id":"810720","upvote_count":"3","timestamp":"1676555820.0","content":"Selected Answer: B\nThe Lambda error handler is not implemented properly and the function retries the execution. You should not rely on ChatGPT's answer."},{"content":"I asked the ChatGPT, it says the answer is posibily more like C\n\nI think the key point is that the question tells us :\n\"The Lambda function code works as expected, ...\"\n\nbut answer B shows \n\"The Lambda function did not run correctly, ...\"","comment_id":"809735","timestamp":"1676478600.0","upvote_count":"1","poster":"tonychoucc"},{"timestamp":"1676393220.0","upvote_count":"1","comment_id":"808588","content":"For me Correct Answer is C. Amazon S3 is delivering the same event multiple times. \n\nThe duplicate entries are most likely being caused by Amazon S3 delivering the same S3 notification event multiple times. This can happen if the S3 bucket has multiple event notifications configured, or if there is a delay in the delivery of the event notification, causing S3 to retry the notification.","poster":"may2021_r"},{"comment_id":"797808","content":"Definitely not A. It says Duplicate entries are in the logs then it has to be somewhere that invocation was performed more than once ~ retrying. Hence option B. And on top of it if there is another S3 bucket specified then there shouldn't be even a single invocation entry in the logs.","poster":"Jay1299","timestamp":"1675505520.0","upvote_count":"1"},{"timestamp":"1673489160.0","poster":"whenthan","upvote_count":"1","comment_id":"773040","content":"ans : B\nhttps://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-errors"},{"poster":"sichilam","upvote_count":"2","content":"B is correct","comment_id":"769348","timestamp":"1673178660.0"},{"poster":"gpit","upvote_count":"1","comment_id":"728549","content":"Selected Answer: B\nB. because event if code worked correctly for small S3 file, lambda may time out for big S3 file, causing multiple lambda retries. https://docs.aws.amazon.com/lambda/latest/dg/invocation-retries.html","timestamp":"1669578780.0"},{"content":"Selected Answer: C\nC because events is at least once\n\nit's not A because if it was the wrong bucket you wouldn't be able to associate with the objects\n\nit's not B because it says the lambda works properly","comments":[{"comment_id":"762072","poster":"tieyua","content":"Excellent detailed detective work! Although work properly could mean work properly many times, and log shows \"multiple invocations occur for every file\" ... Bottom line, it cannot be Amazon's fault, especially not during exam :-)","timestamp":"1672414680.0","upvote_count":"1"},{"content":"\"If the sequence key does match between the events, then the export process is uploading the object once however Amazon S3 generates duplicate events and maps the events with same sequence key resulting in multiple Lambda invocation. This is rare condition which happens due to retry nature of Amazon S3 service and the workaround is to store and compare the sequencer key values to check for duplicates as each event notification is processed.\"\n\nhttps://stackoverflow.com/questions/56772299/s3-notification-creates-multiple-events","comment_id":"720737","upvote_count":"1","poster":"dark_cherrymon","timestamp":"1668709380.0"}],"timestamp":"1668708900.0","comment_id":"720727","upvote_count":"3","poster":"dark_cherrymon"},{"comments":[{"content":"But in that case the lambda won't be called at all.","upvote_count":"1","timestamp":"1665675000.0","poster":"SuperPiski","comment_id":"694038"}],"content":"Why b is most voted, it clearly states lambda is working as expected.it should be A","poster":"AK34180","upvote_count":"1","comment_id":"679896","timestamp":"1664206440.0"},{"poster":"warriorYup","comment_id":"679577","content":"Selected Answer: B\nI too thought its C but as per the doc it doesn't send twice\nPlease have a look here https://stackoverflow.com/a/40196853","upvote_count":"2","timestamp":"1664184360.0"},{"timestamp":"1663677840.0","poster":"Spamuel","content":"Selected Answer: B\nB - The key phrase here is \"multiple invocations occur for every file\". For it to occur every time, this means that that Lambda is not functioning correctly, which causes it to be re-invoked.","comment_id":"674157","upvote_count":"3"},{"poster":"guptasac","upvote_count":"2","comments":[{"poster":"Arnaud92","content":"True but here multiple invocations occur for EVERY file. If it was due to S3 sending the event multiple times, it would only rarely occur. This is more likely to be the lambda function timing out on the firsts invocations for every file, and thus being re-invocated and successfully completing after retrying","upvote_count":"1","comment_id":"693681","timestamp":"1665645000.0"}],"timestamp":"1662871860.0","comment_id":"665819","content":"C\nIn below page, if you refer - \"Amazon S3 event notifications are designed to be delivered at least once.\" That means possibility is same event notified multiple times.\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/NotificationHowTo.html"},{"comments":[{"poster":"sidvic","content":"but the questions says that \"The Lambda function code works as expected\". Why should AWS Lambda fail if the question says it is working correctly?","upvote_count":"2","timestamp":"1662445800.0","comment_id":"660877"}],"comment_id":"660154","content":"Selected Answer: B\nShould be B","upvote_count":"2","poster":"PVR","timestamp":"1662379800.0"},{"timestamp":"1662274380.0","comment_id":"659015","poster":"sidvic","upvote_count":"1","content":"Selected Answer: A\nFor me the answer is A, as the question says that \"the developer finds that multiple invocations occur for every file\""},{"upvote_count":"2","poster":"Vinafec","timestamp":"1662135180.0","comment_id":"657588","content":"Selected Answer: B\nShould be B\n\nhttps://docs.aws.amazon.com/lambda/latest/dg/invocation-retries.html"},{"timestamp":"1662037560.0","upvote_count":"3","poster":"Spamuel","content":"Selected Answer: C\nI believe the answer may be C, as the S3 event notification could be using a standard SQS queue instead of a FIFO queue, which may lead to duplicate events.\n\nhttps://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues-exactly-once-processing.html","comment_id":"656267"},{"comment_id":"655653","timestamp":"1661995140.0","content":"Nothing of them has sense for me. I think it could be that lambda is not having enough time to process data. So ,even the code is working ok, sometimes timeout is reached before execution ends and it would seem like multiple events are delivered.\n\nSome can explain what and why is the correct answer?","upvote_count":"3","poster":"JAMG54"}],"unix_timestamp":1661995140,"answer":"B","question_id":406,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/78854-exam-aws-certified-developer-associate-topic-1-question-65/","topic":"1","timestamp":"2022-09-01 03:19:00","answer_ET":"B","answer_description":"","answers_community":["B (50%)","C (46%)","2%"]},{"id":"I6D9XH7NwM3NnblKtSqe","answer_ET":"D","question_images":[],"timestamp":"2022-09-01 15:11:00","exam_id":25,"question_text":"A developer needs to use the AWS CLI on an on-premises development server temporarily to access AWS services while performing maintenance. The developer needs to authenticate to AWS with their identity for several hours.\nWhat is the MOST secure way to call AWS CLI commands with the developer's IAM identity?","answers_community":["D (83%)","B (17%)"],"topic":"1","question_id":407,"choices":{"B":"Run the aws configure CLI command. Provide the developer's IAM access key ID and secret access key.","D":"Run the get-session-token CLI command with the developer's IAM user. Use the returned credentials to call the CLI","C":"Specify the developer's IAM profile as a parameter for each CLI command.","A":"Specify the developer's IAM access key ID and secret access key as parameters for each CLI command"},"url":"https://www.examtopics.com/discussions/amazon/view/79058-exam-aws-certified-developer-associate-topic-1-question-66/","isMC":true,"discussion":[{"upvote_count":"6","content":"Selected Answer: D\nD is correct as it allows for temporary credentials with a set time duration.\n\nhttps://docs.aws.amazon.com/cli/latest/reference/sts/get-session-token.html","comments":[{"comment_id":"657133","upvote_count":"1","poster":"Sirikou_0922","comments":[{"comment_id":"657889","poster":"m_t_kd","timestamp":"1662160020.0","upvote_count":"4","content":"temporary access"}],"timestamp":"1662104580.0","content":"Can u tell me why not B.?"}],"timestamp":"1662037860.0","poster":"Spamuel","comment_id":"656270"},{"poster":"sumanshu","comment_id":"1328279","content":"Selected Answer: D\nD) Correct - The get-session-token command is part of AWS Security Token Service (STS). It provides temporary security credentials that are valid for a short duration (by default, 12 hours for IAM users) and consist of:\n\nAccess key\nSecret access key\nSession token","comments":[{"content":"A) Eliminated - Passing credentials in command-line parameters can expose them to system logs","comment_id":"1328280","poster":"sumanshu","upvote_count":"1","comments":[{"poster":"sumanshu","content":"B) Eliminated - This stores long-term credentials on the server in plain text in the ~/.aws/credentials file. If the server is shared or compromised, these credentials can be stolen.","comment_id":"1328281","upvote_count":"2","timestamp":"1734500820.0"}],"timestamp":"1734500820.0"}],"timestamp":"1734500760.0","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: B\n\"The developer needs to authenticate to AWS with their identity\"\nAltough temporary credentials with \"get-session-token\" are most secure way to obtain extended privilages, it's safer to assume dev account already has enough access to get a job done, than that there is additional role with more privilages that can be fetched via this command. Option D is missing details","comments":[{"comment_id":"1310530","timestamp":"1731408060.0","upvote_count":"1","content":"It requires storing long-term credentials on the development server, which is not ideal for temporary access.","poster":"JonasKahnwald"}],"timestamp":"1701871020.0","comment_id":"1089399","poster":"xdkonorek2"},{"upvote_count":"1","comment_id":"936606","timestamp":"1687953000.0","content":"Selected Answer: D\nEven if A and B are both valid options, the most secure way to use the aws cli on premisis is by calling get-session-token to obtain temporary credentials. So, D is the correct answer","poster":"rcaliandro","comments":[{"timestamp":"1731408120.0","upvote_count":"1","comment_id":"1310531","content":"A and B are not valid for me, as they both require storing sensitive data.","poster":"JonasKahnwald"}]},{"poster":"gaddour_med","upvote_count":"2","timestamp":"1675070580.0","comment_id":"792593","content":"T think the correct answer is C. use profile for each developper. -- profile option is used to replace adding access_key and token for each cli command. get-acess_token is required only for users with MFA enabled and for calling some API operation that require MFA authntificationy.\nMFA-enabled IAM users would need to call GetSessionToken and submit an MFA code that is associated with their MFA device. Using the temporary security credentials that are returned from the call, IAM users can then make programmatic calls to API operations that require MFA authentication"},{"content":"D is getaccesstoken","timestamp":"1673178780.0","comment_id":"769349","poster":"sichilam","upvote_count":"1"},{"comment_id":"720857","content":"i was going for A, but it seems A and D are the same thing just D is temporary credientials","upvote_count":"1","poster":"dark_cherrymon","timestamp":"1668718740.0"},{"upvote_count":"2","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html\n\nAdded layer of security by ensuring stale keys are not reused","comments":[{"content":"I’ll agree with B if it’s not “most secure” implementation","timestamp":"1665233400.0","poster":"habros","upvote_count":"1","comment_id":"689312"}],"comment_id":"689310","timestamp":"1665233340.0","poster":"habros"}],"answer":"D","answer_description":"","answer_images":[],"unix_timestamp":1662037860},{"id":"K6Bh6zN4uObpQngIKCiF","answer_images":[],"answer_ET":"D","unix_timestamp":1640959140,"answers_community":["D (100%)"],"choices":{"D":"Enable AWS X-Ray tracing for the function. View the traces from the X-Ray service.","B":"Place an Application Load Balancer (ALB) in front of the two DynamoDB tables. Inspect the ALB logs","C":"Limit Lambda to no more than five concurrent invocations. Monitor from the Lambda console.","A":"Add DynamoDB as an event source to the Lambda function. View the performance with Amazon CloudWatch metrics"},"url":"https://www.examtopics.com/discussions/amazon/view/69143-exam-aws-certified-developer-associate-topic-1-question-67/","question_id":408,"timestamp":"2021-12-31 14:59:00","answer_description":"","exam_id":25,"question_images":[],"question_text":"An AWS Lambda function accesses two Amazon DynamoDB tables. A developer wants to improve the performance of the Lambda function by identifying bottlenecks in the function.\nHow can the developer inspect the timing of the DynamoDB API calls?","discussion":[{"timestamp":"1640959140.0","poster":"waqas1992","content":"D - Enable X-ray for Serverless application to view the map and find the traces for each segments","comment_id":"514105","upvote_count":"11"},{"poster":"sumanshu","timestamp":"1734500940.0","comment_id":"1328282","content":"Selected Answer: D\nD) Correct - AWS X-Ray is a service that helps developers analyze and debug distributed applications","upvote_count":"1"},{"content":"Selected Answer: D\nD is right","upvote_count":"1","timestamp":"1697191860.0","comment_id":"1042545","poster":"Lucas_Luke"},{"upvote_count":"1","comment_id":"936640","poster":"rcaliandro","content":"Selected Answer: D\nD is the only option for monitor apps and how functions interact with tables","timestamp":"1687954920.0"},{"timestamp":"1681440240.0","poster":"smiles88","upvote_count":"1","content":"D is right","comment_id":"869927"},{"comment_id":"769357","content":"D it is","poster":"sichilam","timestamp":"1673179320.0","upvote_count":"1"},{"upvote_count":"1","timestamp":"1668718980.0","comment_id":"720859","content":"Selected Answer: D\nD easy","poster":"dark_cherrymon"},{"comment_id":"670537","poster":"trungducng2910","timestamp":"1663309740.0","content":"Selected Answer: D\nD is correct","upvote_count":"1"},{"content":"\"You can use AWS X-Ray to visualize the components of your application, identify performance bottlenecks, and troubleshoot requests that resulted in an error.\"","timestamp":"1650087420.0","upvote_count":"3","poster":"SpeedRunner","comment_id":"586628"},{"poster":"josh119891","timestamp":"1642215480.0","upvote_count":"4","comment_id":"523899","content":"inside the function + bottle neck = X-RAY"},{"upvote_count":"3","poster":"denccc","timestamp":"1641203160.0","content":"It's d","comment_id":"515573"},{"content":"Inside the function means X-Ray.","comment_id":"514482","upvote_count":"4","poster":"ADI2608","timestamp":"1641035040.0"}],"topic":"1","answer":"D","isMC":true},{"id":"rmppLOkDIJh37DNynQH8","discussion":[{"upvote_count":"9","timestamp":"1661873460.0","content":"Selected Answer: A\nConfirm a since we can find the attribute in 169.254.169.254/latest/meta-data","comment_id":"654167","poster":"sindra"},{"upvote_count":"1","timestamp":"1734501000.0","content":"Selected Answer: A\nA) Correct - Amazon EC2 instances expose instance metadata, which provides information about the instance, such as its public IPv4 address, instance ID, security groups, and more.","comment_id":"1328283","poster":"sumanshu"},{"timestamp":"1687955040.0","content":"Selected Answer: A\nA for sure, on EC2 instance we have the possibility to get metadata doing a request to the following private linkç http://169.254.169.254/latest/meta-data/","upvote_count":"1","comment_id":"936645","poster":"rcaliandro"},{"content":"A ti si","upvote_count":"1","timestamp":"1673179680.0","poster":"sichilam","comment_id":"769363"},{"comment_id":"720860","poster":"dark_cherrymon","timestamp":"1668718980.0","content":"it's A","upvote_count":"1"},{"poster":"Arnaud92","content":"Selected Answer: A\nIt's A.\n\nInstance meta-data : https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html\nIn them you will find :\n« network/interfaces/macs/mac/public-ipv4s : The public IP address or Elastic IP addresses associated with the interface. There may be multiple IPv4 addresses on an instance. »\n(from https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-categories.html)","comment_id":"693830","upvote_count":"1","timestamp":"1665660420.0"}],"unix_timestamp":1661873460,"question_images":[],"timestamp":"2022-08-30 17:31:00","answer_ET":"A","url":"https://www.examtopics.com/discussions/amazon/view/78414-exam-aws-certified-developer-associate-topic-1-question-68/","question_text":"A developer deployed an application to an Amazon EC2 instance. The application needs to know the public IPv4 address of the instance.\nHow can the application find this information?","topic":"1","isMC":true,"answer_images":[],"answer_description":"","question_id":409,"choices":{"B":"Query the instance user data from http://169.254.169.254/latest/user-data/.","D":"Check the hosts file of the operating system.","A":"Query the instance metadata from http://169.254.169.254/latest/meta-data/.","C":"Query the Amazon Machine Image (AMI) information from http://169.254 169.254/latest/meta-data/ami/."},"answer":"A","answers_community":["A (100%)"],"exam_id":25},{"id":"1eLebLF2BDlx0kKK1cwK","topic":"1","answer_description":"","question_images":[],"question_text":"A developer is designing an AWS Lambda function to perform a maintenance activity. The developer will use Amazon EventBridge (Amazon CloudWatch Events) to invoke the function on an hourly schedule. The developer wants the function to log information at different levels of detail according to the value of a log level variable. The developer must design the function so that the log level can be set without requiring a change to the function code.\nWhich solution will meet these requirements?","exam_id":25,"answer":"B","url":"https://www.examtopics.com/discussions/amazon/view/78851-exam-aws-certified-developer-associate-topic-1-question-69/","answer_ET":"B","isMC":true,"discussion":[{"timestamp":"1662036600.0","poster":"Spamuel","upvote_count":"12","content":"B is correct: https://docs.aws.amazon.com/solutions/latest/operations-conductor/appendix-d.html","comment_id":"656254"},{"comment_id":"1328284","poster":"sumanshu","content":"Selected Answer: B\nB) Correct - Lambda environment variables are a simple and efficient way to pass configuration values, such as a log level, to a function. These variables can be changed without modifying the Lambda function code. The function code can access the environment variables at runtime to determine the log level.","timestamp":"1734501180.0","upvote_count":"1"},{"poster":"Lucas_Luke","comment_id":"1042552","upvote_count":"1","timestamp":"1697192220.0","content":"Selected Answer: B\nB is correct"},{"comment_id":"956393","timestamp":"1689752700.0","upvote_count":"1","poster":"Punit007","content":"B, Is the correct option"},{"timestamp":"1687955160.0","comment_id":"936649","content":"Selected Answer: B\nB, we can set the enviroment variable to specific the log Level. In this way we need only to change the variable rather than the code","upvote_count":"1","poster":"rcaliandro"},{"upvote_count":"1","poster":"MrTee","timestamp":"1682456100.0","comment_id":"880850","content":"Selected Answer: B\nBy setting the log level as an environment variable, the Lambda function can read the value of this variable at runtime and adjust the level of logging accordingly, without the need for a code change. This makes it easier to change the log level without needing to redeploy the function."},{"timestamp":"1682413920.0","content":"Selected Answer: B\nVoted B - because setting somehing as log levels as parameters to the function seems wrong .Parameters should be something to do with function execution","poster":"Rpod","upvote_count":"1","comment_id":"880160"},{"comment_id":"800282","upvote_count":"1","timestamp":"1675717500.0","poster":"ShriniW","content":"Each Lambda function has a LogLevel environment variable. To change the value, you can change only specific microservice Lambda function’s log level.\n\nAns: B"},{"content":"B is correct","comment_id":"769389","timestamp":"1673181000.0","poster":"sichilam","upvote_count":"1"},{"upvote_count":"2","poster":"gpit","comment_id":"728563","content":"Note: \"You define environment variables on the unpublished version of your function. When you publish a version, the environment variables are locked for that version along with other version-specific configuration. \" https://docs.amazonaws.cn/en_us/lambda/latest/dg/configuration-envvars.html","timestamp":"1669580160.0"},{"upvote_count":"1","poster":"dark_cherrymon","timestamp":"1668719160.0","comment_id":"720862","content":"it's B\n\n\"Each Lambda function has a LogLevel environment variable\"\n\nhttps://docs.aws.amazon.com/solutions/latest/operations-conductor/appendix-d.html"},{"comment_id":"717124","timestamp":"1668321900.0","upvote_count":"1","content":"Selected Answer: B\nYou can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that is stored in a function's version-specific configuration. The Lambda runtime makes environment variables available to your code and sets additional environment variables that contain information about the function and invocation request.","poster":"cloud_collector"},{"comment_id":"698978","upvote_count":"2","content":"Selected Answer: B\nI would say B because you don't need to change the Lambda code","timestamp":"1666180080.0","poster":"Norocas"},{"timestamp":"1665661200.0","comment_id":"693840","upvote_count":"2","content":"Selected Answer: B\nI vote B","poster":"Arnaud92"}],"unix_timestamp":1661994780,"question_id":410,"answers_community":["B (100%)"],"answer_images":[],"timestamp":"2022-09-01 03:13:00","choices":{"A":"Add a custom log level parameter for the Lambda function. Set the parameter by using the Lambda console","B":"Set the log level in a Lambda environment variable","C":"Set the log level in the Amazon CloudWatch Logs console.","D":"Add a custom log level parameter for the Lambda function. Set the parameter by using the AWS CLI."}}],"exam":{"lastUpdated":"11 Apr 2025","name":"AWS Certified Developer Associate","id":25,"isBeta":false,"isImplemented":true,"isMCOnly":true,"provider":"Amazon","numberOfQuestions":443},"currentPage":82},"__N_SSP":true}