{"pageProps":{"questions":[{"id":"SRGRFNQcennewq1nmnH5","topic":"1","answer_images":[],"answers_community":["C (67%)","B (33%)"],"choices":{"C":"Create an IAM role for cross-account access allows the SaaS provider's account to assume the role and assign it a policy that allows only the actions required by the SaaS application.","A":"From the AWS Management Console, navigate to the Security Credentials page and retrieve the access and secret key for your account.","D":"Create an IAM role for EC2 instances, assign it a policy that allows only the actions required tor the SaaS application to work, provide the role ARN to the SaaS provider to use when launching their application instances.","B":"Create an IAM user within the enterprise account assign a user policy to the IAM user that allows only the actions required by the SaaS application create a new access and secret key for the user and provide these credentials to the SaaS provider."},"question_images":[],"unix_timestamp":1574379660,"answer_ET":"C","discussion":[{"content":"Answer is C\nYou should not give any credentials to SaaS, because they can give it to the other","timestamp":"1632355440.0","comment_id":"37903","upvote_count":"15","poster":"amog"},{"timestamp":"1730790960.0","poster":"student22","upvote_count":"1","content":"Selected Answer: C\nAnswer: C\nC is more secure than B. Keys can get lost or stolen.","comment_id":"1307234"},{"poster":"amministrazione","comment_id":"1266527","timestamp":"1723735920.0","content":"C. Create an IAM role for cross-account access allows the SaaS provider's account to assume the role and assign it a policy that allows only the actions required by the SaaS application.","upvote_count":"1"},{"comments":[{"timestamp":"1690517460.0","content":"B is NOT the right answer. There is a requirement that \"the credentials used by the SaaS vendor cannot be used by any other third party\". With Role, you can use trust relationship to allow only the SaaS Vendor to assume it. But you cannot prevent the Vendor from leaking the IAM User credentials.\nC is the right answer.","poster":"jack_melvin","comments":[{"content":"Agree. C is correct. \nWith IAM role (unlike IAM User), only the account that is allowed to assume the role can use it. \nAlthough not explicitly mentioned (and for good reasons), it is expected from the architect to know that there is an assumeRole required to permit Trust and allow the role to be assumed by the SAAS.\nWith IAM User approach, it is possible to share the secret key with other parties.","poster":"mnsait","upvote_count":"1","timestamp":"1731391260.0","comment_id":"1310449"}],"upvote_count":"3","comment_id":"965253"}],"timestamp":"1689311940.0","upvote_count":"1","poster":"kondratyevmn","content":"Selected Answer: B\nB - Meet's all of the requirements. \n\nA - make no sense.\nC - no, as SaaS doesn't necessarily has AWS Account, it could be any service in the Internet.\nD - doesn't meet the requirement \"must be controls in place to ensure that the credentials used by the SaaS vendor cannot be used by any other third party.\"","comment_id":"951240"},{"content":"Selected Answer: C\nAnswer is C. for cross-account access.","upvote_count":"2","comment_id":"750400","timestamp":"1671501960.0","poster":"hollie"},{"upvote_count":"1","poster":"davideccc","comment_id":"684281","content":"Selected Answer: C\nthe doubt could be if the SaaS has an AWS account, but this piece of information excludes B\n\"ensure that the credentials used by the SaaS vendor cannot be used by any other third party\"\ni.e. the correct answer is C","timestamp":"1664636100.0"},{"poster":"KengL","timestamp":"1654640760.0","comment_id":"612949","upvote_count":"2","content":"C is mostly correct answer, if there is mention of ExternalID. Still go with C"},{"timestamp":"1650645180.0","content":"Selected Answer: B\nB.\nAs long as there aren't any mentions that a third-party SaaS application has AWS account, C can't be correct! Otherwise it would be C.","poster":"bobsmith2000","comments":[{"comment_id":"612245","upvote_count":"2","content":"It should be C, because B doesn't allow any ec2 actions.\nBut the concerns are the same","timestamp":"1654501380.0","poster":"bobsmith2000"},{"content":"\"ensure that the credentials used by the SaaS vendor cannot be used by any other third party\" this invalidates B. the access key can be used by anyone","comment_id":"684280","upvote_count":"1","poster":"davideccc","timestamp":"1664635980.0"}],"comment_id":"590114","upvote_count":"1"},{"content":"this one is easy, hope I can have it in my exam","comment_id":"488991","timestamp":"1638088920.0","poster":"acloudguru","upvote_count":"1"},{"content":"Answer is C","comment_id":"442752","timestamp":"1635752220.0","upvote_count":"1","poster":"kashi1983"},{"content":"C Correct","timestamp":"1635595680.0","comment_id":"406233","poster":"Akhil254","upvote_count":"1"},{"upvote_count":"1","comment_id":"346723","timestamp":"1635257100.0","content":"Should be C","poster":"01037"},{"timestamp":"1634015520.0","comment_id":"170481","poster":"Bulti","upvote_count":"1","content":"C is correct. Although the question doesn't mention that the SaaS provider is in AWS, the option mentions the use of AWS account by the SaaS provider and therefore C is the right answer."},{"timestamp":"1633964940.0","poster":"RyanGhavidel","content":"B, since the SaaS app does not have an account, it should not be able to assume a role","upvote_count":"2","comment_id":"148518"},{"timestamp":"1633960020.0","upvote_count":"2","content":"Although C looks appropriate but in ques nowhere it is given that saas appn has aws account.","comment_id":"144183","poster":"guptas"},{"content":"C is answer, access keys does not grant use by one third party, IAM role for the ec2 introduce uncommon and complexity on SaaS application (which not likely to change to meet a specific customer), as the SaaS application need to ssh to the target ec2 and call the AWS API.","upvote_count":"2","comment_id":"143871","poster":"fullaws","timestamp":"1633792860.0"},{"timestamp":"1633227300.0","poster":"noisonnoiton","comment_id":"131109","upvote_count":"2","content":"go with C"},{"comment_id":"117915","comments":[{"comment_id":"211019","timestamp":"1635240840.0","upvote_count":"1","poster":"newme","content":"I don't think the question is accurate either.\nBut since it is SaaS, the service provider won't install their software in you EC2 instance, will they?"}],"timestamp":"1633153080.0","poster":"manoj101","upvote_count":"2","content":"D looks correct as for C to work SAAS needs to have account on AWS & it's not mentioned any where."},{"comment_id":"97689","upvote_count":"2","content":"I think it is D, it cannot be C, as the option says \"Cross account Role\", there is no mention of multiple accounts in the question. It cannot be B as it is not the best practice.","timestamp":"1633074540.0","poster":"meenu2225","comments":[{"upvote_count":"1","content":"Correct, C looks better.","poster":"meenu2225","comment_id":"108171","timestamp":"1633142280.0"}]},{"poster":"aandavan","comment_id":"87975","content":"There is nowhere it was mentioned that SaaS runs in AWS.","timestamp":"1633006680.0","upvote_count":"3"},{"content":"Not A and B As access and secret key can be used by any other third party If shared by SaaS application.\nNot D as IAM role for EC2 instance used by half accessing other AWS resources\nYes C as Cross-account access has Principal as part of Trusted Policy.","timestamp":"1632396540.0","poster":"cloudinvader","comment_id":"51627","upvote_count":"2"},{"timestamp":"1632388800.0","content":"C is Correct!","upvote_count":"3","poster":"BillyC","comment_id":"49682"},{"comment_id":"39451","upvote_count":"3","timestamp":"1632377160.0","content":"C seems more correct. A and B both involve either giving the keys or the user able to retrieve the keys which is a no-no.","poster":"ReggieR2"},{"content":"B seems more suitable and aligned with question. Ques didn't state that Saas Vendor uses and account.so cross account access not suitable.","comments":[{"comment_id":"28082","timestamp":"1632347760.0","content":"I will go for C. Comparing to B, option C can provide more control ensuring that the credentials used by the SaaS vendor cannot be used by any other third party.","upvote_count":"4","poster":"tan9"},{"timestamp":"1634788380.0","comments":[{"upvote_count":"1","timestamp":"1650645300.0","content":"Anyone in a SaaS provider's account would be able to assume the role.","poster":"bobsmith2000","comment_id":"590117"}],"poster":"newme","content":"C.\nB doesn't meet the requirement \"ensure that the credentials used by the\nSaaS vendor cannot be used by any other third party.\"","comment_id":"211016","upvote_count":"1"}],"timestamp":"1632157500.0","poster":"Tamili","upvote_count":"3","comment_id":"23458"}],"question_text":"An enterprise wants to use a third-party SaaS application. The SaaS application needs to have access to issue several API commands to discover Amazon EC2 resources running within the enterprise's account The enterprise has internal security policies that require any outside access to their environment must conform to the principles of least privilege and there must be controls in place to ensure that the credentials used by the SaaS vendor cannot be used by any other third party.\nWhich of the following would meet all of these conditions?","url":"https://www.examtopics.com/discussions/amazon/view/8818-exam-aws-certified-solutions-architect-professional-topic-1/","answer":"C","exam_id":32,"question_id":466,"isMC":true,"answer_description":"","timestamp":"2019-11-22 00:41:00"},{"id":"jgnhxP0jvgwU0uFL2DqP","answer_description":"","topic":"1","question_text":"A company must deploy multiple independent instances of an application. The front-end application is internet accessible. However, corporate policy stipulates that the backends are to be isolated from each other and the internet, yet accessible from a centralized administration server. The application setup should be automated to minimize the opportunity for mistakes as new instances are deployed.\nWhich option meets the requirements and MINIMIZES costs?","answer_ET":"C","answers_community":["C (86%)","14%"],"url":"https://www.examtopics.com/discussions/amazon/view/5423-exam-aws-certified-solutions-architect-professional-topic-1/","choices":{"B":"Create each instance of the application IAM roles and resources in separate accounts by using AWS CloudFormation StackSets. Include a VPN connection to the VPN gateway of the central administration server.","D":"Use the parameters of the AWS CloudFormation template to customize the deployment into separate accounts. Include a NAT gateway to allow communication back to the central administration server.","C":"Duplicate the application IAM roles and resources in separate accounts by using a single AWS CloudFormation template. Include VPC peering to connect the VPC of each application instance to a central VPC.","A":"Use an AWS CloudFormation template to create identical IAM roles for each region. Use AWS CloudFormation StackSets to deploy each application instance by using parameters to customize for each instance, and use security groups to isolate each instance while permitting access to the central server."},"question_images":[],"exam_id":32,"isMC":true,"question_id":467,"unix_timestamp":1568866020,"answer":"C","timestamp":"2019-09-19 06:07:00","answer_images":[],"discussion":[{"timestamp":"1632821760.0","comment_id":"42695","upvote_count":"27","content":"Option A is wrong as security groups cannot be used across region. Also security groups may provide an opportunity for mistakes. Inter-region data transfer charges are higher as compared to Intra-region transfer charges. Correct answer is C","poster":"dumma"},{"upvote_count":"11","timestamp":"1633135320.0","comment_id":"62793","content":"should be \"C\" ? IAM role is global so A is incorrect.","comments":[{"comment_id":"175422","comments":[{"timestamp":"1644714060.0","comment_id":"546173","comments":[{"comment_id":"670997","timestamp":"1663348560.0","content":"It says \"identical IAM roles for each region\". Hence I can create role-region1 and role-region2 with the same policies. I think A is correct for the least cost.","comments":[{"comment_id":"1117250","poster":"shammous","timestamp":"1704783180.0","upvote_count":"1","content":"Indeed, but in answer A, the security group won't allow you to provide access from outside the local network, which is why answer A is ruled out. The next best answer is C."}],"poster":"Rocketeer","upvote_count":"2"}],"content":"Answer A sates \"IAM roles for each region\", that is wrong","upvote_count":"2","poster":"RVivek"}],"poster":"Ganfeng","content":"IAM role is global however, not cross account","upvote_count":"2","timestamp":"1634628060.0"}],"poster":"youq"},{"poster":"3a632a3","upvote_count":"1","timestamp":"1704560220.0","content":"Selected Answer: C\nA: wrong as IAM roles are global\nB: wrong as it would require a VPN connection to every account and doesn't specify on-prem\nD: Wrong as it states \"accessible from a centralized admin...\" NAT doesn't allow inbound and would force traffic to the internet.\n\nC: is fine but would have preferred stack sets from the central account","comment_id":"1115317"},{"content":"Selected Answer: B\nI prefer B to C.\n\"corporate policy stipulates that the backends are to be isolated from each other and the internet, yet accessible from a centralized administration server.\" this implies centralized administration server is at on-premise. if the server is in aws, there is no need to emphasize the need of isolating the internet yet accessible from administration server.\nSo C VPC peering is wrong, D NAT is wrong( NAT is used to access outside aws not into aws)","poster":"Jesuisleon","timestamp":"1685837040.0","upvote_count":"1","comment_id":"913979"},{"content":"What a terribly worded question.","timestamp":"1665281760.0","upvote_count":"10","poster":"Jonfernz","comment_id":"689875"},{"content":"Selected Answer: C\nthe answer is C","poster":"Dionenonly","comment_id":"671207","timestamp":"1663381800.0","upvote_count":"1"},{"timestamp":"1663348740.0","upvote_count":"1","content":"A\nIt says \"identical IAM roles for each region\". Hence I can create role-region1 and role-region2 with the same policies.\nSecurity groups can be used to isolate the instances\nA is much cheaper compared to C","comment_id":"671002","poster":"Rocketeer"},{"comment_id":"565682","upvote_count":"3","timestamp":"1647019500.0","poster":"asfsdfsdf","content":"The questions asks to minimize the cost and provide access to a central server.\nLets eliminate:\nA - will not create any real connection outside the VPC - No IGW is allowed and no VPN/DC/Peering so...\nB- Can work correctly however VPN connection is paid by the hour per connection + Egress data\nD - cant be used as no IGW is allowed so NAT GW cant be created\nSo answer is:\nC - Can work if the administration instance is in AWS - peering is free only data out is payed\nIf the question stated the admin server must be on premise then B was the answer regardless the cost"},{"timestamp":"1638944040.0","upvote_count":"1","poster":"cldy","comment_id":"496578","content":"C. Duplicate the application IAM roles and resources in separate accounts by using a single AWS CloudFormation template. Include VPC peering to connect the VPC of each application instance to a central VPC."},{"content":"I agree with C as correct","timestamp":"1638658440.0","upvote_count":"3","poster":"AzureDP900","comment_id":"494007"},{"poster":"acloudguru","content":"Selected Answer: C\nThe issue with option A is that IAM roles are global and not regional.","timestamp":"1637544360.0","comment_id":"483778","upvote_count":"4"},{"upvote_count":"2","poster":"network_zeal","content":"The issue with option A is that IAM roles are global and not regional. \n But then C also is not convincing. Firstly, VPC peering will add to cost. Also if applications were already in different accounts, unless some inter account networking was already in place(and this is not stated anywhere), they were anyway isolated from each others.","timestamp":"1636221720.0","comment_id":"448738"},{"timestamp":"1636013820.0","poster":"tgv","upvote_count":"1","comment_id":"437896","content":"CCC\n---"},{"timestamp":"1635986880.0","content":"It's C","comment_id":"435673","poster":"denccc","upvote_count":"1"},{"poster":"WhyIronMan","comment_id":"410476","content":"I'll go with C","timestamp":"1635845100.0","upvote_count":"1"},{"comment_id":"379036","timestamp":"1635792840.0","upvote_count":"3","content":"For A. \nSeems slightly unclear but is this statement not enough to clarify that central server inward access is allowed through security groups \"and use security groups to isolate each instance while permitting access to the central server. \"\nSeems its doing two parts :\n1- Isolation instances\n2- at the same time allowing central server","poster":"Amitv2706"},{"poster":"blackgamer","content":"I will go with C.","timestamp":"1635781260.0","upvote_count":"1","comment_id":"346254"},{"timestamp":"1635774900.0","content":"it's C","upvote_count":"3","poster":"Waiweng","comment_id":"345935"},{"content":"will go with C","poster":"Kian1","upvote_count":"2","comment_id":"291355","timestamp":"1635749160.0"},{"comment_id":"282742","content":"Really want this to be \"B\" since StackSets are what I would use to solve this problem HOWEVER VPN Gateways are not a good choice and are entirely user-managed (they are not an aws managed service and greatly increase maintenance and upkeep costs) except for Transit Gateway which would definitely be overkill/too expensive here.\nWhile it's a poor answer (running one CFTemplate several times in different accounts because... anti... automation?), C is the only answer that meets the requirements and VPC peering from (private) backend accounts to the central (public VPC) account does meet the question requirements for segregating traffic and isolating internet access...\nAnswer is C","poster":"Trap_D0_r","timestamp":"1635708960.0","upvote_count":"4"},{"content":"I go with C","comment_id":"281496","poster":"Ebi","timestamp":"1635619020.0","upvote_count":"4"},{"upvote_count":"4","timestamp":"1635317520.0","comment_id":"253343","poster":"newme","content":"C.\nA: definitely wrong. IAM role is global.\nB: Feasible. VPN connection isn't free, I think, is it?\nD: NAT gateway is used to connect internet.","comments":[{"timestamp":"1635427740.0","poster":"newme","comments":[{"poster":"sarah_t","comment_id":"333489","upvote_count":"2","timestamp":"1635753480.0","content":"Peering is free, data transfer isn't. But if it's only used for admin access I imagine the data transfer costs to be small."}],"comment_id":"253978","content":"VPC peering also not free.\nThen I'm not sure B or C, which one is correct.","upvote_count":"2"}]},{"timestamp":"1635315360.0","upvote_count":"2","content":"The correct answer is C .. I'm a bit concerned why they keep putting the wrong answer as the solution .. does any one know ? ... When thinking about a central server we will need vpc Peering .... i agree D looks good but the question asks for the instances / vpc to be not given internet access .. so only credible answer is C","comment_id":"245988","poster":"petebear55"},{"upvote_count":"2","comment_id":"243007","poster":"T14102020","timestamp":"1635264540.0","content":"Correct answer is C. VPC peering and not NAT, not security group, not VPN"},{"poster":"Bulti","upvote_count":"2","content":"Answer is C. Not A, firstly because nowhere does the question mention deploying identical application instances in separate regions. Moreover security groups cannot be used across regions. However since isolation is required may to reduce the blast radius so that if one instance goes down we can use another instance in the same region, then C fits the bill the best. D is invalid as NAT Gateway would provide access from the application to the central server and not vice versa. B looks invalid because the question doesn't mention that the centralized server is on-prem.","comment_id":"236158","timestamp":"1635233520.0"},{"comment_id":"230716","timestamp":"1635101640.0","content":"I'll go with C","poster":"jackdryan","upvote_count":"3"},{"timestamp":"1634905740.0","comment_id":"229383","upvote_count":"2","poster":"gookseang","content":"seems C"},{"content":"I will go with B.","timestamp":"1634889780.0","comment_id":"210187","upvote_count":"1","poster":"exam_prep"},{"upvote_count":"2","comment_id":"208971","poster":"SamAWSExam99","content":"A. Use an AWS CloudFormation template to create identical IAM roles for each region. Use AWS CloudFormation StackSets to deploy each application instance by using parameters to customize for each instance, and use security groups to isolate each instance while permitting access to the central server.\nWhy we need separate AWS accounts for a single application for instance separation.","timestamp":"1634850900.0"},{"content":"Really tricky question... \n\nThe location of the central server is unknown so it could be aws or on-premise both options can be valid I guess.\n\nI go for...\n\nA: wrong as it does not detail central server communication mecanism\nB: Could be.... Connection with central server though VPN Gateway over an encrypted tunnel over internet, so it could be if the central server is on premise?\nC: Could be.... Connection with central server through AWS internal network peering so it could be if the central server is on aws?\nD: Could be.... Connection with central server trhough NAT Gateway over public internet so it should be wrong.\n\nBetween B and C, if we consider that VPN Gateway uses internet uses internet wont be valid and then C option wins. In any case if you consider that VPN Gateway although traffice is carried over internet...\nI stay with C because of the costs (Which option meets the requirements and MINIMIZES costs?) as with VPN GW you pay for traffic and for connection time, and with peering option you only pay per traffic (lower price than vpn gw traffic)","comment_id":"182839","timestamp":"1634683560.0","poster":"ipindado2020","upvote_count":"2"},{"poster":"fullaws","timestamp":"1634588460.0","content":"C will not minimize the mistaken...., as it is only one cloudformation template","upvote_count":"2","comment_id":"150283"},{"upvote_count":"1","content":"A will be correct, if IAM only done once","poster":"fullaws","comment_id":"150281","timestamp":"1634385240.0"},{"poster":"fullaws","upvote_count":"2","timestamp":"1634290860.0","content":"C is correct, MINIMIZE cost","comment_id":"150279"},{"upvote_count":"3","comment_id":"134517","content":"C more likely","timestamp":"1634165220.0","poster":"NikkyDicky"},{"poster":"HoganYu","comment_id":"121704","content":"Ans is B","timestamp":"1634033880.0","upvote_count":"4"},{"comment_id":"109923","content":"B is possible and fullfills req. Its called transition VPC via VPN. eg. https://docs.aws.amazon.com/solutions/latest/cisco-based-transit-vpc/overview.html ( you could use openvpn or others as well instead of cisco - only aws vgw wont work).\n- VPN traffic does traverse internet however is encapsulted so \"isolated\" is a yes\n- Aplication is installed via cloudforms as well as iam. \n\nA is certainly wrong: \n- app doesn't get installed let alone automatic. \n- violates no internet constraint. \n- iam is global cross regions(A talks about single account deployment in multiple regions!)...\n\nC) VPC peering would be great. Iam not sure if application counts as \"resource\" while it is mentioned explicitely in other answers - well. Peering would be more spot on than B as it is competely without inet traversal. Also cheaper than B. \nD) certainly wrong: not isolated(outgoing completely open). no installation mentioned. \n\nI would go for B - but its tight. If it is an old question. without cross account peering, B might have been the only way.","poster":"hobokabobo","upvote_count":"4","timestamp":"1633965840.0"},{"comments":[{"poster":"meenu2225","comment_id":"103449","upvote_count":"5","content":"Out of the lot, C makes more sense.","timestamp":"1633416300.0"}],"poster":"meenu2225","content":"Is this only me who thinks, none of the options make sense?\nOptions talking about different accounts, regions but in general, you can make a better solution without using either of them.","upvote_count":"2","comment_id":"103448","timestamp":"1633396620.0"},{"content":"Should Be C.","comment_id":"76572","upvote_count":"6","timestamp":"1633318740.0","poster":"Joeylee"},{"comment_id":"53040","timestamp":"1633081260.0","poster":"Vyasc","content":"Question is misleading and needs more description, however I think it is about deploying all the application into one account at a time without making mistakes. That is where stacksets from an admin account can help. Each time an install is done into a given account use the right params( example params could be instances sizes based on load in that account) but security group rules would most likely be not part of the parameters (to avoid mistakes)","upvote_count":"3"},{"poster":"amog","content":"Should be C\nSecurity groups doesn't working at instance level","comment_id":"51240","upvote_count":"6","timestamp":"1632921900.0"},{"content":"A is right","poster":"awsec2","upvote_count":"3","comment_id":"12268","timestamp":"1632095040.0"},{"poster":"donathon","upvote_count":"7","comment_id":"11734","content":"A\nB: Use security group not VPN to the central administration server.\nC: You need StackSet to span across multiple accounts. https://aws.amazon.com/about-aws/whats-new/2017/07/aws-cloudformation-supports-multiple-account-and-region-provisioning-with-stackset/\nD: NAT Gateway is use to connect to internet.","comments":[{"content":"how security group allow accessing from central server (in different region)?","timestamp":"1632244080.0","comments":[{"timestamp":"1633532820.0","poster":"fi3fjwoifej","upvote_count":"1","comment_id":"108162","content":"A because you can give the central servers front end ec2 security group as the ingress for the backend security group and remove the self reference security group from the backend security group successfully isolating the instances and providing access to the instances."}],"upvote_count":"7","poster":"chaudh","comment_id":"16223"},{"content":"IAM roles are global, not region-specific. Thus A makes no sense. I would go for C","poster":"MultiAZ","timestamp":"1634166780.0","comment_id":"143424","upvote_count":"4"},{"comments":[{"upvote_count":"2","comment_id":"70781","poster":"Smart","comments":[{"content":"Agree with C.","poster":"Smart","timestamp":"1633191960.0","upvote_count":"4","comment_id":"70782"}],"timestamp":"1633183380.0","content":"Agreed. A - Deploying across Regions without any indication is too extreme."}],"content":"I am not sure how A will meet the requirement of central server access?\n\nHowever, for C, there is nothing stopping us to run same cfn template manually multiple times in different accounts. The VPN peering will ensure central server access works. It is not ideal (missing Stacksets) but will meet the requiremnts.","timestamp":"1632568800.0","upvote_count":"5","poster":"9Ow30","comment_id":"29400"}],"timestamp":"1632079380.0"}]},{"id":"pGUYdcJlYnkvAFLt0LFv","isMC":true,"answer":"D","answer_description":"","answer_images":[],"answers_community":["D (91%)","9%"],"topic":"1","answer_ET":"D","unix_timestamp":1568152320,"question_images":[],"question_text":"A group of Amazon EC2 instances have been configured as a high performance computing (HPC) cluster. The instances are running in a placement group, and are able to communicate with each other at network speeds of up to 20 Gbps.\nThe cluster needs to communicate with a control EC2 instance outside of the placement group. The control instance has the same instance type and AMI as the other instances, and is configured with a public IP address.\nHow can the Solutions Architect improve the network speeds between the control instance and the instances in the placement group?","exam_id":32,"question_id":468,"timestamp":"2019-09-10 23:52:00","discussion":[{"timestamp":"1632461580.0","content":"D : A instance can me moved to placement group","upvote_count":"23","comment_id":"17790","poster":"TechGuru","comments":[{"timestamp":"1632468720.0","upvote_count":"2","content":"YES but you would need to terminate it first ad reluch it in the placement grp, so I think the answer is A","comments":[{"comments":[{"upvote_count":"1","timestamp":"1635764520.0","content":"updated to -> \"Change the placement group for an instance\"","comment_id":"357628","poster":"LCC92"}],"upvote_count":"30","poster":"Frank1","comment_id":"23914","timestamp":"1632500280.0","content":"The instance does not need to be terminated. It just needs to be stopped. See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html \"Changing the Placement Group for an Instance\""}],"poster":"AWS2020","comment_id":"17905"}]},{"comments":[{"comments":[{"comment_id":"177569","timestamp":"1634300100.0","poster":"Utpal","upvote_count":"3","content":"Not at all. B is right option"}],"timestamp":"1634222460.0","poster":"Phat","upvote_count":"1","comment_id":"173451","content":"I think Donathon is right."},{"content":"B\nThe cluster needs to communicate with a control EC2 instance outside of the placement group.","poster":"jamjam2020","upvote_count":"6","timestamp":"1633435260.0","comment_id":"129618"},{"upvote_count":"4","content":"You can move instances outside the placement group to within the placement group. For that, you have to stop the instance and then make it part of the instance group. Start instance once again.","timestamp":"1635625680.0","poster":"biki1985","comment_id":"335992"},{"content":"no such limitation based on IP Address Private or Public:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html","upvote_count":"1","timestamp":"1646720040.0","poster":"Alexey79","comment_id":"563045"},{"comment_id":"285540","poster":"UpsetUser","upvote_count":"7","content":"No Buddy, You can move existing instances to placement group. Even you can move an instance from one placement group to another, or remove an instance from a placement group.\n\nhttps://acloud.guru/forums/aws-certified-solutions-architect-associate/discussion/-LBVlYuS1HKudeoD52ur/You%20can%20move%20an%20existing%20instance%20to%20a%20placement%20group","timestamp":"1635361740.0","comments":[{"content":"The question clearly says the placement group should communicate with instance outside placement group","upvote_count":"2","comment_id":"563339","poster":"Hari008","timestamp":"1646752260.0"}]}],"content":"A\nYou cannot move an existing instance into a placement group. Instances within a placement group generally have both a public and a private IP address. Communications across a public IP address are limited to 5Gbps or less. Low-latency, high-throughput communications between placement group members can only occur across the private interfaces, using the private IP addresses. These communications can be either 10Gbps or 20Gbps, and are limited by the instance's network configuration.\nhttps://awsinsider.net/articles/2017/06/12/ec2-placement-groups.aspx","comment_id":"11736","poster":"donathon","timestamp":"1632183180.0","upvote_count":"14"},{"poster":"NishKar","upvote_count":"1","timestamp":"1673555160.0","content":"Why is it assumed here that the control instance is owned by the same account as the account where the placement group is in? D is incorrect.","comment_id":"773883"},{"content":"Answer id D clearly mention in AWS docs only missing piece in answer is stopping the instance","comment_id":"720110","timestamp":"1668647280.0","upvote_count":"1","poster":"myco"},{"content":"Selected Answer: D\nD - Looks to be the best option\n\nTo move an instance to a placement group using the AWS CLI\n\nStop the instance using the stop-instances command.\n\nUse the modify-instance-placement command and specify the name of the placement group to which to move the instance.\n\naws ec2 modify-instance-placement --instance-id i-0123a456700123456 --group-name MySpreadGroup\nStart the instance using the start-instances command.\n\n\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group\\","poster":"janvandermerwer","upvote_count":"2","timestamp":"1668059760.0","comment_id":"714954"},{"timestamp":"1665817500.0","poster":"Dionenonly","comment_id":"695242","content":"Selected Answer: A\nI think it's A.\nInstance can't be moved live.\nI also sow this question in udemy and the answer is the same.","upvote_count":"1"},{"comment_id":"671208","timestamp":"1663382100.0","poster":"Dionenonly","content":"Selected Answer: D\nD. Yes you can't move existing instance to placement group without a down time. But question did not mention there should not be disruption so D is okay.","upvote_count":"1"},{"poster":"hilft","upvote_count":"1","timestamp":"1658882400.0","comment_id":"637700","content":"D. directly from jon bonso's exam"},{"content":"Selected Answer: D\nthe answer is D. Although like many have said the instance needs to be stopped first","poster":"Ni_yot","comment_id":"579841","timestamp":"1648903680.0","upvote_count":"1"},{"content":"Answer is \"A\": Terminate and relaunch","upvote_count":"1","timestamp":"1647620400.0","comment_id":"570638","poster":"Ricky53"},{"content":"To optimize performance on the control instance need to move it into the placement group.\nFor elimination:\nA - The question does not state if its the same region, I would assume it is - if so, no need to terminate the instance just to stop and modify it and re-start it.\nB- It can help but i assume the instances are already communication with a private since the cluster instances dont have one.\nC - It would help but cant reach 20GBs\nso answer is\nD - The best way is to migrate the instance inside the cluster placement group - stop it - run the modify CLI command and start it.\nhttps://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-placement.html\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group","poster":"asfsdfsdf","timestamp":"1647020580.0","upvote_count":"1","comment_id":"565698","comments":[{"comment_id":"565707","timestamp":"1647021300.0","upvote_count":"1","content":"In Addition to the above, \nNetwork traffic to the internet and over an AWS Direct Connect connection to on-premises resources is limited to 5 Gbps. \nInstances that are not within a cluster placement group can use up to 5 Gbps for single-flow traffic.\nSo at max using public / private IPs we can get 5GBs this will for sure eliminate B and C.\nThe correct answer is D if all instances are in the same Region/AZ.","poster":"asfsdfsdf"}]},{"content":"Selected Answer: D\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group\n\nWhy NOT A:\n“\nBefore you move or remove the instance, the instance must be in the stopped state.\n“\nTermination in AWS has different results than Stop.\n“\nThe key difference between stopping and terminating an instance is that the attached bootable EBS volume will not be deleted. The data on your EBS volume will remain after stopping while all information on the local (ephemeral) hard drive will be lost as usual.\n“","poster":"Alexey79","comment_id":"563044","timestamp":"1646719560.0","upvote_count":"3"},{"poster":"jyrajan69","upvote_count":"1","timestamp":"1645150320.0","comment_id":"549900","content":"D. Based on the following:\nTo move an instance to a placement group using the AWS CLI\nStop the instance using the stop-instances command.\nUse the modify-instance-placement command and specify the name of the placement group to which to move the instance. ...\nStart the instance using the start-instances command"},{"upvote_count":"1","poster":"cannottellname","timestamp":"1642361280.0","content":"How can we enhance performance?\nA. Terminate the control instance and relaunch it in the placement group. - Stopping helps changing the placement group. Hence, not needed.\nB. Ensure that the instances are communicating using their private IP addresses. - There is no Throughput level difference between them\nC. Ensure that the control instance is using an Elastic Network Adapter. - It is only helpful is instance is in cluster placement\nD. Move the control instance inside the placement group. - Seems best option. But we need to stop & move - this is not mentioned and so, I will go with A. They have also given hint that AMI is same & hence, termination & recreation seem to help.","comment_id":"525206"},{"timestamp":"1642334820.0","poster":"RVivek","comment_id":"524922","upvote_count":"1","content":"D. Here though put is the issue. So no need to chnage IP. We have to change the placement group\nA is incorrect , because we can stop the instance and move placement group. No need to terminate"},{"timestamp":"1642296720.0","content":"D - https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#:~:text=Before%20you%20move%20or%20remove%20the%20instance%2C%20the%20instance%20must%20be%20in%20the%20stopped%20state.","comment_id":"524541","poster":"Polu","upvote_count":"1"},{"upvote_count":"1","content":"D. Move the control instance inside the placement group.","timestamp":"1639216440.0","comment_id":"499292","poster":"cldy"},{"poster":"wem","content":"B\n\"The cluster must communicate with an EC2 instance that is not a member of the placement group\"","upvote_count":"1","comment_id":"496818","timestamp":"1638967380.0"},{"upvote_count":"2","poster":"AzureDP900","timestamp":"1638730920.0","comment_id":"494570","content":"D is correct answer"},{"timestamp":"1638730860.0","poster":"AzureDP900","content":"D is correct answer","comment_id":"494569","upvote_count":"2"},{"upvote_count":"3","timestamp":"1638240660.0","content":"Selected Answer: D\ni support D, move in","poster":"acloudguru","comment_id":"490361"},{"comment_id":"468142","timestamp":"1636237680.0","upvote_count":"1","poster":"nsei","content":"I will go with B. I think the control instance should be outside the placement group to avoid correlated failure."},{"content":"D - No need to terminate the instance. Stop it and move it into the placement group.","timestamp":"1636076400.0","upvote_count":"3","comment_id":"441260","poster":"student22"},{"poster":"DeathFrmAbv","comment_id":"425105","upvote_count":"1","content":"I thought it was A, but looks like according to the docs, instances can be moved to a placement group, you just need to stop them before doing it.","timestamp":"1636006920.0"},{"content":"Answer is D. You can move an instance to a placement group, provided it is in stopped state. You don’t have to terminate it\n\nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/modify-instance-placement.html","timestamp":"1635989880.0","upvote_count":"3","comment_id":"425070","poster":"Madhu654"},{"upvote_count":"1","comment_id":"413938","content":"D correct - other options are wrong\nA wrong - don't have to do it\nB wrong - will not help\nC wrong - will not help","timestamp":"1635968460.0","poster":"DerekKey"},{"poster":"WhyIronMan","upvote_count":"4","content":"Facts:\n- The instances are running in a placement group\n- The control instance has the same instance type and AMI as the other instances, and is configured with a public IP address.\nwith this, we can assume the following:\n- The HPC cluster is communicating using private IPs only and they don't have PUBLIC IPs\n- IF HPC Cluster don't have PUBLIC IPs, we can assume that it's already communicating with \"control instance\" through private IPs\nThis eliminates B\nEven with ENA Enabled, the requirement to reach 20Gbps speed is also be in the same placement group, so this eliminates option C\n\nBecause of the above explanation, it can be only A or D\nWe don't know when this question was launched... if was a long time ago, like two years or more, it can be A (because moving stopped instances its a very new feature)\nCan be D) as well, ok is not mentioning the stopping instance... but A) is also no mentioning to take a snapshot before terminating the EC2 (crap)...","comment_id":"410483","timestamp":"1635954360.0"},{"upvote_count":"1","content":"The answer is D for sure. This is out of the site docs. It ONLY needs to be stopped not terminated to be moved.\n https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group\n\nChange the placement group for an instance\nYou can change the placement group for an instance in any of the following ways:\n\nMove an existing instance to a placement group\n\nMove an instance from one placement group to another\n\nRemove an instance from a placement group\n\nBefore you move or remove the instance, the instance must be in the stopped state. You can move or remove an instance using the AWS CLI or an AWS SDK.","poster":"Tony_W","timestamp":"1635947220.0","comment_id":"407475"},{"comment_id":"371153","timestamp":"1635930300.0","poster":"zolthar_z","upvote_count":"5","content":"The Solution is D\nA-> This could work but there is no sense in build the EC2 again\nB-> The private address doesn't guarantee a High throughput\nC-> ENA works inside a placement group\nD-> You can move Instances inside a placement group"},{"upvote_count":"1","poster":"ss160700","comment_id":"366796","content":"A - as The control instance has the same instance type and AMI as the other instances.","timestamp":"1635895440.0"},{"comment_id":"366700","timestamp":"1635881760.0","poster":"vkbajoria","upvote_count":"1","content":"Answer is D, you can move instance in and out of the placement group\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group"},{"timestamp":"1635810540.0","poster":"viet1991","comment_id":"365079","content":"A.\nThey don't say the control instance is launched in the same Az with the cluster placement group.\nSo we need to relaunch control instance incase it was launched in the different Az with the cluster placement group.","upvote_count":"2"},{"upvote_count":"2","content":"it's D","comment_id":"346126","timestamp":"1635703500.0","poster":"Waiweng"},{"content":"I would choose D as I assume that after moving the control instance into the same placement group, they will restart the entire placement group altogether.","timestamp":"1635603960.0","upvote_count":"2","poster":"Pupu86","comment_id":"317118"},{"comment_id":"304594","upvote_count":"3","poster":"awsnoob","content":"Requirement: The cluster needs to communicate with a control EC2 instance outside of the placement group. \n\nThe ans is B.","timestamp":"1635525360.0"},{"upvote_count":"1","timestamp":"1635441660.0","comment_id":"294137","poster":"kiev","content":"D for me but I am honestly lost. That said since we can stop an instant and move it to another placement group, I would go with it."},{"content":"guess it mentions public IP which is confusing you, but I will go with \"D\", simply stop and move","timestamp":"1635367440.0","upvote_count":"1","comment_id":"291363","poster":"Kian1"},{"comment_id":"281514","upvote_count":"2","timestamp":"1635291300.0","content":"I go with D","poster":"Ebi"},{"upvote_count":"1","timestamp":"1635209820.0","poster":"petebear55","content":"I'll go for B .. although D could be right .. its a very badly put together question","comment_id":"246368"},{"poster":"petebear55","content":"I was tempted to go for C .. however the question states that communication already occurs at up to 20 gbps ... So whilst attractive having read the link below i believe we can neutralise C as an answer !! ... I must say this is a typical 'Red Herring' type ? Amazon like to throw in .. its as though the person whom created this exam has nothing better to do than j**k off all day laughing as he persecutes us !!! .. What a tos**rs ... he's probably a djinn whom created ? like this https://aws.amazon.com/blogs/aws/elastic-network-adapter-high-performance-network-interface-for-amazon-ec2/","comment_id":"246364","upvote_count":"1","comments":[{"poster":"shammous","upvote_count":"4","comment_id":"279415","timestamp":"1635278880.0","content":"You should change your nickname to \"RedHerring\" man. Stop complaining and chillax ..."}],"timestamp":"1635199680.0"},{"poster":"spring21","timestamp":"1635172980.0","content":"C Elastic Network Adapter (ENA) to provide even better support for high performance networking. ENA provides up to 20 Gbps of consistent, low-latency performance when used within a Placement Group, at no extra charge!","upvote_count":"3","comment_id":"244182"},{"content":"Correct is B. private IP address","upvote_count":"1","comment_id":"243010","poster":"T14102020","timestamp":"1635097920.0"},{"upvote_count":"1","comment_id":"236164","content":"B is the right answer just because of this statement \"The cluster needs to communicate with a control EC2 instance outside of the placement group\".","poster":"Bulti","timestamp":"1634775660.0"},{"content":"As others have pointed out, it flat out says \"The cluster NEEDS to communicate with a control EC2 instance outside of the placement group\". There's a better option if we're allowed to move it, but we're not according to that sentence. B.","poster":"MichaelR","upvote_count":"1","timestamp":"1634756100.0","comment_id":"232492"},{"content":"I'll go with B*","upvote_count":"2","comment_id":"230728","timestamp":"1634721900.0","poster":"jackdryan"},{"upvote_count":"1","timestamp":"1634657880.0","comment_id":"229385","poster":"gookseang","content":"B for sure"},{"poster":"ting_66","content":"I would go with A\nWhy not D - Not only the option didn't mention \"Stop the instance\", also because placement group has another prerequisite - Single AZ. If Control instance is in another AZ, then moving is NOT an option.","upvote_count":"1","comment_id":"229281","timestamp":"1634586360.0"},{"timestamp":"1634388600.0","poster":"SamuelK","content":"D is wrong:it doesn't say anything about stopping the instance before moving it to the placement group. Yes, you can move an existing instance to a placement group, but you must first stop the instance. D does not say that. \nA: is wrong, you don't' need to terminate the instance in order to move it to the placement group.\nC: just a distractor, not right\nthat only leaves B: no matter what, you need to use the private IP Address to communicate.\nB final answer","upvote_count":"1","comment_id":"226232"},{"content":"D is the answer; \n\nYou can change the placement group for an instance in any of the following ways:\n\nMove an existing instance to a placement group\n\nMove an instance from one placement group to another\n\nRemove an instance from a placement group","timestamp":"1634384520.0","poster":"AK2020","upvote_count":"1","comment_id":"218911"},{"poster":"kopper2019","comment_id":"215018","timestamp":"1634354760.0","content":"this is tricky question.... it can be D assuming the last step which is move after stopping the instance","upvote_count":"1"},{"timestamp":"1634346540.0","upvote_count":"1","poster":"SamAWSExam99","content":"Changing the placement group for an instance\nYou can change the placement group for an instance in any of the following ways:\n\nMove an existing instance to a placement group\n\nMove an instance from one placement group to another\n\nRemove an instance from a placement group","comment_id":"208976"},{"content":"Most likely D. I guess the AMI is already provisioning ENA, given the 20Gbps throughout. No need to terminate the instance, just move.","timestamp":"1633942020.0","upvote_count":"2","comment_id":"152953","poster":"Spiri79"},{"comment_id":"150343","poster":"fullaws","timestamp":"1633882320.0","upvote_count":"1","content":"B or D could be right answer"},{"comment_id":"143172","upvote_count":"2","poster":"Anila_Dhharisi","timestamp":"1633832340.0","content":"Question is to improve the networkspeed between control instance and cluster. There is no need to change the design. To improve, we would need ENA as its designed for enhancing network abilities to communicate with low latencies. C works out."},{"poster":"IAmNotLambda","content":"The question does not mention any thing about the Control Instance. Lets say we move it in the placement group and the instance was being used by some other EC2 instances for something else? I believe it should be ENA as there is no mention of current EC2 instances in placement group are already communicating with the Control EC2 instance. C for me.","timestamp":"1633566420.0","comment_id":"140727","upvote_count":"1"},{"comment_id":"134812","timestamp":"1633565760.0","upvote_count":"3","poster":"inf","comments":[{"comment_id":"173448","content":"\"However, the question does not state the Control instance is running. Even so, this answer does not state the instance is started after the move\" --> yes I think this explanation is logical. Otherwise I don't see any possibility.","upvote_count":"1","timestamp":"1634212200.0","poster":"Phat"}],"content":"Answer: A (reluctantly)\nA - correct - not ideal, but the only answer that's complete and has the intended result.\nB - incorrect - does not affect throughput, and given the other systems. Plus all instances may already be communicating via private IPs\nC - incorrect - it already has an ENA given the it has the same specs as the other instances, and anything over 10Gbps requires an ENA (i think)\nD - incorrect - logically it's correct, technically not, as it requires a stop-instance command before moving. However, the question does not state the Control instance is running. Even so, this answer does not state the instance is started after the move. So D is ruled out."},{"timestamp":"1633504680.0","content":"D seems more likely","upvote_count":"1","poster":"NikkyDicky","comment_id":"134518"},{"comment_id":"119979","comments":[{"poster":"Phat","timestamp":"1634052540.0","upvote_count":"1","comment_id":"173447","content":"I think you are mentioning about D. Move control instance inside placement group, we have to stop, move and then start. D can be obvious, but A also can be correct. So confusing."}],"content":"Answer A.\nTraffic in and out of placement group is limited at 5 Gbps. So even if you attach ENA to the control instance, it doest help with the situation. So C can be ruled out.\n\n The fact that the instances in the palcement are already communicating a max 20gbps speed means they are already using private ips and ENAs. Os B can be ruled out. \n\nThe only way Control instance can benefit from higher network speed is to move the control instance inside the placement group. \n\nHowever, To move an instance to a placement group ypu need to stop it first using the AWS CLI. So D can be ruled out.\n\nStop the instance using the stop-instances command.\nUse the modify-instance-placement command and specify the name of the placement group to which to move the instance.\naws ec2 modify-instance-placement --instance-id i-0123a456700123456 --group-name MySpreadGroup\nStart the instance using the start-instances command.","timestamp":"1633375440.0","upvote_count":"3","poster":"chicagomassageseeker"},{"comment_id":"114967","poster":"easytoo","content":"I'm going for D on this one. \nIt is possible to move an existing instance into a placement group. \nYou can change the placement group for an instance in any of the following ways:\n\nMove an existing instance to a placement group\n\nMove an instance from one placement group to another\n\nRemove an instance from a placement group\n\nBefore you move or remove the instance, the instance must be in the stopped state. You can move or remove an instance using the AWS CLI or an AWS SDK.\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#concepts-placement-groups","timestamp":"1633330860.0","upvote_count":"1"},{"poster":"mat2020","content":"i would go with Ans: D","timestamp":"1633314240.0","upvote_count":"1","comment_id":"111214"},{"content":"there is a limit as to how many instances can be in a single placement group.. therefore I am tempted to go with C","timestamp":"1633299480.0","poster":"Wira","upvote_count":"2","comment_id":"108019"},{"comment_id":"103845","timestamp":"1633187220.0","content":"Revisiting the Question....OK D is absolutely correct. But B may be correct also...The instances are the same suggesting that the control instance is a good candidate for PG membership....so We can \"Move\" the machine into the group...But in regards to B. The machine has a public IP...if the PG is communicating with the control machine by goint out to the internet and then back into the public ENI of the control instance then YES B would be correct as well. But we don't get the benefit of placement group BW by doing so....we only get the benefit of fewer hops. Since the question sets up the facts that the Control instance is the same is the PG instances I would guess they are looking for D as the correct answer. But its hard to tell exactly what they are asking here....B could be the correct answer too. A and C are definitely out...Im going to lean towards D 80%","upvote_count":"2","poster":"Merlin1"},{"poster":"Oleksandr","comment_id":"103747","content":"D. See: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group\ndirect option is in there: \n- Move an existing instance to a placement group\n\nI think question target this","timestamp":"1633088160.0","upvote_count":"2"},{"content":"What a crap question! D seems obvious but it should probably say \"Stop\" the instance then moce as you cant just live migrate....Then B Make sure the instances are using pvt IP to talk....they probably already are...SO what is the question asking? How to modify an instance placement group? Or Improve comms between a cluster and control instance that who knows where it resides? The most difficult part about this test is that you have to analyze and parse every single word of every question.....It's almost about all the tiny gotchas and ambiguousness of the questions that make you sit and wonder for 10 mins what they are asking. But you only have 3 mins per question as the math works out. If these are real questions then they are kind of unrealistic and seem to make the test unreasonably difficult for the wrong reasons.Rant over....back to parsing","comment_id":"94947","poster":"Merlin1","timestamp":"1633004400.0","upvote_count":"8"},{"content":"The cluster needs to communicate with a control EC2 instance outside of the placement group -- Answer should be B","upvote_count":"1","poster":"subdas","timestamp":"1632969600.0","comment_id":"89358"},{"comments":[{"timestamp":"1633263120.0","content":"agree. should be B","upvote_count":"1","poster":"VrushaliD","comment_id":"107821"}],"timestamp":"1632947100.0","upvote_count":"5","comment_id":"88220","poster":"[Removed]","content":"Instance is named as 'control instance' for a reason. It should stay outside of cluster. I don't think people didn't know this instance should be inside the placement cluster before the test starts. We should think that this is a control instance and should stay outside of the placement all time. So the answer should B to improve the latency and bandwidth."},{"comments":[{"timestamp":"1633076040.0","content":"That means neither A nor D are valid.","comment_id":"98582","upvote_count":"1","poster":"JAWS1600"}],"comment_id":"76982","poster":"Smart","content":"I was going to go with Option A until I saw this. https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html#change-instance-placement-group\nPer AWS, the definition of moving an existing instance to a placement group is to stop instance and then move it. Ridiculous imo\n\nI choose option D","upvote_count":"3","timestamp":"1632946500.0"},{"upvote_count":"2","poster":"Joeylee","comments":[{"upvote_count":"1","content":"This is the correct answer. Communicating with the public IP address of a device within the VPC will cause the traffic to leave the VPC and come back in. You can verify this with a traceroute if you want to see the different behavior. It also results in egress charges as well. Using the private IP addresses for internal communications is going to help throughput and reduce costs.","poster":"kirrim","timestamp":"1636195680.0","comment_id":"459627"}],"comment_id":"76574","timestamp":"1632919380.0","content":"B. Using public ip results in routing out to internet then come back."},{"comments":[{"timestamp":"1633339200.0","poster":"Shawn1","content":"Answer C. ENA provides up to 20 Gbps of consistent, low-latency performance when used within a Placement Group, at no extra charge! https://aws.amazon.com/blogs/aws/elastic-network-adapter-high-performance-network-interface-for-amazon-ec2/","upvote_count":"3","comment_id":"115753"},{"upvote_count":"3","content":"Statement is incorrect as it already has an ENA. It has the same configuration as instances in the placement group. Anything above 10Gbps requires an ENA, thus the Control instance has an ENA. So cannot be C","comment_id":"134662","poster":"inf","timestamp":"1633508580.0"}],"poster":"virtual","content":"The question doesn't state the control instance would be in the placement group but improve the network speeds between them. So my point of view is to ensure this instance works under ENA, so answer C.","comment_id":"62387","timestamp":"1632867720.0","upvote_count":"5"},{"upvote_count":"5","poster":"MrP","content":"Affinity of an instance is done launch and cannot be changed until this is terminated, but affinity is only relevant if you need dedicated instances. For placements all you need is stop it and add placement group to its configuration before restarting it - AWS calls this 'moving'. So even though it's a bad wording (you can't move it, while it's running), D is correct. ENA will only improve your general network performance and has a wide range of limitations on OS versions and instance types, so C cannot be a generic answer. B does nothing to improve the situation. A would technically also be correct, but D is the better choice.","timestamp":"1632840660.0","comment_id":"56221"},{"upvote_count":"7","timestamp":"1632827280.0","poster":"Gorha","comment_id":"53180","content":"D is correct! only need to stop an instance to move it to a placement group. No need to terminate it."},{"upvote_count":"1","timestamp":"1632749340.0","content":"Should be D\nI dont think AWS will trick us like that","poster":"amog","comment_id":"51245"},{"content":"Answer is B.\nThe cluster needs to communicate with a control EC2 instance outside of the placement group.","timestamp":"1632683700.0","comments":[{"timestamp":"1632723300.0","upvote_count":"1","content":"Indeed the question says well outside I go with B","comment_id":"45197","poster":"Denis_H"},{"content":"If they are within a VPC, which they normally are, then this option is distractor.","timestamp":"1632931620.0","poster":"Smart","comment_id":"76979","upvote_count":"1"}],"upvote_count":"3","comment_id":"45040","poster":"ashp"},{"upvote_count":"3","timestamp":"1632678480.0","poster":"arunkumar","comment_id":"35910","content":"D is the answer. Instance doesn't need termination.","comments":[{"timestamp":"1633857600.0","content":"Think of what sits behind the placement group. It is on which physical server/rack is your instance started. If it is started on different rack, you need to restart it to move in\nside the placement group","comment_id":"143418","upvote_count":"1","poster":"MultiAZ"}]},{"content":"answer is d\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html","upvote_count":"6","poster":"Scunningham99","comment_id":"27847","timestamp":"1632647340.0"},{"content":"d is answer","comment_id":"25952","upvote_count":"4","poster":"examacc","timestamp":"1632551220.0"},{"upvote_count":"2","content":"a is my view","timestamp":"1632364620.0","poster":"awsec2","comment_id":"12275"},{"timestamp":"1632162720.0","comments":[{"upvote_count":"1","timestamp":"1633871400.0","comment_id":"143421","content":"\"The cluster needs to communicate with a control EC2 instance outside of the placement group\" - this is a requirement, so both A and D do not answer the requirements.","poster":"MultiAZ"}],"comment_id":"10507","upvote_count":"3","content":"I would go with A.","poster":"dpvnme"}],"choices":{"C":"Ensure that the control instance is using an Elastic Network Adapter.","B":"Ensure that the instances are communicating using their private IP addresses.","A":"Terminate the control instance and relaunch it in the placement group.","D":"Move the control instance inside the placement group."},"url":"https://www.examtopics.com/discussions/amazon/view/5024-exam-aws-certified-solutions-architect-professional-topic-1/"},{"id":"dr2z1qcMDDTYsnMS0aAE","question_id":469,"exam_id":32,"choices":{"B":"Edit the AWS::AutoScaling::LaunchConfiguration resource in the template, changing its DeletionPolicy to Replace.","C":"Edit the AWS::AutoScaling::AutoScalingGroup resource in the template, inserting an UpdatePolicy attribute.","A":"Create a change set for a new version of the template, view the changes to the running EC2 instances to ensure that the AMI is correctly updated, and then execute the change set.","D":"Create a new stack from the updated template. Once it is successfully deployed, modify the DNS records to point to the new stack and delete the old stack."},"url":"https://www.examtopics.com/discussions/amazon/view/5026-exam-aws-certified-solutions-architect-professional-topic-1/","answer_ET":"C","question_images":[],"isMC":true,"answer_images":[],"answers_community":["C (100%)"],"answer_description":"","discussion":[{"content":"C\n\nQuoting\n\"If you want to update existing instances when you update the LaunchConfiguration resource, you must specify an UpdatePolicy attribute for the Auto Scaling group. \"\n\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html","timestamp":"1632551040.0","comments":[{"content":"Actually, yes this suggests you can \"add an UpdatePolicy attribute to your Auto Scaling group to perform rolling updates\"\n\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html","upvote_count":"2","poster":"Stec1980","timestamp":"1634058180.0","comment_id":"160079"},{"comment_id":"400998","timestamp":"1635628440.0","poster":"DashL","content":"When you update the launch template or launch configuration for an Auto Scaling group, this update action does not deploy any change across the running Amazon EC2 instances in the Auto Scaling group. All new instances will get the updated configuration, but existing instances continue to run with the configuration that they were originally launched with. This works the same way as any other Auto Scaling group.\n\nYou can add an UpdatePolicy attribute to your stack to perform rolling updates (or replace the group) when a change has been made to the group.","upvote_count":"2"},{"poster":"Stec1980","timestamp":"1633906440.0","upvote_count":"3","content":"That's for the AWS::AutoScaling::LaunchConfiguration resource though, not the AWS::AutoScaling::AutoScalingGroup resource, which is what answer C suggests...","comment_id":"160060"}],"upvote_count":"28","poster":"9Ow30","comment_id":"29402"},{"poster":"dpvnme","content":"A. Ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html","upvote_count":"16","comment_id":"10510","timestamp":"1632248520.0","comments":[{"upvote_count":"2","poster":"viet1991","comments":[{"timestamp":"1635711300.0","content":"Option A says - Create a change set for a new version of the template, as part of that you would include UpdatePolicy attribute to the resource \"AWS::AutoScaling::AutoScalingGroup\" (and not to LaunchConfiguration)","poster":"TiredDad","upvote_count":"3","comment_id":"414984"}],"content":"Aws is C.\nWithout inserting an UpdatePolicy attribute to AWS::AutoScaling::LaunchConfiguration, execute the change set will only create new LaunchConfiguration and existing instances are not affected.","timestamp":"1635158820.0","comment_id":"365085"},{"upvote_count":"4","content":"This link says change set will change the stack, not the template.","poster":"simonyu","comments":[{"content":"\"When you use CloudFormation, you manage related resources as a single unit called a stack. You create, update, and delete a collection of resources by creating, updating, and deleting stacks. All the resources in a stack are defined by the stack's CloudFormation template\" - to change a stack, you change its template","poster":"TiredDad","timestamp":"1635692580.0","upvote_count":"1","comment_id":"414983"}],"timestamp":"1632595500.0","comment_id":"35772"}]},{"upvote_count":"2","content":"Selected Answer: C\nvote for C \n\"To update existing instances when you update the AWS::AutoScaling::LaunchConfiguration resource, you can specify an UpdatePolicy attribute for the group. \"","poster":"aandc","timestamp":"1656833580.0","comment_id":"626465"},{"timestamp":"1649094840.0","content":"Selected Answer: C\nVote C","upvote_count":"1","poster":"roka_ua","comment_id":"580871"},{"timestamp":"1643190960.0","content":"Selected Answer: C\nI think the \"best\" answer is C","upvote_count":"1","poster":"shotty1","comment_id":"532765"},{"content":"Answer A - Refer to Section \"Update the AMI on an Amazon EC2 instance\" in https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/updating.stacks.walkthrough.html.","timestamp":"1639820880.0","comment_id":"504138","poster":"tkanmani76","upvote_count":"1","comments":[{"timestamp":"1642154100.0","content":"C is right - Refer Remarks section https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html","poster":"tkanmani76","upvote_count":"1","comment_id":"523460"}]},{"content":"When you update the launch configuration for an Auto Scaling group, CloudFormation deletes that resource and creates a new launch configuration with the updated properties and a new name. Existing instances are not affected. To update existing instances when you update the AWS::AutoScaling::LaunchConfiguration resource , Answer C is right","comment_id":"494585","timestamp":"1638731940.0","poster":"AzureDP900","upvote_count":"1"},{"content":"\"UpdateStack to replace the EC2 instances with instances launched from the new AMI\"\nA wrong - will only apply to EC2 instances managed separately\nB wrong\nC correct - have to use UpdatePolicy attribute on Auto Scaling group\nD wrong","poster":"DerekKey","comment_id":"413946","comments":[{"comment_id":"414988","content":"Your statement \"A wrong - will only apply to EC2 instances managed separately\" is incorrect. Option A says \"Create a change set for a new version of the template\" and the template in this case corresponds to the stack which includes AutoScalingGroup","poster":"TiredDad","timestamp":"1635885540.0","upvote_count":"1"}],"timestamp":"1635677640.0","upvote_count":"1"},{"poster":"WhyIronMan","comment_id":"410488","timestamp":"1635639480.0","content":"I'll go with C","upvote_count":"2"},{"timestamp":"1635509640.0","upvote_count":"1","comment_id":"397668","content":"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html\nC.","poster":"Pb55"},{"poster":"ss160700","content":"B: - reason as below \n{\n \"Resources\": {\n \"LaunchConfig\": {\n \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\n \"Properties\": {\n \"KeyName\": {\n \"Ref\": \"KeyName\"\n },\n \"ImageId\": {\n \"Fn::FindInMap\": [\n \"AWSRegionArch2AMI\",\n {\n \"Ref\": \"AWS::Region\"\n },\n {\n \"Fn::FindInMap\": [\n \"AWSInstanceType2Arch\",","timestamp":"1635283020.0","comment_id":"367572","upvote_count":"1"},{"timestamp":"1635229740.0","upvote_count":"1","content":"A - it us the changes","comment_id":"366867","poster":"ss160700"},{"comment_id":"346131","content":"it's C","upvote_count":"1","poster":"Waiweng","timestamp":"1634937360.0"},{"upvote_count":"1","content":"The best answer is A because:\n- creating a changeset is the accepted method for making changes to a stack.\n- it includes all the changes in the template that are required \n- changes that would be required would not just be updating the ASG UpdatePolicy attribute, it would also require updating the AMI ID,\nit would be worth parameterizing the AMI ID so that it's just a parameter change in the future. Launch Config would need replacing because a new AMI is being used and launch configs can't be updated,\nthey are replaced and then deleted once you have successfully deployed an \"in-service\" instance so that roll-back can occur.\n\nThere is more to this question than first considered. Don't rush to the first answer the makes sense, sometimes there is a better answer. B and C and not wrong but they are not the best answer. D could be done but really why would you do that?","poster":"cnethers","comment_id":"296799","timestamp":"1634886720.0"},{"timestamp":"1634748960.0","content":"C. \n===\nA. is not enough. Please, reference below\nhttps://aws.amazon.com/premiumsupport/knowledge-center/auto-scaling-group-rolling-updates/","poster":"gpark","comments":[{"poster":"TiredDad","upvote_count":"1","comment_id":"414989","content":"UpdatePolicy has to be included in the template, so although not mentioned explicitly, option A covers that","timestamp":"1635968640.0"}],"upvote_count":"1","comment_id":"296150"},{"poster":"kiev","comments":[{"timestamp":"1636111320.0","upvote_count":"1","poster":"TiredDad","comment_id":"414991","content":"Option A includes executing the change set as well. You don't need to separately look at \"the launch auto scaling group and update it\""}],"timestamp":"1634705100.0","content":"Change set is to help you view changes before they are made in CF. To introduce new AMI then you have to look at the launch auto scaling group and update it and so I would go with C.","upvote_count":"1","comment_id":"294145"},{"timestamp":"1634694780.0","comment_id":"291367","content":"going with C","poster":"Kian1","upvote_count":"1"},{"poster":"Ebi","timestamp":"1634669640.0","comment_id":"281527","content":"Answer is C","upvote_count":"1"},{"upvote_count":"1","poster":"T14102020","content":"Correct is C. UpdatePolicy attribute","timestamp":"1634286240.0","comment_id":"243015"},{"upvote_count":"2","poster":"Bulti","content":"Answer is C. The updatePolicy on the AutoScalingGroup will automatically execute the rolling deployment of the new AMI instances when the Cloudformation template is updated to use these AMI instances and subsequently deployed. Here is the updatePolicy definition\n\"UpdatePolicy\": {\n \"AutoScalingRollingUpdate\": {\n \"MaxBatchSize\": Integer,\n \"MinInstancesInService\": Integer,\n \"MinSuccessfulInstancesPercent\": Integer,\n \"PauseTime\": String,\n \"SuspendProcesses\": [ List of processes ],\n \"WaitOnResourceSignals\": Boolean\n }\n}","timestamp":"1634245320.0","comment_id":"236186"},{"content":"I'll go with C","timestamp":"1634148360.0","comment_id":"230739","poster":"jackdryan","upvote_count":"3"},{"upvote_count":"1","timestamp":"1634082120.0","content":"seems C","poster":"gookseang","comment_id":"229387"},{"timestamp":"1634074140.0","content":"C is my pick","poster":"Ganfeng","upvote_count":"1","comment_id":"175428"},{"upvote_count":"1","timestamp":"1633830600.0","comment_id":"150351","content":"C is correct","poster":"fullaws"},{"timestamp":"1633679220.0","poster":"khksoma","upvote_count":"2","comment_id":"139780","content":"I dont think viewing the changes will show the correct AMI running, it will only show In the Changes section, each row that represents a resource that AWS CloudFormation will add, delete, or modify.\nI would go with C as that is one of the steps required after updating the LC."},{"poster":"NikkyDicky","content":"C makes sense","comment_id":"134519","timestamp":"1633655700.0","upvote_count":"1"},{"timestamp":"1633627860.0","content":"Answer: C","upvote_count":"1","comment_id":"132569","poster":"mat2020"},{"poster":"chicagomassageseeker","upvote_count":"1","timestamp":"1633511760.0","comments":[{"comment_id":"122770","upvote_count":"2","timestamp":"1633603440.0","poster":"LunchTime","content":"I believe you are making too big of an assumption when you say the key factors for this question are 1/data availability in a few seconds and 2/ cost. \n\nThe exact wording of the question is very important and that says the two considerations are “AMI can be deployed to a running stack by first updating the template to refer to the new AMI, and then invoking UpdateStack to replace the EC2 instances with instances launched from the new AMI.” \n\nBased on that wording I would not put any weight on the cost of the solution. However, I believe we can assume the wording of “to a running stack” means the changes must be implemented immediately. Consequently, the answer given by “SMART” makes the most sense to me, along with the stackoverflow.com link provided by Tones. \n\nC is the best answer based on that reasoning."}],"comment_id":"120812","content":"Take 2: Revised Answer B.\n\nThis example was discussed in udemy course. Here are the numbers.\n\nRemember the two key factors for a final decision. \n1.Data availability in few seconds. \n2.MOST cost-effective solution for collecting and storing the data\n\nLet’s see which is the most Cost-effective solution Kinesis vs DynamoDB Streams.\n\n2000 internet sensor producing 1kb every second = 2000Kb per second of data.\nSo you need 2 Shards in kinesis = 2MB/sec\n2Shards * $0.015/hr (cost per shard) for a month = $21.6 per month\n\nDynamo DB Streams:\nYou will need 2000 WCU for 2000 KB as 1 WCU = 1KB\n1 WCU = $0.00065 \nSo 2000 WCU = 2MB/s will cost you $936 per Month.\n\nSo Dynamo DB is COSTLIEST. Rule out C.\n\nNow between A and B. Kinesis Data streams are real time compared to Firehose( 60 seconds latency). However, The only way you can write to S3 (durable location) is by using Firehose."},{"poster":"easytoo","upvote_count":"1","comment_id":"114972","content":"It's C for me. \nIf you want to update existing instances when you update the AWS::AutoScaling::LaunchConfiguration resource, you must specify an UpdatePolicy attribute for the Auto Scaling group","comments":[{"comment_id":"115897","poster":"easytoo","content":"The AWS::AutoScaling::AutoScalingGroup resource uses the UpdatePolicy attribute to define how an Auto Scaling group resource is updated when the AWS CloudFormation stack is updated.\nhttps://aws.amazon.com/premiumsupport/knowledge-center/auto-scaling-group-rolling-updates/","upvote_count":"1","timestamp":"1633467300.0"}],"timestamp":"1633404480.0"},{"poster":"tones","comment_id":"113227","content":"https://stackoverflow.com/questions/42399072/aws-update-autoscaling-group-with-new-ami-automatically","timestamp":"1633382640.0","upvote_count":"2"},{"timestamp":"1633144320.0","comment_id":"95787","content":"c is correct - If you want to propagate the change to your launch configuration across all the instances in your Auto Scaling group, you can use an update attribute. For more information, see UpdatePolicy Attribute.","upvote_count":"2","poster":"NKnab"},{"content":"C more specific than A","poster":"ripntear","comment_id":"92076","timestamp":"1633105500.0","upvote_count":"1"},{"poster":"Joeylee","upvote_count":"1","timestamp":"1632952080.0","comments":[{"content":"Should be C","timestamp":"1633006200.0","poster":"Joeylee","upvote_count":"1","comment_id":"77746"}],"content":"A.\nC is incorrect as UpdatePolicy describes how update will be performed - rolling? Replace current target group?","comment_id":"76587"},{"comment_id":"73358","content":"C make sense","timestamp":"1632931980.0","poster":"Danao","upvote_count":"2"},{"poster":"Smart","comments":[{"comment_id":"414995","timestamp":"1636282800.0","content":"I find your comment most helpful out of all the comments. The issue with option A is that the sequence described is incorrect \"Create a change set, view the changes to the running EC2 instances to ensure that the AMI is correctly updated, and then execute the change set.\" AMI will not get correctly updated until we execute the change set, so there is no way to verify that before executing the change set. Hence option C makes sense.","upvote_count":"1","poster":"TiredDad"}],"comment_id":"70810","upvote_count":"5","timestamp":"1632925080.0","content":"I must say most of these questions are flawed; there is always something missing. The question is very generic. SA wants to 1) update to new AMI through CFN template 2) replace existing EC2s with new EC2s. \n\nFrom all other comments, we know B or D is not the answer. \nA: ChangeSet enables to view changes made to existing stacks and its resources and then apply those changes to the stack. Does the question ask for ability to view changes? No! Does it meet our two requirements? Yes. However, will it allow to \"view the changes to the running EC2 instances to ensure that the AMI is correctly updated\"? Update won't happen to running EC2s...instead to LaunchConfiguration. These updates will be reflected on new EC2s. \n\nC: The question doesn't mention if the update has to be immediate. In real-life, it would be immediate unless EC2s are started and terminated frequently. With that assumption, option C makes sense. Although, it doesn't mention a simple process for updating template and running UpdateStack in the sentence itself. Are we to assume that?"},{"upvote_count":"2","comment_id":"51250","timestamp":"1632846780.0","poster":"amog","content":"Should be A"},{"content":"I would choose A, the stack needs to be updated\nRef: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/updating.stacks.walkthrough.html#update.walkthrough.ami","comments":[{"upvote_count":"1","content":"According to \"Update the Amazon EC2 launch configuration for an Auto Scaling group\" in your reference, it should be C.","timestamp":"1634377980.0","comment_id":"254002","poster":"newme"}],"poster":"dchaing","upvote_count":"1","timestamp":"1632744180.0","comment_id":"49092"},{"timestamp":"1632576600.0","poster":"JayK","upvote_count":"3","comment_id":"31971","content":"I support A"},{"poster":"zhouhanlun","content":"the answer should be C","timestamp":"1632339480.0","comment_id":"25840","upvote_count":"6"},{"content":"I do support \"A\".","timestamp":"1632320040.0","poster":"Moon","comment_id":"13455","upvote_count":"9"}],"question_text":"A Solutions Architect has created an AWS CloudFormation template for a three-tier application that contains an Auto Scaling group of Amazon EC2 instances running a custom AMI.\nThe Solutions Architect wants to ensure that future updates to the custom AMI can be deployed to a running stack by first updating the template to refer to the new\nAMI, and then invoking UpdateStack to replace the EC2 instances with instances launched from the new AMI.\nHow can updates to the AMI be deployed to meet these requirements?","topic":"1","answer":"C","timestamp":"2019-09-10 23:58:00","unix_timestamp":1568152680},{"id":"ewv36xVTQiamqC05Dbya","answer_description":"","question_id":470,"answer_ET":"AD","discussion":[{"upvote_count":"30","comments":[{"poster":"donathon","upvote_count":"14","content":"The SCP will already enable full access for any accounts under the OU and in this case the 10 accounts. Assume role will work but is not minimizing the effort. You can look under SCP policy and how it works","comment_id":"13667","timestamp":"1632384420.0"},{"poster":"chaudh","content":"I agreed with @donathon. If the question is \"Grant full access...\" instead of \"Allow full access...\" then E would be correct.","upvote_count":"2","comment_id":"14985","timestamp":"1632525360.0"},{"upvote_count":"10","poster":"tan9","content":"Option D minimize the effort required to add additional secondary accounts, while option E don't.","timestamp":"1632851760.0","comment_id":"29576"},{"content":"you misunderstand the question.\n-> Allow full access to [the Amazon EC2 service] from [the master account and the secondary accounts]. => means To allow all accounts to access to their own EC2 service, which SCP can do.","poster":"LCC92","upvote_count":"8","timestamp":"1636003620.0","comment_id":"358285"},{"content":"check this https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html, SCP can define allow operations. So\nI think A D should be the right answer","comments":[{"timestamp":"1686331560.0","comment_id":"919493","poster":"Jesuisleon","upvote_count":"1","content":"Ok, when I read this question second time, I change my idea to A,E.\nIf you don't trust me, you can try thiss question :\nhttps://www.examtopics.com/discussions/amazon/view/47021-exam-aws-certified-solutions-architect-professional-topic-1/\nthen come back to do this question again !"}],"comment_id":"889610","poster":"Jesuisleon","upvote_count":"1","timestamp":"1683227280.0"}],"timestamp":"1632338580.0","poster":"Moon","content":"I believe answers are \"A & E\".\nD: is wrong because SCP does not give privileges (enable EC2 full Access!).\nE: is correct as it is a strategy for role assuming by other accounts, to perform full EC2 access.","comment_id":"13453"},{"content":"AD\nB\\E: This is not minimizing the effort.\nC: You don’t need VPC peering unless the EC2 needs access across the accounts.","comments":[{"content":"SCP only reduce access, never give more. So D is clearly not a choice.","timestamp":"1632916140.0","comment_id":"55546","upvote_count":"5","comments":[{"poster":"sarah_t","upvote_count":"4","comment_id":"333506","comments":[{"upvote_count":"2","timestamp":"1679515020.0","comment_id":"847462","content":"SCPs function as a permission boundary. They don't actually allow access.","poster":"atlasga"}],"timestamp":"1635793740.0","content":"SCP can deny or allow."}],"poster":"Mobidic"}],"timestamp":"1632199200.0","poster":"donathon","comment_id":"11737","upvote_count":"28"},{"upvote_count":"1","timestamp":"1687444140.0","content":"Selected Answer: AD\nThe correct combination of steps to meet the requirements would be:\n\nA. Create an organization from the master account. Send invitations to the secondary accounts from the master account. Accept the invitations and create an OU.\nD. Create a service control policy (SCP) that enables full EC2 access and attach the policy to the OU.\n\nExplanation:\nA. Creating an organization from the master account and sending invitations to the secondary accounts allows for consolidation into one organization. Accepting the invitations and creating an Organizational Unit (OU) helps in organizing the accounts within the organization.","comments":[{"content":"Options B, C, and E are incorrect:\n\nB. Sending a join request to the master account from each secondary account is not the appropriate way to consolidate accounts into one organization. In this scenario, the master account should initiate the invitations to the secondary accounts.\n\nC. Creating a VPC peering connection is not necessary to consolidate the accounts into one organization. VPC peering is used to establish connectivity between VPCs in different accounts or regions, but it does not directly address the requirements stated.\n\nE. Creating a full EC2 access policy and mapping it to a role in each account would provide the necessary access, but it does not fulfill the requirement of consolidating all accounts into one organization. This approach would require configuring the access policy and role in each account individually, which goes against the requirement of minimizing effort when adding additional secondary accounts.","comment_id":"930673","upvote_count":"1","poster":"SkyZeroZx","timestamp":"1687444140.0"}],"poster":"SkyZeroZx","comment_id":"930671"},{"poster":"dev112233xx","upvote_count":"1","content":"Selected Answer: AE\nAE is the correct answer no doubts!\nSCP doesn't grant the management account access to member accounts... you still need a role with trust policy, read this interesting article:\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role","comment_id":"869239","timestamp":"1681375740.0"},{"content":"AE makes sense.\nWhen you create an Organization, the default SCP of AllowFullAWSAccess is attached to the root, which means EC2 is already allowed across all member accounts. Now, the member accounts can DENY or ALLOW EC2 in their individual accounts. In this case ALLOW.","timestamp":"1673555580.0","comment_id":"773889","poster":"NishKar","upvote_count":"1"},{"poster":"psou7","upvote_count":"2","timestamp":"1666180560.0","comment_id":"698984","content":"I will go with A E"},{"content":"Selected Answer: AD\nThe answer is AD.\n\nAs the suggested answer says, there is a concept of Permission Boundary vs Actual IAM Policies. That is, we have a concept of \"Allow\" vs \"Grant\". In terms of boundaries, we have the following three boundaries:\n1. SCP\n2. User/Role boundaries\n3. Session boundaries (ex. AssumeRole ... )\n\nIn terms of actual permission granting, we have the following:\n1. Identity Policies\n2. Resource Policies\n\nD is allowing permissions while E is granting permissions. In addition, E doesn't meet with the requirement \"Minimize the effort required to add additional secondary accounts\", because the trusted relations of role in all existing accounts have to be changed when a new account needs to be added, which is quite a lot of work. All things considered, D is a more preferable answer compared with E.","upvote_count":"1","timestamp":"1664504280.0","poster":"tomosabc1","comment_id":"683169"},{"poster":"Sathish1412","content":"Selected Answer: AD\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_strategies.html ----Check bottom of this page","upvote_count":"1","comment_id":"669083","timestamp":"1663164120.0"},{"content":"For D: https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_strategies.html","timestamp":"1661742540.0","poster":"kadev","upvote_count":"1","comment_id":"653261"},{"content":"afadfasdfasdfasdfasdfsadfasdfsadfasdf","upvote_count":"1","poster":"galb818","comment_id":"650596","timestamp":"1661232540.0"},{"content":"A,D -> Using organizations with SCP applied is more efficient approach, NOT organizations with IAM","comment_id":"635541","timestamp":"1658574480.0","poster":"CloudHandsOn","upvote_count":"1"},{"timestamp":"1652635200.0","comment_id":"602219","poster":"bobsmith2000","comments":[{"upvote_count":"1","timestamp":"1664503500.0","poster":"tomosabc1","content":"To quote from the link you provided, \"Even though this statement uses the same Allow value keyword as an IAM permission policy, in an SCP it doesn't actually grant a user permission to do anything...\", since both SCP(Allowing permissions) and Identity/Resource Policies use \"Effect\":\"Allow\", your explanation can not be used to make D correct and E incorrect.","comment_id":"683161"}],"content":"Selected Answer: AD\nI suppose A it's no doubt.\nRegarding D:\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html\nSearch for \"Effect\": \"Allow\" and read carefully","upvote_count":"1"},{"content":"Selected Answer: AE\nB. Requesting from each account is more effort so prefer A\nD: SCP can be used only to deny access and not gram access","comment_id":"546391","timestamp":"1644748200.0","poster":"RVivek","upvote_count":"1"},{"timestamp":"1639882200.0","poster":"vbal","upvote_count":"1","comment_id":"504597","content":"A&E; D would have been right if the question was to give only EC2 Access by removing the FullAwsAccess and then attaching Full EC2 Access but even that would have not been enough since IAM in each account need to give permission to each User & Group on all EC2 Actions."},{"comment_id":"496724","timestamp":"1638959160.0","content":"A. Create an organization from the master account. Send invitations to the secondary accounts from the master account. Accept the invitations and create an OU.\nD. Create a service control policy (SCP) that enables full EC2 access, and attach the policy to the OU.","poster":"cldy","upvote_count":"1"},{"timestamp":"1636281120.0","comment_id":"450120","upvote_count":"1","poster":"Kopa","content":"Im for A,D"},{"timestamp":"1636150380.0","comment_id":"418164","upvote_count":"4","content":"A&E\nA correct - create ORG and invite account AND THAN -->\nDefault AWS Organizations policy for new ORG is \"FullAWSAccess\" set on each OU. It gives full access to every operation. Users from master can assume a role (set druing invitation process) in each connected account to get full Admin access.\nTherefore: D wrong\nIf we want to \"Allow full access to the Amazon EC2 service from the master account and >>the secondary accounts<<. We should create a role with required permissions in each account and allow accounts to assume those roles.\nI believe E correct.\nBTW. SCP only sets what permissions can be used in an account:\n\"No permissions are granted by an SCP. An SCP defines a guardrail, or sets limits, on the actions that the account's administrator can delegate to the IAM users and roles in the affected accounts.\"","comments":[{"comment_id":"504599","content":"This should be the highly accepted answer. Great Explanation.","upvote_count":"1","poster":"vbal","timestamp":"1639882320.0"}],"poster":"DerekKey"},{"comment_id":"410489","upvote_count":"1","content":"I'll go with A,D","timestamp":"1636143600.0","poster":"WhyIronMan"},{"poster":"Pb55","comment_id":"397680","timestamp":"1636121280.0","content":"AD.\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html\n{\n \"Statement\": {\n \"Effect\": \"Allow\",\n \"Action\": \"s3:*\",\n \"Resource\": \"*\"\n }\n}\nThis allows EC2 for all accounts.","upvote_count":"2"},{"poster":"digimaniac","comment_id":"345228","upvote_count":"2","timestamp":"1635878520.0","content":"D is better than E. SCP can grant EC2 full access as long as it is across the board for there is not conditioning statement in AllowList https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_strategies.html#orgs_policies_allowlist"},{"comments":[{"content":"Are you Pyae Phyoe Shein ?","poster":"solo18","comment_id":"393590","timestamp":"1636118880.0","upvote_count":"2"}],"comment_id":"337058","content":"for me, A & D is the best choice.\nFor E, it would take time to create policy for each 10 accounts.","timestamp":"1635869400.0","poster":"ppshein","upvote_count":"2"},{"comment_id":"317155","poster":"Pupu86","upvote_count":"1","timestamp":"1635789420.0","content":"A & E\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html"},{"upvote_count":"1","poster":"gpark","content":"AE\n===\nSCP is the only guard rail.\nAnd, on Default SCP it allows anything, no guard rail at all.\nNevertheless, SCP cannot give any permission, the separate role would be needed.","comment_id":"296155","timestamp":"1635630300.0"},{"poster":"Kian1","upvote_count":"2","content":"going with AD","comment_id":"291369","timestamp":"1635548100.0"},{"upvote_count":"4","poster":"Ebi","timestamp":"1635490680.0","comment_id":"280291","content":"AD for me"},{"poster":"newme","comment_id":"254009","timestamp":"1635437940.0","content":"A & D.\nChoosing D over E, just because SCP can do the job easily.\nAllowing or denying, does the word really matter?","upvote_count":"2"},{"timestamp":"1635221280.0","upvote_count":"1","content":"A&D. Ref: https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html","poster":"consultsk","comment_id":"253299"},{"poster":"darthvoodoo","upvote_count":"1","timestamp":"1635157380.0","content":"A & D 100%. E is wrong because it is not as scalable as D and doesn't minimize the effort that is one of the requirements. In that case, you would need to create a new secondary account, add the ec2 access policy to that account, and establish the trust. With D, you literally don't need to do a thing.","comment_id":"250620"},{"content":"having looked at all the requirements in the question i will go for A and E .. its a toss up regarding D and when it comes to exam it would be individual choice and many would go for D .. however i am persuaded to go for E (Just however)","timestamp":"1635147780.0","upvote_count":"1","poster":"petebear55","comment_id":"246401"},{"content":"Correct is A. invitations to the secondary accounts and SCP","poster":"T14102020","upvote_count":"1","timestamp":"1635089100.0","comment_id":"243018"},{"upvote_count":"1","content":"A is a given. Good arguments for both D and E. I would go with D instead of E because it does refer to allowing full access to the EC2 service in each of the accounts within the OU but not actually grant access to the EC2 services. Moreover the hint given by the question that alludes me to \"D\" is least amount of effort when new secondary accounts are added.","poster":"Bulti","comment_id":"236192","timestamp":"1634932560.0"},{"timestamp":"1634901000.0","comment_id":"230747","poster":"jackdryan","content":"I'll go with A,D","upvote_count":"3"},{"poster":"gookseang","upvote_count":"1","timestamp":"1634752740.0","comment_id":"230042","content":"seems AD"},{"comment_id":"193067","upvote_count":"2","poster":"pddddd","content":"E is not correct. AWS account cannot assume role.\nD - All services are allowed until you assign SCP","timestamp":"1634729640.0"},{"comments":[{"content":"You nailed it","comment_id":"230746","upvote_count":"1","timestamp":"1634870220.0","poster":"jackdryan"},{"upvote_count":"1","timestamp":"1635127260.0","poster":"rcher","comment_id":"243334","content":"Under-rated explaination"}],"comment_id":"166204","timestamp":"1634661240.0","poster":"LunchTime","content":"A, D is correct.\nMany excellent arguments here for both D and E being correct. \nI believe that \"D\" is the correct answer since the question says \"Allow full access to EC2\" instead of \"GRANT full access to EC2\". Answer \"D\" allows fulls access while answer \"E\" grants full access. As such D, and not E is correct.","upvote_count":"11"},{"timestamp":"1634588580.0","poster":"hailiang","content":"for those who insist on AD, i quote directly from AWS doc \"SCPs alone are not sufficient for allowing access in the accounts in your organization. Attaching an SCP to an AWS Organizations entity (root, organizational unit (OU), or account) defines a guardrail for what actions the principals can perform. You still need to attach identity-based or resource-based policies to principals or resources in your organization's accounts to actually grant permissions to them\"","comment_id":"161867","upvote_count":"2"},{"upvote_count":"1","poster":"fullaws","content":"A and D, if the sentences is \"Allow full access to the Amazon EC2 service from the master account TO instead of AND the secondary accounts\" then E will be valid. This sentence mean two entity, the account and the EC2 service API. SCP is more to account boundary. Trust Policy more to cross-\"role\"-account boundary.","comment_id":"150379","timestamp":"1634519700.0"},{"upvote_count":"2","comment_id":"135347","timestamp":"1634450820.0","poster":"inf","content":"Part 3:\nAnswer: A,E\nTrust relationship policy that minimises effort by copying/pasting into each account\n{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n {\n \"Effect\": \"Allow\",\n \"Principal\": {\"Service\": \"ec2.amazonaws.com\"},\n \"Action\": \"sts:AssumeRole\",\n \"Condition\": {\"StringEquals\": {\"aws:PrincipalOrgID\": \"o-123213123123\"} }\n }\n ]\n}"},{"comment_id":"135346","timestamp":"1634408280.0","upvote_count":"1","poster":"inf","content":"Part 2:\nAnswer: A,E (for those who think the A,D is too straight forward)\nIf we choose A,E we are making an assumption that the EC2 service in each account must be accessible by all other accounts, OR WE RETHINK how E is worded\n- \"Create a full EC2 access policy and map the policy to a role in each account\" - very clear, however, what if \"minimize the effort\" implies a SINGLE policy that we can copy and paste into each account? With that in mind\n- \"Trust every other account to assume the role\" - this can be read in two ways: \n--- allow every account to assume the EC2 full access role in every other account (note: this wasn't a requirement); OR \n--- use a statement in the trust policy that implicitly allows every other account IN THE ORG to assume the role - i.e. use AWS:PrincipalOrgId"},{"upvote_count":"1","poster":"inf","content":"Part 1:\nAnswer: A,D (for those who like this neatly wrapped solution)\nThe question is about organizations, not IAM policies, not networking. No matter which answers are chosen, we are making assumptions. For instance,\n\"create an OU\" - where does it say move accounts to the OU? we've assumed this.\n\"Allow full access to the EC2 service\" - it does not ask to specifically grant access to the service, it is asking to allow use of the service - also doesn't mention other services, which we could assume must be denied.\n\nIf we choose A,D we assume the default policy has been replaced, and we are using an SCP policy as an \"Allow List\" applied to secondary accounts \"enabling\" use of the service. Given SCPs can't restrict access to services in the master account, EC2 is implicitly allowed and is covered. \"Using SCPs as an allow list\" in their documentation shows how this is done for EC2 service.","comment_id":"135345","timestamp":"1634346300.0"},{"content":"A&E more likely\nPoorly written question. E doesn't make any sense if you parse it. make a role in each account and trust it in other accounts? sounds like a cross-account access, which has nothing to do with this question. Still an IAM policy is required to get access, SCP is not enough","poster":"NikkyDicky","timestamp":"1634233740.0","comment_id":"133046","upvote_count":"2"},{"poster":"easytoo","timestamp":"1634173680.0","upvote_count":"1","comment_id":"115008","content":"A, D is what first jumped out at me but looking closer I believe it is A, E. \nSCP allows all by default so the process of creating a policy to enable full ec2 access would not be required."},{"content":"A & E\nPart of the requirement is \"Minimize the effort required to add additional secondary accounts.\"\n* When creating multiple secondary accounts, the scp needs to be applied to all secondary accounts.\n* If applying an SCP to an OU, you still need to grant IAM permissions to all the users in the OU.","poster":"mhampar12","upvote_count":"2","comment_id":"112741","timestamp":"1634132400.0"},{"comment_id":"110388","poster":"mat2020","comments":[{"content":"i will support A & D too","comment_id":"112408","poster":"dayody","timestamp":"1634123100.0","upvote_count":"3"}],"timestamp":"1634122080.0","content":"support A & D","upvote_count":"2"},{"poster":"hobokabobo","content":"A&E\n\nFor D vrs. E: SCP may be used grant access to EC2 but it doesn't replace IAM. You need BOTH to allow access. SCP by default has a rule that allows everything. So SCP is all good but IAM needs to be taken care.\nWe need give IAM access to EC2 to all users from all accounts to all accounts. (not only from the master account - or a login account. All accounts: the question states that ). You do that by alowing a user to assume a role cross account via trust policy. \n[ Even if you would leverage AWS SSO(would make sense), SSO would create roles for access in the background and you end up with a page showing all the roles you can asume. ]","comment_id":"109938","timestamp":"1634099340.0","upvote_count":"4"},{"poster":"JAWS1600","upvote_count":"1","comment_id":"107892","timestamp":"1634017140.0","content":"D is by default.. Allowing access to all services - whitelisted by defalu. It is more useful if we want to Blacklist any policy.\nFor allowing - I would go with E."},{"content":"A and E!\nhaha seriously can't believe everyone is going for D option. D doesn't give access - you must revisit your knowledge around what SCP is.","upvote_count":"3","comment_id":"107532","comments":[{"upvote_count":"1","content":"Totally agree with you!","poster":"seamas","timestamp":"1634249880.0","comment_id":"134816"}],"poster":"Wira","timestamp":"1633973100.0"},{"upvote_count":"1","content":"A and D","timestamp":"1633959960.0","comment_id":"106220","poster":"meenu2225"},{"comment_id":"94810","timestamp":"1633864200.0","upvote_count":"2","content":"A,D are correct","poster":"FreeSwan"},{"timestamp":"1633614060.0","comment_id":"94292","comments":[{"upvote_count":"1","comment_id":"106218","content":"Mate the requirement is: Allow full access to the Amazon EC2 service from the master account and the secondary accounts. Secondary account not wanting the EC2 access is not part of the requirement here.\nSo, in order to do it effectively you can deplpy it via policy.\nA & D are the correct answers.","timestamp":"1633914840.0","poster":"meenu2225"}],"content":"For those who chose D, What if the Secondary accounts deny the full ec2 access ?\nSo it's not a real solution, E looks better","poster":"Ibranthovic","upvote_count":"1"},{"comment_id":"85697","timestamp":"1633549800.0","poster":"fw","content":"My Choice is A & E.","upvote_count":"1"},{"content":"A & E is my answer","poster":"Joeylee","upvote_count":"2","timestamp":"1633377660.0","comment_id":"76590"},{"upvote_count":"2","content":"D vs. E\nD: By default, organization has a default SCP with full access to all AWS services. Considering that, D won't be necessary at all. \nE: This is weird. Create Full EC2 Access IAM Policy and Attach to a Role in each and every account. Allows other accounts to assume each other roles? This is cross-account(s) access. Was that the requirement? Also, how does this minimize effort for new accounts? All accounts' roles would have to be updated. \n\nQuite annoying. I will go with A & D assuming test writer forgot about default SCP.","comment_id":"70820","timestamp":"1633173120.0","poster":"Smart","comments":[{"upvote_count":"4","timestamp":"1633403340.0","content":"Revisiting...\"Allow full access to the Amazon EC2 service from the master account and the secondary accounts\". This is the problem - Is EC2 full access at each account level independently or Is EC2 full access at the cross-account level? \n\nI will move towards A & E.","poster":"Smart","comment_id":"76990"}]},{"comment_id":"62643","content":"A & E\nA. Organization, invitation from master account; member account accept the invitation. create OU\nB. Wrong. as stated at A\nC. Organization here, not about VPC peering\nD. SCP just define the boundary, but doesn't grant access \nE, role with EC2 access policy; Trust every other account to assume this role, to let each other access their EC2","timestamp":"1633058760.0","poster":"paulwang","upvote_count":"4"},{"poster":"amog","content":"I choose A,D for minimize effort to accept other account","timestamp":"1632897540.0","comment_id":"51252","upvote_count":"1"},{"comment_id":"24643","upvote_count":"3","content":"AD is correct","timestamp":"1632836040.0","poster":"examacc"},{"comments":[{"comment_id":"24057","timestamp":"1632726060.0","content":"After checking others' comments, I am more in favor of A, E now.","upvote_count":"4","poster":"uopspop"}],"content":"support A, D\n\nThere is a concept of Permission Boundary vs Actual IAM Policies\nThat is, we have a concept of \"Allow\" vs \"Grant\". \n\nIn terms of boundaries, we have the following three boundaries: \n1. SCP\n2. User/Role boundaries\n3. Session boundaries (ex. AssumeRole ... ) \n\nIn terms of actual permission granting, we have the following: \n1. Identity Policies\n2. Resource Policies","poster":"uopspop","upvote_count":"7","timestamp":"1632719340.0","comment_id":"24051"},{"content":"A & E is correct you cant use SCP to allow full access the default SCP policy is already set to allow. The question however states \"Allow full access to the Amazon EC2 service from the master account and the secondary accounts.\" implying that any accounts Ec2 service should allow access to any other accounts ec2 service. Only way to do that would be via role policies and cross account assume roles not through SCP.","upvote_count":"4","timestamp":"1632697980.0","comments":[{"content":"it seems you are confusing scp with permission boundaries","comment_id":"24642","timestamp":"1632786720.0","poster":"examacc","upvote_count":"1"}],"comment_id":"19405","poster":"Warrenn"},{"comment_id":"15735","upvote_count":"4","poster":"Marcos","timestamp":"1632614940.0","content":"I am still not convinced. SCP won't allow anything. It just won't deny access. It is not enough."},{"upvote_count":"13","timestamp":"1632106680.0","content":"A & D here","comment_id":"10514","poster":"dpvnme"}],"question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/5028-exam-aws-certified-solutions-architect-professional-topic-1/","exam_id":32,"unix_timestamp":1568153760,"topic":"1","question_text":"A Solutions Architect is designing a multi-account structure that has 10 existing accounts. The design must meet the following requirements:\n✑ Consolidate all accounts into one organization.\n✑ Allow full access to the Amazon EC2 service from the master account and the secondary accounts.\n✑ Minimize the effort required to add additional secondary accounts.\nWhich combination of steps should be included in the solution? (Choose two.)","answer_images":[],"answers_community":["AD (67%)","AE (33%)"],"timestamp":"2019-09-11 00:16:00","answer":"AD","isMC":true,"choices":{"A":"Create an organization from the master account. Send invitations to the secondary accounts from the master account. Accept the invitations and create an OU.","B":"Create an organization from the master account. Send a join request to the master account from each secondary account. Accept the requests and create an OU.","E":"Create a full EC2 access policy and map the policy to a role in each account. Trust every other account to assume the role.","D":"Create a service control policy (SCP) that enables full EC2 access, and attach the policy to the OU.","C":"Create a VPC peering connection between the master account and the secondary accounts. Accept the request for the VPC peering connection."}}],"exam":{"isMCOnly":false,"id":32,"provider":"Amazon","numberOfQuestions":1019,"name":"AWS Certified Solutions Architect - Professional","isImplemented":true,"lastUpdated":"11 Apr 2025","isBeta":false},"currentPage":94},"__N_SSP":true}