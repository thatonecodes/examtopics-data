{"pageProps":{"questions":[{"id":"ErnX0RrQ9PoAtK2PuV5K","question_images":[],"answer":"C","timestamp":"2023-04-15 16:45:00","answers_community":["C (93%)","7%"],"url":"https://www.examtopics.com/discussions/amazon/view/106262-exam-aws-certified-devops-engineer-professional-dop-c02/","discussion":[{"upvote_count":"12","poster":"haazybanj","content":"Option B, using two AWS Elastic Beanstalk environments to perform a blue/green deployment from the original environment to the new one, would not launch a second fleet of instances. Instead, it would create a new environment and deploy the application version to it. It also requires the use of an application version lifecycle policy to terminate the original environment in 1 hour.\n\nOption D, using AWS Elastic Beanstalk with the configuration set to Immutable and creating an .ebextension to set the deletion policy of the ALB to 1 hour, would not launch a second fleet of instances, and it would not maintain the original fleet unchanged while the second fleet is launched. Additionally, the .ebextension approach is not the recommended way to delete resources in AWS.\n\nTherefore, the correct option is C, using AWS CodeDeploy with a deployment group configured with a blue/green deployment configuration and selecting the option to Terminate the original instances in the deployment group with a waiting period of 1 hour.","timestamp":"1682916060.0","comment_id":"885869"},{"content":"Selected Answer: C\nKey words: EC2 for CodeDeploy, Elastic Beanstalk for CodePipeline.","timestamp":"1738655820.0","poster":"hayjaykay","comment_id":"1351248","upvote_count":"2"},{"comment_id":"1292678","upvote_count":"1","poster":"newpotato","timestamp":"1727937060.0","content":"Option B would require more manual intervention and configuration, making it a less optimal solution compared to the seamless blue/green deployment and automatic fleet termination provided by Option C. \n\nOption D involves unnecessary complexity around setting ALB deletion policies, and while immutable deployments offer zero-downtime updates, they don't fully meet the core requirements of automatic traffic shifting and fleet termination"},{"comment_id":"1222891","upvote_count":"1","timestamp":"1717273800.0","poster":"73d8cc9","content":"Selected Answer: D\nImmutable strategy with Elastic Beanstalk involves deploying additional instance while Blue/Green strategy involves deploying another environment. The key difference is environment vs instances"},{"comment_id":"1205176","poster":"seetpt","timestamp":"1714582680.0","content":"Selected Answer: C\nC is ok","upvote_count":"1"},{"poster":"vmahilevskyi","upvote_count":"3","timestamp":"1709404080.0","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-create-blue-green.html","comment_id":"1164319"},{"poster":"thanhnv142","comment_id":"1136819","comments":[{"content":"No C is the more accurate and logical","poster":"jojom19980","comment_id":"1153257","timestamp":"1708259040.0","upvote_count":"1"}],"content":"A is correct: The question ask for a solution to automatic deployment of EC2 instances, which is the job of cloudFormation\n- B and D is irrelevant because it is use to deploy webapps only, not EC2 instances\n- C is also irrelevant because codedeploy (literlly by the name: CODEdeploy) is only used for deploying code, not EC2 instances, which is not code. Dont know why ChatGPT recommend this, but it is wrong definitely","upvote_count":"1","timestamp":"1706710140.0"},{"content":"Selected Answer: C\nC looks like the best solution.","comment_id":"929072","upvote_count":"3","poster":"madperro","timestamp":"1687323780.0"},{"poster":"haazybanj","timestamp":"1682916000.0","comment_id":"885867","content":"Selected Answer: C\nTo satisfy the requirements of launching a second fleet of instances with the same capacity as the original fleet, maintaining the original fleet unchanged while the second fleet is launched, transitioning traffic to the second fleet when the second fleet is fully deployed, and terminating the original fleet automatically 1 hour after the transition, the best solution is to use AWS CodeDeploy with a blue/green deployment configuration, and selecting the option to Terminate the original instances in the deployment group with a waiting period of 1 hour.","upvote_count":"3"},{"poster":"alce2020","timestamp":"1681569900.0","content":"Selected Answer: C\nOption C","comment_id":"871002","upvote_count":"2"}],"answer_description":"","answer_images":[],"exam_id":23,"unix_timestamp":1681569900,"question_id":311,"topic":"1","isMC":true,"answer_ET":"C","choices":{"C":"Use AWS CodeDeploy with a deployment group configured with a blue/green deployment configuration Select the option Terminate the original instances in the deployment group with a waiting period of 1 hour.","D":"Use AWS Elastic Beanstalk with the configuration set to Immutable. Create an .ebextension using the Resources key that sets the deletion policy of the ALB to 1 hour, and deploy the application.","B":"Use two AWS Elastic Beanstalk environments to perform a blue/green deployment from the original environment to the new one. Create an application version lifecycle policy to terminate the original environment in 1 hour.","A":"Use an AWS CloudFormation template with a retention policy for the ALB set to 1 hour. Update the Amazon Route 53 record to reflect the new ALB."},"question_text":"A DevOps engineer manages a web application that runs on Amazon EC2 instances behind an Application Load Balancer (ALB). The instances run in an EC2 Auto Scaling group across multiple Availability Zones. The engineer needs to implement a deployment strategy that:\nLaunches a second fleet of instances with the same capacity as the original fleet.\nMaintains the original fleet unchanged while the second fleet is launched.\nTransitions traffic to the second fleet when the second fleet is fully deployed.\nTerminates the original fleet automatically 1 hour after transition.\nWhich solution will satisfy these requirements?"},{"id":"p1K50IrMnQnkfUqpNutw","answer":"ADF","unix_timestamp":1680690420,"timestamp":"2023-04-05 12:27:00","answers_community":["ADF (96%)","2%"],"discussion":[{"comment_id":"921400","content":"Selected Answer: ADF\nADF seems to be the correct answer","poster":"kacsabacsi78","upvote_count":"11","timestamp":"1686569460.0"},{"poster":"Dimidrol","timestamp":"1680690420.0","upvote_count":"9","content":"Selected Answer: ADF\nA D F for me. https://jackiechen.blog/2020/01/29/share-encrypted-ami-across-aws-accounts/","comment_id":"861977"},{"timestamp":"1740035160.0","comments":[{"poster":"cmzk","upvote_count":"1","content":"Incorrect Choices:\nB. In the source account, copy the unencrypted AMI to an encrypted AMI. Specify the default Amazon Elastic Block Store (Amazon EBS) encryption key in the copy action.\n\nThis is incorrect because the company requires the use of the KMS key created in the source account, not the default EBS encryption key.\n\nC. In the source account, create a KMS grant that delegates permissions to the Auto Scaling group service-linked role in the target account.\n\nThis is incorrect because KMS grants cannot be created for resources in another account. The target account must create the grant for its own service-linked role.\n\nE. In the source account, share the unencrypted AMI with the target account.\n\nThis is incorrect because the company requires all AMIs to be encrypted before sharing.","timestamp":"1740035160.0","comment_id":"1359125"}],"comment_id":"1359124","poster":"cmzk","content":"Selected Answer: ADF\nA. In the source account, copy the unencrypted AMI to an encrypted AMI. Specify the KMS key in the copy action.\n\nThe DevOps engineer must first encrypt the unencrypted AMI using the KMS key created in the source account. This creates a new encrypted AMI.\n\nD. In the source account, modify the key policy to give the target account permissions to create a grant. In the target account, create a KMS grant that delegates permissions to the Auto Scaling group service-linked role.\n\nThe KMS key policy in the source account must be updated to allow the target account to use the key for decryption. Additionally, the target account needs to create a KMS grant to allow the Auto Scaling group service-linked role to use the KMS key.\n\nF. In the source account, share the encrypted AMI with the target account.\n\nAfter encrypting the AMI, the DevOps engineer must share the encrypted AMI with the target account by modifying the AMI's permissions.","upvote_count":"2"},{"poster":"cmzk","comment_id":"1359122","timestamp":"1740034380.0","upvote_count":"1","content":"Selected Answer: ADF\nA, D, F are the correct"},{"timestamp":"1722792120.0","comment_id":"1260740","upvote_count":"1","content":"Selected Answer: ADF\nADF for me,","poster":"namtp"},{"comment_id":"1163630","upvote_count":"1","poster":"martinarg2024","timestamp":"1709312040.0","content":"Selected Answer: ADF\nADF is correct"},{"poster":"Vitalydt","upvote_count":"1","timestamp":"1709119560.0","content":"Selected Answer: ADF\nA D F for me","comment_id":"1161558"},{"content":"ADF: \nA: cannot be B because using KMS\nD: Must share with the account because grant is only temp\nF: share the AMI with the target","comment_id":"1133782","timestamp":"1706410440.0","upvote_count":"2","poster":"thanhnv142"},{"comment_id":"1133414","upvote_count":"1","timestamp":"1706366520.0","content":"AFD seem about right","poster":"thanhnv142"},{"poster":"Jonalb","timestamp":"1705816560.0","content":"ADF the correct answer","comment_id":"1127651","upvote_count":"1"},{"comment_id":"1121239","poster":"khchan123","upvote_count":"1","comments":[{"content":"Should be ADF","upvote_count":"1","timestamp":"1705113840.0","comment_id":"1121241","poster":"khchan123"}],"content":"Selected Answer: ACF\nACF. For autoscaling to work a KMS grant is needed","timestamp":"1705113780.0"},{"content":"Selected Answer: ADF\nADF is the right answer","timestamp":"1702174020.0","upvote_count":"1","poster":"harithzainudin","comment_id":"1092249"},{"comment_id":"1060931","upvote_count":"2","timestamp":"1698960900.0","content":"Selected Answer: ADF\nC is incorrect as the AMI **MUST** be shared with the account.\nnot just the scaling group. So it would make sense for the target account to create the grant.","poster":"VrilianVirgil"},{"comment_id":"1016006","content":"Selected Answer: ADF\nADF is the right answer.","timestamp":"1695572640.0","poster":"ataince","upvote_count":"1"},{"poster":"BaburTurk","timestamp":"1693648800.0","upvote_count":"3","comment_id":"996788","content":"Selected Answer: ADF\nhttps://aws.amazon.com/blogs/security/how-to-create-a-custom-ami-with-encrypted-amazon-ebs-snapshots-and-share-it-with-other-accounts-and-regions/"},{"upvote_count":"1","content":"Selected Answer: ADF\nADF is right","poster":"Skshitiz","timestamp":"1693073280.0","comment_id":"990984"},{"upvote_count":"2","timestamp":"1690184820.0","comment_id":"961291","poster":"DavidPham","content":"Selected Answer: ADF\nADF is correct"},{"timestamp":"1688470440.0","poster":"habros","upvote_count":"2","comment_id":"942688","content":"Selected Answer: ADF\nStep 1: Always specify the KMS (CMK) key to encrypt with when creating/copying images\nStep 2: Modify the CMK key policy to allow trusted role to assume the key to decrypt image\nStep 3: Use cross-account trust policy to grant the other account access to the encrypted image"},{"upvote_count":"1","content":"Selected Answer: ACD\nACD, The question is KMS Permission.\nOption F is not a valid solution because it shares the encrypted AMI with the target account, but it does not address the requirement of delegating permissions to the Auto Scaling group service-linked role to use the KMS key to launch instances from the encrypted AMI.","comment_id":"921068","poster":"SanChan","timestamp":"1686535620.0","comments":[{"timestamp":"1686535740.0","poster":"SanChan","comment_id":"921069","content":"Sorry as my fault ADF is correct","upvote_count":"1"}]},{"timestamp":"1686217620.0","poster":"madperro","upvote_count":"4","comment_id":"918085","content":"Selected Answer: ADF\nADF seems to be the correct answer.\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html"},{"comment_id":"910284","timestamp":"1685453760.0","poster":"bcx","upvote_count":"1","content":"Selected Answer: ADF\nFor me is ADF"},{"upvote_count":"1","poster":"ParagSanyashiv","content":"Selected Answer: ADF\nADF makes more sense","timestamp":"1683517980.0","comment_id":"891787"},{"poster":"ele","timestamp":"1680868980.0","upvote_count":"1","comment_id":"863811","content":"Selected Answer: ADF\nADF right"},{"comment_id":"862902","poster":"911f9cf","upvote_count":"1","content":"Selected Answer: ADF\nA D F are good","timestamp":"1680781080.0"},{"poster":"asfsdfsdf","upvote_count":"3","timestamp":"1680765660.0","comment_id":"862744","content":"Selected Answer: ADF\nThis is clearly stated in the document:\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html\nService linked role must get specific grant on the account it cannot use key policy"}],"answer_description":"","question_id":312,"url":"https://www.examtopics.com/discussions/amazon/view/105265-exam-aws-certified-devops-engineer-professional-dop-c02/","answer_ET":"ADF","answer_images":[],"isMC":true,"choices":{"A":"In the source account, copy the unencrypted AMI to an encrypted AMI. Specify the KMS key in the copy action.","D":"In the source account, modify the key policy to give the target account permissions to create a grant. In the target account, create a KMS grant that delegates permissions to the Auto Scaling group service-linked role.","F":"In the source account, share the encrypted AMI with the target account.","C":"In the source account, create a KMS grant that delegates permissions to the Auto Scaling group service-linked role in the target account.","B":"In the source account, copy the unencrypted AMI to an encrypted AMI. Specify the default Amazon Elastic Block Store (Amazon EBS) encryption key in the copy action.","E":"In the source account, share the unencrypted AMI with the target account."},"topic":"1","question_images":[],"question_text":"A company must encrypt all AMIs that the company shares across accounts. A DevOps engineer has access to a source account where an unencrypted custom AMI has been built. The DevOps engineer also has access to a target account where an Amazon EC2 Auto Scaling group will launch EC2 instances from the AMI. The DevOps engineer must share the AMI with the target account.\nThe company has created an AWS Key Management Service (AWS KMS) key in the source account.\nWhich additional steps should the DevOps engineer perform to meet the requirements? (Choose three.)","exam_id":23},{"id":"7x86gNDpsP5Vx717cnhm","question_id":313,"answers_community":["B (100%)"],"unix_timestamp":1681569480,"exam_id":23,"url":"https://www.examtopics.com/discussions/amazon/view/106260-exam-aws-certified-devops-engineer-professional-dop-c02/","answer_description":"","choices":{"D":"Record an Amazon CloudWatch Logs log message for every S3 object access event. Configure a CloudWatch Logs log stream to write the file access information, such as user, S3 bucket, and file key, to an Amazon Kinesis Data Analytics for SQL application. Perform a sliding window analysis.","B":"Activate S3 server access logging. Use Amazon Athena to create an external table with the log files. Use Athena to create a SQL query to analyze the access patterns.","C":"Invoke an AWS Lambda function for every S3 object access event. Configure the Lambda function to write the file access information, such as user. S3 bucket, and file key, to an Amazon Aurora database. Use an Aurora SQL query to analyze the access patterns.","A":"Activate S3 server access logging. Import the access logs into an Amazon Aurora database. Use an Aurora SQL query to analyze the access patterns."},"answer":"B","question_text":"A video-sharing company stores its videos in Amazon S3. The company has observed a sudden increase in video access requests, but the company does not know which videos are most popular. The company needs to identify the general access pattern for the video files. This pattern includes the number of users who access a certain file on a given day, as well as the number of pull requests for certain files.\nHow can the company meet these requirements with the LEAST amount of effort?","timestamp":"2023-04-15 16:38:00","answer_images":[],"discussion":[{"poster":"zijo","timestamp":"1727020440.0","comment_id":"1180224","upvote_count":"4","content":"Bis the Answer because Athena is designed for these type of use cases\nAWS Athena is a serverless interactive query service that lets you analyze data stored in Amazon Simple Storage Service (S3) using standard SQL."},{"upvote_count":"2","content":"B is correct:Use S3 in combination with Athena is the recommended way to analyze data\nA: setups of Aurora is complex and unnecessary. It also more costly than B\nC and D are both too complicated.","timestamp":"1722428040.0","comment_id":"1136824","poster":"thanhnv142"},{"poster":"habros","comment_id":"946802","timestamp":"1704767400.0","content":"Selected Answer: B\nB is so much simpler. Athena can do interactive queries on S3 data.","upvote_count":"4"},{"content":"Selected Answer: B\nB is correct and simplest.","comment_id":"929075","poster":"madperro","timestamp":"1703142360.0","upvote_count":"2"},{"content":"Selected Answer: B\nB is the answer","comment_id":"911856","timestamp":"1701423480.0","upvote_count":"1","poster":"tom_uk"},{"upvote_count":"1","timestamp":"1701333420.0","comment_id":"910917","poster":"bcx","content":"Selected Answer: B\nB is the natural way to do it"},{"timestamp":"1699745040.0","upvote_count":"1","content":"Selected Answer: B\nhttps://repost.aws/ja/knowledge-center/analyze-logs-athena","comment_id":"895425","poster":"gdtypk"},{"timestamp":"1698988380.0","poster":"haazybanj","content":"Selected Answer: B\nB is right","upvote_count":"1","comment_id":"888112"},{"timestamp":"1697832420.0","upvote_count":"1","content":"I would go with B","poster":"Sazeka","comment_id":"875969"},{"content":"Selected Answer: B\nB is correct","timestamp":"1697380680.0","comment_id":"870994","poster":"alce2020","upvote_count":"1"}],"answer_ET":"B","question_images":[],"isMC":true,"topic":"1"},{"id":"UfcU7NPL2W4Y8Hd9PoJ1","topic":"1","answer_description":"","exam_id":23,"answer":"D","timestamp":"2023-04-15 16:31:00","answers_community":["D (82%)","Other"],"answer_images":[],"answer_ET":"D","question_text":"A development team wants to use AWS CloudFormation stacks to deploy an application. However, the developer IAM role does not have the required permissions to provision the resources that are specified in the AWS CloudFormation template. A DevOps engineer needs to implement a solution that allows the developers to deploy the stacks. The solution must follow the principle of least privilege.\nWhich solution will meet these requirements?","question_id":314,"unix_timestamp":1681569060,"choices":{"B":"Create an IAM policy that allows full access to AWS CloudFormation. Attach the policy to the developer IAM role.","D":"Create an AWS CloudFormation service role that has the required permissions. Grant the developer IAM role the iam:PassRole permission. Use the new service role during stack deployments.","C":"Create an AWS CloudFormation service role that has the required permissions. Grant the developer IAM role a cloudformation:* action. Use the new service role during stack deployments.","A":"Create an IAM policy that allows the developers to provision the required resources. Attach the policy to the developer IAM role."},"question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/106259-exam-aws-certified-devops-engineer-professional-dop-c02/","discussion":[{"comment_id":"1238285","timestamp":"1719506100.0","upvote_count":"1","content":"D is totally correct","poster":"fuzzycom"},{"timestamp":"1709908380.0","poster":"4555894","comment_id":"1168872","upvote_count":"2","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html"},{"timestamp":"1706783640.0","content":"D is correct: Need to create a role for Cloud formation that has the required permissions. Then adding iam:PassRole permission to the dev IAM role to allow them to pass this role to CF\nA: no mention of creating the required permissions for ACF. Additionally, should not grant permissions for dev. \nB: grant full access is against the least privilege policy\nC: no mention of granting iam:PassRole permission to the dev","poster":"thanhnv142","upvote_count":"4","comment_id":"1137515"},{"poster":"imymoco","comment_id":"1093983","content":"A is incorrect; A would also allow resources to be used from outside of cfn.\nTherefore, D is correct.","timestamp":"1702343940.0","upvote_count":"1"},{"upvote_count":"2","poster":"jason7","content":"Selected Answer: D\nOption D allows you to create a dedicated AWS CloudFormation service role with the precise permissions required for stack deployments. Then, you grant the developer IAM role the iam:PassRole permission, which enables it to pass the service role to AWS CloudFormation without granting it broad IAM permissions. This approach aligns best with the principle of least privilege and ensures developers can deploy stacks while maintaining control over their permissions.","comment_id":"990601","timestamp":"1693039860.0"},{"timestamp":"1689415200.0","comments":[{"poster":"fanq10","content":"B is not best practice of using CloudFormation. \nD is correct, 100% sure. `iam:PassRole` to a CloudFormation Service Role (take a look at this: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html#:~:text=you%20can%20use.-,Important,-When%20you%20specify)","comment_id":"987317","timestamp":"1692698280.0","upvote_count":"1"},{"content":"Should be D! See here https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html","timestamp":"1698918480.0","comment_id":"1060446","poster":"DZ_Ben","upvote_count":"1"}],"comment_id":"952249","poster":"ogwu2000","content":"B is the answer. DC wrong - Nothing like CloudFormation service-role.","upvote_count":"1"},{"poster":"madperro","content":"Selected Answer: D\nD is the right answer.","upvote_count":"1","timestamp":"1687324740.0","comment_id":"929081"},{"poster":"tartarus23","comment_id":"928778","upvote_count":"1","timestamp":"1687292940.0","content":"Selected Answer: D\nThis solution follows the principle of least privilege by creating a specific AWS CloudFormation service role that only has the permissions required for the resources in the AWS CloudFormation stack. The developers are then granted permission to pass this role (iam:PassRole) to the AWS CloudFormation service when they initiate stack deployments, which allows the service to act on behalf of the developer to provision the specified resources."},{"content":"Selected Answer: D\nD, you pass the role that can create the resources, the user does not have the right to create the resources himself but can pass the role to CloudFormation so CloudFormation assumes it. IMHO.","poster":"bcx","timestamp":"1685515860.0","comment_id":"910931","upvote_count":"1"},{"comment_id":"898253","poster":"2pk","content":"Selected Answer: D\nThis allows them to provision the required resources specified in the CloudFormation template without granting them full access to AWS CloudFormation or the underlying resources.","timestamp":"1684152420.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"896724","timestamp":"1683986640.0","content":"Selected Answer: D\nD , passrole is right action","poster":"ele"},{"timestamp":"1683840900.0","upvote_count":"3","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/using-iam-servicerole.html","poster":"gdtypk","comment_id":"895428"},{"timestamp":"1683559620.0","upvote_count":"1","poster":"ParagSanyashiv","content":"Selected Answer: D\nD is more suitable in this case.","comment_id":"892294"},{"poster":"Frodo_the_cat","comments":[{"timestamp":"1683495420.0","upvote_count":"1","content":"Option B, creating an IAM policy that allows full access to AWS CloudFormation, is not a good solution either, as it grants excessive permissions to the developers.\n\nOption D, creating an AWS CloudFormation service role with the required permissions and granting the developer IAM role the iam:PassRole permission, allows the developers to assume the service role and deploy the stacks with the required resources. However, this option grants additional permissions to the developer IAM role, which could be abused by malicious actors\n\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html","poster":"Frodo_the_cat","comment_id":"891691"}],"upvote_count":"1","content":"C. Create an AWS CloudFormation service role that has the required permissions. Grant the developer IAM role a cloudformation:* action. Use the new service role during stack deployments.\nBy creating an AWS CloudFormation service role with the required permissions, the DevOps engineer can control the resources that the developers can access. This approach ensures that the developers have only the necessary permissions to deploy the stacks, without granting them excessive permissions that could be exploited by malicious actors. The IAM policy granting a cloudformation:* action to the developer IAM role allows the developers to use the AWS CloudFormation service role and deploy the stacks with the required resources.\nOption A, creating an IAM policy that allows the developers to provision the required resources, is not a good solution because it could potentially grant the developers too much access to resources they don't need. This violates the principle of least privilege.","comment_id":"891689","timestamp":"1683495360.0"},{"content":"D it is","poster":"kassem77","timestamp":"1683316200.0","upvote_count":"1","comment_id":"890296"},{"content":"Selected Answer: D\nOption D is the recommended solution to meet the requirements because it follows the principle of least privilege. The IAM policy that allows the developers to provision the required resources should be created and associated with the IAM role, which should be assigned the iam:PassRole permission for the AWS CloudFormation service role. By doing so, the IAM role can only assume the specific AWS CloudFormation service role and deploy the stack with the required permissions, and not have full access to all resources or full access to AWS CloudFormation.","timestamp":"1682916240.0","comment_id":"885871","poster":"haazybanj","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: B\nB it is","timestamp":"1681678980.0","poster":"alce2020","comment_id":"872182"},{"poster":"alce2020","comment_id":"870991","content":"Selected Answer: C\nC will follow the principle less privileged","comments":[],"upvote_count":"1","timestamp":"1681569060.0"}],"isMC":true},{"id":"CxskbtklX1S5nIhublPZ","answer":"D","exam_id":23,"answer_description":"","answer_ET":"D","choices":{"B":"Create an Amazon CloudWatch alarm that will be invoked by the login event. Send the notification to an Amazon Simple Notification Service (Amazon SNS) topic that the operations team is subscribed to, and have them terminate the EC2 instance within 24 hours.","D":"Create a CloudWatch Logs subscription to an AWS Lambda function. Configure the function to add a tag to the EC2 instance that produced the login event and mark the instance to be decommissioned. Create an Amazon EventBridge rule to invoke a daily Lambda function that terminates all instances with this tag.","A":"Create a CloudWatch Logs subscription to an AWS Step Functions application. Configure an AWS Lambda function to add a tag to the EC2 instance that produced the login event and mark the instance to be decommissioned. Create an Amazon EventBridge rule to invoke a second Lambda function once a day that will terminate all instances with this tag.","C":"Create an Amazon CloudWatch alarm that will be invoked by the login event. Configure the alarm to send to an Amazon Simple Queue Service (Amazon SQS) queue. Use a group of worker instances to process messages from the queue, which then schedules an Amazon EventBridge rule to be invoked."},"topic":"1","answer_images":[],"timestamp":"2023-04-16 23:05:00","question_images":[],"discussion":[{"poster":"Aesthet","comment_id":"1264175","timestamp":"1723383060.0","content":"Opion D: \"with this tag\"\nSo, there will be one tag, like ShoudTerminate: true. But by doing so we will terminate ALL instances with a tag - even those created 10 minutes ago. It doesn't seem correct, or am I missing something?","upvote_count":"1"},{"content":"D is best answer.\nhint: question includes \"~~Amazon CloudWatch Logs agent configured\"\n Lambda function is keyword.","upvote_count":"1","poster":"fuzzycom","comment_id":"1238287","timestamp":"1719506460.0"},{"timestamp":"1706797560.0","poster":"thanhnv142","upvote_count":"4","content":"D is correct:\nA: If using step function, no need to include \"Amazon EventBridge rule to invoke a second Lambda function\" \nB: With this method, policy-breaching Ec2 would be terminated manually, which cannot ensure that they are terminated within 24 hours\nC: no mention of terminating the instances","comment_id":"1137678"},{"upvote_count":"2","comment_id":"1093989","content":"D is correct; with B, SNS can cause delays.","poster":"imymoco","timestamp":"1702344420.0"},{"content":"Selected Answer: D\nD is the best answer.","comment_id":"929087","timestamp":"1687325100.0","poster":"madperro","upvote_count":"1"},{"upvote_count":"3","timestamp":"1682916720.0","comment_id":"885876","poster":"haazybanj","content":"Selected Answer: D\nD. Create a CloudWatch Logs subscription to an AWS Lambda function. Configure the function to add a tag to the EC2 instance that produced the login event and mark the instance to be decommissioned. Create an Amazon EventBridge rule to invoke a daily Lambda function that terminates all instances with this tag."},{"content":"Selected Answer: D\nD is the correct answer","comment_id":"872185","upvote_count":"3","timestamp":"1681679100.0","poster":"alce2020"}],"url":"https://www.examtopics.com/discussions/amazon/view/106442-exam-aws-certified-devops-engineer-professional-dop-c02/","unix_timestamp":1681679100,"isMC":true,"question_id":315,"question_text":"A production account has a requirement that any Amazon EC2 instance that has been logged in to manually must be terminated within 24 hours. All applications in the production account are using Auto Scaling groups with the Amazon CloudWatch Logs agent configured.\nHow can this process be automated?","answers_community":["D (100%)"]}],"exam":{"numberOfQuestions":355,"id":23,"isImplemented":true,"lastUpdated":"11 Apr 2025","name":"AWS Certified DevOps Engineer - Professional DOP-C02","isBeta":false,"isMCOnly":true,"provider":"Amazon"},"currentPage":63},"__N_SSP":true}