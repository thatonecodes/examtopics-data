{"pageProps":{"questions":[{"id":"u1iCxKIntsyF5W4s5TLL","answer_ET":"B","answer_description":"","discussion":[{"timestamp":"1702159800.0","poster":"Gomer","upvote_count":"5","comment_id":"919621","content":"Selected Answer: B\nI'm believing that applying a custom \"max-age\" to individual \"*.html\" files (\"individual pages\") is the solution. (remove my duplicate response)"},{"timestamp":"1719560820.0","upvote_count":"1","poster":"r2c3po","content":"Selected Answer: C\nLambda@Edge Function: Lambda@Edge allows you to run AWS Lambda functions globally, and it can be used to customize content delivered through CloudFront. In this scenario, you can create a Lambda@Edge function that modifies the Cache-Control header in the Viewer response to include the no-cache directive for specific pages.\n\n no-cache Directive: The no-cache directive indicates that the content must be revalidated with the origin server before serving it from the CloudFront cache. By adding this directive for specific pages, you can control the TTL on a per-page basis.\n\nThis approach provides flexibility and allows you to override the default TTL settings for individual pages. Options A, B, and D do not offer the same level of flexibility or control for varying TTLs for individual pages.","comment_id":"1107646"},{"comment_id":"1019135","upvote_count":"4","timestamp":"1711570620.0","poster":"TwinSpark","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html#expiration-individual-objects\n\"The Cache-Control max-age directive lets you specify how long (in seconds) that you want an object to remain in the cache before CloudFront gets the object again from the origin server\"\n\"The Expires header field lets you specify an expiration date and time using the format specified in RFC 2616, Hypertext Transfer Protocol -- HTTP/1.1 Section 3.3.1, Full Date, for example:\nSat, 27 Jun 2015 23:59:59 GMT\""},{"content":"Selected Answer: B\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html","comment_id":"947557","timestamp":"1704841800.0","upvote_count":"3","poster":"Atest00678"},{"content":"I'm believing that applying a custom \"max-age\" to individual \"*.html\" files (\"individual pages\") is the solution.","upvote_count":"1","comment_id":"919619","poster":"Gomer","timestamp":"1702159560.0"}],"topic":"1","unix_timestamp":1686341160,"url":"https://www.examtopics.com/discussions/amazon/view/111765-exam-aws-certified-sysops-administrator-associate-topic-1/","exam_id":34,"question_text":"A SysOps administrator manages the caching of an Amazon CloudFront distribution that serves pages of a website, The SysOps administrator needs to configure the distribution so that the TTL of individual pages can vary. The TTL of the individual pages must remain within the maximum TLL and the minimum TTL that are set for the distribution.\n\nWhich solution will meet these requirements?","timestamp":"2023-06-09 22:06:00","isMC":true,"choices":{"B":"Add a Cache-Control: max-age directive to the object at the origin when content is being returned to CloudFront.","C":"Add a no-cache header through a Lambda@Edge function in response to the Viewer response.","D":"Add.an Expires header through a CloudFront function in response to the Viewer response.","A":"Create an AWS Lambda function that calls the Createlnvalidation API operation when a change in cache time is necessary."},"answer_images":[],"question_id":221,"answers_community":["B (92%)","8%"],"question_images":[],"answer":"B"},{"id":"NA6zBjwOah8GIF1xkx91","question_text":"A company has a public web application that experiences rapid traffic increases after advertisements appear on local television. The application runs on Amazon EC2 instances that are in an Auto Scaling group. The Auto Scaling group is not keeping up with the traffic surges after an advertisement runs. The company often needs to scale out to 100 EC2 instances during the traffic surges.\n\nThe instance startup times are lengthy because of a boot process that creates machine-specific data caches that are unique to each instance. The exact timing of when the advertisements will appear on television is not known. A SysOps administrator must implement a solution so that the application can function properly during the traffic surges.\n\nWhich solution will meet these requirements?","isMC":true,"topic":"1","exam_id":34,"url":"https://www.examtopics.com/discussions/amazon/view/111768-exam-aws-certified-sysops-administrator-associate-topic-1/","answer":"A","answer_images":[],"discussion":[{"upvote_count":"11","comment_id":"919631","poster":"Gomer","content":"Selected Answer: A\n\"A warm pool gives you the ability to decrease latency for your applications that have exceptionally long boot times, for example, because instances need to write massive amounts of data to disk\"\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html\nI'm confident the answer is not \"D\" because they the requirements state \"The exact timing of when the advertisements will appear on television is not known.\" That was put there to eliminate Predictive Scaling as an option.","timestamp":"1717966020.0"},{"comment_id":"1066949","timestamp":"1731214260.0","content":"Selected Answer: A\nI think because \"The exact timing of when the advertisements will appear on television is not known\" so it's difficult to use predictive scaling.","upvote_count":"2","poster":"lityann"},{"timestamp":"1722019620.0","content":"Selected Answer: A\nWarm pool are perfect for boot long time.\n\nPredictive you need specific time to escalate, you need PATTERNS, in this question, specific time is UNKNOWN","upvote_count":"4","comment_id":"964112","poster":"mana25"},{"upvote_count":"1","comments":[{"content":"Good catch, however I found this:\nPredictive scaling is well suited for situations where you have:\n- Cyclical traffic, such as high use of resources during regular business hours and low use of resources during evenings and weekends\n- Recurring on-and-off workload patterns, such as batch processing, testing, or periodic data analysis\n- Applications that take a long time to initialize, causing a noticeable latency impact on application performance during scale-out events\n\nIn general, if you have regular patterns of traffic increases and applications that take a long time to initialize, you should consider using predictive scaling.","timestamp":"1721781840.0","comment_id":"960990","upvote_count":"3","poster":"Zotarix"}],"timestamp":"1719940200.0","content":"I feel like it is D. It's predictive, not scheduled. The part that is throwing me off for the warm pool is \"The instance startup times are lengthy because of a boot process that creates machine-specific data caches that are unique to each instance\". Each instance is unique. Wouldn't having an established warm pool of instances prevent that uniqueness?","comment_id":"941103","poster":"Frankie2329"},{"timestamp":"1718367960.0","upvote_count":"2","content":"definitely A","comment_id":"923181","poster":"Freshtimi"},{"poster":"CheccoBam","upvote_count":"4","timestamp":"1718089920.0","comment_id":"920480","content":"Selected Answer: A\nI think here we need a Warm pool"}],"question_images":[],"answer_ET":"A","answer_description":"","question_id":222,"unix_timestamp":1686343620,"timestamp":"2023-06-09 22:47:00","choices":{"B":"Start 100 instances. Allow the boot process to finish running. Store this data on the instance store volume before stopping the instances.","A":"Create e warm pool. Keep enough instances in the Stopped state to meet the increased demand.","D":"Use predictive scaling for the Auto Scaling group.","C":"Increase the value of the instance warmup time in the scaling policy"},"answers_community":["A (100%)"]},{"id":"9U3E2ntwSIW0AwmDQjdX","url":"https://www.examtopics.com/discussions/amazon/view/74114-exam-aws-certified-sysops-administrator-associate-topic-1/","discussion":[{"upvote_count":"20","comments":[{"poster":"Pepepep","upvote_count":"15","comment_id":"610143","content":"2. A is correct. If you want CloudFront to cache different versions of your objects based on the device that a user is using to view your content, we recommend that you configure CloudFront to forward one or more of the following headers to your custom origin:\nCloudFront-Is-Desktop-Viewer\nCloudFront-Is-Mobile-Viewer\nCloudFront-Is-SmartTV-Viewer\nCloudFront-Is-Tablet-Viewer\nAs you can see based on what comes in the request received by CF, It is going to set the value to true before forwarding the request to your origin.\nThe resume, with origin custom headers you are the one that decide what is going to be on the header, there is no way to match what it comes on the request received on CF and what is going to be sent to the origin. On the other hand with User-Agent header, CF inspects the header and determines what type of device is used (Smart TV, Tablet, Desktop, Mobile).","timestamp":"1727253600.0"}],"comment_id":"610142","content":"Selected Answer: A\nI agree it is A because:\n1. B is wrong, since you are modifying origin custom headers that are values that you set unilaterally, independent of the Header of the request that you received from client. As the documentation states, the uses cases for for origin custom headers are:\nIdentifying requests from CloudFront\nDetermining which requests come from a particular distribution\nEnabling cross-origin resource sharing (CORS)\nControlling access to content\n(https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html)","poster":"Pepepep","timestamp":"1654084800.0"},{"comment_id":"589914","upvote_count":"10","content":"Why would this not be B? It would serve the same function more efficiently?","timestamp":"1650624840.0","poster":"dontcomplain"},{"content":"Selected Answer: A\nA is correct.","comment_id":"1545988","upvote_count":"1","poster":"Xavier_Examen","timestamp":"1743871800.0"},{"timestamp":"1738772640.0","poster":"ogum","comment_id":"1351969","upvote_count":"1","content":"Selected Answer: A\nA. Configure the CloudFront distribution behavior to forward the User-Agent header. Most Voted"},{"upvote_count":"4","timestamp":"1735104240.0","comment_id":"1331359","poster":"examaws","content":"Selected Answer: A\nHere's why A is preferred over B:\n\nForwarding User-Agent: Option A specifically forwards the User-Agent header from the client to the origin. This allows the backend (ALB) to determine how to respond based on the type of device making the request (mobile vs. desktop).\n\nCustom Headers: Option B involves adding a User-Agent header as a custom header, which may not be recognized by the application unless it is explicitly programmed to handle that custom header. This could lead to the application still serving the wrong version of the site.\n\nIn summary, forwarding the User-Agent header (Option A) is a more straightforward and effective solution for ensuring that the correct version of the website is served based on the device type."},{"content":"A is correct answer:\nThe correct action to resolve the issue of mobile users being served the desktop version of the website is:\n\nA. Configure the CloudFront distribution behavior to forward the User-Agent header.\n\nExplanation:\nWhen mobile users access the website through CloudFront, the User-Agent header contains information about the device and browser being used. By configuring the CloudFront distribution behavior to forward the User-Agent header to the ALB, the ALB can use this information to serve the appropriate version of the website to mobile users","comment_id":"946485","upvote_count":"1","timestamp":"1727253600.0","poster":"ranjeetrrv"},{"poster":"Christina666","comment_id":"966055","content":"Selected Answer: A\nUser-Agent header\nIf you want CloudFront to cache different versions of your objects based on the device that a user is using to view your content, we recommend that you configure CloudFront to forward one or more of the following headers to your custom origin:\n\nCloudFront-Is-Desktop-Viewer\n\nCloudFront-Is-Mobile-Viewer\n\nCloudFront-Is-SmartTV-Viewer\n\nCloudFront-Is-Tablet-Viewer\n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-user-agent-header","upvote_count":"5","timestamp":"1727253600.0"},{"poster":"be9z","upvote_count":"2","content":"Option A: Configure the CloudFront distribution behavior to forward the User-Agent header.\n\nExplanation:\n\nWhen CloudFront serves content, it can use the User-Agent header from the client’s request to determine the type of device (e.g., desktop or mobile).\nBy forwarding the User-Agent header to the origin (in this case, the ALB), the origin server can respond with the appropriate version of the website based on the device type.\nThis ensures that mobile users receive the correct content.","timestamp":"1727253600.0","comment_id":"1232799"},{"comment_id":"1101377","upvote_count":"1","poster":"axdevops","content":"Selected Answer: A\n- The User-Agent header contains information about the client's device and browser. By forwarding this header, CloudFront can use it to determine whether the request is coming from a desktop or mobile device.\n- Forwarding the User-Agent header allows the origin (ALB in this case) to make decisions based on the client's device type and serve the appropriate content.\n\n\"Option B is not the best choice because adding a User-Agent header to the list of origin custom headers is used for sending additional headers to the origin, not for identifying the client's device type.\"\n\nOptions C and D: Enabling IPv6 or updating to the dualstack endpoint does not address the mobile/desktop version problem.","timestamp":"1727253600.0"},{"poster":"MohamedMarzouk","timestamp":"1726589340.0","comment_id":"1285356","content":"Answer is A","upvote_count":"1"},{"upvote_count":"1","comment_id":"1280786","poster":"64rl0","content":"Selected Answer: A\nAnswer is A","timestamp":"1725868200.0"},{"upvote_count":"1","comment_id":"1276293","timestamp":"1725242640.0","content":"Selected Answer: A\nThe correct answer is A because it talks about setting the distribution behavior to make use of the User-Agent header. Option B talks about using the User-Agent header but then refers to origin settings which have nothing to do with how CloudFront processes a user's request. Option C and D are not relevant to this question.","poster":"flaacko"},{"timestamp":"1710689400.0","poster":"pekalyok","content":"Selected Answer: A\nA is the correct answer","upvote_count":"2","comment_id":"1175917"},{"comment_id":"1087755","timestamp":"1701705720.0","upvote_count":"2","poster":"konieczny69","content":"Selected Answer: A\nchatgpt says A"},{"timestamp":"1700227740.0","upvote_count":"4","poster":"bruppp31","comment_id":"1073342","content":"The correct answer is B, A is incorrect because it is FORWARDING the User-Agent. Not correct. We want to receive/use the User-Agent data to decide what content to deliver."},{"content":"C. Enable IPv6 on the ALB. Update the CloudFront distribution origin settings to use the dualstack endpoint.","poster":"NAVADIYA","timestamp":"1698797880.0","upvote_count":"1","comment_id":"1059262","comments":[{"content":"Wrong. Do you even understand what you are saying? What does IPv6 have to do here? Suggest to gain some knowledge before commenting here","upvote_count":"3","comment_id":"1073315","poster":"Cloud_noob","timestamp":"1700224620.0"}]},{"content":"Selected Answer: B\nB is the answer.","timestamp":"1698576900.0","upvote_count":"1","poster":"Benly","comment_id":"1056764"},{"comment_id":"1040819","content":"Selected Answer: A\nAgree with previous reasoning for A. Also, other options don't contextually make sense.","poster":"Vinsmoke","timestamp":"1697038200.0","upvote_count":"2"},{"content":"A \nhttps://repost.aws/knowledge-center/configure-cloudfront-to-forward-headers","comment_id":"927400","poster":"Karamen","upvote_count":"1","timestamp":"1687172940.0"},{"poster":"Nrn143","timestamp":"1686120300.0","upvote_count":"1","content":"Answer B\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html","comments":[{"comment_id":"979386","timestamp":"1691847600.0","upvote_count":"1","content":"From the article you provided:\n\"If the header names and values that you specify are not already present in the viewer request, CloudFront adds them to the origin request. If a header is present, CloudFront overwrites the header value before forwarding the request to the origin.\"\nSo B is incorrect, because we don't need to overwrite user-agent header value.","poster":"xSohox"}],"comment_id":"916952"},{"poster":"ambermeh","content":"A - without any doubt","upvote_count":"1","timestamp":"1684791300.0","comment_id":"904386"},{"poster":"Andrew_A","comment_id":"902628","content":"Selected Answer: A\nIf the User-Agent header is not forwarded to the origin (the Application Load Balancer in this case), the application may not be able to differentiate between mobile and desktop users, leading to everyone receiving the desktop version of the site.","upvote_count":"2","timestamp":"1684593240.0"},{"content":"Selected Answer: A\nBy default, CloudFront does not forward the User-Agent header, which can cause issues when serving content to different devices or browsers. By configuring the CloudFront distribution behavior to forward the User-Agent header, the ALB can determine the type of device or browser making the request and serve the appropriate version of the website. This can be done by creating a new behavior for the distribution and configuring it to forward the User-Agent header to the origin.","poster":"Vivec","timestamp":"1678356780.0","upvote_count":"3","comment_id":"833828"},{"comment_id":"820950","content":"Selected Answer: A\n- Behavior Setting : Controls which HTTP headers should be taken account into Origin. If some headers like \"Desktop-Viewer\" are in the whitelist, then it'll store desktop contents in CloudFront as a cache. Caching is based on the values in all the specified headers in the whitelist.\n- Custom Headers : Origin can understand which requests came from CloudFront. So it doesn't matter for some contents for clients.","timestamp":"1677273360.0","upvote_count":"1","poster":"Hisayuki"},{"content":"This question is a little bit tricky because options A and B look similar but after a closer look into the AWS documentation, no doubt - so I definitely go with AAAAAA.","poster":"braveheart22","upvote_count":"1","comment_id":"817741","timestamp":"1677063840.0"},{"timestamp":"1675325880.0","comment_id":"795877","poster":"trannminhchau","content":"Selected Answer: A\nIf you want CloudFront to cache different versions of your objects based on the device a user is using to view your content, configure CloudFront to forward the applicable headers to your custom origin\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html#header-caching-web-device","upvote_count":"1"},{"timestamp":"1675301460.0","comment_id":"795669","content":"The answer to this is A. In Origin, it is possible to add headers, but there is no function to select heads","poster":"dasadanan","upvote_count":"1"},{"upvote_count":"1","content":"A ; final answer.","comment_id":"740716","timestamp":"1670652540.0","poster":"MrMLB"},{"poster":"BietTuot","timestamp":"1670513100.0","upvote_count":"1","content":"Selected Answer: A\nA is correct","comment_id":"739215"},{"timestamp":"1669411800.0","content":"Selected Answer: B\nB would correct (but very inefficient) assuming implied in the answer that the user-agent is added to the cache key. It is correct because a viewer request would not produce a cache hit if an object with the same user agent is not in the cache. Very inefficient because there are thousands of user-agents out there... how big is this cache?","upvote_count":"1","comment_id":"727094","poster":"exam67"},{"timestamp":"1666252020.0","poster":"Surferbolt","content":"Selected Answer: B\nB is the answer","comment_id":"699657","upvote_count":"1"},{"content":"Selected Answer: B\nThe answer is B","poster":"Pontimau","timestamp":"1666075200.0","comment_id":"697976","upvote_count":"1"},{"comment_id":"697017","poster":"Pontimau","timestamp":"1665989820.0","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-user-agent-header","upvote_count":"2"},{"content":"B but its not recommended, a better answer is to send custom CF headers based in User-Agent header https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html#header-caching-web-device","upvote_count":"1","comment_id":"681371","poster":"CVDON","timestamp":"1664336040.0"},{"content":"Selected Answer: A\nIf you go to the AWS console, you can navigate to CloudFront, then \"Policies\" on the left. This will allow you to create a custom origin policy and you can include \"CloudFont-is-Desktop-User\" header, and then that can be attached to a behavior. \nI believe the correct answer is A. \nFor option B, you can create an entirely new Custom Header and value, on the origin settings, but that will be the exact same Header and Value that is passed on EVERY request.","poster":"skinnyxpuppy","comment_id":"670079","upvote_count":"1","timestamp":"1663256220.0"},{"comment_id":"665526","timestamp":"1662827040.0","poster":"nakikoo","upvote_count":"1","content":"C seems viable but i maybe wrong...since ALB is set as the intended origin destination, theres no need to change the origin destination setting, B incorrect, A seems like you need to manually change it every time there is a request that comes from a different header, C seems more like you enable a dual channel type to route to the original intended destination...which is the ALB...im sticking with C on this based on reading and logic"},{"poster":"AAAaat","upvote_count":"1","comment_id":"663083","content":"Selected Answer: A\nI think it is A, OAI is only for use with S3? see AWS glossary\n\norigin access identity\nAlso called OAI. When using Amazon CloudFront to serve content with an Amazon S3 bucket as the origin, a virtual identity that you use to require users to access your content through CloudFront URLs instead of Amazon S3 URLs. Usually used with CloudFront private content.","timestamp":"1662610020.0"},{"comment_id":"655722","upvote_count":"1","timestamp":"1662001680.0","content":"Selected Answer: A\nafter much reading I'm voting A","poster":"princajen"},{"upvote_count":"1","poster":"Gorille69","timestamp":"1661751300.0","comment_id":"653297","content":"A for me : https://www.youtube.com/watch?v=FQFg8FrRcxA"},{"poster":"Hello23","content":"Selected Answer: B\nB 100%","timestamp":"1661561640.0","upvote_count":"1","comment_id":"652432"},{"poster":"ersahinco","upvote_count":"2","timestamp":"1661443860.0","content":"The answer is definetly B.\nRef: https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-user-agent-header","comment_id":"651859"},{"timestamp":"1659555000.0","poster":"Acesyo","content":"Selected Answer: A\nA is the correct answer","comment_id":"642059","upvote_count":"2"},{"timestamp":"1658878560.0","content":"But, https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html says:\n\"You can configure CloudFront to cache objects based on values in the Date and User-Agent headers, but we don’t recommend it. These headers have numerous possible values, and caching based on their values could cause CloudFront to forward significantly more requests to your origin.\"","comment_id":"637677","poster":"promartyr","upvote_count":"3"},{"timestamp":"1657382280.0","content":"Answer B,\nA is incorrect because you can't set the cache behavior of a CloudFront distribution to forward the User-Agent header. This is configured in the Origin Custom Headers setting.","upvote_count":"3","comment_id":"629260","poster":"broadwink"},{"poster":"Rick365","upvote_count":"1","content":"Selected Answer: A\nA is the answer","timestamp":"1656382020.0","comment_id":"623588"},{"comment_id":"620149","content":"Selected Answer: B\nConfiguring CloudFront to add custom headers to origin requests\nCloudFront console – When you create or update a distribution, specify header names and values in the Origin Custom Headers settings. For more information, see Creating a distribution or Updating a distribution.\n\n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html","timestamp":"1655871660.0","poster":"221898","upvote_count":"2"},{"comment_id":"610139","content":"Selected Answer: A\nIt is A.","poster":"Pepepep","upvote_count":"3","timestamp":"1654084140.0"},{"timestamp":"1653323100.0","upvote_count":"2","content":"It is A. \nPlease read the below link and specifically user_agent details. It clearly says that CF will forward this by default.\n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-user-agent-header","poster":"vjt","comment_id":"606197"},{"timestamp":"1653021780.0","content":"The correct answer should be A (A. Configure the CloudFront distribution behavior to forward the User-Agent header.)\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html\n\"If you want CloudFront to cache different versions of your objects based on the device a user is using to view your content, configure CloudFront to forward the applicable headers to your custom origin:\"\nB is wrong. User-Agent is a header generated by the client. CF cannot determine what type \n of device is being used. If you say it is B then you are asking CF to hard code the value of this header.","poster":"altonh","upvote_count":"1","comment_id":"604239"},{"upvote_count":"4","poster":"Finger41","content":"Selected Answer: B\nB - https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html","timestamp":"1651810320.0","comment_id":"597542"},{"comment_id":"591059","upvote_count":"2","poster":"Mecdrox","timestamp":"1650804780.0","content":"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html#header-caching-web-device"},{"poster":"Mecdrox","comment_id":"591058","content":"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html","timestamp":"1650804660.0","upvote_count":"2"},{"upvote_count":"4","timestamp":"1650804180.0","content":"Selected Answer: B\nAnswer is B","comment_id":"591051","poster":"Mecdrox"}],"timestamp":"2022-04-22 12:54:00","topic":"1","choices":{"D":"Enable IPv6 on the CloudFront distribution. Update the Route 53 record to use the dualstack endpoint.","B":"Configure the CloudFront distribution origin settings. Add a User-Agent header to the list of origin custom headers.","A":"Configure the CloudFront distribution behavior to forward the User-Agent header.","C":"Enable IPv6 on the ALB. Update the CloudFront distribution origin settings to use the dualstack endpoint."},"unix_timestamp":1650624840,"answer":"A","exam_id":34,"isMC":true,"question_images":[],"answers_community":["A (77%)","B (23%)"],"question_text":"A company is running a website on Amazon EC2 instances behind an Application Load Balancer (ALB). The company configured an Amazon CloudFront distribution and set the ALB as the origin. The company created an Amazon Route 53 CNAME record to send all traffic through the CloudFront distribution. As an unintended side effect, mobile users are now being served the desktop version of the website.\nWhich action should a SysOps administrator take to resolve this issue?","question_id":223,"answer_images":[],"answer_ET":"A","answer_description":""},{"id":"VvuukujMw9KsLmpof5ka","question_text":"A user working in the Amazon EC2 console increased the size of an Amazon Elastic Block Store (Amazon EBS) volume attached to an Amazon EC2 Windows instance. The change is not reflected in the file system.\nWhat should a SysOps administrator do to resolve this issue?","isMC":true,"topic":"1","exam_id":34,"url":"https://www.examtopics.com/discussions/amazon/view/79117-exam-aws-certified-sysops-administrator-associate-topic-1/","answer":"A","answer_images":[],"discussion":[{"poster":"princajen","timestamp":"1677699960.0","comment_id":"656511","content":"Selected Answer: A\nAfter you increase the size of an EBS volume, use the Windows Disk Management utility or PowerShell to extend the disk size to the new size of the volume. You can begin resizing the file system as soon as the volume enters the optimizing state.\n\nhttps://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/recognize-expanded-volume-windows.html","upvote_count":"15"},{"poster":"tamng","comment_id":"1108843","timestamp":"1719667560.0","upvote_count":"1","content":"A. Extend the file system with operating system-level tools to use the new storage capacity."},{"comment_id":"670901","content":"Selected Answer: A\nExtend the volume from Window Disk Manager tool","upvote_count":"2","timestamp":"1678983120.0","poster":"get_certified"}],"question_images":[],"answer_ET":"A","answer_description":"","question_id":224,"choices":{"A":"Extend the file system with operating system-level tools to use the new storage capacity.","B":"Reattach the EBS volume to the EC2 instance.","C":"Reboot the EC2 instance that is attached to the EBS volume.","D":"Take a snapshot of the EBS volume. Replace the original volume with a volume that is created from the snapshot."},"unix_timestamp":1662054360,"timestamp":"2022-09-01 19:46:00","answers_community":["A (100%)"]},{"id":"fE2V6iEfeQeH105TgDz2","answer":"C","question_text":"A company hosts an internal application on Amazon EC2 On-Demand Instances behind an Application Load Balancer (ALB). The instances are in an Amazon EC2 Auto Scaling group. Employees use the application to provide product prices to potential customers. The Auto Scaling group is configured with a dynamic scaling policy and tracks average CPU utilization of the instances.\n\nEmployees have noticed that sometimes the application becomes slow or unresponsive. A SysOps administrator finds that some instances are experiencing a high CPU load. The Auto Scaling group cannot scale out because the company is reaching the EC2 instance service quota.\n\nThe SysOps administrator needs to implement a solution that provides a notification when the company reaches 70% or more of the EC2 instance service quota.\n\nWhich solution will meet these requirements in the MOST operationally efficient manner?","timestamp":"2023-06-06 14:50:00","discussion":[{"poster":"wh1t4k3r","comment_id":"1014043","content":"Just a comment on this: a question made to verify if you are paying attention, not your knowledge on aws.","upvote_count":"5","timestamp":"1727004420.0"},{"timestamp":"1722124440.0","comment_id":"965172","poster":"Christina666","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/servicequotas/latest/userguide/configure-cloudwatch.html\n\nYou can create Amazon CloudWatch alarms to notify you when you're close to a quota value threshold. Setting an alarm can help alert you if you need to request a quota increase.\n\nTo create a CloudWatch alarm for a quota\nSign in to the AWS Management Console and open the Service Quotas console at https://console.aws.amazon.com/servicequotas/home.\n\nIn the navigation pane, choose AWS services and then select a service.\n\nSelect a quota that supports CloudWatch alarms.\n\nIf you actively use the quota, utilization appears beneath the quota description. If CloudWatch alarms are supported, the CloudWatch alarms section appears at the bottom of the page.\n\nIn Amazon CloudWatch alarms, choose Create.\n\nFor Alarm threshold, choose a threshold.\n\nFor Alarm name, enter a name for the alarm. This name must be unique within the AWS account.\n\nChoose Create.","upvote_count":"5"},{"upvote_count":"3","poster":"Gomer","timestamp":"1717968300.0","content":"Selected Answer: C\n\"D\" sounds good, but if you actually review the steps, you create a Cloudwatch service quota alarm from the Service Quota console. Step 1. \"Sign in to the AWS Management Console and open the Service Quotas console\"\nhttps://docs.aws.amazon.com/servicequotas/latest/userguide/configure-cloudwatch.html","comment_id":"919640","comments":[{"comments":[{"timestamp":"1724349480.0","comment_id":"987660","poster":"Bhrino","content":"? how it actually seems viable to to me. While id personally go with C as well D isn't terrible but C is just more correct","upvote_count":"1"}],"comment_id":"944297","poster":"AShahine21","timestamp":"1720237980.0","upvote_count":"1","content":"D sounds terrible tbh"}]},{"upvote_count":"5","timestamp":"1717698840.0","poster":"tts1234","content":"Selected Answer: C\nC - sounds more like it.\nhttps://docs.aws.amazon.com/servicequotas/latest/userguide/configure-cloudwatch.html","comment_id":"916550"},{"upvote_count":"1","timestamp":"1717678200.0","poster":"pepecastr0","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/servicequotas/latest/userguide/configure-cloudwatch.html","comment_id":"916250"}],"answers_community":["C (100%)"],"url":"https://www.examtopics.com/discussions/amazon/view/111266-exam-aws-certified-sysops-administrator-associate-topic-1/","isMC":true,"question_images":[],"choices":{"C":"Use the Service Quotas console to create an Amazon CloudWatch alarm for the EC2 instances. Configure the alarm with quota utilization equal to or greater than 70%. Configure the alarm to publish an Amazon Simple Notification Service (Amazon SNS) notification when the alarm enters ALARM state.","D":"Create an Amazon CloudWatch alarm. Configure the alarm with a threshold of 70% for the CPUUtilization metric for the EC2 instances. Configure the alarm to publish an Amazon Simple Notification Service (Amazon SNS) notification when the alarm enters ALARM state.","A":"Create an AWS Lambda function that lists the EC2 instances, counts the EC2 instances, and compares the total number against the applied quota value by using the Service Quotas API. Configure the Lambda function to publish an Amazon Simple Notification Service (Amazon SNS) notification if the quota utilization is equal to or greater than 70%. Create an Amazon EventBridge rule to invoke the Lambda function.","B":"Create an AWS Lambda function that lists the EC2 instances, counts the EC2 instances, and compares the total number against the applied quota value by using the Amazon CloudWatch Metrics API. Configure the Lambda function to publish an Amazon Simple Notification Service (Amazon SNS) notification if the quota utilization is equal to or greater than 70%. Create an Amazon EventBridge rule to invoke the Lambda function."},"exam_id":34,"question_id":225,"answer_images":[],"unix_timestamp":1686055800,"topic":"1","answer_ET":"C","answer_description":""}],"exam":{"isBeta":false,"name":"AWS Certified SysOps Administrator - Associate","id":34,"isMCOnly":false,"provider":"Amazon","isImplemented":true,"lastUpdated":"11 Apr 2025","numberOfQuestions":477},"currentPage":45},"__N_SSP":true}