{"pageProps":{"questions":[{"id":"9PWJuvtXozNMNqaLL9aE","choices":{"D":"Define an array that includes the environment variables under the entryPoint parameter within the service definition.","C":"Define an array that includes the environment variables under the entryPoint parameter within the task definition.","A":"Define an array that includes the environment variables under the environment parameter within the service definition.","B":"Define an array that includes the environment variables under the environment parameter within the task definition."},"unix_timestamp":1597642380,"answer":"B","answers_community":["B (100%)"],"discussion":[{"content":"Answer B\nhttps://docs.aws.amazon.com/AmazonECS/latest/userguide/task_definition_parameters.html#container_definitions","poster":"jodeepak","upvote_count":"14","timestamp":"1633143600.0","comments":[{"content":"Why the link is not https://docs.aws.amazon.com/AmazonECS/latest/userguide/taskdef-envfiles.html ?","comment_id":"830791","poster":"Groot2","timestamp":"1678105800.0","upvote_count":"1"}],"comment_id":"159647"},{"comment_id":"1329400","timestamp":"1734689220.0","poster":"sumanshu","upvote_count":"1","content":"Selected Answer: B\nIn Amazon ECS, environment variables for containers are defined in the task definition, not in the service definition or entryPoint. Specifically, you use the environment parameter within the container definition section of the task definition to pass environment variables to the container"},{"timestamp":"1687966080.0","poster":"rcaliandro","comment_id":"936826","upvote_count":"2","content":"Selected Answer: B\nWe can define ECS with Fargate environment variables during the task definition"},{"content":"Selected Answer: B\nas explained in https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html","poster":"janjitsu","upvote_count":"1","comment_id":"935240","timestamp":"1687861860.0"},{"comment_id":"823162","poster":"pancman","timestamp":"1677470880.0","content":"Saw this question in the exam today (Feb 2023)","upvote_count":"3"},{"comment_id":"772909","upvote_count":"1","content":"B is the answer","poster":"sichilam","timestamp":"1673472780.0"},{"poster":"haazybanj","comment_id":"686818","timestamp":"1664969220.0","upvote_count":"1","content":"Selected Answer: B\nAnswer B"},{"upvote_count":"1","comment_id":"622308","timestamp":"1656207540.0","content":"You can also implement tighter control by setting up an AWS IAM policy to prevent users from creating an EBS volume unless it is encrypted\n\nAnswer c holds good. Hence CD","poster":"VijiTu"},{"upvote_count":"1","comment_id":"539954","timestamp":"1643920140.0","poster":"JP_PA","content":"Selected Answer: B\nANS: B"},{"content":"Selected Answer: B\nANS: B","poster":"JP_PA","timestamp":"1643770080.0","comment_id":"538344","upvote_count":"1"},{"timestamp":"1640439360.0","comment_id":"509134","poster":"SHAAHIBHUSHANAWS","upvote_count":"2","content":"B\nhttps://docs.aws.amazon.com/AmazonECS/latest/userguide/taskdef-envfiles.html"},{"upvote_count":"1","content":"B is correct","timestamp":"1635493620.0","comment_id":"195162","poster":"Chinta"},{"comment_id":"174934","content":"B is correct","upvote_count":"2","poster":"saeidp","timestamp":"1634263680.0"},{"comment_id":"160643","upvote_count":"3","timestamp":"1633402320.0","content":"answer: B","poster":"requiem"}],"url":"https://www.examtopics.com/discussions/amazon/view/28795-exam-aws-certified-developer-associate-topic-1-question-108/","exam_id":25,"question_id":11,"question_images":[],"topic":"1","question_text":"A developer needs to deploy an application running on AWS Fargate using Amazon ECS. The application has environment variables that must be passed to a container for the application to initialize.\nHow should the environment variables be passed to the container?","timestamp":"2020-08-17 07:33:00","answer_ET":"B","answer_images":[],"isMC":true,"answer_description":""},{"id":"Tc3rHjE4xktdKHRVgffx","question_id":12,"exam_id":25,"question_images":[],"timestamp":"2022-08-31 23:43:00","isMC":true,"topic":"1","discussion":[{"poster":"Chhotu_DBA","content":"Selected Answer: CD\nC D correct","timestamp":"1661982180.0","upvote_count":"8","comment_id":"655513"},{"timestamp":"1734689100.0","content":"Selected Answer: CD\nsam build\n\nThis command compiles the source code of the Lambda functions, dependencies, and other artifacts into a format suitable for deployment. It creates a .aws-sam directory where the build artifacts are stored.\nIt is essential to rebuild the application after making changes to ensure the latest code is included.\n\n\nsam deploy\n\nThis command packages and deploys the built application to AWS. It uploads the application artifacts to Amazon S3 and updates the CloudFormation stack to deploy the application resources.","poster":"sumanshu","comment_id":"1329398","upvote_count":"1"},{"upvote_count":"1","comments":[{"poster":"RaidenKurosaki","comment_id":"976183","content":"Said to extend not create a new project.","upvote_count":"1","timestamp":"1691549220.0"}],"timestamp":"1690033920.0","comment_id":"959588","poster":"AswinDe","content":"Why A is not an option? as it is asking to create the new project"},{"poster":"rcaliandro","upvote_count":"1","content":"Selected Answer: CD\nAgree with CD: sam build to build the lambda functions locally, sam deploy to put resources in the cloud and create the resources","timestamp":"1687966380.0","comment_id":"936832"},{"upvote_count":"1","timestamp":"1673472900.0","content":"C and D","comment_id":"772910","poster":"sichilam"},{"content":"Selected Answer: CD\nit's not B or E","poster":"dark_cherrymon","comment_id":"721358","timestamp":"1668785100.0","upvote_count":"1"},{"poster":"cwit63","timestamp":"1666885560.0","upvote_count":"1","comment_id":"705702","content":"C & D are correct"}],"question_text":"A developer must extend an existing application that is based on the AWS Serverless Application Model (AWS SAM). The developer has used the AWS SAM CLI to create the project. The project contains different AWS Lambda functions.\nWhich combination of commands must the developer use to redeploy the AWS SAM application? (Choose two.)","answer_images":[],"unix_timestamp":1661982180,"answers_community":["CD (100%)"],"choices":{"B":"sam validate","A":"sam init","E":"sam publish","D":"sam deploy","C":"sam build"},"answer_ET":"CD","url":"https://www.examtopics.com/discussions/amazon/view/78790-exam-aws-certified-developer-associate-topic-1-question-109/","answer":"CD","answer_description":""},{"id":"3IopzXrncqyAqcUK7VM9","unix_timestamp":1662024000,"topic":"1","question_images":[],"exam_id":25,"answer_description":"","answer_ET":"C","answers_community":["C (100%)"],"isMC":true,"answer":"C","question_id":13,"discussion":[{"comments":[{"upvote_count":"1","content":"A) - Eliminated : SES is an email service used to send or receive email. It is not designed to store undelivered SNS messages.","comments":[{"comment_id":"1326819","poster":"sumanshu","upvote_count":"1","content":"D) Eliminated - CloudWatch alarms monitor metrics and send alerts when thresholds are breached. It is not a mechanism for preserving undelivered SNS messages.","timestamp":"1734262860.0","comments":[{"content":"B) Eliminated - Lambda can be a target for SNS notifications, but it does not inherently store or preserve undelivered messages. Messages failing delivery to Lambda would still require a DLQ (e.g., SQS).","poster":"sumanshu","timestamp":"1734262860.0","comment_id":"1326820","upvote_count":"1"}]}],"poster":"sumanshu","comment_id":"1326816","timestamp":"1734262800.0"}],"comment_id":"1326815","timestamp":"1734262800.0","content":"Selected Answer: C\nC) - Correct - Messages that fail delivery will be stored in the SQS dead-letter queue, ensuring they are retained for later processing. This mechanism allows reprocessing of undelivered messages.","upvote_count":"1","poster":"sumanshu"},{"upvote_count":"1","poster":"thucta96dn","timestamp":"1730098440.0","comment_id":"1303845","content":"Selected Answer: C\nthe answer should be C"},{"comment_id":"1198006","timestamp":"1713455040.0","poster":"seezie","upvote_count":"1","content":"Absolutely C because SQS has a dead-letter-queue service that stores messages failed."},{"upvote_count":"1","poster":"AsmaZoheb","comment_id":"1122923","timestamp":"1705270980.0","content":"C for SQS any message can be stored in DLQ , for this set up SQS with SNS , like To set up SNS with SQS, create an SNS topic, subscribe an SQS queue to it, and publish messages to the topic, which will be automatically delivered to the subscribed queue for processing."},{"content":"Selected Answer: C\nWhen an SNS topic sends messages to a subscriber there can be many issues on the way. For example, the subscriber is down, the subscriber doesn't accept a message, the network is down, the topic does not have sufficient permission to send messages, etc..\nIt is a good practice to set a Dead Letter Queue (DLQ) to send in this queue the messages that can't be processed. A DLQ for SNS should be SQS (I tried but there is no way to set a SNS as DLQ). So the C is the correct one!","comment_id":"935491","upvote_count":"2","timestamp":"1687876980.0","poster":"rcaliandro"},{"timestamp":"1676938080.0","upvote_count":"1","comment_id":"816045","poster":"IbrahimBarry","content":"SQS is the right answer"},{"timestamp":"1676060820.0","comment_id":"804753","upvote_count":"1","content":"Selected Answer: C\nshould be C","poster":"Krt5894"},{"poster":"Dirisme","comment_id":"767765","timestamp":"1673013180.0","upvote_count":"2","content":"Selected Answer: C\nSQS Dead letter queue"},{"upvote_count":"1","timestamp":"1668640080.0","content":"Selected Answer: C\nC\n \n\"Amazon SNS stops retrying the delivery and discards the messageâ€”unless a dead-letter queue is attached to the subscription. \"\n\n\"A dead-letter queue is an Amazon SQS queue \"","comment_id":"720074","poster":"dark_cherrymon"},{"poster":"nothankyouspankyou","timestamp":"1666135860.0","upvote_count":"2","content":"I'd use an SNS Dead Letter Queue...but okay - SQS it is...","comment_id":"698554"},{"comment_id":"677827","content":"Selected Answer: C\nSQS is correct","timestamp":"1664023800.0","upvote_count":"1","poster":"haazybanj"},{"poster":"sidvic","upvote_count":"1","comment_id":"658133","timestamp":"1662187200.0","content":"Selected Answer: C\nWe needs a SQS"},{"poster":"Sirikou_0922","content":"SQS is right using fan-out and also SQS has the storage","comment_id":"656079","comments":[{"timestamp":"1665032400.0","poster":"adsdadasdad","comment_id":"687461","upvote_count":"1","content":"More so that if the request times out, the que will still process that the request has not suceeded and will keep it until it has processed. It garantees consistancy"}],"timestamp":"1662025020.0","upvote_count":"2"},{"comment_id":"656057","poster":"sindra","upvote_count":"2","content":"Selected Answer: C\nagreed with C.. Amazon SQS is async messaging bus that suitable with this case","timestamp":"1662024000.0"}],"choices":{"C":"Amazon Simple Queue Service (Amazon SQS)","A":"Amazon Simple Email Service (Amazon SES)","D":"Amazon CloudWatch alarm","B":"AWS Lambda"},"timestamp":"2022-09-01 11:20:00","url":"https://www.examtopics.com/discussions/amazon/view/79002-exam-aws-certified-developer-associate-topic-1-question-11/","question_text":"A developer creates a customer managed key for multiple AWS users to encrypt data in Amazon S3. The developer configures Amazon Simple Notification\nService (Amazon SNS) to publish a message if key deletion is scheduled. The developer needs to preserve any SNS messages that cannot be delivered so that those messages can be reprocessed.\nWhich AWS service or feature should the developer use to meet this requirement?","answer_images":[]},{"id":"cDOzE2be7De9RUr5i6vF","isMC":true,"topic":"1","url":"https://www.examtopics.com/discussions/amazon/view/68894-exam-aws-certified-developer-associate-topic-1-question-110/","unix_timestamp":1640771460,"discussion":[{"upvote_count":"19","poster":"CHRIS12722222","content":"C. This is write through strategy","timestamp":"1641847440.0","comment_id":"521127"},{"content":"its D\nThere is a cache miss penalty. Each cache miss results in three trips:\n\nInitial request for data from the cache\n\nQuery of the database for the data\n\nWriting the data to the cache\n\nThese misses can cause a noticeable delay in data getting to the application.\nhttps://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html\nLazy loading","poster":"Awsexam100","upvote_count":"6","comment_id":"574707","timestamp":"1648157940.0","comments":[{"poster":"JonasKahnwald","comment_id":"1311845","content":"We don't use lazy Loading here, we use Write-Through.","upvote_count":"1","timestamp":"1731582540.0"}]},{"poster":"seml","timestamp":"1739025180.0","comment_id":"1353450","upvote_count":"1","content":"Selected Answer: A\nThe primary concern is increased db load and not cache size and that eliminates C."},{"content":"Selected Answer: A\nC) Eliminated - Question does not mention that the cache stores infrequently requested data unnecessarily.","timestamp":"1734688380.0","poster":"sumanshu","comments":[{"comments":[{"comment_id":"1329395","timestamp":"1734688800.0","poster":"sumanshu","content":"C) Looks also valid - https://www.tutorialspoint.com/awselasticache/awselasticache_write_through.htm","upvote_count":"1"}],"poster":"sumanshu","timestamp":"1734688440.0","comment_id":"1329394","upvote_count":"1","content":"B) Eliminated - Caching is generally designed to improve read query performance by providing faster access to frequently accessed data."}],"comment_id":"1329391","upvote_count":"1"},{"timestamp":"1710659520.0","poster":"Ibrahim24","content":"Selected Answer: C\nC: The cache will be updated with every change in DB although that data is not being read frequently. This is write-through strategy\nD cannot be the right answer since the cache is being updated with DB change, not on cache miss","upvote_count":"2","comment_id":"1175639"},{"timestamp":"1707193860.0","poster":"SD_CS","upvote_count":"2","comment_id":"1141755","content":"Selected Answer: C\nthere would be lot of writes"},{"poster":"xdkonorek2","upvote_count":"2","timestamp":"1702144500.0","comment_id":"1091953","content":"Selected Answer: A\nimo it's A\nIt's only obvious answer, per write you have to read the updated record from database - because not every update has to be a full record, and in relational databases update operation returns number of rows updated, not whole entities. So you have to follow up with a read op\n\nB - this behavior isn't defined in the question\nC - how do we know there is infrequently accessed data at all? how do we know TTL in cache? we don't know\nD - \"cache is updated only after a cache miss\" this behavior wasn't defined in a question, cache is updated only on updates regardless of cache key missing or not"},{"poster":"rcaliandro","upvote_count":"3","timestamp":"1687966560.0","content":"Selected Answer: C\nC, each update to the database is also reversed to the cache (write through instead of lazy loading cache strategy). Given that each update/write to the DB is reversed also to the cache, also for really infrequent data, we have as result a really heavy cache","comment_id":"936835"},{"content":"D, When the cache cannot find the requested data, it is referred to as a cache miss. In this scenario, after the primary database is updated, the cache is immediately updated. However, if a read query is made and the requested data is not found in the cache, there will be a cache miss, which will cause overhead in the initial response time. The cache will then be updated with the requested data, and subsequent read queries for the same data will be faster because the data is already in the cache.","poster":"BATSIE","timestamp":"1683350220.0","comment_id":"890497","upvote_count":"1"},{"content":"C . Cache will become expensive and huge.","poster":"Rpod","upvote_count":"1","timestamp":"1682506080.0","comment_id":"881471"},{"upvote_count":"2","timestamp":"1681872240.0","content":"Selected Answer: A\nAnswer here is A.\nOption C is incorrect because infrequently requested data should not be written to the cache, as this can cause the cache to become bloated and inefficient.\n\nOption D is incorrect because the entryPoint parameter is used to specify a command that is run when the container starts, and is not related to passing environment variables to the container.","comment_id":"874243","comments":[{"content":"Buddy you need to study more. Most of your answers were wrong in judgment and explanation.","poster":"ics_911","upvote_count":"1","timestamp":"1721043600.0","comment_id":"1248304"}],"poster":"Syre"},{"upvote_count":"2","timestamp":"1680098400.0","poster":"Krok","comment_id":"854490","content":"Selected Answer: C\nC. This is Write Through strategy.\nAs described in the course by Stephane Maarek on Udemi this approach has the following Cons: \"Cache churn â€“ a lot of the data will never be read\""},{"timestamp":"1679999640.0","comment_id":"853107","upvote_count":"2","content":"Selected Answer: C\nthe scenario is about write through, so C.\n\nD is about lazy loading, it's not mentioned","poster":"qiaoli"},{"content":"Selected Answer: C\nit can not be D. because strategy used in question is cache is updated for each data update in databae not when cache is missing.","comments":[{"timestamp":"1675479300.0","poster":"tony554556","upvote_count":"2","comment_id":"797556","content":"C is correct, your explanation is very clear. Thanks"}],"poster":"gaddour_med","timestamp":"1675245360.0","comment_id":"794980","upvote_count":"2"},{"timestamp":"1674170400.0","upvote_count":"1","content":"Selected Answer: C\nI would go for C.","comment_id":"781689","poster":"Phinx"},{"comment_id":"780859","poster":"BobAWS23","comments":[{"upvote_count":"1","comments":[{"upvote_count":"1","poster":"PawKam","content":"Sorry, my bad, I mixed answers. C seems to be correct. Now I understand this comment.","comment_id":"870400","timestamp":"1681496880.0"}],"timestamp":"1681496700.0","comment_id":"870397","poster":"PawKam","content":"I don't understand this comment. The \"cache churn\" it refers clearly states \"The disadvantages of write-through are as follows [...] most data is never read, which is a waste of resources.\", which points to D."}],"content":"Selected Answer: C\nElasticache can implement both write-through and lazy loading. The key phrase was: \nto update the cache immediately following the primary database update.\nThis is write-through. \nLook at \"Cache churn.\"\nhttps://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html","upvote_count":"3","timestamp":"1674114180.0"},{"content":"Selected Answer: D\nIt would be C if it didn't include ElastiCache, this technique is called write-through. As it mentions ElastiCache the technique is Lazy Loading, so the answer is D. Look at the official documentationl: https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html","timestamp":"1673789760.0","upvote_count":"1","comment_id":"776606","comments":[],"poster":"bearcandy"},{"content":"It is write-through caching. which updates the cache only when there is an item update/addition in DB. -> can cause infrequently requested data to be written to cache as well (unless TTL is defined).\n\nNow, during a read if the item is not present in cache, then it will result in cache miss and the req will go to DB. But with write-through this will NOT update the cache (because it's not an update/add operation) -> rules out options B and D. (unless lazy load is configured which is not the case)\n\nEvery write involves two trips:\nA write to the cache\nA write to the database -> I believe this rules out option A\n\nRef:\nhttps://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html#Strategies.WriteThrough","poster":"BhagyashreeC","upvote_count":"2","timestamp":"1673776260.0","comment_id":"776381"},{"timestamp":"1673473500.0","poster":"sichilam","upvote_count":"1","content":"C is correct","comment_id":"772913"},{"timestamp":"1673317860.0","poster":"Dirisme","comment_id":"770997","upvote_count":"2","content":"Selected Answer: D\nThe disadvantages of lazy loading are as follows:\n\nThere is a cache miss penalty. Each cache miss results in three trips:\n\nInitial request for data from the cache\n\nQuery of the database for the data\n\nWriting the data to the cache\n\nThese misses can cause a noticeable delay in data getting to the application."},{"content":"Selected Answer: D\ndddddddddddddddddddddddddddd","timestamp":"1671813960.0","poster":"Kapello10","upvote_count":"2","comment_id":"754362"},{"comment_id":"748655","content":"C is the right answer As the data which is not used frequently will also updated with each primary db update","poster":"MeenuSingla","timestamp":"1671347940.0","upvote_count":"2"},{"upvote_count":"1","comment_id":"731583","timestamp":"1669817460.0","content":"Selected Answer: D\nC is wrong because you can always set TTL to the cached to reduce the size.","comments":[{"content":"Well, yes, you would set TTL because under this case description \"the cache will become large and expensive because the infrequently requested data is also written to the cache.\"","poster":"PawKam","timestamp":"1681496520.0","upvote_count":"1","comment_id":"870396"}],"poster":"gpit"},{"content":"Selected Answer: D\nD\n\ni don't think C is right. your reddis can be custom coded to dump unneeded stuff","poster":"dark_cherrymon","comment_id":"721362","upvote_count":"2","timestamp":"1668785400.0"},{"timestamp":"1664969400.0","content":"Selected Answer: C\nAnswer C","poster":"haazybanj","upvote_count":"1","comment_id":"686821"},{"poster":"AulaitQM","upvote_count":"3","comment_id":"681870","timestamp":"1664379600.0","content":"Selected Answer: C\nIt is C. For those saying it is D, please read the question carefully."},{"content":"It should be d","comment_id":"680657","poster":"AK34180","timestamp":"1664276280.0","upvote_count":"1"},{"upvote_count":"1","content":"maybe C ?","timestamp":"1641008100.0","poster":"ayush_1995","comment_id":"514336"},{"upvote_count":"3","content":"Selected Answer: C\nAnswer is C","poster":"reve666","comment_id":"512025","timestamp":"1640771460.0"}],"question_images":[],"timestamp":"2021-12-29 10:51:00","choices":{"D":"Overhead will be added to the initial response time because the cache is updated only after a cache miss.","B":"Caching will slow performance of the read queries because the cache is updated when the cache cannot find the requested data.","A":"Caching will increase the load on the database instance because the cache is updated for every database update.","C":"The cache will become large and expensive because the infrequently requested data is also written to the cache."},"answer_description":"","question_text":"A developer manages an application that interacts with Amazon RDS. After observing slow performance with read queries, the developer implements Amazon\nElastiCache to update the cache immediately following the primary database update.\nWhat will be the result of this approach to caching?","exam_id":25,"question_id":14,"answer_ET":"C","answers_community":["C (63%)","D (21%)","A (16%)"],"answer":"C","answer_images":[]},{"id":"Kqisy3kz5cy0OqRihr5o","question_id":15,"answer_images":[],"answer_ET":"DE","discussion":[{"content":"Correct, D+E","timestamp":"1632112020.0","poster":"newbie2019","comment_id":"23364","upvote_count":"25"},{"content":"Selected Answer: DE\nA - Not really relevant\nB - Stateful suggests non static requests, so does this really help?\nC - WAF is for security not elasticity\nD - As the app is stateful the sessions need to go somewhere, so this makes sense.\nE - Allows the app running on EC2 to scale, this is your elasticity.\n\nelasticity\n1. the ability of an object or material to resume its normal shape after being stretched or compressed; stretchiness.\n2.ability to change and adapt; adaptability.","poster":"GenePoole","upvote_count":"19","comments":[{"timestamp":"1677013980.0","comment_id":"817175","content":"Great answer, helped clarify things for me. Thank you!","upvote_count":"1","poster":"pancman"},{"timestamp":"1675479600.0","poster":"tony554556","content":"It get confused and your post help a lot, especially with the B incorrect","comment_id":"797557","upvote_count":"1"}],"comment_id":"678893","timestamp":"1664116020.0"},{"timestamp":"1687966860.0","upvote_count":"1","poster":"rcaliandro","comment_id":"936840","content":"Selected Answer: DE\nI will vote D and E.\nIn order to store user session data we can use DynamoDB (D is correct). To guarantee elasticity ELB+AutoScaling Group is the best option (also E is correct)."},{"content":"DE\nThe most elastic and scalable solution for storing session state data in a web application is to use an Amazon DynamoDB table. This is because DynamoDB is a highly scalable and managed NoSQL database that can handle large amounts of read and write requests, making it well-suited for storing session state data.\n\nUsing an ELB with an Auto Scaling group is another way to make the application more elastic. An ELB (Elastic Load Balancer) is a managed load balancing service that can automatically distribute incoming application traffic across multiple Amazon EC2 instances in an Auto Scaling group, improving the application's availability and scalability.","poster":"Bengi","upvote_count":"1","timestamp":"1676278980.0","comment_id":"807219"},{"poster":"sichilam","content":"D and E","upvote_count":"1","timestamp":"1673561580.0","comment_id":"773929"},{"upvote_count":"1","content":"I will go with B & E - If you read the question carefully - 'increase its elasticity'. B & E is a way to increase its elasticity.","comment_id":"633733","timestamp":"1658260560.0","poster":"sivsg","comments":[{"comment_id":"669438","timestamp":"1663210860.0","upvote_count":"1","poster":"ahmed308","content":"To me, for a stateful web server, Cloudfornt has nothing to do. So B and C is not the right option"}]},{"poster":"skb1996","comments":[{"upvote_count":"1","comment_id":"573701","poster":"skb1996","timestamp":"1648046820.0","content":"Also found this in docs ,\n\n\"Some advantages with utilizing sticky sessions are that itâ€™s cost effective due to the fact you are storing sessions on the same web servers running your applications and that retrieval of those sessions is generally fast because it eliminates network latency. A drawback for using storing sessions on an individual node is that in the event of a failure, you are likely to lose the sessions that were resident on the failed node. In addition, in the event the number of your web servers change, for example a scale-up scenario, itâ€™s possible that the traffic may be unequally spread across the web servers as active sessions may exist on particular servers. If not mitigated properly, this can hinder the scalability of your application\""}],"comment_id":"573698","content":"Should we not use ELB as an origin for Cloudfront? \nCache management can be done nicely, also Cloudfront can serve dynamic content, not sure why we are not considering it.\n\nAs for me B, E is the answer. D is correct, but the B, E can also handle this, as better pair up","timestamp":"1648046700.0","upvote_count":"1"},{"content":"How come nobody is talking about the \"stateful\" keyword of the question. The answer is actually C and E","poster":"valour","upvote_count":"1","timestamp":"1636190040.0","comment_id":"373735","comments":[{"upvote_count":"4","content":"Stateful indicates D option. C has nothing to do with \"flexibility in the new design\". So E should be the next answer.","poster":"petervu","comment_id":"507539","timestamp":"1640227440.0"}]},{"content":"Answer: D,E","timestamp":"1636099740.0","upvote_count":"1","comment_id":"351234","poster":"VAG1595"},{"comment_id":"173623","content":"D and E are correct","poster":"saeidp","upvote_count":"1","timestamp":"1635063600.0"},{"content":"D & E are correct","upvote_count":"1","comment_id":"154325","timestamp":"1634471700.0","poster":"WilsonNF"},{"timestamp":"1634437020.0","poster":"Scarback","comment_id":"127684","upvote_count":"2","content":"Resp: D E"},{"content":"It is B an D. \nB) https://linuxacademy.com/community/show/6241-why-use-autoscaling-and-cdn-cloudfront-at-the-same-time/ \nD) https://acloud.guru/forums/aws-certified-solutions-architect-associate/discussion/-KGu3LN1mb6yGbg5Dh26/stateless-application-services","upvote_count":"1","timestamp":"1632969480.0","comments":[{"timestamp":"1633053240.0","comment_id":"69384","content":"Sorry, it's B (see link) and E https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html","comments":[{"content":"B is wrong. Cloudfront is for static files, not a webserver app!","comment_id":"71032","upvote_count":"7","comments":[{"upvote_count":"4","poster":"Maicon","comment_id":"211249","content":"You can use ELB as a origin for Cloudfront and have a webserver behind ELB. But I'd go with D/E for the exam","comments":[{"timestamp":"1660221600.0","comment_id":"645472","content":"You can do all that but that it's not mentioned about what's behind the alb and the best solution is one which is more flexible here, dynamodb is made for scaling","upvote_count":"2","poster":"alexaws1232312321_"}],"timestamp":"1635623100.0"}],"timestamp":"1633872240.0","poster":"CodeSlinger777"}],"upvote_count":"1","poster":"ginfizzbear"}],"poster":"ginfizzbear","comment_id":"69383"},{"comment_id":"67683","timestamp":"1632767160.0","content":"D. Store session state data in an Amazon DynamoDB table\nE. Use an ELB with an Auto Scaling group","poster":"kinetic1g","upvote_count":"5"},{"upvote_count":"2","comment_id":"46567","timestamp":"1632756420.0","content":"D. Store session state data in an Amazon DynamoDB table\nE. Use an ELB with an Auto Scaling group","poster":"awscertified"},{"poster":"aws_Tamilan","comment_id":"30614","upvote_count":"5","timestamp":"1632248640.0","content":"DE\nD. Store session state data in an Amazon DynamoDB table\nE. Use an ELB with an Auto Scaling group"}],"question_images":[],"choices":{"B":"Use Amazon CloudFront with an Auto Scaling group.","A":"Use pessimistic concurrency on Amazon DynamoDB.","E":"Use an ELB with an Auto Scaling group.","C":"Use Amazon CloudFront with an AWS Web Application Firewall.","D":"Store session state data in an Amazon DynamoDB table."},"answers_community":["DE (100%)"],"timestamp":"2019-11-21 17:12:00","exam_id":25,"unix_timestamp":1574352720,"question_text":"A developer has a stateful web server on-premises that is being migrated to AWS. The developer must have greater elasticity in the new design.\nHow should the developer re-factor the application to make it more elastic? (Choose two.)","answer":"DE","url":"https://www.examtopics.com/discussions/amazon/view/8791-exam-aws-certified-developer-associate-topic-1-question-111/","isMC":true,"topic":"1","answer_description":""}],"exam":{"isMCOnly":true,"isBeta":false,"lastUpdated":"11 Apr 2025","numberOfQuestions":443,"id":25,"name":"AWS Certified Developer Associate","isImplemented":true,"provider":"Amazon"},"currentPage":3},"__N_SSP":true}