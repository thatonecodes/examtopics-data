{"pageProps":{"questions":[{"id":"cHEVe1WDEmtmotFO0K99","url":"https://www.examtopics.com/discussions/amazon/view/106490-exam-aws-certified-developer-associate-dva-c02-topic-1/","exam_id":24,"question_id":521,"answer_ET":"A","topic":"1","unix_timestamp":1681741140,"answer_images":[],"answer":"A","isMC":true,"choices":{"A":"Create a global secondary index (GSI) with productFamily as the partition key and productType as the sort key.","C":"Recreate the table. Add partNumber as the partition key and vendor as the sort key. During table creation, add a local secondary index (LSI) with productFamily as the partition key and productType as the sort key.","D":"Update the queries to use Scan operations with productFamily as the partition key and productType as the sort key.","B":"Create a local secondary index (LSI) with productFamily as the partition key and productType as the sort key."},"timestamp":"2023-04-17 16:19:00","answer_description":"","discussion":[{"poster":"Fyssy","upvote_count":"10","comment_id":"872775","content":"Selected Answer: A\nreate a Global Secondary Index (GSI): The developer should create a new GSI on the DynamoDB table with the productFamily attribute as the partition key and the productType attribute as the sort key. This will allow the application to perform fast queries on these attributes without scanning the entire table.","timestamp":"1697552340.0"},{"upvote_count":"9","comment_id":"906590","content":"Selected Answer: A\nLSI canÂ´t be created on an already existing table and as Fyssy says. A - create new GSI will make the querying faster and you do not need to recreate the whole table.","timestamp":"1700917620.0","poster":"Majong"},{"timestamp":"1735132680.0","upvote_count":"2","comment_id":"1331547","content":"Selected Answer: A\nA) Correct - GSI will give alternative Primary Key (HASH or HASH + Sort Key) from the base table.\n\n\nB) Eliminated - An LSI shares the same partition key as the base table but allows a different sort key. LSIs must be defined at the time of table creation and cannot be added to an existing table.","poster":"sumanshu"},{"comment_id":"1215337","content":"Selected Answer: A\nA is the correct answer.","upvote_count":"1","timestamp":"1732247100.0","poster":"65703c1"},{"comment_id":"1181572","timestamp":"1727176500.0","content":"Selected Answer: C\nOption C improve more performance. The question didn't care about effort","poster":"maurice2005","upvote_count":"1"},{"timestamp":"1720691640.0","poster":"SerialiDr","upvote_count":"2","comment_id":"1119670","content":"Selected Answer: A\nThis is a viable solution. A GSI allows you to query data using an alternate key, in this case, productFamily and productType. This would enable efficient queries based on these attributes, which is aligned with the observed usage patterns."},{"upvote_count":"5","comment_id":"1002052","poster":"winzzhhzzhh","content":"Selected Answer: A\nLSI: different sort key but the same partition key\nGSI: different partition key and a different sort key","timestamp":"1709874540.0"}],"question_images":[],"question_text":"A developer is working on an existing application that uses Amazon DynamoDB as its data store. The DynamoDB table has the following attributes: partNumber (partition key), vendor (sort key), description, productFamily, and productType. When the developer analyzes the usage patterns, the developer notices that there are application modules that frequently look for a list of products based on the productFamily and productType attributes.\n\nThe developer wants to make changes to the application to improve performance of the query operations.\n\nWhich solution will meet these requirements?","answers_community":["A (97%)","3%"]},{"id":"DnyfdiJf4N7yVFWvVHIR","question_id":522,"exam_id":24,"discussion":[{"comment_id":"880421","timestamp":"1682429220.0","upvote_count":"15","content":"Selected Answer: B\nTo solve this problem, the developer should redeploy the Lambda function in the same subnet as the RDS instance and ensure that the RDS security group allows traffic from the Lambda function. This will allow the Lambda function to access the RDS database within the private subnet of VPC-A. The developer should also make sure that the Lambda function is configured with the appropriate network settings and permissions to access resources within the VPC.","poster":"MrTee"},{"poster":"Fyssy","comment_id":"872781","content":"Selected Answer: B\nRedeploy","timestamp":"1681741380.0","upvote_count":"13"},{"poster":"sumanshu","comment_id":"1331553","timestamp":"1735133400.0","content":"Selected Answer: B\nLambda function in the default VPC cannot communicate with the RDS in VPC-A, because they are in different VPCs with no connection (like a VPC peering or transit gateway).","upvote_count":"1"},{"poster":"mallikarjun_angadi","upvote_count":"2","timestamp":"1731690840.0","comment_id":"1312728","content":"Selected Answer: C\nB is InCorrect because Deploying the Lambda function in the same private subnet as the RDS instance is not feasible, Lambda function needs to access other resources or services outside the VPC."},{"content":"B is incorrect because deploying lambda in private subnet. Cannot access other resources","comment_id":"1312725","poster":"mallikarjun_angadi","timestamp":"1731690720.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"1279508","poster":"raasankar","timestamp":"1725615960.0","content":"Selected Answer: B\nC would need a vpc peering, \nSo B is the best option as we are redeploying to same subnet."},{"poster":"65703c1","upvote_count":"1","timestamp":"1716342900.0","content":"Selected Answer: B\nB is the correct answer.","comment_id":"1215345"},{"timestamp":"1714079340.0","content":"they are in different VPC, hence C is not possible unless there is VPC Peering.","upvote_count":"1","poster":"Vaibs099","comment_id":"1202255"},{"poster":"badsati","upvote_count":"2","timestamp":"1712858640.0","comment_id":"1193955","content":"Selected Answer: B\nBy deploying the Lambda function in the same subnet as the RDS instance (VPC-A), the Lambda function will have access to the resources within the same VPC, including the RDS database.\nAdditionally, the RDS security group should be configured to allow inbound traffic from the Lambda function's security group.\nTherefore, the correct solution is Option B."},{"comment_id":"1184139","poster":"DeaconStJohn","upvote_count":"1","content":"Selected Answer: B\nRedeploy as no access has been set up between VPCs","timestamp":"1711547100.0"},{"upvote_count":"1","comment_id":"1181678","content":"Selected Answer: B\nA and B wont work since lambda is on default vpc which is not vpc-a\nD won't work since since it's network access in the first place.","poster":"maurice2005","timestamp":"1711289880.0"},{"comment_id":"1160303","poster":"SerialiDr","content":"Selected Answer: B\nOption B (\"Redeploy the Lambda function in the same subnet as the RDS instance. Ensure that the RDS security group allows traffic from the Lambda function.\") is the most accurate approach if the Lambda function and RDS are to communicate within the same VPC. It directly addresses the need for the Lambda function to access the VPC and the security group configuration.","timestamp":"1709018340.0","upvote_count":"2"},{"upvote_count":"1","comments":[{"content":"ChatGPT don't know anything. It's only read data","comment_id":"1150166","timestamp":"1707911280.0","poster":"toan_nguyen","upvote_count":"5"}],"comment_id":"1121987","poster":"cauchy06","content":"Selected Answer: C\nNo need for redeploy. ChatGPT also says C.","timestamp":"1705173600.0"},{"comment_id":"1119683","upvote_count":"6","timestamp":"1704974880.0","poster":"SerialiDr","content":"Selected Answer: B\nB. Redeploy the Lambda function in the same subnet as the RDS instance. Ensure that the RDS security group allows traffic from the Lambda function: This is a viable solution. Placing the Lambda function in the same VPC as the RDS instance (preferably in a private subnet for security reasons) and ensuring the security groups are correctly configured to allow traffic between the Lambda function and the RDS instance will enable connectivity.\n\nC. Create a security group for the Lambda function. Add a new rule in the RDS security group to allow traffic from the new Lambda security group: This option would be correct if the Lambda function and the RDS instance were in the same VPC. However, since they are in different VPCs, simply adjusting security groups won't address the cross-VPC connectivity issue."},{"timestamp":"1704398880.0","poster":"nickolaj","content":"Selected Answer: B\nOption C would be the correct choice, but it doesn't include the route configuration between subnets needed to access the RDS. I chose option B, but according to architectural best practices, it's not the ideal solution.","comment_id":"1114042","upvote_count":"2"},{"content":"Selected Answer: C\nSeems more efficient solution.","timestamp":"1703481840.0","comment_id":"1105029","upvote_count":"1","poster":"a_win"},{"timestamp":"1702821720.0","upvote_count":"1","comment_id":"1098965","poster":"KarBiswa","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html\nThe default VPC is the public subnet, this is the main trick","comments":[{"comment_id":"1109303","timestamp":"1703896800.0","upvote_count":"1","content":"Have you even read the documentation that you're providing. It says clearly:\n\nYou can use a default VPC as you would use any other VPC:\n\nAdd additional nondefault subnets.\nModify the main route table.\nAdd additional route tables.\nAssociate additional security groups.\nUpdate the rules of the default security group.\nAdd AWS Site-to-Site VPN connections.\nAdd more IPv4 CIDR blocks.\nAccess VPCs in a remote Region by using a Direct Connect gateway. For information about Direct Connect gateway options, see Direct Connect gateways in the AWS Direct Connect User Guide.\nYou can use a default subnet as you would use any other subnet; add custom route tables and set network ACLs. You can also specify a specific default subnet when you launch an EC2 instance.","poster":"BaYaga"}]},{"content":"Selected Answer: B\nB is the option. Because they meant here A default VPC comes with a public subnet in each Availability Zone,\nSo here default VPC they meant Public, so the lambda must be redployed to Private subnet.\nhttps://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html","timestamp":"1702821660.0","poster":"KarBiswa","upvote_count":"1","comment_id":"1098963"},{"comment_id":"1093838","upvote_count":"2","content":"Selected Answer: B\nB is correct, the lambda function lives in a different VPC, so it needs a VPC peering connection from both VPC's and a route to VPC-A.\n\nIf you select C you will be assuming that the default VPC can communicate with VPC-A\n\nSo redeployment and amendment of the SG will fit the needs.","poster":"Certified101","timestamp":"1702327260.0"},{"content":"These questions are so wordy... so when we say default VPC is it the VPC-A or is the default VPC another one. Because if default VPC is another one other than VPC-A then it needs to be redeployed. Tricky question","poster":"[Removed]","comment_id":"1091900","timestamp":"1702139160.0","upvote_count":"2"},{"timestamp":"1702126620.0","poster":"chewasa","comment_id":"1091808","upvote_count":"2","content":"Selected Answer: C\nOption C is the recommended approach. By creating a security group for the Lambda function and adding a rule in the RDS security group to allow traffic from the new Lambda security group, you create a more controlled and secure configuration. This allows the Lambda function to communicate with the RDS database without exposing unnecessary access."},{"poster":"walala97","comment_id":"1081649","content":"Selected Answer: C\nI dont know why we need redeploy lambda here,I will go with C","timestamp":"1701095460.0","upvote_count":"3"},{"comment_id":"1004693","poster":"hsinchang","upvote_count":"2","content":"Selected Answer: B\nSecurity group cannot include services from different VPCs, the Lambda function needs to be redeployed.","timestamp":"1694431800.0","comments":[{"timestamp":"1702139700.0","poster":"[Removed]","comment_id":"1091910","upvote_count":"1","content":"Exactly... VPC to VPC connection you must use VPC peering"}]},{"poster":"love777","content":"Selected Answer: C\nThe issue here is most likely due to the fact that the Lambda function, running in the default VPC, is trying to access the RDS database located in another VPC (VPC-A). By default, resources in different VPCs cannot communicate directly with each other.\nTo enable communication between the Lambda function and the RDS database in a different VPC, you should create a security group for the Lambda function and configure the RDS security group to allow traffic from the Lambda security group.","comment_id":"992320","timestamp":"1693234740.0","upvote_count":"3"},{"comment_id":"963296","timestamp":"1690341060.0","comments":[{"comment_id":"969063","poster":"jipark","content":"the key is \"security group\", not \"IAM role\"","upvote_count":"1","timestamp":"1690892820.0"}],"content":"Option 'C' is better. Because it offers a more secure, flexible, and scalable solution for allowing communication between the Lambda function and the RDS database, without tightly coupling the Lambda function with the database's network configuration. It also follows best practices for security and access control.","upvote_count":"2","poster":"r3mo"},{"upvote_count":"3","content":"Selected Answer: C\nB and C are correct. Going with C though. C will take only a few minutes to implement while redeploying the Lambda function will definitely take more time to complete.","timestamp":"1688977560.0","poster":"Naj_64","comment_id":"947899"},{"poster":"sum_la46","timestamp":"1687700220.0","upvote_count":"1","content":"C is the correct answer","comment_id":"933648"},{"timestamp":"1687345680.0","comment_id":"929383","upvote_count":"4","poster":"hexie","content":"Selected Answer: C\nC - well, I'm going for C in this case because the question doesnt mention either that the Lambda function NEED to be on the default VPC, but also doesnt mention that the Lambda function will reach only the RDS on the specific VPC. \nImagine if there are other RDS instances on other VPCs on the same project, he would need to deploy a Lambda Function in each of them? Creating a Security Group for the Lambda Function would make easier by just assign the Security Group to any VPC that has a RDS instance :)"},{"comment_id":"918673","upvote_count":"2","timestamp":"1686258180.0","content":"Selected Answer: C\nOption A would allow all traffic from the VPC CIDR block to the RDS instance. This is not a secure configuration.\nOption B would move the Lambda function to the same subnet as the RDS instance. This is a possible solution, but it is not the most efficient solution.\nOption D would create an IAM role and attach a policy to the role that allows access to the RDS database. This would allow the Lambda function to access the RDS database, but it would not allow the Lambda function to connect to the RDS instance.","poster":"Prem28"},{"comment_id":"911152","comments":[{"content":"we know that the Lambda function is running in the default VPC, which is a public VPC. The RDS instance is running in a private subnet, which is not accessible from the public internet. In order for the Lambda function to connect to the RDS instance, the Lambda function must be able to access the private subnet. This can be done by creating a security group for the Lambda function and adding a rule to the RDS security group to allow traffic from the Lambda security group.","comment_id":"911161","poster":"Prem28","upvote_count":"3","timestamp":"1685532540.0"}],"content":"c is correct\n\nOption A would allow all traffic from the VPC CIDR block to the RDS instance. This is not a secure configuration.\nOption B would move the Lambda function to the same subnet as the RDS instance. This is a possible solution, but it is not the most efficient solution.\nOption D would create an IAM role and attach a policy to the role that allows access to the RDS database. This would allow the Lambda function to access the RDS database, but it would not allow the Lambda function to connect to the RDS instance.","poster":"Prem28","upvote_count":"1","timestamp":"1685532300.0"},{"content":"Selected Answer: B\na - no because they rds and lambda on different vpc\nc - same as a \nd - same as a and c\n\nb is the correct answer","timestamp":"1684115640.0","upvote_count":"2","poster":"Jamshif01","comment_id":"897981"}],"question_text":"A developer creates a VPC named VPC-A that has public and private subnets. The developer also creates an Amazon RDS database inside the private subnet of VPC-A. To perform some queries, the developer creates an AWS Lambda function in the default VPC. The Lambda function has code to access the RDS database. When the Lambda function runs, an error message indicates that the function cannot connect to the RDS database.\n\nHow can the developer solve this problem?","answer_description":"","answers_community":["B (72%)","C (28%)"],"url":"https://www.examtopics.com/discussions/amazon/view/106491-exam-aws-certified-developer-associate-dva-c02-topic-1/","choices":{"B":"Redeploy the Lambda function in the same subnet as the RDS instance. Ensure that the RDS security group allows traffic from the Lambda function.","A":"Modify the RDS security group. Add a rule to allow traffic from all the ports from the VPC CIDR block.","D":"Create an IAM role. Attach a policy that allows access to the RDS database. Attach the role to the Lambda function.","C":"Create a security group for the Lambda function. Add a new rule in the RDS security group to allow traffic from the new Lambda security group."},"answer_ET":"B","unix_timestamp":1681741380,"timestamp":"2023-04-17 16:23:00","question_images":[],"answer":"B","answer_images":[],"topic":"1","isMC":true},{"id":"yprls1gWyQ22YCa6UOd3","isMC":true,"answer":"C","unix_timestamp":1681904340,"answer_ET":"C","question_id":523,"answer_description":"","answer_images":[],"discussion":[{"poster":"MrTee","content":"Selected Answer: C\nTo monitor for custom DECRYP_ERROR errors and alert a development team in real time when these errors occur in the production environment with the least operational overhead, the developer should use Amazon CloudWatch Logs to create a metric filter that has a filter pattern for DECRYP_ERROR. The developer should then create a CloudWatch alarm on this metric for a threshold >=1 and configure the alarm to send Amazon Simple Notification Service (Amazon SNS) notifications (Option C). This solution will allow the developer to monitor for custom errors in real time and receive notifications when they occur with minimal operational overhead.","upvote_count":"9","timestamp":"1697817420.0","comment_id":"875765"},{"content":"Selected Answer: C\nCloudWatch Logs Metric Filter allows you to directly track specific keywords (e.g., DECRYP_ERROR) in logs and generate metrics without additional code or infrastructure. After creating a metric filter, you can configure a CloudWatch Alarm to monitor the metric and send an alert if the threshold is exceeded (e.g., >=1 occurrence). Using Amazon SNS, the alarm can notify the development team in real time.","upvote_count":"1","comment_id":"1331573","timestamp":"1735136160.0","poster":"sumanshu","comments":[{"timestamp":"1735136280.0","comment_id":"1331575","upvote_count":"1","poster":"sumanshu","content":"A) Eliminated - Custom metric creation by the application requires code changes in the application, which introduces development overhead.\n\nB) Eliminated - Running a Lambda function periodically adds complexity, additional cost, and delays in detecting errors (up to 5 minutes).\n\nD) Eliminated - installing and maintaining the CloudWatch agent introduces operational complexity"}]},{"timestamp":"1732247880.0","content":"Selected Answer: C\nC is the correct answer.","poster":"65703c1","upvote_count":"1","comment_id":"1215347"},{"poster":"badsati","upvote_count":"1","content":"Selected Answer: C\nOptions A, B, and D introduce additional complexity, operational overhead, and potential points of failure compared to Option C, which leverages native CloudWatch capabilities for log monitoring and alerting with minimal setup and maintenance overhead. Therefore, Option C is the most suitable choice for meeting the requirements with the least operational overhead.","comment_id":"1193960","timestamp":"1728670260.0"},{"upvote_count":"1","poster":"SerialiDr","timestamp":"1720693920.0","content":"Selected Answer: C\nThis is a straightforward and effective solution. CloudWatch Logs allows you to create a metric filter for specific log patterns (such as DECRYP_ERROR) and then create an alarm based on that metric. When the alarm is triggered, it can send a notification through Amazon SNS. This approach provides real-time monitoring with minimal operational overhead.","comment_id":"1119715"},{"poster":"hsinchang","content":"Selected Answer: C\nA and B are not real-time, and the CloudWatch unified agent in D is used to collect metrics and logs from EC2 instances and on-premises servers, not to send notifications.\nSo C.","comment_id":"1004701","upvote_count":"4","timestamp":"1710164100.0"},{"upvote_count":"2","poster":"Fyssy","comment_id":"874559","timestamp":"1697715540.0","content":"Selected Answer: C\nCloudWatch Logs can use filter expressions. For example, find a specific IP inside of a log Or count occurrences of âERRORâ in your logsâ¢ Metric filters can be used to trigger CloudWatch alarms"}],"topic":"1","timestamp":"2023-04-19 13:39:00","question_text":"A company runs an application on AWS. The company deployed the application on Amazon EC2 instances. The application stores data on Amazon Aurora.\n\nThe application recently logged multiple application-specific custom DECRYP_ERROR errors to Amazon CloudWatch logs. The company did not detect the issue until the automated tests that run every 30 minutes failed. A developer must implement a solution that will monitor for the custom errors and alert a development team in real time when these errors occur in the production environment.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","url":"https://www.examtopics.com/discussions/amazon/view/106708-exam-aws-certified-developer-associate-dva-c02-topic-1/","question_images":[],"answers_community":["C (100%)"],"exam_id":24,"choices":{"C":"Use Amazon CloudWatch Logs to create a metric filter that has a filter pattern for DECRYP_ERROR. Create a CloudWatch alarm on this metric for a threshold >=1. Configure the alarm to send Amazon Simple Notification Service (Amazon SNS) notifications.","A":"Configure the application to create a custom metric and to push the metric to CloudWatch. Create an AWS CloudTrail alarm. Configure the CloudTrail alarm to use an Amazon Simple Notification Service (Amazon SNS) topic to send notifications.","B":"Create an AWS Lambda function to run every 5 minutes to scan the CloudWatch logs for the keyword DECRYP_ERROR. Configure the Lambda function to use Amazon Simple Notification Service (Amazon SNS) to send a notification.","D":"Install the CloudWatch unified agent on the EC2 instance. Configure the application to generate a metric for the keyword DECRYP_ERROR errors. Configure the agent to send Amazon Simple Notification Service (Amazon SNS) notifications."}},{"id":"mzNkp94HZhmbRYSb7H71","answer_images":[],"answer_description":"","isMC":true,"question_text":"A developer created an AWS Lambda function that accesses resources in a VPC. The Lambda function polls an Amazon Simple Queue Service (Amazon SQS) queue for new messages through a VPC endpoint. Then the function calculates a rolling average of the numeric values that are contained in the messages. After initial tests of the Lambda function, the developer found that the value of the rolling average that the function returned was not accurate.\n\nHow can the developer ensure that the function calculates an accurate rolling average?","answers_community":["A (57%)","B (42%)","1%"],"answer_ET":"A","choices":{"C":"Set the function's provisioned concurrency to 1. Calculate the rolling average in the function. Store the calculated rolling average in Amazon ElastiCache.","A":"Set the function's reserved concurrency to 1. Calculate the rolling average in the function. Store the calculated rolling average in Amazon ElastiCache.","B":"Modify the function to store the values in Amazon ElastiCache. When the function initializes, use the previous values from the cache to calculate the rolling average.","D":"Modify the function to store the values in the function's layers. When the function initializes, use the previously stored values to calculate the rolling average."},"discussion":[{"timestamp":"1686972540.0","poster":"eboehm","comment_id":"925725","upvote_count":"25","comments":[{"timestamp":"1690893660.0","upvote_count":"2","content":"reserve concurrency 1 means poll in order.\nthis looks answer.","comment_id":"969073","poster":"jipark"}],"content":"Selected Answer: A\nYou need to set the reserved concurrency to 1 otherwise multiple functions could run at the same time causing the math to be off. Also there was a similar question in another practice exam set that stated the same thing"},{"timestamp":"1682430960.0","upvote_count":"19","comment_id":"880436","content":"Selected Answer: B\nBy using ElastiCache, the Lambda function can store the values of the previous messages it has received, which can be used to calculate an accurate rolling average.","poster":"MrTee"},{"poster":"sumanshu","content":"Selected Answer: A\nB) Eliminated - If multiple instances of the Lambda function run concurrently, they could retrieve or modify the same data in ElastiCache, leading to inaccuracies in the rolling average.\n\nC) Eliminated - Provisioned concurrency does not prevent concurrency issues\n\nD) Eliminated - Lambda layers are used to share common code or dependencies across Lambda functions but are not designed for storing or persisting data.","comment_id":"1331579","upvote_count":"2","timestamp":"1735136460.0"},{"poster":"ShakthiGCP","upvote_count":"1","comment_id":"1328801","timestamp":"1734571860.0","content":"Selected Answer: B\nReserved concurrency: Setting reserved concurrency to 1 ensures only one instance of the function executes at a time. While this might prevent race conditions, it doesn't address the core issue of calculating the rolling average across multiple Lambda invocations.\n u"},{"content":"Selected Answer: A\n==> Discard B: There are not limit corrency in elastic cache, multiple lambda can access make race condition ==> wrong output","upvote_count":"1","poster":"trieudo","timestamp":"1734353880.0","comment_id":"1327363"},{"comment_id":"1294898","timestamp":"1728432360.0","content":"Selected Answer: A\nReserved Concurrency of 1 ensures that only one instance of the Lambda function runs at a time, which is crucial for calculating an accurate rolling average. If multiple instances of the Lambda function run simultaneously (without concurrency control), each instance might have incomplete or inconsistent data, leading to incorrect results for the rolling average.\n\nStoring the rolling average in Amazon ElastiCache provides a persistent, in-memory storage that the function can access quickly during each invocation. ElastiCache can store the current state of the rolling average and any relevant historical data, ensuring that each invocation of the Lambda function has access to the most recent values for calculation","poster":"AmitRanchi","upvote_count":"1"},{"comment_id":"1261271","poster":"Saurabh04","content":"Correct answer should be D. Storing values in the function's layers and using them during initialization is straightforward. This Approach avoids external services like Elasticache.","upvote_count":"1","comments":[{"content":"layers are not meant to store dynamic data. it's for sharing libraries and static code across lambda functions","upvote_count":"1","poster":"rue_","comment_id":"1305097","timestamp":"1730309820.0"}],"timestamp":"1722899940.0"},{"timestamp":"1720449960.0","upvote_count":"1","content":"Selected Answer: B\nelasticache for keeping the values from previous invocation","poster":"lozou","comment_id":"1244415"},{"comment_id":"1239791","content":"Selected Answer: B\nA y C limitan mucho la capacidad de Lamda. Voy con B","upvote_count":"1","timestamp":"1719773160.0","poster":"guidosolano"},{"comment_id":"1215348","poster":"65703c1","upvote_count":"2","timestamp":"1716343380.0","content":"Selected Answer: A\nA is the correct answer."},{"timestamp":"1711440180.0","upvote_count":"1","content":"Selected Answer: B\nAs per Gemini below is why A is incorrect\nA. Reserved concurrency: Setting reserved concurrency to 1 ensures only one instance of the function executes at a time. While this might prevent race conditions, it doesn't address the core issue of calculating the rolling average across multiple Lambda invocations.","comment_id":"1183117","poster":"SathyaJS"},{"timestamp":"1710726600.0","poster":"yingying920928","comments":[{"timestamp":"1711494900.0","content":"that's the correct way in real world but nothing about state management or data consistency is mentioned in B. But A has it although it's not the good real world to do so.","comment_id":"1183697","poster":"maurice2005","upvote_count":"1"}],"content":"Selected Answer: B\nWhile limiting concurrency (A or C) can help manage the function's execution rate and scale and prevent throttling, it is not directly related to ensuring the accuracy of calculating rolling average. Instead, focusing on proper state management and data consistency mechanisms (using ElastiCache) is key to achieving accurate results in this scenario.","upvote_count":"2","comment_id":"1176193"},{"comment_id":"1160391","content":"Selected Answer: A\nOption A (\"Set the function's reserved concurrency to 1. Calculate the rolling average in the function. Store the calculated rolling average in Amazon ElastiCache.\") is the most suitable solution. It ensures that only one instance of the Lambda function processes messages at any given time, maintaining the sequence of message processing which is crucial for an accurate rolling average calculation. Additionally, using Amazon ElastiCache to store and retrieve the rolling average across invocations addresses the statelessness of AWS Lambda, enabling stateful processing.","poster":"SerialiDr","timestamp":"1709027100.0","upvote_count":"4"},{"poster":"d323bvmiqj","comment_id":"1152964","content":"Selected Answer: A\nWhat if one of the instances freezes and holds one of the vzlues for some time, not updating cache, while the others continue calculatinv the avg giving wrong output ?","upvote_count":"3","timestamp":"1708216980.0"},{"timestamp":"1704976800.0","comment_id":"1119727","poster":"SerialiDr","content":"Selected Answer: B\nBy storing individual message values in ElastiCache (a fast, in-memory data store), the Lambda function can retrieve these values upon initialization to calculate an accurate rolling average. This approach effectively maintains state across Lambda invocations.","upvote_count":"2"},{"content":"Selected Answer: B\nUsing ElastiCache allows you to maintain a shared state across all instances of your Lambda function","timestamp":"1704674460.0","upvote_count":"1","comment_id":"1116282","poster":"Chimzi"},{"timestamp":"1703082960.0","comment_id":"1101638","poster":"ShinobiGrappler","upvote_count":"4","content":"Selected Answer: A\nThis approach controls concurrency by ensuring only one instance runs at a time. Provisioned concurrency also has the added benefit of reducing cold start latency. Storing the rolling average in ElastiCache is a good practice for maintaining state. However, like option A, it may limit the function's throughput."},{"content":"Selected Answer: B\nBoth options A and B provide valid approaches to address potential issues, but they have different trade-offs. Option A focuses on limiting concurrency, while Option B suggests using a caching solution to store and retrieve intermediate values.\n\nIf avoiding concurrency problems is a top priority and the function's execution time is not a concern, Option A could be a suitable choice. However, if you are looking for a solution that allows for better scalability and doesn't impose strict concurrency limitations, Option B with Amazon ElastiCache provides a more scalable and distributed approach.","comment_id":"1101450","upvote_count":"4","poster":"chewasa","timestamp":"1703069700.0"},{"upvote_count":"3","comment_id":"1099168","poster":"Certified101","timestamp":"1702840500.0","content":"Selected Answer: A\nA is correct"},{"timestamp":"1702141140.0","comments":[{"poster":"[Removed]","upvote_count":"1","timestamp":"1702141380.0","content":"Actually after reading the question more carefully... I change my answer to B","comment_id":"1091929"}],"upvote_count":"1","poster":"[Removed]","content":"Another tricky question. I go with A mainly because ElastiCache is mainly used along with databases. See this link https://docs.aws.amazon.com/lambda/latest/dg/lambda-concurrency.html#reserved-and-provisioned \n\nPulled from AWS Website --> What is Amazon ElastiCache?\nAmazon ElastiCache allows you to seamlessly set up, run, and scale an in-memory cache in the cloud. ElastiCache is compatible with both Redis and Memcached. Boost your application performance and achieve microsecond latency by caching alongside your existing databases. ElastiCache is a popular choice for real-time use cases like caching, session stores, gaming, geo-spatial services, real-time analytics, and queuing.","comment_id":"1091925"},{"comment_id":"1085895","upvote_count":"1","content":"Selected Answer: B\nChatGPT:B","timestamp":"1701503400.0","comments":[{"comment_id":"1227241","upvote_count":"2","poster":"beekeeper0101","content":"ChatGPT is not the bible for aws","timestamp":"1717929000.0"}],"poster":"tqiu654"},{"content":"Selected Answer: A\nAo definir a simultaneidade reservada da funÃ§Ã£o como 1, isso garante que apenas uma instÃ¢ncia da funÃ§Ã£o Lambda serÃ¡ invocada ao mesmo tempo. Isso pode ajudar a evitar qualquer problema de concorrÃªncia que possa causar imprecisÃµes na mÃ©dia mÃ³vel. Ao calcular a mÃ©dia mÃ³vel na funÃ§Ã£o e armazenÃ¡-la no Amazon ElastiCache, a funÃ§Ã£o pode acessar e atualizar rapidamente a mÃ©dia sempre que for invocada.","poster":"Jonalb","timestamp":"1698375600.0","comment_id":"1055079","upvote_count":"3"},{"upvote_count":"1","content":"Selected Answer: D\nD. Modify the function to store the values in the function's layers. When the function initializes, use the previously stored values to calculate the rolling average.\n\nThis is the best solution because it does not add any overhead to the function, and it does not increase the cost of running the function. Storing the values in the function's layers is a simple and effective way to ensure that the function calculates an accurate rolling average.","comment_id":"1045888","poster":"dexdinh91","timestamp":"1697541060.0"},{"upvote_count":"2","poster":"nnecode","comment_id":"1020653","content":"Selected Answer: B\nThe best way for the developer to ensure that the function calculates an accurate rolling average is to modify the function to store the values in Amazon ElastiCache. When the function initializes, use the previous values from the cache to calculate the rolling average.\n\nThis solution is the best because it ensures that the rolling average is always calculated from the latest values, even if the Lambda function is scaled out to multiple instances.","timestamp":"1695978300.0"},{"upvote_count":"2","comment_id":"1017908","poster":"nnecode","timestamp":"1695741300.0","content":"Selected Answer: B\nThe correct answer is B. Modify the function to store the values in Amazon ElastiCache. When the function initializes, use the previous values from the cache to calculate the rolling average.\n\nThis solution will ensure that the Lambda function calculates an accurate rolling average, even if the function is invoked multiple times simultaneously."},{"timestamp":"1694566620.0","poster":"sofiatian","comment_id":"1006108","content":"Selected Answer: A\nReserved concurrency is the maximum number of concurrent instances you want to allocate to your function.\nhttps://docs.aws.amazon.com/lambda/latest/dg/lambda-concurrency.html#reserved-and-provisioned","upvote_count":"2"},{"upvote_count":"5","comment_id":"994217","poster":"love777","content":"Selected Answer: B\nExplanation: In a Lambda function, maintaining state across invocations can be challenging due to the stateless nature of the serverless architecture. Option B addresses this challenge by using Amazon ElastiCache (a managed in-memory data store) to store the necessary data between invocations. By storing the values in ElastiCache, the Lambda function can retrieve the previous values upon initialization and accurately calculate the rolling average.\n\nOptions A, C, and D are not the best choices for this scenario:\n\nA. Setting the function's reserved concurrency to 1 doesn't inherently solve the accuracy issue. While it might ensure sequential execution, it doesn't address the problem of maintaining state across multiple invocations.","timestamp":"1693406340.0"},{"timestamp":"1690376580.0","upvote_count":"4","content":"Selected Answer: A\nA is correct. Calculating the rolling average requires the messages in the SQS queue to be processed in order, so concurrent lambda executions won't work.","comment_id":"963744","poster":"redfivedog"},{"content":"Selected Answer: A\nNeed to set the reserved concurrency to 1.","upvote_count":"2","poster":"MrPie","timestamp":"1688827800.0","comment_id":"946566"},{"content":"Selected Answer: A\nIt is A. You have to set reserved instances to 1 to prevent parallel calculations.","poster":"awsazedevsh","timestamp":"1688758620.0","comment_id":"945962","upvote_count":"2"},{"upvote_count":"2","poster":"qwan","timestamp":"1688418480.0","comment_id":"942210","content":"Selected Answer: A\nFirst paragraph from https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html"},{"content":"C is the correct answer","comment_id":"933791","upvote_count":"2","timestamp":"1687714860.0","poster":"sum_la46"},{"timestamp":"1687700400.0","poster":"sum_la46","comment_id":"933651","upvote_count":"2","content":"Is B Correct answer??"},{"timestamp":"1681904580.0","comment_id":"874564","content":"Selected Answer: B\nModify the function to store the values in Amazon ElastiCache. When the function initializes, use the previous values from the cache to calculate the rolling average.","upvote_count":"3","poster":"Fyssy"}],"exam_id":24,"url":"https://www.examtopics.com/discussions/amazon/view/106711-exam-aws-certified-developer-associate-dva-c02-topic-1/","question_id":524,"answer":"A","unix_timestamp":1681904580,"timestamp":"2023-04-19 13:43:00","topic":"1","question_images":[]},{"id":"ZqXNvZCASfLijwwUrlYr","exam_id":24,"topic":"1","answer_images":[],"choices":{"B":"","A":"","C":"","D":""},"answer_ET":"C","question_images":[],"timestamp":"2023-04-19 13:58:00","isMC":true,"unix_timestamp":1681905480,"answer_description":"","answer":"C","question_id":525,"answers_community":["C (87%)","13%"],"discussion":[{"upvote_count":"8","comment_id":"915961","timestamp":"1701851220.0","poster":"csG13","content":"Selected Answer: C\nIt's definitely C. Events in answer D are not real. A & B are clearly wrong since two events are required."},{"content":"Selected Answer: C\nUsing both events together ensures that the Lambda function is invoked for both new pull requests and updates to existing pull requests.","upvote_count":"1","timestamp":"1735136580.0","poster":"sumanshu","comment_id":"1331583"},{"poster":"65703c1","upvote_count":"1","content":"Selected Answer: C\nC is the correct answer.","timestamp":"1732248360.0","comment_id":"1215351"},{"content":"https://aws.amazon.com/blogs/devops/automated-code-review-on-pull-requests-using-aws-codecommit-and-aws-codebuild/","timestamp":"1729891560.0","comment_id":"1202261","upvote_count":"2","poster":"Vaibs099"},{"poster":"Dushank","content":"Answer is C. There's no event call pullRequestUpdated","comment_id":"1002691","timestamp":"1709933940.0","upvote_count":"4"},{"poster":"Majong","content":"Selected Answer: C\nTwo events is needed so A and B is no. \nThe events mentioned in D does not exist as Zodraz says (just look in the link)","comment_id":"906612","upvote_count":"4","timestamp":"1700919660.0"},{"timestamp":"1699603980.0","upvote_count":"3","comment_id":"893663","poster":"Prem28","content":"Selected Answer: C\nits c ,Event mentioned in D not Exist"},{"content":"Selected Answer: C\nIt' s C. Any of the events mentioned on D exist. https://docs.aws.amazon.com/codecommit/latest/userguide/monitoring-events.html#pullRequestSourceBranchUpdated","poster":"zodraz","timestamp":"1699440660.0","comment_id":"891939","upvote_count":"3"},{"timestamp":"1699440300.0","poster":"zodraz","content":"It' s C. Any of the events mentioned on D exist. https://docs.aws.amazon.com/codecommit/latest/userguide/monitoring-events.html#pullRequestSourceBranchUpdated","comment_id":"891932","upvote_count":"2"},{"comment_id":"874586","poster":"Fyssy","upvote_count":"3","timestamp":"1697716680.0","content":"Selected Answer: D\n\"detail\": {\n \"event\": [\"pullRequestCreated\", \"pullRequestSourceBranchUpdated\"]","comments":[{"content":"you create a pull request and update a branch so the answer is C","poster":"Arktos","comment_id":"1216568","timestamp":"1732372680.0","upvote_count":"1"}]}],"question_text":"A developer is writing unit tests for a new application that will be deployed on AWS. The developer wants to validate all pull requests with unit tests and merge the code with the main branch only when all tests pass.\n\nThe developer stores the code in AWS CodeCommit and sets up AWS CodeBuild to run the unit tests. The developer creates an AWS Lambda function to start the CodeBuild task. The developer needs to identify the CodeCommit events in an Amazon EventBridge event that can invoke the Lambda function when a pull request is created or updated.\n\nWhich CodeCommit event will meet these requirements?","url":"https://www.examtopics.com/discussions/amazon/view/106717-exam-aws-certified-developer-associate-dva-c02-topic-1/"}],"exam":{"name":"AWS Certified Developer - Associate DVA-C02","provider":"Amazon","isImplemented":true,"id":24,"lastUpdated":"11 Apr 2025","isMCOnly":true,"isBeta":false,"numberOfQuestions":551},"currentPage":105},"__N_SSP":true}