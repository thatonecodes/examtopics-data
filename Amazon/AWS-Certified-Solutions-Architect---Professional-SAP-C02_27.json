{"pageProps":{"questions":[{"id":"gVN67kW4HdPa3YTLLzM8","answer":"B","answer_description":"","answers_community":["B (100%)"],"timestamp":"2023-06-21 15:54:00","answer_images":[],"discussion":[{"timestamp":"1726599240.0","upvote_count":"5","comment_id":"1176058","poster":"bjexamprep","content":"Selected Answer: B\nCentrally managed egress, so C/D are out.\nBoth A and B are wrong, because \n1. There isn’t internet gateway. \n2. “Modify all default routes to point to the …”. A firewall or “proxy's Auto Scaling group” don’t have public IP, the default route must be pointing to the NAT gateway. And NAT gateway has a peer public IP configured on the IGW. The route should be: internet prefix of all the internal subnet-> NAT gateway -> firewall -> internet gateway, and reverse routing rules are also required.\n.\nWell, considering the persistent low quality of AWS Exam Questions, I vote B"},{"poster":"easytoo","timestamp":"1703200500.0","upvote_count":"5","comment_id":"929945","content":"b-b-b-b-b-b\n\nCreate a new VPC specifically dedicated to outbound traffic to the internet. This helps isolate and manage the outbound traffic separately from other resources.\nConnect the existing transit gateway to the new VPC. This ensures that the VPC is connected to the centralized transit gateway that routes traffic between AWS accounts.\nConfigure a new NAT gateway within the new VPC. This NAT gateway provides the necessary outbound connectivity to the internet for resources within the VPC.\nUse AWS Network Firewall, a managed firewall service, for rule-based filtering on the outbound traffic. Network Firewall allows you to define and enforce custom rules for traffic leaving the VPC.\nCreate Network Firewall endpoints in each Availability Zone. These endpoints serve as the traffic inspection points where Network Firewall applies the filtering rules.\nModify all default routes in the VPCs to point to the Network Firewall endpoints. This ensures that all outbound traffic from the VPCs flows through the Network Firewall for rule-based filtering."},{"poster":"thotwielder","upvote_count":"2","timestamp":"1725680580.0","comment_id":"1167681","content":"Selected Answer: B\nc,d in each AWS account. wrong \na: use third party solution, not as good as b (use aws service)"},{"poster":"career360guru","comment_id":"1078732","timestamp":"1716486300.0","upvote_count":"1","content":"Selected Answer: B\nOption B"},{"poster":"rlf","content":"B.\nhttps://docs.aws.amazon.com/whitepapers/latest/building-scalable-secure-multi-vpc-network-infrastructure/using-nat-gateway-with-firewall.html","comment_id":"1043896","timestamp":"1713161820.0","upvote_count":"4"},{"comment_id":"1013172","poster":"duriselvan","content":"https://aws.amazon.com/blogs/security/hands-on-walkthrough-of-the-aws-network-firewall-flexible-rules-engine/","upvote_count":"2","timestamp":"1711038840.0"},{"comment_id":"986063","timestamp":"1708467600.0","content":"Selected Answer: B\nGiven the available options and the requirements:\nB. Create an interface VPC endpoint for API Gateway, and set an endpoint policy to only allow access to the specific API. Add a resource policy to API Gateway to only allow access from the VPC endpoint. Change the API Gateway endpoint type to private. is the correct answer.","poster":"xav1er","comments":[{"content":"bro what?","poster":"chikorita","upvote_count":"2","comment_id":"989303","timestamp":"1708795980.0"}],"upvote_count":"1"},{"comment_id":"944188","content":"Selected Answer: B\nB for sure","timestamp":"1704505680.0","upvote_count":"1","poster":"NikkyDicky"},{"comment_id":"943599","upvote_count":"4","timestamp":"1704459060.0","content":"Selected Answer: B\ncentrally managed outbound traffic: tgw-> centralized VPC with network firewall with rules-> internet","poster":"Christina666"},{"comment_id":"931143","timestamp":"1703299380.0","poster":"chiaseed","content":"Selected Answer: B\nvote for B. The keyword is \"centrally managed rule-based filtering on outbound traffic to the internet for all AWS accounts...\". Network Firewall can centrally manage network security policies.","upvote_count":"3"},{"upvote_count":"2","poster":"SmileyCloud","content":"Selected Answer: B\nB. Answer A is similar, but you have to deal with EC2 instances and dealing with 3rd party FW, not good - management overhead. C is impossible. D is waay to much hard to manage.","timestamp":"1703294880.0","comment_id":"931109"},{"content":"Selected Answer: B\nCorrect answer is B","poster":"psyx21","comment_id":"929920","upvote_count":"1","timestamp":"1703199300.0"},{"poster":"nexus2020","content":"Selected Answer: B\nvote for B","comment_id":"929588","upvote_count":"2","timestamp":"1703174040.0"}],"exam_id":33,"answer_ET":"B","question_text":"A solutions architect at a large company needs to set up network security for outbound traffic to the internet from all AWS accounts within an organization in AWS Organizations. The organization has more than 100 AWS accounts, and the accounts route to each other by using a centralized AWS Transit Gateway. Each account has both an internet gateway and a NAT gateway for outbound traffic to the internet. The company deploys resources only into a single AWS Region.\n\nThe company needs the ability to add centrally managed rule-based filtering on all outbound traffic to the internet for all AWS accounts in the organization. The peak load of outbound traffic will not exceed 25 Gbps in each Availability Zone.\n\nWhich solution meets these requirements?","question_images":[],"choices":{"A":"Create a new VPC for outbound traffic to the internet. Connect the existing transit gateway to the new VPC. Configure a new NAT gateway. Create an Auto Scaling group of Amazon EC2 instances that run an open-source internet proxy for rule-based filtering across all Availability Zones in the Region. Modify all default routes to point to the proxy's Auto Scaling group.","C":"Create an AWS Network Firewall firewall for rule-based filtering in each AWS account. Modify all default routes to point to the Network Firewall firewalls in each account.","D":"In each AWS account, create an Auto Scaling group of network-optimized Amazon EC2 instances that run an open-source internet proxy for rule-based filtering. Modify all default routes to point to the proxy's Auto Scaling group.","B":"Create a new VPC for outbound traffic to the internet. Connect the existing transit gateway to the new VPC. Configure a new NAT gateway. Use an AWS Network Firewall firewall for rule-based filtering. Create Network Firewall endpoints in each Availability Zone. Modify all default routes to point to the Network Firewall endpoints."},"unix_timestamp":1687355640,"topic":"1","isMC":true,"question_id":131,"url":"https://www.examtopics.com/discussions/amazon/view/112833-exam-aws-certified-solutions-architect-professional-sap-c02/"},{"id":"794kTyhwy1kyg2rv1RtR","url":"https://www.examtopics.com/discussions/amazon/view/112768-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_description":"","answers_community":["D (89%)","9%"],"question_images":[],"answer":"D","discussion":[{"content":"Selected Answer: D\nOnly A and D cover the requirement for high availability. A uses Inspector, which is a vulnerability scanner and does not monitor traffic. So - even that I don't like the complexity of D - this remains the only option","timestamp":"1687618200.0","upvote_count":"16","comment_id":"932677","poster":"Maria2023"},{"timestamp":"1692573540.0","content":"Selected Answer: D\nI was confused between A and D, but seems WAF can deliver logs to Firehose\nhttps://docs.aws.amazon.com/waf/latest/developerguide/logging-kinesis.html","poster":"SK_Tyagi","comment_id":"986116","upvote_count":"6"},{"comment_id":"1279838","timestamp":"1725665880.0","poster":"liuliangzhou","content":"Selected Answer: D\nCompared to A, prioritize AWS Kinesis over third-party auditing applications","upvote_count":"1"},{"poster":"career360guru","comments":[{"poster":"career360guru","comment_id":"1078801","timestamp":"1700772960.0","upvote_count":"2","content":"Oh Mistake, I want to change it to D as B does not support High Availability."}],"content":"Selected Answer: B\nD is good option but as the question does not mention about 3rd party auditing app it may not be possible to directly integrate it with Firehose. One may have to use http api to push the logs - as this is not mentioned I will go with Option B.","comment_id":"1078796","timestamp":"1700772840.0","upvote_count":"1"},{"content":"Selected Answer: D\nIt's D, makes most sense,","comment_id":"986062","upvote_count":"2","poster":"xav1er","timestamp":"1692562740.0"},{"content":"This is such a mal formed question...\nYou see, nowhere in the question we are told about customer's application. However we are told they want ALL their resources highly available. B would be sooo much better if there wasn't that \"All resources should be highly available.\" because, seriously, D is not the best in my opinion. We don't know much what applications they use, what third party auditing application and so on...\n\nAnyway, it might be D after all, but oh my...","poster":"chico2023","timestamp":"1692467760.0","comment_id":"985349","upvote_count":"2"},{"poster":"ggrodskiy","upvote_count":"1","content":"Correct D.","timestamp":"1690140480.0","comment_id":"960770"},{"comment_id":"944223","poster":"NikkyDicky","timestamp":"1688607960.0","content":"Selected Answer: D\nits a D","upvote_count":"1"},{"poster":"javitech83","comment_id":"938284","upvote_count":"1","timestamp":"1688050740.0","content":"Selected Answer: D\nASG in Multiple AZ. WAF and WAF logs with kinesis"},{"comment_id":"934409","timestamp":"1687781820.0","poster":"chikorita","content":"\"enable logging by selecting the Kinesis Data Firehose as the destination\"--- how can ALB write logs directly to Kinesis???\nit should be CW logs group \nany links for help??","upvote_count":"1"},{"comment_id":"932512","timestamp":"1687607160.0","poster":"Masonyeoh","upvote_count":"3","content":"Selected Answer: D\nAmazon inspector does NOT inspect traffic coming to an Application Load Balancer (ALB)"},{"timestamp":"1687538340.0","poster":"PhuocT","content":"Selected Answer: D\nD is correct answer\nInbound requests must be filtered for common vulnerability attacks -> WAF\nRejected requests must be sent to a third-party auditing application-> Enable access log and use kinesis stream to send logs to third party\nAll resources should be highly available -> Muti AZ auto scaling group.","upvote_count":"4","comment_id":"931784"},{"timestamp":"1687537980.0","poster":"ozelllll","comment_id":"931779","upvote_count":"2","content":"Selected Answer: D\nInspector does not filter inbound traffic for attack signatures, this is what WAF is for"},{"comments":[{"comment_id":"938282","comments":[{"content":"It’s probably B. C and D are not correct, ALB can’t send logs to Kinesis Fire Hose.","comment_id":"944991","upvote_count":"1","poster":"SmileyCloud","timestamp":"1688674680.0"}],"content":"but you need logs of the reject request on WAF. So I think correct answer is D","poster":"javitech83","timestamp":"1688050680.0","upvote_count":"1"}],"poster":"SmileyCloud","content":"Selected Answer: A\nB and C do not provide HA. D is similar to A but lacks Inspector -> \"Amazon Inspector automatically discovers workloads, such as Amazon EC2 instances, containers, and Lambda functions, and scans them for software vulnerabilities and unintended network exposure.\"","comment_id":"931111","timestamp":"1687476900.0","upvote_count":"2"},{"poster":"easytoo","upvote_count":"1","comment_id":"929948","comments":[{"upvote_count":"1","timestamp":"1690830300.0","content":"it's d-d-d-d-d-d--d-d","comment_id":"968437","poster":"easytoo"}],"timestamp":"1687382400.0","content":"a-a-a-a-a-a-a-a\nmulti-az for HA"},{"content":"Selected Answer: D\nI got with D. The reason to go with D is because other options ABC are wrong. \n1. It says use Amazon Inspector to inspect traffic to ALB. This is wrong. Amazon inspector does NOT inspect traffic coming to an Application Load Balancer (ALB). Amazon Inspector is a security assessment service that helps you analyze the security and compliance of your EC2 instances and applications running on them. To inspect traffic coming to an ALB, you can consider using other services such as AWS WAF (Web Application Firewall) or AWS Shield. AWS WAF allows you to define rules to filter and block malicious traffic targeting your ALB. \nB - Does NOT talk about HA as it is asked in ques\nC - Does NOT talk about HA as it is asked in ques","upvote_count":"3","poster":"bhanus","timestamp":"1687382100.0","comment_id":"929944"},{"content":"Option B and C does NOT talk about HA. Its between A and D ..","upvote_count":"1","comment_id":"929933","comments":[{"content":"D is answer \nA is wrong as Amazon inspector does NOT inspect traffic coming to an Application Load Balancer (ALB)","poster":"bhanus","comment_id":"938816","upvote_count":"1","timestamp":"1688099820.0"}],"timestamp":"1687381620.0","poster":"bhanus"},{"poster":"emiliocb4","upvote_count":"2","content":"Selected Answer: A\nwith B you don't guarantee the HA of the EC2s.... i will go with A","timestamp":"1687328580.0","comment_id":"929113"}],"choices":{"B":"Configure an Application Load Balancer (ALB) and add the EC2 instances as targets. Create a web ACL in WAF. Create an AWS WAF using the web ACL and ALB name and enable logging with Amazon CloudWatch Logs. Use an AWS Lambda function to frequently push the logs to the third-party auditing application.","C":"Configure an Application Load Balancer (ALB) along with a target group adding the EC2 instances as targets. Create an Amazon Kinesis Data Firehose with the destination of the third-party auditing application. Create a web ACL in WAF. Create an AWS WAF using the web ACL and ALB then enable logging by selecting the Kinesis Data Firehose as the destination. Subscribe to AWS Managed Rules in AWS Marketplace, choosing the WAF as the subscriber.","D":"Configure a Multi-AZ Auto Scaling group using the application's AMI. Create an Application Load Balancer (ALB) and select the previously created Auto Scaling group as the target. Create an Amazon Kinesis Data Firehose with a destination of the third-party auditing application. Create a web ACL in WAF. Create an AWS WAF using the WebACL and ALB then enable logging by selecting the Kinesis Data Firehose as the destination. Subscribe to AWS Managed Rules in AWS Marketplace, choosing the WAF as the subscriber.","A":"Configure a Multi-AZ Auto Scaling group using the application's AMI. Create an Application Load Balancer (ALB) and select the previously created Auto Scaling group as the target. Use Amazon Inspector to monitor traffic to the ALB and EC2 instances. Create a web ACL in WAF. Create an AWS WAF using the web ACL and ALB. Use an AWS Lambda function to frequently push the Amazon Inspector report to the third-party auditing application."},"timestamp":"2023-06-21 08:23:00","unix_timestamp":1687328580,"answer_images":[],"question_text":"A company uses a load balancer to distribute traffic to Amazon EC2 instances in a single Availability Zone. The company is concerned about security and wants a solutions architect to re-architect the solution to meet the following requirements:\n\n• Inbound requests must be filtered for common vulnerability attacks.\n• Rejected requests must be sent to a third-party auditing application.\n• All resources should be highly available.\n\nWhich solution meets these requirements?","exam_id":33,"question_id":132,"answer_ET":"D","isMC":true,"topic":"1"},{"id":"3UbR7jZrXNowD2haSSMw","answers_community":["B (100%)"],"answer_images":[],"choices":{"D":"Create an accelerator in AWS Global Accelerator, and connect the accelerator to the API Gateway. Update the route table for all VPC subnets with a route to the created Global Accelerator endpoint IP address. Add an API key for each service to use for authentication.","C":"Modify the API Gateway to use IAM authentication. Update the IAM policy for the IAM role that is assigned to the EC2 instances to allow access to the API Gateway. Move the API Gateway into a new VPDeploy a transit gateway and connect the VPCs.","A":"Create an AWS Site-to-Site VPN connection between the VPC and the API Gateway. Use API Gateway to generate a unique API Key for each microservice. Configure the API methods to require the key.","B":"Create an interface VPC endpoint for API Gateway, and set an endpoint policy to only allow access to the specific API. Add a resource policy to API Gateway to only allow access from the VPC endpoint. Change the API Gateway endpoint type to private."},"timestamp":"2023-06-21 19:28:00","topic":"1","discussion":[{"upvote_count":"11","content":"Selected Answer: B\nTip: Anytime you see \"don't want to traverse Internet traffic\" always look for endpoint in the answers. Most likely, that's the answer.","comment_id":"941291","poster":"SkyZeroZx","timestamp":"1719961320.0"},{"timestamp":"1721567700.0","poster":"Just_Ninja","upvote_count":"6","comments":[{"upvote_count":"2","timestamp":"1722112980.0","content":"thanks Ninja","comment_id":"965021","poster":"rxhan"}],"comment_id":"958528","content":"Selected Answer: B\nThe quality control here is unfortunately not as expected when you buy access.\nC is due nonsense.\nB is correct.\nVPC Endpoint to API Gateway and a policy on both sides!\n\nTrust me, i´m a Ninja"},{"upvote_count":"3","poster":"shaaam80","comment_id":"1084467","timestamp":"1732977960.0","content":"Selected Answer: B\nAnswer B - VPC Interface endpoint to privately access services without data over internet."},{"poster":"career360guru","upvote_count":"1","comment_id":"1078806","timestamp":"1732395600.0","content":"Selected Answer: B\nOption B"},{"upvote_count":"1","poster":"NikkyDicky","comment_id":"944224","content":"Selected Answer: B\nB for sure","timestamp":"1720230480.0"},{"poster":"Alabi","comment_id":"931141","content":"Selected Answer: B\nB for sure","timestamp":"1719103080.0","upvote_count":"1"},{"poster":"SmileyCloud","content":"Selected Answer: B\nTip: Anytime you see \"don't want to traverse Internet traffic\" always look for endpoint in the answers. Most likely, that's the answer.","timestamp":"1719099480.0","upvote_count":"3","comment_id":"931114"},{"content":"b-b-b-b-b-b-b\n\nBy implementing this solution, the company can ensure that the new API in API Gateway is not accessible from the public internet. The interface VPC endpoint provides private connectivity, allowing secure communication between the microservices running on EC2 instances and the API Gateway. This ensures the proprietary data does not traverse the public internet, enhancing security and data protection.","timestamp":"1719005040.0","poster":"easytoo","comment_id":"929951","upvote_count":"3"},{"upvote_count":"1","content":"I vote B","comment_id":"929927","timestamp":"1719003840.0","poster":"bhanus"},{"upvote_count":"1","poster":"nexus2020","timestamp":"1718990880.0","content":"Selected Answer: B\nVPC endpoint usualy is the prefect answer to avoid internet traffic","comment_id":"929772"}],"answer_description":"","question_text":"A company is running an application in the AWS Cloud. The application consists of microservices that run on a fleet of Amazon EC2 instances in multiple Availability Zones behind an Application Load Balancer. The company recently added a new REST API that was implemented in Amazon API Gateway. Some of the older microservices that run on EC2 instances need to call this new API.\n\nThe company does not want the API to be accessible from the public internet and does not want proprietary data to traverse the public internet.\n\nWhat should a solutions architect do to meet these requirements?","answer_ET":"B","exam_id":33,"unix_timestamp":1687368480,"url":"https://www.examtopics.com/discussions/amazon/view/112848-exam-aws-certified-solutions-architect-professional-sap-c02/","question_images":[],"answer":"B","isMC":true,"question_id":133},{"id":"yARMcqn5Ygl3PCHBE1YL","unix_timestamp":1687369020,"answer":"D","question_id":134,"isMC":true,"question_images":[],"answers_community":["D (83%)","B (17%)"],"discussion":[{"timestamp":"1693446780.0","poster":"Soweetadad","upvote_count":"10","content":"Selected Answer: D\nBoth B and D work, except B has no notification set.\nhttps://aws.amazon.com/blogs/security/how-to-monitor-aws-account-configuration-changes-and-api-calls-to-amazon-ec2-security-groups/","comment_id":"994641"},{"content":"Selected Answer: D\nI vote D. aws config changes can be sent to SNS topic https://docs.aws.amazon.com/config/latest/developerguide/notifications-for-AWS-Config.html","timestamp":"1687381500.0","poster":"bhanus","comment_id":"929928","upvote_count":"6"},{"timestamp":"1726022220.0","content":"Selected Answer: B\nB is faster","upvote_count":"1","poster":"ry1999","comment_id":"1281879"},{"content":"Selected Answer: D\nBoth B and D works. But the question is asking for FASTEST.\n\nFor cloudTrail, you need: CloudTrail → CloudWatch Logs → CloudWatch Metric Filter → CloudWatch Alarm → SNS Notification\n\nFor aws Config, it natively support integration with SNS.\nHence we should choose D","poster":"kgpoj","timestamp":"1723182840.0","upvote_count":"3","comment_id":"1262782"},{"poster":"skipbaylessfor3","timestamp":"1722737100.0","content":"I'm leaning towards D, but looks what it says in this blog:\nhttps://aws.amazon.com/blogs/security/how-to-monitor-aws-account-configuration-changes-and-api-calls-to-amazon-ec2-security-groups/\n\nFor the Config option, it says:\n\"The use of AWS Config in Method 1 allows for the configuration of a security group to be tracked along with other AWS resources. Changes to the security group’s configuration are reported during the next Config compliance evaluation, typically within 10 minutes\"\n\nand for the CloudTrail option it says:\n\"The use of CloudTrail and CloudWatch Events in Method 2 allows for the near real-time detection of API calls that could change the configuration of a VPC security group\"\n\nSo it seems clear cut to me that the answer is B, although if I hadn't seen this blog I would've picked D probably","comment_id":"1260499","upvote_count":"1"},{"upvote_count":"3","comment_id":"1206285","timestamp":"1714772940.0","poster":"red_panda","content":"Selected Answer: B\nFor me the answer is B.\nHere we are talking about \"tracking al changes\" and \"notify for non-compliant\".\nIt's certainly a very ambiguous question that the folks at AWS could have spared us, but for me (and for chat-gpt) B is the answer :)"},{"content":"D: AWS Config provides rules to detect non-complaint config\nB: Can track all event however doesn't provide native support for rules to detect non-complaint changes","timestamp":"1709708880.0","poster":"9esh","comment_id":"1166971","upvote_count":"1"},{"poster":"dankositzke","comments":[{"timestamp":"1724300700.0","upvote_count":"1","comment_id":"1270483","poster":"helloworldabc","content":"just D"},{"content":"Actually, AWS Config cannot track *only* non-compliant changes, it always tracks all changes against monitored resources - that's by design. You set rules in AWS Config that indicate whether the change is compliant, but all the changes must be recorded.\nhttps://docs.aws.amazon.com/config/latest/developerguide/how-does-config-work.html#resource-tracking","comment_id":"1221404","poster":"fartosh","timestamp":"1717048320.0","upvote_count":"1"}],"content":"Selected Answer: B\nIn my opinion, the question asks for (1) a “system that tracks CHANGES” and (2) asks to “send alerts when the engineers make NONCOMPLIANT CHANGES,” I would choose B since B satisfies the first condition and D does not. \n\nB: implies that CloudTrail tracks all changes.\nD: states that Config will only track noncompliant changes, but question is asking for all changes.\n\nBut overall this is just another poorly constructed and ambiguous question and answer, which seems to be the norm with these lol","timestamp":"1707874800.0","comment_id":"1149755","upvote_count":"1"},{"poster":"duriselvan","timestamp":"1702747800.0","upvote_count":"2","comment_id":"1098350","content":"B is ans\nhttps://aws.amazon.com/blogs/security/how-to-monitor-aws-account-configuration-changes-and-api-calls-to-amazon-ec2-security-groups/\nSpeed: Implementing CloudTrail and CloudWatch is faster than setting up AWS Organizations or using SCPs. You can do it in minutes without modifying the entire account structure or deploying additional resources.\nGranularity: CloudTrail and CloudWatch offer fine-grained control over monitoring and alerting, allowing you to define specific rules for noncompliant security settings.\nFlexibility: You can easily adapt the CloudWatch rules to different types of noncompliance and adjust the alerts to suit your notification needs.\nExisting infrastructure: If the company already uses CloudTrail for logging, setting up CloudWatch rules is a natural extension without requiring significant changes."},{"upvote_count":"4","content":"Selected Answer: D\nAnswer D. AWS Config is perfect to track config changes. SNS for notification.","timestamp":"1701355680.0","poster":"shaaam80","comment_id":"1084469"},{"timestamp":"1700773680.0","upvote_count":"2","poster":"career360guru","content":"Selected Answer: B\nB is better option than D. D only sends an SNS alert when there are non-compliant changes. It does not allow you to actually track each and every changes engineers make.","comments":[{"comment_id":"1079266","content":"I thought so too, initially, but as others have said, B does not actually send the alert.","timestamp":"1700830380.0","upvote_count":"2","poster":"Jay_2pt0_1"}],"comment_id":"1078810"},{"poster":"ghadxx","content":"It's D \nhttps://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html","upvote_count":"2","timestamp":"1692227220.0","comment_id":"983092"},{"poster":"ggrodskiy","timestamp":"1690137120.0","content":"Correct D.","comment_id":"960733","upvote_count":"1"},{"poster":"NikkyDicky","comment_id":"944227","timestamp":"1688608260.0","content":"Selected Answer: D\nD works and faster\nB would work with adding a CW alert, but D still better","upvote_count":"4"},{"poster":"javitech83","comment_id":"938292","timestamp":"1688051100.0","upvote_count":"2","content":"Selected Answer: D\ncorrect is D"},{"comment_id":"933794","timestamp":"1687714920.0","upvote_count":"5","poster":"SkyZeroZx","content":"Selected Answer: D\nD\nreference link\nhttps://aws.amazon.com/es/blogs/industries/how-to-monitor-alert-and-remediate-non-compliant-hipaa-findings-on-aws/"},{"comment_id":"931119","poster":"SmileyCloud","content":"Selected Answer: D\nIt's D. Check this link, something similar: https://aws.amazon.com/blogs/industries/how-to-monitor-alert-and-remediate-non-compliant-hipaa-findings-on-aws/","upvote_count":"4","timestamp":"1687477560.0"},{"poster":"MoussaNoussa","comment_id":"930544","timestamp":"1687439220.0","content":"it's D of course!","upvote_count":"1"},{"upvote_count":"1","poster":"easytoo","content":"b-b-b-b-b-b-b","timestamp":"1687382760.0","comment_id":"929953","comments":[{"poster":"easytoo","comment_id":"929995","content":"changed to d-d-d-d-d-d\nThis solution is the FASTEST way to meet the requirements because it does not require any additional infrastructure or configuration. AWS Config can be enabled and configured in minutes, and it will immediately start tracking changes to the EC2 security groups.\n\nThe other solutions are not as fast. For example, setting up AWS Organizations and SCPs would require more time and effort. Additionally, enabling CloudTrail and CloudWatch rules would only track changes to the EC2 security groups, but they would not send alerts when noncompliant changes are detected","timestamp":"1687390260.0","upvote_count":"2"}]},{"comment_id":"929781","timestamp":"1687369020.0","content":"Selected Answer: B\nCloudTrail and aws config can both track config changes, but sending to SNS (D)? \n\nI would go with B","upvote_count":"1","comments":[],"poster":"nexus2020"}],"question_text":"A company has set up its entire infrastructure on AWS. The company uses Amazon EC2 instances to host its ecommerce website and uses Amazon S3 to store static data. Three engineers at the company handle the cloud administration and development through one AWS account. Occasionally, an engineer alters an EC2 security group configuration of another engineer and causes noncompliance issues in the environment.\n\nA solutions architect must set up a system that tracks changes that the engineers make. The system must send alerts when the engineers make noncompliant changes to the security settings for the EC2 instances.\n\nWhat is the FASTEST way for the solutions architect to meet these requirements?","timestamp":"2023-06-21 19:37:00","choices":{"A":"Set up AWS Organizations for the company. Apply SCPs to govern and track noncompliant security group changes that are made to the AWS account.","B":"Enable AWS CloudTrail to capture the changes to EC2 security groups. Enable Amazon CloudWatch rules to provide alerts when noncompliant security settings are detected.","D":"Enable AWS Config on the EC2 security groups to track any noncompliant changes. Send the changes as alerts through an Amazon Simple Notification Service (Amazon SNS) topic.","C":"Enable SCPs on the AWS account to provide alerts when noncompliant security group changes are made to the environment."},"exam_id":33,"answer_images":[],"answer_description":"","topic":"1","answer_ET":"D","url":"https://www.examtopics.com/discussions/amazon/view/112850-exam-aws-certified-solutions-architect-professional-sap-c02/"},{"id":"PslWUBVbMcT0USXWAH5S","answer_images":[],"discussion":[{"comment_id":"774790","comments":[{"comment_id":"774791","content":"It is important to note that other solutions such as retry logic with exponential backoff and irregular variation in the client application or turn on API caching to enhance responsiveness for the production stage may help to improve the customer experience and reduce errors, but they do not address the root cause of the problem which is a large number of requests coming from a small number of clients.\n\nImplementing reserved concurrency at the Lambda function level can provide resources that are needed during sudden increases in traffic, but it does not address the issue of a client making a large number of requests and causing errors.","poster":"masetromain","upvote_count":"16","timestamp":"1673637480.0"}],"content":"Selected Answer: B\nAPI throttling is a technique that can be used to control the rate of requests to an API. This can be useful in situations where a small number of clients are making a large number of requests, which is causing errors. By implementing API throttling through a usage plan at the API Gateway level, the solutions architect can limit the number of requests that a client can make, which will help to reduce the number of errors.\n\nIt's important that the client application handles the code 429 replies without error, this will help to improve the customer experience by reducing the number of errors that are displayed to customers. Additionally, it will prevent the API's reputation from being damaged by the errors.","upvote_count":"44","poster":"masetromain","timestamp":"1673637480.0"},{"poster":"zhangyu20000","comment_id":"760167","content":"B is correct. API gateway throttling is applied to single account - https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html. Retry will make it even worse.","upvote_count":"8","timestamp":"1672249260.0"},{"comment_id":"1316152","content":"Selected Answer: B\nkeywords:\n'A large number of the PUT requests' = API throttling","timestamp":"1732249140.0","poster":"TariqKipkemei","upvote_count":"1"},{"timestamp":"1725092520.0","poster":"amministrazione","comment_id":"1275459","content":"B. Implement API throttling through a usage plan at the API Gateway level. Ensure that the client application handles code 429 replies without error.","upvote_count":"1"},{"poster":"Ashu_0007","content":"API gateway throttling","upvote_count":"1","timestamp":"1723713240.0","comment_id":"1266325"},{"comment_id":"1260246","upvote_count":"2","timestamp":"1722683220.0","poster":"Jason666888","content":"Selected Answer: B\nKey word: a large number of the PUT requests, one client\n\nSeeing this will ring a bell on throttling on API Gateway. But normally you also need to make sure when the client side see \"429 too many attempts\", the app can capture that error code and show some reasonable error message(e.g. You have sent too many requests .Please try again later)"},{"content":"Selected Answer: B\nB. C only will help with GET requests, and A and D don't prevent it","upvote_count":"1","timestamp":"1710611280.0","poster":"gofavad926","comment_id":"1175165"},{"poster":"anubha.agrahari","comment_id":"1166770","upvote_count":"1","timestamp":"1709674080.0","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html"},{"content":"B ans : https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html","poster":"duriselvan","comment_id":"1152376","upvote_count":"1","timestamp":"1708146900.0"},{"content":"This question missing MASSIVE information.. none of the answers can fulfil the requirements..","upvote_count":"2","timestamp":"1706957520.0","comment_id":"1139172","poster":"AimarLeo"},{"content":"Selected Answer: A\nThere is no evidence indicating the problem is with the throughput. If it is throughput, other clients will have similar problem.\nAnd “the errors are displayed to customers and are causing damage to the API’s reputation.”, this means the solution should be able to reduce the error message showed on the client side, while, throttling the client will actually close the service for this particular client, which is against the “clients can tolerate retries of unsuccessful calls”.\nI vote A for this question.","timestamp":"1705349100.0","upvote_count":"1","comment_id":"1123625","poster":"bjexamprep"},{"content":"The solutions architect should recommend option B: Implement API throttling through a usage plan at the API Gateway level. Ensure that the client application handles code 429 replies without error.\n\nOption B is the most directly related recommendation to improving the customer experience, as it addresses the issue of API rate limiting and ensures a more predictable and controlled experience for users.","upvote_count":"1","poster":"sarfaraz_khan","comment_id":"1101282","timestamp":"1703051700.0"},{"upvote_count":"2","poster":"atirado","timestamp":"1703047740.0","comment_id":"1101226","content":"Selected Answer: B\nOption A - This option will make retries take longer on each retry for all clients rather than for the few causing issues in the application\n\nOption B - This option will work: An usage plan will allow throttling requests from specific clients identified by their API Key and ensuring client applications can handle throttling errors provides a consistent experience\n\nOption C - This option has no relation with the problem at hand\n\nOption D - This option assumes there is a capacity issue managing the increase in volumes but given that errors occur due to a small number of clients then reserved concurrency will not address the cause of the issue"},{"poster":"atirado","upvote_count":"1","timestamp":"1703036940.0","comment_id":"1101121","content":"Selected Answer: B\nOption A - This option will make retries take longer on each retry for all clients rather than for the few causing issues in the application\n\nOption B - This option will work: An usage plan will allow throttling requests from specific clients identified by their API Key and ensuring client applications can handle throttling errors provides a consistent experience\n\nOption C - This option has no relation with the problem at hand\n\nOption D - This option assumes there is a capacity issue managing the increase in volumes but given that errors occur due to a small number of clients then reserved concurrency will not address the cause of the issue"},{"poster":"ninomfr64","content":"Selected Answer: B\nUsage Plan throttling prevents a group of users or a single user to saturate the API concurrency capacity. Thus B. Also A and D can help in this scenario, but they will have less benefit with respect to B. While C does not help in this scenario as I do not see how API Gateway caching can help PUT requests","timestamp":"1702800360.0","upvote_count":"1","comment_id":"1098737"},{"poster":"severlight","comment_id":"1068328","timestamp":"1699768560.0","content":"Selected Answer: B\nobvious","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nImplementing API throttling through a usage plan at the API Gateway level would directly address the issue of too many requests from a single client causing errors. Properly handling status code 429 can help clients understand the situation, and throttling ensures fair usage and prevents overload, ultimately improving the customer experience.","poster":"whenthan","timestamp":"1693501920.0","comment_id":"995338"},{"poster":"bur4an","timestamp":"1693383540.0","upvote_count":"2","comment_id":"993840","content":"Selected Answer: B\nB. Implement API throttling through a usage plan at the API Gateway level. Ensure that the client application handles code 429 replies without error.\n\nOptions A and D might help with general improvements in resilience and resource allocation, but they do not specifically address the issue of a single client causing a large number of errors.\n\nOption C, involving API caching, is not the most appropriate solution in this scenario, as caching might not directly address the issue of the client generating a high volume of errors. It might improve responsiveness for frequently accessed data, but it doesn't directly address the issue of client errors."},{"timestamp":"1692287760.0","comments":[{"poster":"CloudHandsOn","content":"CORRECTION - \"Option B will not show an error..\"","comment_id":"983789","upvote_count":"1","timestamp":"1692287880.0"}],"comment_id":"983788","poster":"CloudHandsOn","content":"Selected Answer: B\nB. The error message is damaging the reputation, which is the icing on the cake when deciding between A and B. One option continues to show an error , which will continue to damage the reputation. Option A will not show an error to the end user, and will handle the issue.","upvote_count":"1"},{"poster":"chico2023","content":"Selected Answer: B\nAnswer: B\n\nIt's not clear what error customers are getting. We can guess, however, that it is related to throttling: \"A solutions architect has identified that a large number of the PUT requests originate from one client.\"\n\nThe usual way to handle throttling is by using an exponential backoff technique, which answer A, however, if I want to avoid, or limit throttling to all clients and improve the reputation of my API, I would go with answer B, which limits calls, impacting only the culprits and, also handles 429 without error (which makes me assume that my application will catch the error and will retry).","upvote_count":"2","timestamp":"1691155140.0","comment_id":"972188"},{"timestamp":"1691002920.0","poster":"Piccaso","comment_id":"970479","content":"Selected Answer: B\ncode 429 means \"Too many requests\"","upvote_count":"2"},{"comment_id":"944426","poster":"aviathor","comments":[{"upvote_count":"2","poster":"Impromptu","content":"I agree\nAlso with option B you would introduce a (potentially) extra error: the 429 error because of the throttling. You would then catch this and solve it. This would work if we knew the original problem was also the 429 error, but in other cases this does not solve it. We don't know whether the applied throttling is sufficient, etc.\nThe exponential backoff retries will increase the number of request but will do this in a fashion that spreads the load over a longer timeframe, also given the irregular variation. Moreover, the question states that clients can tolerate retries. And catching the errors and displaying descriptive error messages improves user experience, also for non-429 errors.","timestamp":"1702983840.0","comment_id":"1100544"}],"content":"Selected Answer: A\nThere is no indication in the problem statement that the errors are caused by the API being overwhelmed with requests. It also states that the errors being displayed to the user are damaging to the applications's reputation. Therefore the priority should be to avoid the errors being reported to the users, hence A.","upvote_count":"4","timestamp":"1688631000.0"},{"timestamp":"1687980000.0","comment_id":"937067","upvote_count":"1","poster":"NikkyDicky","content":"Selected Answer: B\nB - because of the issue with large number of requests from small number of clients"},{"content":"Selected Answer: A\nexponential backoff\nhttps://docs.aws.amazon.com/ja_jp/sdkref/latest/guide/feature-retry-behavior.html","poster":"nqg54118","timestamp":"1686217440.0","upvote_count":"1","comment_id":"918081"},{"upvote_count":"1","content":"Selected Answer: A\nA makes more sense","comments":[{"comment_id":"908019","comments":[{"upvote_count":"1","content":"Not helpful... :)","comment_id":"944421","timestamp":"1688630700.0","poster":"aviathor"}],"timestamp":"1685194380.0","upvote_count":"1","poster":"chikorita","content":"no bro"}],"comment_id":"903163","timestamp":"1684669980.0","poster":"dev112233xx"},{"comment_id":"895070","timestamp":"1683809220.0","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-request-throttling.html","upvote_count":"1","poster":"liangcw305"},{"comments":[{"upvote_count":"1","timestamp":"1688630820.0","comment_id":"944423","content":"That was my thought too. It is not possible to conclude from the problem statement that the errors are caused by lack of capacity on the API side.","poster":"aviathor"}],"comment_id":"862028","content":"Selected Answer: A\n- B is incorrect. We use throttling for APIs to help protect them from being overwhelmed by too many requests (which is not the issue here!). Also the question did not say error 429 is going to be returned.\n- With retry, there is a chance the API will work thus resulting in successful response.\n- Also if all else fails, return descriptive error messages is more elegant then throwing unhandled exceptions.","upvote_count":"5","timestamp":"1680693720.0","poster":"OnePunchExam"},{"upvote_count":"1","timestamp":"1680427260.0","poster":"Asagumo","content":"Selected Answer: D\nThe answer is D, but the SLA numbers do not matter.\nThis existing system normally runs with 12 machines in a redundant configuration, so in the event of a failure, the system will run with 6 machines and process scheduled jobs at 100% occupancy, giving priority to SLAs. In other words, even after migrating to EC2 instances, it is only necessary to be able to run 6 instances for scheduled jobs.","comment_id":"858695"},{"upvote_count":"6","comment_id":"858658","timestamp":"1680424980.0","content":"Selected Answer: A\nThe problem statement \"clients can tolerate retries of unsuccessful calls\" can be interpreted as allowing end users to wait indefinitely.\nOn the other hand, the problem statement \"the errors are displayed to customers and are causing damage\" can be interpreted to mean that the error page should be made to not appear.\nIf these are satisfied, it is A.","poster":"Asagumo"},{"timestamp":"1679980440.0","poster":"mfsec","upvote_count":"1","content":"Selected Answer: B\nB is correct","comment_id":"852804"},{"poster":"God_Is_Love","upvote_count":"2","timestamp":"1677102900.0","content":"Logical answer : While catching errors and showing nice error message is good for customers,\nit still does damage to API as clients think API is not working/responding well.\nRetry and showing nice error will still invoke frustration to clients and damage to API :-)\nAs the api is being bombarded with small number of clients (note they are successfully \nauthenticated already trying to update resources with PUT) so assuming they are just bombarding with 429 too many requests.\nSo API throttling helps. Caching may give stale data (C is not apt here) Reserved concurrency\nwhen lambda is overloaded (D is not a fit either). B should be correct","comment_id":"818485"},{"content":"Selected Answer: B\nAPI throttling helps","upvote_count":"1","timestamp":"1676964120.0","poster":"Mahakali","comment_id":"816314"},{"upvote_count":"2","content":"Selected Answer: B\nExponential backoff is a boto3 client retry logic that will impact all clients. The question is stating it's one client causing the issue, so A is not the correct choice. \nB as API Gateway can throttle the requests and handle the error pages correctly.","comment_id":"816257","timestamp":"1676958480.0","poster":"c73bf38"},{"timestamp":"1676909640.0","content":"It is B. Don't think PUT Method should be cached.","upvote_count":"2","comment_id":"815509","poster":"jaysparky"},{"timestamp":"1675083960.0","upvote_count":"2","comment_id":"792755","content":"Selected Answer: B\nThe problem is that an error is displayed==>solution API throttling","poster":"zozza2023"},{"comments":[{"content":"It can be applied to requests with specific API key.","timestamp":"1677167160.0","comment_id":"819361","poster":"Sarutobi","upvote_count":"3"}],"comment_id":"789070","poster":"vsk12","upvote_count":"3","content":"Selected Answer: A\nOption B is wrong as API throttling would be applied to all the customers.","timestamp":"1674762780.0"},{"content":"Selected Answer: A\nI go with A:\nhttps://www.examtopics.com/discussions/amazon/view/69110-exam-aws-certified-solutions-architect-professional-topic-1/","comments":[{"comment_id":"774792","upvote_count":"2","content":"Implementing retry logic with exponential backoff and irregular variation in the client application can be a good way to improve the reliability of the application and reduce errors, but it does not address the root cause of the problem, which is a large number of requests coming from a small number of clients.\n\nRetry logic with exponential backoff works by increasing the time between retries by a certain factor (e.g. doubling it) after each failed attempt. This can help to reduce the number of errors by giving the API time to recover from a high load. However, it does not address the issue of the high load itself. If the number of requests that a client is making is causing errors, retry logic alone may not be sufficient to resolve the issue.","comments":[{"timestamp":"1673637540.0","poster":"masetromain","comment_id":"774793","upvote_count":"2","content":"Handling errors with descriptive error messages can improve the customer experience, but it does not address the underlying problem of high number of requests from a small number of clients that causes errors.\n\nThrottling is a way to control the rate of requests to an API, which can help to reduce the number of errors. By limiting the number of requests that a client can make, throttling can help to reduce the high number of requests that is causing errors, and it addresses the root cause of the problem."}],"poster":"masetromain","timestamp":"1673637540.0"}],"timestamp":"1670865720.0","poster":"masetromain","upvote_count":"2","comment_id":"743086"}],"unix_timestamp":1670865720,"topic":"1","answers_community":["B (74%)","A (24%)","1%"],"question_text":"A software company has deployed an application that consumes a REST API by using Amazon API Gateway, AWS Lambda functions, and an Amazon DynamoDB table. The application is showing an increase in the number of errors during PUT requests. Most of the PUT calls come from a small number of clients that are authenticated with specific API keys.\nA solutions architect has identified that a large number of the PUT requests originate from one client. The API is noncritical, and clients can tolerate retries of unsuccessful calls. However, the errors are displayed to customers and are causing damage to the API’s reputation.\nWhat should the solutions architect recommend to improve the customer experience?","isMC":true,"question_id":135,"question_images":[],"choices":{"D":"Implement reserved concurrency at the Lambda function level to provide the resources that are needed during sudden increases in traffic.","C":"Turn on API caching to enhance responsiveness for the production stage. Run 10-minute load tests. Verify that the cache capacity is appropriate for the workload.","A":"Implement retry logic with exponential backoff and irregular variation in the client application. Ensure that the errors are caught and handled with descriptive error messages.","B":"Implement API throttling through a usage plan at the API Gateway level. Ensure that the client application handles code 429 replies without error."},"url":"https://www.examtopics.com/discussions/amazon/view/91247-exam-aws-certified-solutions-architect-professional-sap-c02/","answer_ET":"B","timestamp":"2022-12-12 18:22:00","answer":"B","exam_id":33,"answer_description":""}],"exam":{"lastUpdated":"11 Apr 2025","isMCOnly":true,"provider":"Amazon","isBeta":false,"name":"AWS Certified Solutions Architect - Professional SAP-C02","numberOfQuestions":529,"id":33,"isImplemented":true},"currentPage":27},"__N_SSP":true}