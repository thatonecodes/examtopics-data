{"pageProps":{"questions":[{"id":"a8o8jX9R5ijbea6L0X8k","question_images":[],"answer_ET":"AC","topic":"1","question_id":201,"answer_images":[],"unix_timestamp":1673606640,"isMC":true,"answer_description":"","timestamp":"2023-01-13 11:44:00","exam_id":31,"url":"https://www.examtopics.com/discussions/amazon/view/95011-exam-aws-certified-solutions-architect-associate-saa-c03/","answers_community":["AC (100%)"],"answer":"AC","choices":{"B":"Configure a host header in a Network Load Balancer to forward traffic to different instances.","D":"Configure AWS Global Accelerator. Forward requests to a Network Load Balancer (NLB). Configure the NLB to set up host-based routing to different EC2 instances.","C":"Configure a Lambda@Edge function to send specific objects to users based on the User-Agent header.","A":"Configure Amazon CloudFront to cache multiple versions of the content.","E":"Configure AWS Global Accelerator. Forward requests to a Network Load Balancer (NLB). Configure the NLB to set up path-based routing to different EC2 instances."},"question_text":"A company recently announced the deployment of its retail website to a global audience. The website runs on multiple Amazon EC2 instances behind an Elastic Load Balancer. The instances run in an Auto Scaling group across multiple Availability Zones.\n\nThe company wants to provide its customers with different versions of content based on the devices that the customers use to access the website.\n\nWhich combination of actions should a solutions architect take to meet these requirements? (Choose two.)","discussion":[{"timestamp":"1689378780.0","content":"Selected Answer: AC\nA, C is correct.\n\nNLB lister rule only supports Protocol & Port (Not host/based routing like ALB) => D, E is incorrect.\nNLB just works layer 4 (TCP/UDP) instead of Layer 7 (HTTP) => B is incorrect.\n\nAfter eliminating, AC should be the answer.","poster":"Parsons","comment_id":"776099","upvote_count":"19"},{"poster":"Guru4Cloud","content":"Selected Answer: AC\nA. allows customers to receive the appropriate version of the content based on their location and device type.\n\nC. By creating a Lambda@Edge, you can inspect the User-Agent header of incoming requests and determine the type of device being used. Based on this information, you can customize the response and send the appropriate version of the content to the user.","timestamp":"1710163740.0","comment_id":"1004688","upvote_count":"11"},{"comment_id":"1069140","upvote_count":"3","timestamp":"1715579760.0","content":"A C\nConfigure Amazon CloudFront to cache multiple versions of the content.\nConfigure a [email protected] function to send specific objects to users based on the User-Agent header.","poster":"Ruffyit"},{"upvote_count":"3","poster":"sunhouse","timestamp":"1713627300.0","comment_id":"1048925","content":"https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html"},{"timestamp":"1712506680.0","poster":"rrbrish73","content":"https://medium.com/swlh/serve-different-content-based-on-user-agent-in-aws-cloudfront-using-lambda-edge-28877294340b","comment_id":"1027525","upvote_count":"2"},{"poster":"cookieMr","upvote_count":"6","comment_id":"937745","content":"Selected Answer: AC\nA. allows customers to receive the appropriate version of the content based on their location and device type.\n\nC. By creating a Lambda@Edge, you can inspect the User-Agent header of incoming requests and determine the type of device being used. Based on this information, you can customize the response and send the appropriate version of the content to the user.\n\nB. does not address the requirement of serving different content versions based on device types.\n\nD. & E. do not address the device-specific content requirement.\n\nTherefore, options A and C are the correct combination of actions to meet the requirement of providing different versions of content based on the devices that customers use to access the website.","timestamp":"1703841780.0"},{"poster":"Yadav_Sanjay","content":"Selected Answer: AC\nNLB does not supports routing","timestamp":"1700201580.0","comment_id":"899728","upvote_count":"3"},{"poster":"omoakin","upvote_count":"2","comment_id":"895394","timestamp":"1699740780.0","content":"A C\nConfigure Amazon CloudFront to cache multiple versions of the content.\nConfigure a [email protected] function to send specific objects to users based on the User-Agent header."},{"upvote_count":"1","poster":"omoakin","content":"C\nConfigure a [email protected] function to send specific objects to users based on the User-Agent header.","comment_id":"895392","timestamp":"1699740660.0"},{"upvote_count":"1","poster":"GalileoEC2","content":"Using a Directory Connector to connect the on-premises Active Directory to AWS is one way to enable access to AWS resources, including Amazon FSx for Windows File Server. However, joining the Amazon FSx for Windows File Server file system to the on-premises Active Directory is a separate step that allows you to control access to the file shares using the same Active Directory groups that are used on-premises.","timestamp":"1695398220.0","comment_id":"847354","comments":[{"timestamp":"1695460320.0","poster":"LoXeras","content":"I guess this belongs to the question before #260","upvote_count":"3","comment_id":"848102"}]},{"timestamp":"1691829840.0","comments":[{"comment_id":"1107866","timestamp":"1719578880.0","poster":"pentium75","upvote_count":"2","content":"No, Lamba function will just do something like \"if user-agent is 'iOS' then send content from elb-01 otherwise send content from elb-02\"."}],"poster":"wors","content":"So will this mean the entire architecture needs to move to lambda in order to leverage off lambda edge? This doesn't make sense as the question outlines the architecture already in ec2, asg and elb?\n\nJust looking for clarification if I am missing something","upvote_count":"2","comment_id":"806219"},{"upvote_count":"3","timestamp":"1690676460.0","poster":"devonwho","content":"Selected Answer: AC\nAC are the correct answers.\n\nFor C:\nIMPROVED USER EXPERIENCE\nLambda@Edge can help improve your users' experience with your websites and web applications across the world, by letting you personalize content for them without sacrificing performance.\n\nReal-time Image Transformation\nYou can customize your users' experience by transforming images on the fly based on the user characteristics. For example, you can resize images based on the viewer's device type—mobile, desktop, or tablet. You can also cache the transformed images at CloudFront Edge locations to further improve performance when delivering images.\n\nhttps://aws.amazon.com/lambda/edge/","comment_id":"792311"},{"upvote_count":"4","comment_id":"776822","content":"Selected Answer: AC\nCorrect answer is A,C","poster":"mhmt4438","timestamp":"1689432120.0"},{"poster":"Aninina","comment_id":"775957","timestamp":"1689363900.0","content":"Selected Answer: AC\nC. Configure a Lambda@Edge function to send specific objects to users based on the User-Agent header.\n\nLambda@Edge allows you to run a Lambda function in response to specific CloudFront events, such as a viewer request, an origin request, a response, or a viewer response.","upvote_count":"3"},{"poster":"Morinator","timestamp":"1689237840.0","upvote_count":"4","comment_id":"774342","content":"Selected Answer: AC\nhttps://www.examtopics.com/discussions/amazon/view/67881-exam-aws-certified-solutions-architect-associate-saa-c02/"}]},{"id":"yBwotBsZuQwdrmySsa6v","answers_community":["A (100%)"],"answer_description":"","question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/95463-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"A","question_text":"A company plans to use Amazon ElastiCache for its multi-tier web application. A solutions architect creates a Cache VPC for the ElastiCache cluster and an App VPC for the application’s Amazon EC2 instances. Both VPCs are in the us-east-1 Region.\n\nThe solutions architect must implement a solution to provide the application’s EC2 instances with access to the ElastiCache cluster.\n\nWhich solution will meet these requirements MOST cost-effectively?","discussion":[{"upvote_count":"16","timestamp":"1705337220.0","poster":"mhmt4438","content":"Selected Answer: A\nA. Create a peering connection between the VPCs. Add a route table entry for the peering connection in both VPCs. Configure an inbound rule for the ElastiCache cluster’s security group to allow inbound connection from the application’s security group.\n\nCreating a peering connection between the VPCs allows the application's EC2 instances to communicate with the ElastiCache cluster directly and efficiently. This is the most cost-effective solution as it does not involve creating additional resources such as a Transit VPC, and it does not incur additional costs for traffic passing through the Transit VPC. Additionally, it is also more secure as it allows you to configure a more restrictive security group rule to allow inbound connection from only the application's security group.","comment_id":"776827"},{"upvote_count":"3","poster":"Ruffyit","timestamp":"1731486600.0","comment_id":"1069155","content":"A. Create a peering connection between the VPCs. Add a route table entry for the peering connection in both VPCs. Configure an inbound rule for the ElastiCache cluster’s security group to allow inbound connection from the application’s security group.\n\nCreating a peering connection between the VPCs allows the application's EC2 instances to communicate with the ElastiCache cluster directly and efficiently. This is the most cost-effective solution as it does not involve creating additional resources such as a Transit VPC, and it does not incur additional costs for traffic passing through the Transit VPC. Additionally, it is also more secure as it allows you to configure a more restrictive security group rule to allow inbound connection from only the application's security group."},{"comment_id":"1018542","upvote_count":"2","content":"Selected Answer: A\nCreate a peering connection between the VPCs. Add a route table entry for the peering connection in both VPCs. Configure an inbound rule for the ElastiCache cluster’s security group to allow inbound connection from the application’s security group.","timestamp":"1727418360.0","poster":"TariqKipkemei"},{"poster":"Guru4Cloud","timestamp":"1726053600.0","content":"Selected Answer: A\nCreate a VPC peering connection between the Cache VPC and App VPC. This allows private IP connectivity between the VPCs.\nAdd route table entries in each VPC to route traffic destined to the other VPC via the peering connection. This enables network routing.\nConfigure security groups to allow inbound connections from the application instances to the ElastiCache cluster.","upvote_count":"2","comment_id":"1004671"},{"comment_id":"937747","upvote_count":"4","poster":"cookieMr","timestamp":"1719645900.0","content":"Selected Answer: A\nCreating a peering connection between the VPCs is a cost-effective way to establish connectivity. By adding a route table entry for the peering connection in both VPCs, traffic can flow between them. Configuring an inbound rule in the ElastiCache cluster's security group allows inbound connections from the application's security group, enabling access to the ElastiCache cluster from the EC2 instances in the App VPC.\n\nOption B suggests creating a Transit VPC, which adds unnecessary complexity and cost for this scenario.\n\nOption C suggests configuring an inbound rule for the peering connection's security group, which is not necessary as the security group for the ElastiCache cluster should be used to control inbound connections.\n\nOption D suggests configuring an inbound rule for the Transit VPC's security group, which is not needed in this case and adds unnecessary complexity.\n\nTherefore, option A is the most cost-effective solution to provide the application's EC2 instances with access to the ElastiCache cluster."},{"comment_id":"922645","poster":"smartegnine","timestamp":"1718326920.0","content":"Selected Answer: A\nA is correct, \n1. VPC transit is used for more complex architecture and can do VPCs to VPCs connectivity. But for simple VPC 2 VPC can use peer connection.\n2.To enable private IPv4 traffic between instances in peered VPCs, you must add a route to the route tables associated with the subnets for both instances. \n\nSo base on 1, B and D are out, base on 2 C is out","upvote_count":"2"},{"comments":[{"poster":"smartegnine","comment_id":"925684","upvote_count":"3","comments":[{"upvote_count":"1","comment_id":"935017","poster":"Cor5in","timestamp":"1719462960.0","content":"Thank you Sir!"}],"content":"Application read from ElasticCache, not viseversa, so inbound rule should be ElasticCach","timestamp":"1718587320.0"},{"upvote_count":"3","comment_id":"922642","poster":"smartegnine","content":"To enable private IPv4 traffic between instances in peered VPCs, you must add a route to the route tables associated with the subnets for both instances. \n\nhttps://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-routing.html","timestamp":"1718326440.0"}],"timestamp":"1717758480.0","upvote_count":"1","comment_id":"917139","content":"Why not C ? any explanation?","poster":"wRhlH"},{"content":"Selected Answer: A\nCost Effectively!","comment_id":"825228","timestamp":"1709150580.0","upvote_count":"2","poster":"nder"}],"exam_id":31,"unix_timestamp":1673801220,"answer_images":[],"answer":"A","isMC":true,"timestamp":"2023-01-15 17:47:00","choices":{"B":"Create a Transit VPC. Update the VPC route tables in the Cache VPC and the App VPC to route traffic through the Transit VPC. Configure an inbound rule for the ElastiCache cluster's security group to allow inbound connection from the application’s security group.","C":"Create a peering connection between the VPCs. Add a route table entry for the peering connection in both VPCs. Configure an inbound rule for the peering connection’s security group to allow inbound connection from the application’s security group.","A":"Create a peering connection between the VPCs. Add a route table entry for the peering connection in both VPCs. Configure an inbound rule for the ElastiCache cluster’s security group to allow inbound connection from the application’s security group.","D":"Create a Transit VPC. Update the VPC route tables in the Cache VPC and the App VPC to route traffic through the Transit VPC. Configure an inbound rule for the Transit VPC’s security group to allow inbound connection from the application’s security group."},"question_id":202,"topic":"1"},{"id":"Rt7VsP03fcucbsHVoLds","answer_ET":"AD","discussion":[{"content":"Selected Answer: AD\nOptions B and E suggest deploying the Kubernetes control plane and worker nodes on EC2 instances, which would require managing the infrastructure and add ongoing maintenance overhead, contrary to the requirement of minimizing effort.\n\nOption C suggests using the Amazon EC2 launch type for ECS, which still requires managing EC2 instances and is not as cost-effective and scalable as using Fargate.\n\nTherefore, the combination of deploying an Amazon ECS cluster and an ECS service with a Fargate launch type (options A and D) is the most suitable for minimizing maintenance and scaling effort without managing additional infrastructure.","comment_id":"937748","upvote_count":"9","poster":"cookieMr","timestamp":"1688023680.0"},{"poster":"AlessandraSAA","upvote_count":"5","comment_id":"830651","content":"Selected Answer: AD\nECS has 2 launch type, EC2 (you maintain the infra) and Fargate (serverless). Since the question ask for no additional infra to manage it should be Fargate.","timestamp":"1678091880.0"},{"timestamp":"1695796140.0","upvote_count":"3","poster":"TariqKipkemei","content":"Selected Answer: AD\nCompany needs a solution that minimizes the amount of ongoing effort for maintenance and scaling = Serverless = ECS with Fargate.","comment_id":"1018543","comments":[{"timestamp":"1732024380.0","upvote_count":"1","poster":"JA2018","comment_id":"1314677","content":"Rule of thumbs for AWS exams, always opt for AWS managed services"}]},{"comment_id":"1004660","poster":"Guru4Cloud","timestamp":"1694430420.0","upvote_count":"4","content":"Selected Answer: AD\nECS allows deploying and managing containers without having to provision the underlying infrastructure. This minimizes maintenance effort.\nUsing Fargate launch type means ECS will handle provisioning and scaling the infrastructure automatically. This removes the management overhead for the company.\nRunning multiple tasks and specifying desired count ≥ 2 will provide high availability across Availability Zones.\nTogether, ECS plus Fargate provide a fully managed container platform. The company doesn't need to provision or manage servers."},{"poster":"LoXeras","timestamp":"1679570220.0","upvote_count":"3","comment_id":"848110","content":"Selected Answer: AD\nAWS Farget is server less solution to use on ECS: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS_Fargate.html"},{"timestamp":"1679385480.0","content":"why is c is incorrect ?","comments":[{"poster":"Julio98","content":"Because in the question says, \"minimizes the amount of ongoing effort for maintenance and scaling\", and EC2 instances you need effort to maintain the infrastructure unlike fargate that is serverless.","upvote_count":"3","comment_id":"847322","timestamp":"1679504820.0"}],"poster":"lambda15","upvote_count":"1","comment_id":"845631"},{"timestamp":"1678753140.0","comment_id":"838437","upvote_count":"2","poster":"WherecanIstart","content":"Selected Answer: AD\nAmazon Fargate is a service that is fully manageable by Amazon; it offers provisioning, configuration and scaling feature. It is \"serverless\".."},{"poster":"devonwho","comment_id":"792320","upvote_count":"4","timestamp":"1675045980.0","content":"Selected Answer: AD\nAWS Fargate is a technology that you can use with Amazon ECS to run containers without having to manage servers or clusters of Amazon EC2 instances. With Fargate, you no longer have to provision, configure, or scale clusters of virtual machines to run containers. \n\nhttps://docs.aws.amazon.com/AmazonECS/latest/userguide/what-is-fargate.html"},{"comment_id":"778220","content":"A D is the correct answer","timestamp":"1673901120.0","poster":"Aninina","upvote_count":"2"},{"timestamp":"1673801400.0","content":"Selected Answer: AD\nA,D is correct answer","comment_id":"776830","upvote_count":"3","poster":"mhmt4438"},{"timestamp":"1673735520.0","content":"AD: \nhttps://www.examtopics.com/discussions/amazon/view/60032-exam-aws-certified-solutions-architect-associate-saa-c02/","comment_id":"775978","upvote_count":"4","poster":"AHUI"},{"poster":"Morinator","timestamp":"1673607060.0","content":"Selected Answer: AD\nAD - EC2 out for this, cluster + fargate is the right answer","comment_id":"774347","upvote_count":"5"}],"question_images":[],"question_id":203,"choices":{"E":"Deploy Kubernetes worker nodes on Amazon EC2 instances that span multiple Availability Zones. Create a deployment that specifies two or more replicas for each microservice.","B":"Deploy the Kubernetes control plane on Amazon EC2 instances that span multiple Availability Zones.","A":"Deploy an Amazon Elastic Container Service (Amazon ECS) cluster.","D":"Deploy an Amazon Elastic Container Service (Amazon ECS) service with a Fargate launch type. Specify a desired task number level of greater than or equal to 2.","C":"Deploy an Amazon Elastic Container Service (Amazon ECS) service with an Amazon EC2 launch type. Specify a desired task number level of greater than or equal to 2."},"answers_community":["AD (100%)"],"topic":"1","isMC":true,"answer":"AD","question_text":"A company is building an application that consists of several microservices. The company has decided to use container technologies to deploy its software on AWS. The company needs a solution that minimizes the amount of ongoing effort for maintenance and scaling. The company cannot manage additional infrastructure.\n\nWhich combination of actions should a solutions architect take to meet these requirements? (Choose two.)","timestamp":"2023-01-13 11:51:00","exam_id":31,"answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/95012-exam-aws-certified-solutions-architect-associate-saa-c03/","unix_timestamp":1673607060,"answer_description":""},{"id":"4GYnDAn3xd6k3y4LzBzS","answer_ET":"D","question_images":[],"discussion":[{"content":"Selected Answer: D\nALB performs health checks on the EC2 instances, so it will only route traffic to healthy instances. This avoids the timeout errors.\nALB provides load balancing across the instances, improving performance and availability.\nRoute 53 routes to the ALB DNS name, so you don't have to manage records for each EC2 instance.\nThis is a standard and robust architecture for public-facing web applications. The ALB acts as the entry point and handles health checks and scaling.","timestamp":"1694430120.0","upvote_count":"15","poster":"Guru4Cloud","comment_id":"1004657"},{"poster":"jlteunissen","timestamp":"1694169900.0","content":"Selected Answer: B\nIt is not clear from the question whether the 10 EC2s are running within the same region. ALB can only direct traffic within region, while route 53 can route traffic to multiple locations, hence C and D are wrong.","comment_id":"1002368","comments":[{"poster":"pentium75","comment_id":"1107922","content":"But B has one primary record and 9 failover records. A is correct, simple policy with health checks, that makes sure that only IPs of healthy instances are returned.","timestamp":"1703777760.0","upvote_count":"3","comments":[{"content":"err, can someone advise which is the correct answer?","poster":"JA2018","timestamp":"1732024560.0","comment_id":"1314678","upvote_count":"1"}]}],"upvote_count":"10"},{"content":"Selected Answer: D\nAt first sight I thought option D is too complicated, but come to think of it, this should be the final answer. An ALB is specifically designed for this use case.\n\nOption B is not suited for scenarios with multiple EC2 instances in the same environment because it works on a primary-secondary model, not load balancing across multiple instances.","comment_id":"1317353","timestamp":"1732517460.0","poster":"LeonSauveterre","upvote_count":"2"},{"comment_id":"1242250","timestamp":"1720119840.0","content":"Selected Answer: D\nD for sure","poster":"ChymKuBoy","upvote_count":"2"},{"comment_id":"1168718","poster":"Hrishi_707","content":"Those who are confused between A and D, A is wrong as you can't associate a health check with Simple routing policy record.","timestamp":"1709891760.0","upvote_count":"2"},{"poster":"MrPCarrot","comment_id":"1150174","upvote_count":"2","timestamp":"1707911940.0","content":"D is the best answer"},{"upvote_count":"4","timestamp":"1705524180.0","poster":"awsgeek75","content":"If you focus on the question, both A and D seems to be correct.\n\nA is correct because simple routing policy for health check is doable BUT it is also wrong because we don't know how to determine the health of instance.\nD is correct because \" The company occasionally experiences a timeout error when attempting to browse the application\" which suggest aplication is being acccessed by a browser with means it's HTTP based and ALB is better for HTTP based healthchecks.\n\nA web application timing out is not necessarily unhealthy instance, strictly speaking. It's just bad web application running on a healthy instance! So A may not be correct also.","comment_id":"1125299"},{"comment_id":"1109276","poster":"farnamjam","upvote_count":"4","content":"Selected Answer: D\nAlthough B can work as well, but it's nor a professional choice to associate the healthcheck with 10 EC2 instances, ALB is better option here.\n\nA is incorect: Simple Routing Policies Can’t be associated with Health Checks\nC is incorrect: Cloudfront is for caching content which is irrelevant.","timestamp":"1703895060.0","comments":[{"timestamp":"1704218460.0","poster":"awsgeek75","comment_id":"1112120","upvote_count":"2","content":"Simple routing policies can be associated with Health Checks https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-simple-configs.html"}]},{"content":"Selected Answer: A\nA meets the requirement (\"overcome these timeout errors\") without any other changes.\n\"If you configure health checking for all the records in a group of records that have the same name, the same type (such as A or AAAA), and the same routing policy (such as weighted or failover), Route 53 responds to DNS queries by choosing a healthy record and returning the applicable value from that record. (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-how-route-53-chooses-records.html)","comment_id":"1107917","poster":"pentium75","timestamp":"1703777640.0","comments":[{"comment_id":"1107918","content":"\"You can use Route 53 health checking to configure active-active and active-passive failover configurations. You configure active-active failover using any routing policy (or combination of routing policies) other than failover. ... Use this failover configuration when you want all of your resources to be available the majority of the time. When a resource becomes unavailable, Route 53 can detect that it's unhealthy and stop including it when responding to queries.","poster":"pentium75","comments":[{"content":"In active-active failover, all the records that have the same name, the same type (such as A or AAAA), and the same routing policy (such as weighted or latency) are active unless Route 53 considers them unhealthy. Route 53 can respond to a DNS query using any healthy record.\" (https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-types.html#dns-failover-types-active-passive)","timestamp":"1703777640.0","upvote_count":"2","poster":"pentium75","comments":[{"comment_id":"1107921","content":"B - No, \"you configure active-active failover using any routing policy (or combination of routing policies) OTHER THAN FAILOVER\". With B, all traffic would go one primary instance unless it is unhealthy.\n\nC - Not sure how to configure multiple EC2 instances as the origin without an LB. Even if that would be possible it would introduce more changes and complexity, which is not asked for.\n\nD - Would work if all EC2 instances are in the same region, which we don't know. But it would also incur additional cost and potentially have other effects.","timestamp":"1703777700.0","upvote_count":"2","poster":"pentium75"}],"comment_id":"1107920"}],"upvote_count":"2","timestamp":"1703777640.0"}],"upvote_count":"3"},{"timestamp":"1699864740.0","comment_id":"1069158","upvote_count":"3","content":"B is wrong.\nThe DNS cache in clients could drive to timeouts. With ALB this issue won't happen since the DNS register will be the same and ALB will take care of unhealty nodes.","poster":"Ruffyit"},{"content":"Selected Answer: D\nB is wrong.\nThe DNS cache in clients could drive to timeouts. With ALB this issue won't happen since the DNS register will be the same and ALB will take care of unhealty nodes.","upvote_count":"3","poster":"rlamberti","comment_id":"1051966","timestamp":"1698071220.0"},{"comment_id":"1041960","content":"Selected Answer: D\nD. **Application Load Balancer (ALB) with Health Checks, Routed via Route 53**:\n - Creating an ALB in front of the EC2 instances and configuring health checks on the ALB will ensure that only healthy instances receive traffic. Route 53 can then direct traffic to the ALB, which in turn, routes traffic to healthy instances based on the health check results.\n\nAmong the provided options, the one that directly addresses the issue of routing traffic only to healthy instances is:\n\n**D. Create an Application Load Balancer (ALB) with a health check in front of the EC2 instances. Route to the ALB from Route 53.**","upvote_count":"4","timestamp":"1697131080.0","poster":"daniel1"},{"poster":"TariqKipkemei","upvote_count":"1","comment_id":"1018546","timestamp":"1695796380.0","content":"Selected Answer: B\nClearly the question is all about Amazon Route 53 that has Failover routing policy that is used when you want to configure active-passive failover."},{"poster":"slackbot","content":"i was looking at A, but indeed D is the best option, because the usually the TTL of the records is at least 60 seconds (nobody sets lower unless testing something ,because there is a charge per number of unique requests. ALB health check can be set as low as desired, which helps exclude the problematic ec2 faster than the DNS TTL expires","comment_id":"1001466","upvote_count":"3","timestamp":"1694086080.0"},{"content":"Selected Answer: D\nBy creating an ALB and configuring health checks, the architect ensures that only healthy instances receive traffic. The ALB periodically checks the health of the EC2 instances based on the configured health check settings.\n\nRouting traffic to the ALB from Route 53 ensures that DNS queries return the IP address of the ALB instead of individual instances. This allows the ALB to distribute traffic only to healthy instances, avoiding timeouts caused by unhealthy instances.\n\nA & B: While associating health checks with each record can help identify unhealthy instances, it does not provide automatic load balancing and distribution of traffic to healthy instances.\n\nC: While CloudFront can improve performance and availability, it is primarily a CDN and may not directly address the issue of load balancing and distributing traffic to healthy instances.\n\nTherefore, option D is the most appropriate solution to overcome the timeout errors by implementing an ALB with health checks and routing traffic through Route 53.","comment_id":"937751","upvote_count":"5","timestamp":"1688023860.0","poster":"cookieMr"},{"timestamp":"1687261620.0","comment_id":"928419","upvote_count":"3","poster":"joechen2023","content":"Selected Answer: C\nI believe both C and D will work, but C seems less complex.\nhopefully somebody here is more advanced(not an old student learning AWS like me) to explain why not C."},{"upvote_count":"3","content":"Selected Answer: D\nOption D allows for the creation of an Application Load Balancer which can detect unhealthy instances and redirect traffic away from them.","timestamp":"1685621760.0","poster":"Abrar2022","comment_id":"912064"},{"comment_id":"827104","upvote_count":"2","content":"Selected Answer: D\nI vote d","poster":"Steve_4542636","timestamp":"1677774540.0"},{"upvote_count":"2","comment_id":"779418","poster":"techhb","timestamp":"1674001080.0","content":"Selected Answer: D\nIts D only"},{"timestamp":"1674000600.0","upvote_count":"4","comments":[{"comments":[{"poster":"F629","upvote_count":"4","comment_id":"927335","content":"I think the problem of Failover routing policy is that it always send the requests to the same primary instance, not spread into all healthy instances.","timestamp":"1687166280.0"}],"comment_id":"779416","poster":"techhb","timestamp":"1674001020.0","upvote_count":"6","content":"Its D,found the root cause\nOption B is not the best option to overcome these timeout errors because it is not designed to handle traffic directed by Amazon Route 53. Option B creates a failover routing policy record for each EC2 instance, which is designed to route traffic to a backup EC2 instance if one of the EC2 instances becomes unhealthy. This is not ideal for routing traffic from Route 53 as it does not allow for the redirection of traffic away from unhealthy instances. Option D would be the best choice as it allows for the creation of an Application Load Balancer which can detect unhealthy instances and redirect traffic away from them."}],"comment_id":"779411","poster":"techhb","content":"Selected Answer: B\nWhy not B\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-types.html#dns-failover-types-active-passive"},{"comment_id":"778222","timestamp":"1673901180.0","content":"Selected Answer: D\nD is correct","poster":"Aninina","upvote_count":"2"},{"poster":"mhmt4438","timestamp":"1673801640.0","content":"Selected Answer: D\nD is correct","comment_id":"776833","upvote_count":"3"},{"timestamp":"1673735760.0","poster":"AHUI","upvote_count":"2","content":"Ans: D \nhttps://www.examtopics.com/discussions/amazon/view/83982-exam-aws-certified-solutions-architect-associate-saa-c02/","comment_id":"775982"},{"content":"Selected Answer: D\nD. Create an Application Load Balancer (ALB) with a health check in front of the EC2 instances. Route to the ALB from Route 53.\n\nAn Application Load Balancer (ALB) allows you to distribute incoming traffic across multiple backend instances, and can automatically route traffic to healthy instances while removing traffic from unhealthy instances. By using an ALB in front of the EC2 instances and routing traffic to it from Route 53, the load balancer can perform health checks on the instances and only route traffic to healthy instances, which should help to reduce or eliminate timeout errors caused by unhealthy instances.","comment_id":"775967","upvote_count":"5","poster":"Aninina","timestamp":"1673734260.0"}],"question_id":204,"choices":{"C":"Create an Amazon CloudFront distribution with EC2 instances as its origin. Associate a health check with the EC2 instances.","B":"Create a Route 53 failover routing policy record for each EC2 instance. Associate a health check with each record.","D":"Create an Application Load Balancer (ALB) with a health check in front of the EC2 instances. Route to the ALB from Route 53.","A":"Create a Route 53 simple routing policy record for each EC2 instance. Associate a health check with each record."},"answers_community":["D (71%)","B (21%)","4%"],"topic":"1","isMC":true,"question_text":"A company has a web application hosted over 10 Amazon EC2 instances with traffic directed by Amazon Route 53. The company occasionally experiences a timeout error when attempting to browse the application. The networking team finds that some DNS queries return IP addresses of unhealthy instances, resulting in the timeout error.\n\nWhat should a solutions architect implement to overcome these timeout errors?","answer":"D","timestamp":"2023-01-14 23:11:00","exam_id":31,"answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/95345-exam-aws-certified-solutions-architect-associate-saa-c03/","unix_timestamp":1673734260,"answer_description":""},{"id":"2lGi4rhnmCdITnwxfCFW","isMC":true,"exam_id":31,"url":"https://www.examtopics.com/discussions/amazon/view/95013-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"C","choices":{"D":"Configure a public Application Load Balancer with multiple redundant Amazon EC2 instances in public subnets. Configure Amazon CloudFront to deliver HTTPS content using the EC2 instances as the origin.","B":"Configure a public Application Load Balancer with multiple redundant Amazon EC2 instances in private subnets. Configure Amazon CloudFront to deliver HTTPS content using the EC2 instances as the origin.","A":"Configure a public Application Load Balancer (ALB) with multiple redundant Amazon EC2 instances in public subnets. Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin.","C":"Configure a public Application Load Balancer (ALB) with multiple redundant Amazon EC2 instances in private subnets. Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin."},"answers_community":["C (100%)"],"discussion":[{"comment_id":"775969","comments":[{"timestamp":"1732024920.0","comment_id":"1314685","content":"err, how do we know there's already an ALB in the public subnet(s)?","upvote_count":"1","poster":"JA2018","comments":[{"content":"This is *NOT* stated in the sample question listed here.","upvote_count":"1","comments":[{"upvote_count":"1","comment_id":"1314689","timestamp":"1732025040.0","poster":"JA2018","content":"sorry missed out on this \"Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin.\""}],"comment_id":"1314687","poster":"JA2018","timestamp":"1732024920.0"}]}],"timestamp":"1673734380.0","content":"C. Configure a public Application Load Balancer (ALB) with multiple redundant Amazon EC2 instances in private subnets. Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin.\n\nThis solution meets the requirements for a highly available application with web, application, and database tiers, as well as providing edge-based content delivery. Additionally, it maximizes security by having the ALB in a private subnet, which limits direct access to the web servers, while still being able to serve traffic over the Internet via the public ALB. This will ensure that the web servers are not exposed to the public Internet, which reduces the attack surface and provides a secure way to access the application.","poster":"Aninina","upvote_count":"18"},{"upvote_count":"10","comment_id":"937755","poster":"cookieMr","timestamp":"1688024100.0","content":"Selected Answer: C\nA. exposes the EC2 instances directly to the public internet, which may compromise security.\n\nB. lacks a load balancer in the public subnet, which is required for efficient load distribution and high availability.\n\nD. provides load balancing and HTTPS content delivery, it exposes the EC2 instances directly to the public internet, which may pose security risks.\n\nC. provides high availability, secure access through private subnets, and optimized HTTPS content delivery using CloudFront with a public ALB as the origin."},{"comment_id":"1083930","content":"C. Configure a public Application Load Balancer (ALB) with multiple redundant Amazon EC2 instances in private subnets. Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin.\n\nHere's the reasoning:\n\n Public ALB in Private Subnets: Placing the ALB in private subnets enhances security by preventing direct access from the internet. The ALB in private subnets can communicate with the application instances in the same private subnets.\n\n CloudFront with ALB as Origin: Configuring CloudFront to deliver HTTPS content using the public ALB as the origin allows for content to be cached and distributed globally, reducing latency for end users.","upvote_count":"2","poster":"meowruki","timestamp":"1701311520.0"},{"upvote_count":"2","comment_id":"1069164","timestamp":"1699865400.0","content":"C. Configure a public Application Load Balancer (ALB) with multiple redundant Amazon EC2 instances in private subnets. Configure Amazon CloudFront to deliver HTTPS content using the public ALB as the origin.\n\nThis solution meets the requirements for a highly available application with web, application, and database tiers, as well as providing edge-based content delivery. Additionally, it maximizes security by having the ALB in a private subnet, which limits direct access to the web servers, while still being able to serve traffic over the Internet via the public ALB. This will ensure that the web servers are not exposed to the public Internet, which reduces the attack surface and provides a secure way to access the application.","poster":"Ruffyit"},{"poster":"Guru4Cloud","content":"Selected Answer: C\nKeyword: Instances in private, ALB in public, point cloudfront to the public ALB","comment_id":"1004653","upvote_count":"2","timestamp":"1694429820.0"},{"comment_id":"776838","upvote_count":"4","timestamp":"1673802060.0","poster":"mhmt4438","content":"Selected Answer: C\nAnswer is C"},{"timestamp":"1673736180.0","poster":"AHUI","comment_id":"775987","content":"ans: C \nhttps://www.examtopics.com/discussions/amazon/view/46401-exam-aws-certified-solutions-architect-associate-saa-c02/","upvote_count":"2"},{"content":"Selected Answer: C\nInstances in private, ALB in public, point cloudfront to the public ALB","poster":"Morinator","upvote_count":"5","timestamp":"1673607300.0","comment_id":"774349"}],"answer_description":"","question_text":"A solutions architect needs to design a highly available application consisting of web, application, and database tiers. HTTPS content delivery should be as close to the edge as possible, with the least delivery time.\n\nWhich solution meets these requirements and is MOST secure?","unix_timestamp":1673607300,"answer_images":[],"question_id":205,"timestamp":"2023-01-13 11:55:00","answer":"C","question_images":[],"topic":"1"}],"exam":{"isImplemented":true,"lastUpdated":"11 Apr 2025","isMCOnly":true,"name":"AWS Certified Solutions Architect - Associate SAA-C03","isBeta":false,"provider":"Amazon","numberOfQuestions":1019,"id":31},"currentPage":41},"__N_SSP":true}