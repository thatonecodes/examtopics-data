{"pageProps":{"questions":[{"id":"dQo4TUtvHd2Y6uEVka6M","answers_community":["A (86%)","14%"],"discussion":[{"content":"Selected Answer: A\nS3 Cross-Region Replication handles automatically copying new objects added to the source bucket to the destination bucket in a different region.\nIt continuously replicates new photos without needing to manually copy files or set up Lambda triggers.\nCORS only enables cross-origin access, it does not copy objects.\nUsing Lifecycle rules or Lambda functions requires custom code and logic to handle the copying.\nS3 Cross-Region Replication provides automated replication that minimizes operational overhead.","comment_id":"1015262","poster":"Guru4Cloud","upvote_count":"8","timestamp":"1695496680.0"},{"poster":"xBUGx","content":"Selected Answer: D\nAll NEW photo, not all photo.\nWe dont want to copy existing photos","upvote_count":"3","timestamp":"1710125520.0","comment_id":"1170745","comments":[{"poster":"MatAlves","comment_id":"1284959","content":"\"There are two types of replication: live replication and on-demand replication.\n\nLive replication – To automatically replicate new and updated objects as they are written to the source bucket, use live replication. Live replication doesn't replicate any objects that existed in the bucket before you set up replication. To replicate objects that existed before you set up replication, use on-demand replication.\"\n\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html","timestamp":"1726527540.0","upvote_count":"3"},{"comment_id":"1176183","poster":"TheLaPlanta","upvote_count":"2","content":"A does exactly that","timestamp":"1710726060.0"}]},{"upvote_count":"2","poster":"awsgeek75","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html\n\nTo automatically replicate new objects as they are written to the bucket, use live replication, such as Cross-Region Replication (CRR). To replicate existing objects to a different bucket on demand, use S3 Batch Replication.","timestamp":"1705066380.0","comment_id":"1120804"},{"comment_id":"1083265","content":"Selected Answer: A\nLEAST operational effort = Cross-Region Replication","upvote_count":"2","poster":"TariqKipkemei","timestamp":"1701246300.0"},{"content":"Selected Answer: A\nhttps://aws.amazon.com/about-aws/whats-new/2015/03/amazon-s3-introduces-cross-region-replication/","comment_id":"1058832","poster":"dilaaziz","timestamp":"1698759840.0","upvote_count":"3"},{"upvote_count":"3","content":"Selected Answer: A\nS3 Cross-Region Replication is least operational overhead.","comment_id":"1014535","poster":"taustin2","timestamp":"1695419940.0"}],"answer_images":[],"timestamp":"2023-09-22 23:59:00","choices":{"B":"Create a cross-origin resource sharing (CORS) configuration of the existing S3 bucket. Specify us-east-1 in the CORS rule's AllowedOrigin element.","A":"Create a second S3 bucket in us-east-1. Use S3 Cross-Region Replication to copy photos from the existing S3 bucket to the second S3 bucket.","C":"Create a second S3 bucket in us-east-1 across multiple Availability Zones. Create an S3 Lifecycle rule to save photos into the second S3 bucket.","D":"Create a second S3 bucket in us-east-1. Configure S3 event notifications on object creation and update events to invoke an AWS Lambda function to copy photos from the existing S3 bucket to the second S3 bucket."},"question_id":601,"answer_ET":"A","answer_description":"","answer":"A","question_text":"An online photo-sharing company stores its photos in an Amazon S3 bucket that exists in the us-west-1 Region. The company needs to store a copy of all new photos in the us-east-1 Region.\n\nWhich solution will meet this requirement with the LEAST operational effort?","question_images":[],"unix_timestamp":1695419940,"topic":"1","exam_id":31,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/121222-exam-aws-certified-solutions-architect-associate-saa-c03/"},{"id":"srp2I3s7IOzzyHe3tcNn","discussion":[{"content":"Selected Answer: AD\nChanging answer to A,D. DynamoDB on-demand is more scalable than DynamoDB auto-scaling.","comment_id":"1015913","timestamp":"1695566760.0","upvote_count":"12","poster":"taustin2"},{"timestamp":"1700110560.0","content":"Selected Answer: CD\nFor those answering A over C, the question asks about scalability, but the text says the traffic patterns are known and don't state they will change. Both auto-scaling and on-demand can \"scale\", but auto-scaling is for known, on-demand is better for unknown traffic patterns. Its likely the \"scalability\" is more to do with the file hosting (EC2 wouldn't scale well at all vs S3)","comments":[{"comment_id":"1111891","timestamp":"1704199440.0","content":"\"Most scalability\" = A. Might be more expensive, but cost is irrelevant in the question.","poster":"pentium75","upvote_count":"3"}],"comment_id":"1072145","poster":"bogobob","upvote_count":"8"},{"timestamp":"1732508760.0","comment_id":"1317319","content":"Selected Answer: BD\nAmazon Aurora Serverless for a highly fluctuating DB workload, and S3 for static webpage","comments":[{"content":"Aurora is slower than DynamoDB, Dynamo scales to millions of requests, which is what the company asks for","poster":"marcosviniciuscb","upvote_count":"1","comment_id":"1409932","timestamp":"1742888520.0"},{"upvote_count":"1","poster":"RamanAgarwal","comment_id":"1323823","timestamp":"1733707800.0","content":"Cant change schema in Aurora"}],"poster":"JA2018","upvote_count":"1"},{"upvote_count":"2","content":"B and D B. Deploy Amazon Aurora as the database solution. Choose the serverless DB engine mode: Aurora Serverless is an on-demand, auto-scaling configuration for Amazon Aurora.","timestamp":"1721947260.0","comment_id":"1255265","poster":"Ravee_L"},{"upvote_count":"2","comment_id":"1242954","timestamp":"1720203420.0","content":"Selected Answer: AD\non-demand capacity for DynamoDB since traffic is not consistent, and S3 & CloudFront for static files","poster":"a7md0"},{"content":"Selected Answer: AD\nMOST scalability - DynamoDB On-Demand > Auto Scaling + Static Content host in S3","comment_id":"1231594","poster":"KennethNg923","upvote_count":"2","timestamp":"1718584800.0"},{"content":"Selected Answer: CD\n(A) is incorrect. \"On-demand capacity mode is probably best when you have new tables with unknown workloads, unpredictable application traffic.\" We know the workload upper limit is the total amount of subscribers & we know it's busy in the morning & not so much in the afternoon. Nothing in the question says it bursts in the morning. \n\n(C) is correct. The traffic pattern is known, so prep for the morning & the exact upper boundary is the # of subscribers.","poster":"NSA_Poker","timestamp":"1717641780.0","comment_id":"1225116","upvote_count":"2"},{"upvote_count":"3","poster":"jaswantn","comment_id":"1146376","content":"For autoscaling we need to know the lower and upper limits. Anh the question says....application will have millions of users for 4 hours in the morning....how many millions , how much upper limit we need to set for to handle this much request?\nhere we can't have exact estimation for the upper limit in autoscaling. Thus, better option is (A)","comments":[{"upvote_count":"1","comments":[{"comment_id":"1317320","content":"why not Amazon Aurora Serverless?","poster":"JA2018","timestamp":"1732508820.0","upvote_count":"1"}],"timestamp":"1707658380.0","content":"With autoscaling we can face throttling initially, when there is surge of requests and the load is greater than the scaling upper limit. We can gradually increase the upper limit of autoscaling and would be then able to handle the load in subsequent requests preventing ourself from using OnDemand. \nThus Option (C) is more scalable as it can handle the both types of load(high & low) in efficient manner.","comment_id":"1147255","poster":"jaswantn"}],"timestamp":"1707576720.0"},{"upvote_count":"4","comments":[{"poster":"NSA_Poker","upvote_count":"1","timestamp":"1717640640.0","comment_id":"1225113","content":"The exact boundary is known, the application's subscribers. Leaning towards AC now."}],"content":"Selected Answer: AD\nAD vs CD ?\n1) Please read the final sentence. Which solutions will meet these requirements and provide the \"MOST\" scalability?\n2) It is not possible to predict an exact boundary based on the number of \"millions of users\".\nSo I would choose \"AD\".","poster":"1Alpha1","timestamp":"1707289080.0","comment_id":"1143017"},{"content":"Selected Answer: CD\nThe traffic pattern is known here.","comment_id":"1127210","timestamp":"1705747740.0","poster":"06042022","upvote_count":"2"},{"timestamp":"1705066740.0","content":"Selected Answer: AD\nA: On-demand scaling because the demand changes drastically (millions to thousands)\nD: S3 for static page is perfect\n\nB: Aurora is RDMS so not much rapid schema changes (it's subjective and DBA will argue but better options on the table are DynamoDB)\nE: Too much work and overhead","comment_id":"1120807","poster":"awsgeek75","upvote_count":"2","comments":[{"content":"To be fair, 4 hours is a strange time duration for burst traffic. 20 hours of low traffic may benefit from auto-scaling's as it is long enough to be called a \"depressed\" traffic mode in autoscaling config. 4 hours in the morning can also be termed as \"sustained period\" of burst in autoscaling. \n\nThis question is not theoretical, someone who has scaled Dynamo in similar scenarios will be able to answer correctly.","comment_id":"1127197","poster":"awsgeek75","timestamp":"1705746480.0","upvote_count":"2"}]},{"comments":[{"upvote_count":"2","comment_id":"1111896","content":"\"The on-demand pricing model is ideal for bursty, new, or unpredictable workloads whose traffic can spike in seconds or minutes, and when under-provisioned capacity would impact the user experience.\"\n\nWhereas on-demand capacity mode is probably best when you have new tables with unknown workloads, unpredictable application traffic and also if you only want to pay exactly for what you use. The on-demand pricing model is ideal for bursty, new, or unpredictable workloads whose traffic can spike in seconds or minutes, and when under-provisioned capacity would impact the user experience.\n\nhttps://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/capacity.html","poster":"pentium75","timestamp":"1704199620.0","comments":[{"content":"This support C not A","upvote_count":"1","poster":"Salilgen","timestamp":"1735331340.0","comment_id":"1332609"}]}],"timestamp":"1704199560.0","upvote_count":"5","poster":"pentium75","comment_id":"1111895","content":"Selected Answer: AD\nQuestion asks for \"most scalability\", not cost optimization. \"DynamoDB auto scaling ... modifies provisioned throughput settings only when the actual workload stays elevated or depressed for a sustained period of several minutes. ... This means that provisioned capacity is probably best for you if you have relatively predictable application traffic, run applications whose traffic is consistent, and ramps up or down gradually.\""},{"poster":"Ashhher","comment_id":"1107424","content":"Selected Answer: BD\nI understand the argument between A and C, but why not B?","comments":[{"upvote_count":"5","timestamp":"1704198900.0","comment_id":"1111882","content":"\"Ability to rapidly evolve their schema\" -> NoSQL database, schema changes in transactional databases like RDS are difficult","poster":"pentium75"}],"upvote_count":"2","timestamp":"1703739660.0"},{"comment_id":"1105304","poster":"Derek_G","timestamp":"1703512080.0","content":"Selected Answer: AD\nProvisioned on-demand capacity:\nManual: Requires manual setup and management of capacity.\nCost-Effectiveness: Requires manual estimation of workload, which can result in either excess or insufficient capacity.\nUse Case: Suitable for relatively stable workloads with predictable capacity needs.\n\n predictable capacity needs.：4 hours in the morning,a few thousand users during the rest of the day.","upvote_count":"2"},{"poster":"[Removed]","comment_id":"1095105","content":"Selected Answer: CD\nProvisioned mode is more suitable and it is the default.","upvote_count":"3","timestamp":"1702437180.0"},{"comment_id":"1083278","poster":"TariqKipkemei","content":"Selected Answer: AD\nrapidly evolve their schema, MOST scalability for data layer = DynamoDB with on-demand capacity. on-demand capacity mode automatically enables autoscaling.\nMOST scalability for single page app = Amazon CloudFront distribution with the S3 bucket as the origin.","timestamp":"1701246780.0","upvote_count":"4"},{"content":"Selected Answer: CD\nCD as pattern is known","poster":"t0nx","upvote_count":"1","comment_id":"1078212","timestamp":"1700726700.0"},{"upvote_count":"2","comments":[{"upvote_count":"3","content":"No, \"ability to rapidly evolve their schema\" -> Relational DB is out","timestamp":"1704199020.0","comment_id":"1111884","poster":"pentium75"}],"comment_id":"1064335","content":"Selected Answer: AD\nB is valid, but not good as A","poster":"potomac","timestamp":"1699313280.0"},{"comment_id":"1058827","content":"Selected Answer: CD\nIt is a known traffic\nhttps://aws.amazon.com/dynamodb/pricing/","timestamp":"1698759300.0","upvote_count":"2","poster":"dilaaziz"},{"content":"Okay, it is clear AD vs CD. The question is about providing the MOST scalability solution\"\nA is providing much more scalability compared to C. I would go for AD.","comment_id":"1057087","upvote_count":"2","timestamp":"1698606420.0","poster":"wsdasdasdqwdaw"},{"timestamp":"1698587400.0","upvote_count":"3","content":"AD\nFor tables using on-demand mode, DynamoDB instantly accommodates customers’ workloads as they ramp up or down to any previously observed traffic level. If the level of traffic hits a new peak, DynamoDB adapts rapidly to accommodate the workload.\n\nhttps://aws.amazon.com/blogs/aws/amazon-dynamodb-on-demand-no-capacity-planning-and-pay-per-request-pricing/","poster":"potomac","comment_id":"1056855"},{"timestamp":"1698094260.0","upvote_count":"4","comments":[{"poster":"NSA_Poker","upvote_count":"1","content":"nothing says it bursts in the morning, just that there are millions of users. It could climb gradually.","timestamp":"1717641240.0","comment_id":"1225114"}],"comment_id":"1052247","poster":"Wayne23Fang","content":"Selected Answer: C\nQuoted from DynamoDB On-Demand Scaling vs Provisioned with Auto-Scaling [The Ultimate Comparison] Charlie Fish Published on October 25th, 2021:\nThis means Auto-Scaling is best for situations where traffic will scale gradually and not incur sudden spikes of traffic. For most applications this is fine, traffic normally spikes during the middle of the day, and tampers off overnight. But it is important to understand that Auto-Scaling and changes to provisioned capacity is not instantaneous. Also He mentioned AWS allows multiple capacity decrease through a day with provisioned mode. But agree it is tough call to compare. User bsbs1234's comment is valid. But it is arguable that the traffic pattern is considered consistent."},{"content":"CD:\nWas think AD, but after read comments. I think it should be CD. Because the traffic pattern is known. On-Demand is more suitable when traffic pattern is not clear. Provision with auto-scaling should be more cost efficient.","poster":"bsbs1234","timestamp":"1697064660.0","comment_id":"1041193","upvote_count":"3"},{"upvote_count":"3","timestamp":"1695779640.0","comment_id":"1018348","content":"Selected Answer: AD\nRemember for Provisioned with Auto-Scaling you are basically paying for throughput 24/7. Whereas for On-Demand Scaling you pay per request. This means for applications still in development or low traffic applications, it might be more economical to use On-Demand Scaling and not worry about provisioning throughput. However, at scale, this can quickly shift once you have a more consistent usage pattern.\nhttps://dynobase.dev/dynamodb-on-demand-vs-provisioned-scaling/","comments":[{"poster":"NayeraB","upvote_count":"3","comment_id":"1154525","content":"Cost efficiency wasn't mentioned in the question at all, I'm thinking that they're steering the solution wagon towards scalable options","timestamp":"1708412460.0"}],"poster":"Xin123"},{"poster":"Jay2k23","content":"Selected Answer: AD\nA: DynamoDB on-demand mode make automatically scale up and down with your workload.\nD: S3 for static web site","timestamp":"1695545940.0","comment_id":"1015616","upvote_count":"2"},{"upvote_count":"1","comment_id":"1015258","content":"Selected Answer: CD\nThe key reasons are:\n\nDynamoDB auto scaling allows the database to scale up and down dynamically based on traffic patterns. This handles the large spike in traffic in the mornings and lower traffic later in the day.\nS3 combined with CloudFront provides a highly scalable infrastructure for the static content. CloudFront caching improves performance.\nAurora serverless could be an option but may not scale as seamlessly as DynamoDB to the very high spike in users.\nEC2 Auto Scaling groups add complexity compared to S3/CloudFront for static content hosting.","timestamp":"1695496380.0","poster":"Guru4Cloud"},{"timestamp":"1695420240.0","upvote_count":"2","content":"Selected Answer: CD\nStatic content = S3 + CloudFront. Radidly scale and rapidly evolve schema = DynamoDB with auto-scaling enabled (which it is by default).","comment_id":"1014536","poster":"taustin2"}],"question_id":602,"url":"https://www.examtopics.com/discussions/amazon/view/121223-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"AD","unix_timestamp":1695420240,"answer":"AD","question_images":[],"answer_description":"","choices":{"A":"Deploy Amazon DynamoDB as the database solution. Provision on-demand capacity.","D":"Deploy the static content into an Amazon S3 bucket. Provision an Amazon CloudFront distribution with the S3 bucket as the origin.","C":"Deploy Amazon DynamoDB as the database solution. Ensure that DynamoDB auto scaling is enabled.","E":"Deploy the web servers for static content across a fleet of Amazon EC2 instances in Auto Scaling groups. Configure the instances to periodically refresh the content from an Amazon Elastic File System (Amazon EFS) volume.","B":"Deploy Amazon Aurora as the database solution. Choose the serverless DB engine mode."},"exam_id":31,"isMC":true,"answer_images":[],"question_text":"A company is creating a new web application for its subscribers. The application will consist of a static single page and a persistent database layer. The application will have millions of users for 4 hours in the morning, but the application will have only a few thousand users during the rest of the day. The company's data architects have requested the ability to rapidly evolve their schema.\n\nWhich solutions will meet these requirements and provide the MOST scalability? (Choose two.)","timestamp":"2023-09-23 00:04:00","topic":"1","answers_community":["AD (58%)","CD (32%)","6%"]},{"id":"70PpCWwH464FPfIw5wUu","exam_id":31,"discussion":[{"content":"Selected Answer: B\nSQL Injection and Cross-Site Scripting = WAF so Either B or D. Both B and D are valid options but the question doesn't indicate a real need for CloudFront, so just use WAF with the API Gateway. Answer is B.","upvote_count":"14","poster":"taustin2","timestamp":"1711152540.0","comment_id":"1014538"},{"upvote_count":"8","content":"Selected Answer: B\nWAF helps with layer 7 attacks like SQL injection and XSS. Shield is helpful for DDOS attacks.","poster":"awslearnerin2022","timestamp":"1711113240.0","comment_id":"1014030"},{"comment_id":"1411222","content":"Selected Answer: D\nCloudFront no se elige por su caché\n✅ No se elige por mejorar la latencia\n🔐 Se elige porque es el único sitio donde puedes aplicar AWS WAF si usas REST API (v1)\n\nEntonces:\n\nAunque CloudFront tenga caché y latencia optimizada, eso no es lo relevante aquí.\nLo importante es que es el único recurso donde puedes colgar el WAF para proteger tu REST API.","timestamp":"1743150480.0","poster":"marcosviniciuscb","upvote_count":"1"},{"content":"Option B is technically sound and more straightforward if you only want to protect a specific API.\n\nOption D is more scalable and operationally efficient, especially if you're building a modern architecture with multiple services and want protection from the edge.\n\nThe question uses the keyword \"MOST operationally efficient,\" so option D is the best.","timestamp":"1742889780.0","comment_id":"1409940","poster":"marcosviniciuscb","upvote_count":"1"},{"content":"Selected Answer: B\nhttps://aws.amazon.com/blogs/compute/amazon-api-gateway-adds-support-for-aws-waf/","timestamp":"1735333560.0","upvote_count":"1","poster":"Salilgen","comment_id":"1332621"},{"timestamp":"1720785660.0","content":"Selected Answer: B\nWAF is good enough for SQL Injection and Cross Site scripting so A is good\nA: AWS Shield (basic) is not for SQL injection\nC: Same as A\nD: Good solution and will work but it provides extra DDoS protection and caching which is not needed (as we don't know much about the API also)","poster":"awsgeek75","upvote_count":"3","comment_id":"1120820"},{"comment_id":"1111906","upvote_count":"3","poster":"pentium75","timestamp":"1719918480.0","content":"Selected Answer: B\nQuestion asks for protection against SQL injection and XSS, both is provided by WAF (option B). D would work too, but it would add another layer (CloudFront) with benefits that nobody asked for (and that would cost money), thus it would IMO be less 'operationally efficient'."},{"content":"Selected Answer: D\nD. Set up API Gateway with an Amazon CloudFront distribution. Configure AWS WAF in CloudFront.\n\nOption A (Configure AWS Shield) is a DDoS protection service but doesn't specifically address SQL injection and cross-site scripting attacks.\n\nOption B (Configure AWS WAF) alone is a valid option, but integrating it with CloudFront (Option D) provides additional benefits like improved performance through caching.\n\nOption C (Set up API Gateway with CloudFront and configure AWS Shield in CloudFront) might provide DDoS protection, but for SQL injection and cross-site scripting, AWS WAF is the more appropriate service.","timestamp":"1719713340.0","comments":[{"timestamp":"1733996220.0","comment_id":"1325511","poster":"LeonSauveterre","upvote_count":"1","content":"In questions like this that mentioned \"operationally efficient\" or \"operationally effective\", aim for the indicated jobs only. We don't need additional benefits, so CloudFront is not a necessity here."}],"poster":"Naijaboy99","upvote_count":"5","comment_id":"1109392"},{"poster":"TariqKipkemei","upvote_count":"4","comment_id":"1083280","content":"Selected Answer: B\nSQL injection and cross-site scripting attacks = AWS WAF","timestamp":"1716964500.0"},{"upvote_count":"2","timestamp":"1715031180.0","poster":"potomac","content":"Selected Answer: B\nB or D\nBut no need for CloudFront","comment_id":"1064338"},{"poster":"Sugarbear_01","timestamp":"1714391040.0","upvote_count":"2","content":"Selected Answer: B\nAWS WAF protect agains :\nPresence of SQL code that is likely to be malicious (known as SQL injection).\nPresence of a script that is likely to be malicious (known as cross-site scripting).\n\nAWS Shield provides protection against distributed denial of service (DDoS) attacks for AWS resources, at the network and transport layers (layer 3 and 4) and the application layer (layer 7).\n\nhttps://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html","comment_id":"1056849"},{"content":"Finally, I am here at the end. Thank you guys for your support!","comment_id":"1050822","poster":"thanhnv142","timestamp":"1713800820.0","upvote_count":"5"},{"content":"Selected Answer: B\nB. Configure AWS WAF.","comment_id":"1015254","upvote_count":"5","timestamp":"1711228200.0","poster":"Guru4Cloud"},{"timestamp":"1711122060.0","poster":"aleariva","content":"B is the correct. https://docs.aws.amazon.com/waf/latest/developerguide/classic-web-acl-xss-conditions.html","comment_id":"1014154","upvote_count":"5"}],"isMC":true,"question_id":603,"choices":{"D":"Set up API Gateway with an Amazon CloudFront distribution. Configure AWS WAF in CloudFront.","A":"Configure AWS Shield.","B":"Configure AWS WAF.","C":"Set up API Gateway with an Amazon CloudFront distribution. Configure AWS Shield in CloudFront."},"answer_description":"","answer_ET":"B","answers_community":["B (88%)","13%"],"timestamp":"2023-09-22 13:14:00","answer_images":[],"answer":"B","topic":"1","question_text":"A company uses Amazon API Gateway to manage its REST APIs that third-party service providers access. The company must protect the REST APIs from SQL injection and cross-site scripting attacks.\n\nWhat is the MOST operationally efficient solution that meets these requirements?","url":"https://www.examtopics.com/discussions/amazon/view/121172-exam-aws-certified-solutions-architect-associate-saa-c03/","unix_timestamp":1695381240,"question_images":[]},{"id":"z6yehlNxwlM0tPIfIrpt","exam_id":31,"choices":{"B":"Use Amazon Cognito with an Active Directory user pool. Create roles with the appropriate policies attached.","C":"Define cross-account roles with the appropriate policies attached. Map the roles to the Active Directory groups.","A":"Create an IAM user for each user in the company. Attach the appropriate policies to each user.","D":"Configure Security Assertion Markup Language (SAML) 2 0-based federation. Create roles with the appropriate policies attached Map the roles to the Active Directory groups."},"timestamp":"2023-11-04 08:23:00","answer_images":[],"answer_description":"","answer":"D","question_text":"A company wants to provide users with access to AWS resources. The company has 1,500 users and manages their access to on-premises resources through Active Directory user groups on the corporate network. However, the company does not want users to have to maintain another identity to access the resources. A solutions architect must manage user access to the AWS resources while preserving access to the on-premises resources.\n\nWhat should the solutions architect do to meet these requirements?","discussion":[{"upvote_count":"11","poster":"pentium75","comment_id":"1111911","content":"Selected Answer: D\nThough you can federate Cognito with Active Directory, Cognito is for providing access to your own applications, NOT to AWS Resources.","timestamp":"1719918660.0"},{"timestamp":"1721073660.0","upvote_count":"8","poster":"tsdsmth","content":"Selected Answer: D\nWhile Amazon Cognito can integrate with Active Directory, it is more focused on providing identity management for mobile and web applications. In this scenario, where the primary concern is integrating with existing on-premises resources, using SAML-based federation with IAM roles is more appropriate.","comment_id":"1123726"},{"comment_id":"1332628","upvote_count":"1","content":"Selected Answer: D\nhttps://aws.amazon.com/blogs/security/aws-federated-authentication-with-active-directory-federation-services-ad-fs/\nB is wrong because user pool is in Cognito not in Active Directory\nhttps://aws.amazon.com/blogs/security/how-to-set-up-amazon-cognito-for-federated-authentication-using-azure-ad/","timestamp":"1735334760.0","poster":"Salilgen"},{"comment_id":"1108451","timestamp":"1719640140.0","content":"Selected Answer: B\nwhy its not b?","upvote_count":"2","poster":"sangavi_vijay"},{"upvote_count":"5","poster":"TariqKipkemei","comment_id":"1083292","timestamp":"1716965700.0","content":"Selected Answer: D\nUse Amazon Cognito via SAML integration. (SAML) is an open federation standard that allows an identity provider (for this case on-prem AD) to authenticate users and pass identity and security information about them to a service provider (for this case AWS).\n\nI will settle for D, because this is definitely required for this to work."},{"comment_id":"1066877","poster":"NickGordon","upvote_count":"3","timestamp":"1715298900.0","content":"Selected Answer: D\nD. \n\nAn Amazon Cognito user pool is a user directory for WEB and MOBILE app authentication and authorization. So it is not a best option for corporate users."},{"content":"Selected Answer: D\nI think it is D","timestamp":"1715033040.0","poster":"potomac","upvote_count":"2","comment_id":"1064353"},{"comments":[{"comment_id":"1111910","content":"Cognito is for app users, to authenticate users accessing your apps. Cognito is NOT for granting access to AWS resources.","timestamp":"1719918600.0","upvote_count":"3","poster":"pentium75"}],"poster":"ahlofan","content":"Selected Answer: B\nAccess to Aws resource -> cognito, then use iam role \nSAML or AD -> identity pool","upvote_count":"2","comment_id":"1062716","timestamp":"1714890540.0"},{"comment_id":"1061945","upvote_count":"2","poster":"dilaaziz","content":"Selected Answer: D\nhttps://aws.amazon.com/identity/saml/","timestamp":"1714800180.0"}],"unix_timestamp":1699082580,"isMC":true,"question_images":[],"question_id":604,"answer_ET":"D","topic":"1","answers_community":["D (89%)","11%"],"url":"https://www.examtopics.com/discussions/amazon/view/125336-exam-aws-certified-solutions-architect-associate-saa-c03/"},{"id":"jLGoM8vneHj4BVwYfE5R","answers_community":["C (77%)","A (23%)"],"answer_ET":"C","answer_images":[],"timestamp":"2023-11-04 08:27:00","url":"https://www.examtopics.com/discussions/amazon/view/125337-exam-aws-certified-solutions-architect-associate-saa-c03/","topic":"1","unix_timestamp":1699082820,"discussion":[{"timestamp":"1699315860.0","comments":[{"content":"\"Restrict the geographic distribution of your content\nYou can use geographic restrictions, sometimes known as geo blocking, to prevent users in specific geographic locations from accessing content that you're distributing through an Amazon CloudFront distribution.\"\n\nhttps://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/georestrictions.html","poster":"MatAlves","comments":[{"upvote_count":"1","comment_id":"1284965","timestamp":"1726528620.0","content":"\"Violation to distribution rights\" is something you want to handle seriously by actually blocking the access. This can only be accomplished by \"OPTION A\".","poster":"MatAlves"}],"upvote_count":"2","timestamp":"1726528560.0","comment_id":"1284963"},{"upvote_count":"1","comment_id":"1269820","timestamp":"1724214360.0","content":"They're not talking about detail like your case","poster":"loverduck"},{"poster":"pentium75","comment_id":"1111921","upvote_count":"4","content":"DNS routing can be easily bypassed, and just routing traffic from different countries to different endpoints does still not restrict what each country can see. It's clearly A.","timestamp":"1704201480.0"}],"upvote_count":"14","poster":"potomac","comment_id":"1064357","content":"Selected Answer: C\nGeolocation routing policy — Use when you want to route traffic based on the location of users. \n\nGeo-proximity routing policy — Use when you want to route traffic based on the location of your resources and optionally switch resource traffic at one location to resources elsewhere."},{"timestamp":"1705784340.0","content":"Selected Answer: C\n\"You can also use geolocation routing to restrict distribution of content to only the locations in which you have distribution rights\"\nLink: https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html","upvote_count":"8","comment_id":"1127508","poster":"upliftinghut"},{"content":"Selected Answer: C\nA is incorrect, what is config cloudfront with waf? should be WAF geo match statement only","upvote_count":"1","comment_id":"1329486","poster":"EllenLiu","timestamp":"1734703020.0"},{"poster":"bujuman","comment_id":"1307818","content":"Selected Answer: C\nWhen you use geolocation routing, you can localize your content and present some or all of your website in the language of your users. You can also use geolocation routing to restrict distribution of content to only the locations in which you have distribution rights. Another possible use is for balancing load across endpoints in a predictable, easy-to-manage way, so that each user location is consistently routed to the same endpoint.","upvote_count":"2","timestamp":"1730895420.0"},{"poster":"MatAlves","comments":[{"content":"Agreed","upvote_count":"1","comment_id":"1317327","poster":"JA2018","timestamp":"1732509660.0"}],"upvote_count":"2","content":"Actually, it also says: \n\n\"You can also use geolocation routing to restrict distribution of content to only the locations in which you have distribution rights.\"\n\nIt can be either C or A, but C seems to address the question wording better.","comment_id":"1284968","timestamp":"1726528740.0"},{"upvote_count":"2","timestamp":"1723663140.0","comment_id":"1265948","content":"Selected Answer: C\nCheck line 6 on this documentation.\n...You can also use geolocation routing to restrict distribution of content to only the locations in which you have distribution rights.\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html","poster":"Johnoppong101"},{"comment_id":"1235679","timestamp":"1719112680.0","poster":"Lin878","content":"Selected Answer: A\nRoute 53 can only restrict for geolocation users in this case, it's not for contents. I vote for \"A\".","upvote_count":"2"},{"comment_id":"1223317","upvote_count":"1","poster":"FZBianco","content":"Answer is A.","timestamp":"1717371540.0"},{"comment_id":"1172191","timestamp":"1710295020.0","upvote_count":"1","poster":"xBUGx","content":"Selected Answer: A\nI vote for A"},{"upvote_count":"4","content":"Selected Answer: C\n. Configure Amazon Route 53 with a geolocation policy.\n\nBy configuring Amazon Route 53 with a geolocation policy, the solutions architect can direct users to different Application Load Balancers based on their geographical location. This allows the company to serve the correct content to users in different regions without violating distribution rights. Geolocation routing policies enable you to route traffic based on the geographic location of your users, ensuring that users are directed to the nearest or most appropriate endpoint based on their location. This solution is suitable for scenarios where content distribution rights vary by region and need to be enforced accordingly.","comment_id":"1163647","timestamp":"1709314620.0","poster":"Ravan"},{"upvote_count":"1","content":"Selected Answer: A\nI think it's A","timestamp":"1709119320.0","comment_id":"1161555","poster":"Pics00094"},{"poster":"awsgeek75","comments":[{"upvote_count":"2","timestamp":"1705747440.0","content":"WAF for geo filtering can be configured like this:\nhttps://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-geo-match.html\n\nHow CloudFront integrates with your WAF rules:\nhttps://docs.aws.amazon.com/waf/latest/developerguide/cloudfront-features.html","comment_id":"1127204","poster":"awsgeek75"}],"comment_id":"1120826","upvote_count":"1","content":"Selected Answer: A\nWAF for filtering web traffic based on rules. In this case it may be IP address, geolocation, region. CloudFront for global distribution.\n\nB: Just balances and does not filter\nCD: Connects the user to the NEAREST server which is not same as AUTHORISED content","timestamp":"1705068480.0"},{"content":"Selected Answer: A\ndistributions + restriction of content deleivery target = A","timestamp":"1704765180.0","comment_id":"1117151","upvote_count":"1","poster":"Marco_St"},{"timestamp":"1704201300.0","poster":"pentium75","upvote_count":"3","comment_id":"1111917","content":"Selected Answer: A\nWe want to restrict access by country. People in Spain are allowed to access certain content while people in Portugal are not. A Route 53 geolocation policy that returns the \"nearest\" endpoint will not help, because a) the \"nearest\" endpoint could be identical for multiple countries with different distribution rights and b) it could easily be bypassed.","comments":[{"comment_id":"1332633","upvote_count":"1","content":"A doesn't talk about geographic restrictions","timestamp":"1735335480.0","poster":"Salilgen"}]},{"upvote_count":"1","timestamp":"1703684880.0","comment_id":"1106864","comments":[{"upvote_count":"2","poster":"pentium75","timestamp":"1704201420.0","content":"Edit: Even though you can specify DNS targets by country, this will not help.","comment_id":"1111919"}],"poster":"master9","content":"Selected Answer: A\nAWS CloudFront supports geographic restrictions, also known as geo-blocking, which can be used to control the distribution of your content based on the geographic location of your viewers.\n\nYou can use the CloudFront geographic restrictions feature to either grant permission to your users to access your content only if they’re in one of the approved countries on your allowlist, or prevent your users from accessing your content if they’re in one of the banned countries on your denylist.\n\nFor example, if a request comes from a country where you are not authorized to distribute your content, you can use CloudFront geographic restrictions to block the request."},{"content":"Selected Answer: C\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geo.html","timestamp":"1702555320.0","upvote_count":"4","comment_id":"1096440","poster":"Murtadhaceit"},{"comment_id":"1087619","upvote_count":"1","timestamp":"1701691560.0","poster":"ekisako","content":"Selected Answer: A\nhttps://repost.aws/knowledge-center/cloudfront-geo-restriction"},{"timestamp":"1701340440.0","comments":[],"poster":"TariqKipkemei","upvote_count":"2","comment_id":"1084244","content":"Selected Answer: C\nUse Geolocation routing policy to route traffic based on the location of the users."},{"poster":"LemonGremlin","upvote_count":"2","content":"It is C","comment_id":"1070946","timestamp":"1700005860.0"},{"content":"C. Configure Amazon Route 53 with a geolocation policy","upvote_count":"3","poster":"shihabnoori","comment_id":"1064464","timestamp":"1699328160.0"},{"comment_id":"1061946","timestamp":"1699082820.0","content":"Selected Answer: C\nhttps://aws.amazon.com/about-aws/whats-new/2014/07/31/amazon-route-53-announces-domain-name-registration-geo-routing-and-lower-pricing/","upvote_count":"3","comments":[],"poster":"dilaaziz"}],"exam_id":31,"question_text":"A company is hosting a website behind multiple Application Load Balancers. The company has different distribution rights for its content around the world. A solutions architect needs to ensure that users are served the correct content without violating distribution rights.\n\nWhich configuration should the solutions architect choose to meet these requirements?","question_images":[],"answer_description":"","choices":{"C":"Configure Amazon Route 53 with a geolocation policy","D":"Configure Amazon Route 53 with a geoproximity routing policy","A":"Configure Amazon CloudFront with AWS WAF.","B":"Configure Application Load Balancers with AWS WAF"},"isMC":true,"question_id":605,"answer":"C"}],"exam":{"isImplemented":true,"numberOfQuestions":1019,"isMCOnly":true,"id":31,"name":"AWS Certified Solutions Architect - Associate SAA-C03","isBeta":false,"provider":"Amazon","lastUpdated":"11 Apr 2025"},"currentPage":121},"__N_SSP":true}