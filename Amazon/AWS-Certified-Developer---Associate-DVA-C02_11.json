{"pageProps":{"questions":[{"id":"MRdvhDeLfnrCagOuYhSu","answer":"B","isMC":true,"answers_community":["B (90%)","10%"],"choices":{"D":"Enable server-side encryption on the S3 bucket for data protection against the non-paying website visitors.","A":"Apply a bucket policy that allows anonymous users to download the content from the S3 bucket.","C":"Add a bucket policy that requires multi-factor authentication for requests to access the S3 bucket objects.","B":"Generate a pre-signed object URL for the premier content file when a paid subscriber requests a download."},"question_text":"A company has an Amazon S3 bucket containing premier content that it intends to make available to only paid subscribers of its website. The S3 bucket currently has default permissions of all objects being private to prevent inadvertent exposure of the premier content to non-paying website visitors.\n\nHow can the company limit the ability to download a premier content file in the S3 bucket to paid subscribers only?","answer_ET":"B","answer_images":[],"question_id":51,"exam_id":24,"topic":"1","discussion":[{"comment_id":"1253521","upvote_count":"1","timestamp":"1721723580.0","content":"Selected Answer: C\nThe answer is NOT B.\n\nThe question states \"limit the ABILITY TO DOWNLOAD a file in the S3 bucket to PAID SUBS ONLY\"\n\nIf you choose B, it means that a paid sub can request the URL and then SHARE IT with non-paying customers. This will mean non-paying customers can DOWNLOAD the file using the URL.\n\nThe answer should be C - this enforces the user who downloads the file is a paying customer.","poster":"BrainFried"},{"timestamp":"1716428040.0","comment_id":"1216148","upvote_count":"2","content":"Selected Answer: B\nB is the correct answer.","poster":"65703c1"},{"content":"Selected Answer: B\nB. Generate a pre-signed object URL for the premier content file when a paid subscriber requests a download: This is the most appropriate solution. A pre-signed URL grants temporary access to a private object stored in S3. The URL can be generated programmatically, and its validity can be limited to a short duration. This approach allows only those who have been provided with the URL (paid subscribers, in this case) to download the specific content.","timestamp":"1705572720.0","comment_id":"1125716","upvote_count":"3","poster":"SerialiDr"},{"timestamp":"1696587900.0","upvote_count":"4","comment_id":"1026426","poster":"Digo30sp","content":"Selected Answer: B\nThe correct answer is (B).\n\nBy generating a pre-signed object URL for the main content file when a paid subscriber requests a download, the company can control who can download the file. The pre-signed object URL will be valid for a limited period of time and can only be used by the paid subscriber who requested the download."}],"timestamp":"2023-10-06 01:33:00","question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/122562-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_description":"","unix_timestamp":1696548780},{"id":"zoVE5BDNn0FQAo07y2ze","question_images":[],"answer_description":"","isMC":true,"exam_id":24,"unix_timestamp":1696548960,"discussion":[{"upvote_count":"1","timestamp":"1723074360.0","content":"Option B (Global Secondary Index with email_address as Partition Key):\nAdd a global secondary index (GSI) to the DynamoDB table.\nSet email_address as the partition key and customer_type as the sort key for the GSI.\nPerform a query operation on the GSI using the begins_with key condition expression with the email_address property.","poster":"Saurabh04","comment_id":"1262248"},{"content":"Selected Answer: A\nA is the correct answer.","comment_id":"1216149","poster":"65703c1","timestamp":"1716428160.0","upvote_count":"3"},{"timestamp":"1707399240.0","comment_id":"1144482","upvote_count":"3","content":"Selected Answer: A\nOnly global secondary indices can be added after a table has been created.","poster":"Examenee"},{"comment_id":"1125792","upvote_count":"1","content":"Selected Answer: A\nA. Add a global secondary index (GSI) to the DynamoDB table with customer_type as the partition key and email_address as the sort key. Perform a query operation on the GSI by using the begins_with key condition expression with the email_address property: This approach is correct. By creating a GSI with customer_type as the partition key and email_address as the sort key, the developer can efficiently query items based on customer_type. The begins_with condition can be applied to the sort key (email_address) in the GSI, allowing for searches that return partial matches.","timestamp":"1705578480.0","poster":"SerialiDr"},{"content":"Selected Answer: A\nA is correct","poster":"RamyaMunipala","timestamp":"1704828120.0","comment_id":"1117780","upvote_count":"1"},{"poster":"Jing2023","content":"A is correct","timestamp":"1697084100.0","comment_id":"1041347","upvote_count":"1"},{"content":"A\n\nAdd a global secondary index (GSI) to the DynamoDB table with customer_type as the partition key and email_address as the sort key. Perform a query operation on the GSI by using the begins_with key condition expression with the email_address property.","comment_id":"1026548","upvote_count":"2","poster":"Patel_ajay745","timestamp":"1696592040.0"},{"upvote_count":"4","content":"Selected Answer: A\nThe correct answer is (A).\n\nBy adding a global secondary index (GSI) to the DynamoDB table with customer_type as the partition key and email_address as the sort key, the developer can perform a query operation on the GSI using the Begins_with key condition expression with the email_address property. This will return partial matches of all email_address properties of a specific customer_type.","comment_id":"1026427","poster":"Digo30sp","timestamp":"1696588020.0"}],"timestamp":"2023-10-06 01:36:00","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/122563-exam-aws-certified-developer-associate-dva-c02-topic-1/","answers_community":["A (100%)"],"question_text":"A developer is creating an AWS Lambda function that searches for items from an Amazon DynamoDB table that contains customer contact information. The DynamoDB table items have the customerâ€™s email_address as the partition key and additional properties such as customer_type, name and job_title.\n\nThe Lambda function runs whenever a user types a new character into the customer_type text input. The developer wants the search to return partial matches of all the email_address property of a particular customer_type. The developer does not want to recreate the DynamoDB table.\n\nWhat should the developer do to meet these requirements?","question_id":52,"choices":{"A":"Add a global secondary index (GSI) to the DynamoDB table with customer_type as the partition key and email_address as the sort key. Perform a query operation on the GSI by using the begins_with key condition expression with the email_address property.","C":"Add a local secondary index (LSI) to the DynamoDB table with customer_type as the partition key and email_address as the sort key. Perform a query operation on the LSI by using the begins_with key condition expression with the email_address property.","D":"Add a local secondary index (LSI) to the DynamoDB table with job_title as the partition key and email_address as the sort key. Perform a query operation on the LSI by using the begins_with key condition expression with the email_address property.","B":"Add a global secondary index (GSI) to the DynamoDB table with email_address as the partition key and customer_type as the sort key. Perform a query operation on the GSI by using the begins_with key condition expression with the email_address property."},"answer":"A","answer_ET":"A","topic":"1"},{"id":"pQzLVkZg6QdpMtGub15L","url":"https://www.examtopics.com/discussions/amazon/view/122564-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_ET":"D","answer":"D","discussion":[{"upvote_count":"8","comment_id":"1026429","poster":"Digo30sp","timestamp":"1712399280.0","content":"Selected Answer: D\nThe correct answer is (D).\n\nThe sam sync --watch command will only deploy the Lambda functions that have changed. This command uses AWS SAM Accelerate to compare the local versions of your Lambda functions to the versions deployed in AWS. If there are differences, the command deploys only the changed Lambda functions."},{"upvote_count":"1","comment_id":"1216150","content":"Selected Answer: D\nD is the correct answer.","poster":"65703c1","timestamp":"1732333080.0"},{"timestamp":"1723938240.0","content":"Correct answer is B.\nTo deploy only the Lambda functions that have changed using AWS SAM Accelerate, the developer can use the sam deploy --no-execute-changeset command. This command will create an AWS CloudFormation change set without executing it, allowing the developer to preview the changes before deploying.","poster":"hayjaykay","upvote_count":"1","comment_id":"1152984"},{"content":"Selected Answer: D\nD. sam sync --watch: This command is a part of SAM Accelerate and is used for rapid iterative development. When run, it watches for changes in the source files of your Lambda functions and APIs and deploys only those changes, rather than redeploying the entire stack. This greatly speeds up the deployment process during development.\n\nTherefore, to implement AWS SAM Accelerate and only redeploy the Lambda functions that have changed, the developer should use sam sync --watch. This command aligns with the goal of deploying changes rapidly and efficiently, focusing only on the components that have been modified.","upvote_count":"1","poster":"SerialiDr","comment_id":"1125801","timestamp":"1721296800.0"},{"timestamp":"1712817360.0","comment_id":"1040250","upvote_count":"1","poster":"dilleman","content":"Selected Answer: D\nD is correct"}],"exam_id":24,"question_id":53,"answers_community":["D (100%)"],"answer_images":[],"isMC":true,"choices":{"A":"sam deploy --force-upload","D":"sam sync --watch","B":"sam deploy --no-execute-changeset","C":"sam package"},"topic":"1","timestamp":"2023-10-06 01:37:00","answer_description":"","question_images":[],"unix_timestamp":1696549020,"question_text":"A developer is building an application that uses AWS API Gateway APIs, AWS Lambda functions, and AWS DynamoDB tables. The developer uses the AWS Serverless Application Model (AWS SAM) to build and run serverless applications on AWS. Each time the developer pushes changes for only to the Lambda functions, all the artifacts in the application are rebuilt.\n\nThe developer wants to implement AWS SAM Accelerate by running a command to only redeploy the Lambda functions that have changed.\n\nWhich command will meet these requirements?"},{"id":"Q9zUHtB9E9d5v9V9zVOV","answer":"B","answers_community":["B (52%)","D (38%)","7%"],"choices":{"A":"Add an AWS Secrets Manager GenerateSecretString resource to the CloudFormation template. Set the value to reference new credentials for the CloudFormation resource.","B":"Use the AWS SDK ssm:PutParameter operation in the Lambda function from the existing custom resource to store the credentials as a parameter. Set the parameter value to reference the new credentials. Set the parameter type to SecureString.","C":"Add an AWS Systems Manager Parameter Store resource to the CloudFormation template. Set the CloudFormation resource value to reference the new credentials. Set the resource NoEcho attribute to true.","D":"Use the AWS SDK ssm:PutParameter operation in the Lambda function from the existing custom resource to store the credentials as a parameter. Set the parameter value to reference the new credentials. Set the parameter NoEcho attribute to true."},"url":"https://www.examtopics.com/discussions/amazon/view/122565-exam-aws-certified-developer-associate-dva-c02-topic-1/","discussion":[{"upvote_count":"17","timestamp":"1697088540.0","comment_id":"1041388","poster":"Jing2023","content":"Answer is B\nA is not correct as the requirement asked to store API credentials, GenerateSecretString will create a random string as password. \nC the API credential will be retrieved by the Lambda function, it is un-available to the template.\nD no echo is a attribute of cloud formation template."},{"poster":"Digo30sp","content":"Selected Answer: D\nThe correct answer is (D).\n\nSolution (D) is the most secure because it stores the API credentials in AWS Secrets Manager, which is a managed service that provides secure, policy-controlled storage for secrets. The parameter's NoEcho attribute prevents the parameter value from being displayed in the console or request history.","comment_id":"1026430","timestamp":"1696588140.0","upvote_count":"7"},{"comment_id":"1306892","timestamp":"1730716680.0","upvote_count":"1","content":"Selected Answer: B\nSecureString parameters are encrypted both when stored in the Parameter Store (at rest) and while being transmitted (in transit) using AWS KMS (Key Management Service). This means that even if someone were to gain unauthorized access to the Parameter Store's underlying storage, they wouldn't be able to easily read the parameter's value.","poster":"ShakthiGCP"},{"timestamp":"1721217600.0","poster":"Anandesh","comment_id":"1249570","upvote_count":"1","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html"},{"upvote_count":"1","comment_id":"1216151","timestamp":"1716428520.0","content":"Selected Answer: B\nB is the correct answer.","poster":"65703c1"},{"content":"Selected Answer: C\nI choose C, not choose A due to minimal cost\nI dont understand why most of you choose B","upvote_count":"2","poster":"Melisa202401","comment_id":"1190801","timestamp":"1712472240.0","comments":[{"upvote_count":"1","content":"NoEcho is not very secure compared to SecureString which encrypts the sensitive data at rest and transit.","poster":"ShakthiGCP","comment_id":"1306893","timestamp":"1730716860.0"}]},{"poster":"KarBiswa","content":"its B only\nhttps://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html#:~:text=You%20can%20also%20use%20SecureString%20parameters%20with%20other%20AWS%20services.%20In%20the%20following%20example%2C%20the%20Lambda%20function%20retrieves%20a%20SecureString%20parameter%20by%20using%20the%20GetParameters%20API.","timestamp":"1710648780.0","upvote_count":"2","comment_id":"1175578"},{"comment_id":"1158705","poster":"KarBiswa","upvote_count":"1","content":"Selected Answer: A\nI will got with A.\nBecausehttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html nullifying the B&D. Justifying A https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html","timestamp":"1708864920.0","comments":[{"content":"Reverting the Option to B","upvote_count":"1","poster":"KarBiswa","timestamp":"1710647760.0","comment_id":"1175569"}]},{"comment_id":"1154146","content":"Selected Answer: B\nThe solution that will meet the requirements is to use the AWS SDK ssm PutParameter operation in the Lambda function from the existing custom resource to store the credentials as a parameter. Set the parameter value to reference the new credentials. Set the parameter type to SecureString. This way, the developer can store the API credentials with minimal operational overhead, as AWS Systems Manager Parameter Store provides secure and scalable storage for configuration data. The SecureString parameter type encrypts the parameter value with AWS Key Management Service (AWS KMS). The other options either involve adding additional resources to the CloudFormation template, which increases complexity and cost, or do not encrypt the parameter value, which reduces security.","timestamp":"1708363260.0","poster":"KillThemWithKindness","upvote_count":"2"},{"content":"Selected Answer: B\nB. Use the AWS SDK ssm:PutParameter operation in the Lambda function from the existing custom resource to store the credentials as a parameter. Set the parameter value to reference the new credentials. Set the parameter type to SecureString: This is a secure and operationally efficient solution. AWS Systems Manager Parameter Store can securely store parameters as SecureString, which encrypts the parameter value. The ssm:PutParameter operation can be used within the Lambda function to store the credentials directly after retrieval, minimizing operational overhead.","poster":"SerialiDr","upvote_count":"1","timestamp":"1705579500.0","comment_id":"1125807"},{"comment_id":"1116089","upvote_count":"1","content":"Selected Answer: B\nAnswer is B","timestamp":"1704652440.0","poster":"Snape"},{"upvote_count":"1","comment_id":"1111185","poster":"rrshah83","timestamp":"1704115080.0","content":"Selected Answer: B\nnoecho is CF feature, not ssm param store"},{"poster":"Certified101","upvote_count":"2","comment_id":"1094934","content":"Selected Answer: B\nAgree with B - D will be stored in plain text, this is credentials so should be secure string","timestamp":"1702412760.0"},{"timestamp":"1700915400.0","upvote_count":"3","poster":"kaes","content":"Selected Answer: D\nANS: D \nNoEcho https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/82#issuecomment-517704282","comment_id":"1080000"},{"content":"ANS: D \nNoEcho https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/82#issuecomment-517704282","comment_id":"1079999","poster":"kaes","timestamp":"1700915340.0","upvote_count":"1"},{"content":"Is B the correct answer?\nSecureString isn't currently supported for AWS CloudFormation templates.\nhttps://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PutParameter.html","upvote_count":"2","poster":"ut18","timestamp":"1698186960.0","comment_id":"1053202"},{"comment_id":"1051693","timestamp":"1698055020.0","content":"Answer is A\nAWS Secrets Manager is specifically designed for securely storing sensitive information like API credentials, database passwords, and other secrets","poster":"Bolu_Jay","upvote_count":"5"},{"content":"Selected Answer: B\nI agree with Jing2023 answer","upvote_count":"2","poster":"Nagasoracle","timestamp":"1697646300.0","comment_id":"1047066"},{"content":"Selected Answer: B\nB should be correct since the type SecureString encrypts the value i think?","timestamp":"1696933380.0","upvote_count":"4","comment_id":"1039366","poster":"dilleman"}],"exam_id":24,"topic":"1","question_id":54,"question_text":"A developer is building an application that gives users the ability to view bank accounts from multiple sources in a single dashboard. The developer has automated the process to retrieve API credentials for these sources. The process invokes an AWS Lambda function that is associated with an AWS CloudFormation custom resource.\n\nThe developer wants a solution that will store the API credentials with minimal operational overhead.\n\nWhich solution will meet these requirements in the MOST secure way?","isMC":true,"answer_images":[],"answer_description":"","timestamp":"2023-10-06 01:37:00","answer_ET":"B","question_images":[],"unix_timestamp":1696549020},{"id":"iNHLui0CPy2LAe1snDc0","discussion":[{"comment_id":"1289246","timestamp":"1727315040.0","content":"Selected Answer: D\n{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n {\n \"Effect\": \"Allow\",\n \"Action\": \"dynamodb:GetItem\",\n \"Resource\": \"arn:aws:dynamodb:us-east-1:123456789012:table/demoman-table\"\n }\n ]\n}","upvote_count":"1","poster":"albert_kuo"},{"upvote_count":"1","comment_id":"1216153","timestamp":"1716428640.0","poster":"65703c1","content":"Selected Answer: D\nD is the correct answer."},{"upvote_count":"3","comment_id":"1041358","timestamp":"1697084820.0","poster":"Jing2023","content":"Selected Answer: D\nD is correct"},{"comment_id":"1040251","upvote_count":"1","timestamp":"1697006340.0","content":"Selected Answer: D\nD is correct","poster":"dilleman"},{"content":"Selected Answer: D\nThe correct answer is (D).\n\nThe command is correct and the demoman table exists. The most likely issue is that the IAM user does not have a policy associated with read access to the demoman table.\n\nTo resolve the issue, the developer must add a policy to the IAM user that grants read access to the demoman table.","timestamp":"1696588200.0","upvote_count":"4","poster":"Digo30sp","comment_id":"1026431"}],"isMC":true,"answers_community":["D (100%)"],"choices":{"B":"The developer needs to log a ticket with AWS Support to enable access to the demoman-table.","A":"The command is incorrect; it should be rewritten to use put-item with a string argument.","D":"The IAM user needs an associated policy with read access to demoman-table.","C":"Amazon DynamoDB cannot be accessed from the AWS CLI and needs to be called via the REST API."},"question_id":55,"unix_timestamp":1696549260,"exam_id":24,"url":"https://www.examtopics.com/discussions/amazon/view/122566-exam-aws-certified-developer-associate-dva-c02-topic-1/","timestamp":"2023-10-06 01:41:00","topic":"1","question_text":"A developer is trying to get data from an Amazon DynamoDB table called demoman-table. The developer configured the AWS CLI to use a specific IAM userâ€™s credentials and ran the following command:\n\naws dynamodb get-item --table-name demoman-table --key '{\"id\": {\"N\":\"1993\"}}'\n\nThe command returned errors and no rows were returned.\n\nWhat is the MOST likely cause of these issues?","answer_description":"","question_images":[],"answer_ET":"D","answer":"D","answer_images":[]}],"exam":{"isBeta":false,"isMCOnly":true,"numberOfQuestions":551,"lastUpdated":"11 Apr 2025","id":24,"provider":"Amazon","isImplemented":true,"name":"AWS Certified Developer - Associate DVA-C02"},"currentPage":11},"__N_SSP":true}