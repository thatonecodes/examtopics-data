{"pageProps":{"questions":[{"id":"tmjt4foKUvJNlgM7GJxD","answer":"A","question_id":226,"answer_ET":"A","url":"https://www.examtopics.com/discussions/amazon/view/134337-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_images":[],"timestamp":"2024-02-22 06:27:00","question_images":[],"question_text":"A developer is building a serverless application on AWS for a workflow that processes high volumes of data. In the workflow, an AWS Step Functions state machine invokes several AWS Lambda functions.\n\nOne of the Lambda functions occasionally fails because of timeout errors during periods of high demand. The developer must ensure that the workflow automatically retries the failed function invocation if a timeout error occurs.\n\nWhich solution will meet this requirement?","answers_community":["A (100%)"],"exam_id":24,"unix_timestamp":1708579620,"answer_description":"","discussion":[{"timestamp":"1710218880.0","comment_id":"1171430","poster":"KarBiswa","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#:~:text=Task%2C%20Parallel%2C%20and%20Map%20states%20can%20have%20a%20field%20named%20Retry%2C%20whose%20value%20must%20be%20an%20array%20of%20objects%20known%20as%20retriers.%20An%20individual%20retrier%20represents%20a%20certain%20number%20of%20retries%2C%20usually%20at%20increasing%20time%20intervals.","upvote_count":"5"},{"poster":"CrescentShared","comment_id":"1156145","timestamp":"1708579620.0","upvote_count":"5","content":"Selected Answer: A\nA is correct."},{"content":"Selected Answer: A\n{\n \"Type\": \"Task\",\n \"Resource\": \"arn:aws:lambda:region:account-id:function:function-name\",\n \"Retry\": [\n {\n \"ErrorEquals\": [\"States.Timeout\"],\n \"IntervalSeconds\": 2,\n \"MaxAttempts\": 3,\n \"BackoffRate\": 2.0\n }\n ],\n \"End\": true\n}","timestamp":"1727915580.0","comment_id":"1292566","poster":"albert_kuo","upvote_count":"1"},{"poster":"preachr","timestamp":"1727458200.0","upvote_count":"1","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/step-functions/latest/dg/concepts-error-handling.html#error-handling-examples","comment_id":"1290191"},{"timestamp":"1716558000.0","poster":"65703c1","content":"Selected Answer: A\nA is the correct answer.","upvote_count":"1","comment_id":"1217514"},{"comment_id":"1168785","content":"Selected Answer: A\nAWS Step Functions allows you to handle errors and automate retry policies directly within your state machine definition. By adding a Retry field to the state definition of the Lambda function within the Step Functions state machine, you can specify the error types for which retries should occur, including timeout errors. You can also configure the maximum number of retry attempts, the interval between retries, backoff rate, and more. This solution directly addresses the need for automatic retry in case of specific errors such as timeouts, making it an efficient way to enhance the resilience of serverless workflows.","poster":"SerialiDr","timestamp":"1709901780.0","upvote_count":"4"}],"choices":{"D":"Update the Step Functions state machine to pass the invocation request to an Amazon Simple Notification Service (Amazon SNS) topic. Subscribe a Lambda function to the SNS topic. Configure the Lambda function with the maximum number of retry attempts for a timeout error type.","A":"Add a Retry field in the Step Functions state machine definition. Configure the state machine with the maximum number of retry attempts and the timeout error type to retry on.","B":"Add a Timeout field in the Step Functions state machine definition. Configure the state machine with the maximum number of retry attempts.","C":"Add a Fail state to the Step Functions state machine definition. Configure the state machine with the maximum number of retry attempts."},"topic":"1","isMC":true},{"id":"BjX1H5O3eMb0K8ABTrRo","answer":"D","question_id":227,"url":"https://www.examtopics.com/discussions/amazon/view/134124-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_ET":"D","timestamp":"2024-02-18 10:39:00","answer_images":[],"question_images":[],"question_text":"A company runs a serverless application on AWS. The application includes an AWS Lambda function. The Lambda function processes data and stores the data in an Amazon RDS for PostgreSQL database. A developer created a user credentials in the database for the application.\n\nThe developer needs to use AWS Secrets Manager to manage the user credentials. The password must to be rotated on a regular basis. The solution needs to ensure that there is high availability and no downtime for the application during secret rotation.\n\nWhat should the developer do to meet these requirements?","answers_community":["D (69%)","B (31%)"],"exam_id":24,"unix_timestamp":1708249140,"answer_description":"","discussion":[{"content":"Selected Answer: D\nManaged rotation vs. automatic rotation:\nManaged rotation requires manual intervention to specify when a secret should be rotated. This doesn't meet the requirement of automated password rotation on a regular basis.\nAutomatic rotation automatically rotates secrets based on a defined schedule, meeting the requirement for regular password changes.\nSingle user vs. alternating users:\nSingle user rotation means there is only one set of credentials. Rotating this would cause downtime as the application needs to update its connection information.\nAlternating users rotation uses two sets of credentials. Only one is active at a time. When it's time to rotate, the inactive set is rotated, and then the application switches to using that set, avoiding downtime","upvote_count":"15","poster":"tgv","timestamp":"1708249140.0","comment_id":"1153155"},{"poster":"Arad","timestamp":"1736948040.0","upvote_count":"1","content":"Selected Answer: B\nB is the correct answer.\nD is wrong because automatic rotation requires the developer to write and manage custom rotation logic. Using managed rotation is simpler and more operationally efficient.","comment_id":"1341004"},{"timestamp":"1736534160.0","upvote_count":"1","poster":"bp07","comment_id":"1338920","content":"Selected Answer: B\n\"Automatic rotation\" is not a distinct concept in AWS Secrets Manager; rotation is always \"managed.\" This option likely refers to the alternating strategy but does not add clarity compared to managed rotation."},{"comment_id":"1266233","upvote_count":"1","content":"Selected Answer: B\nAutomatic rotation does not address the high availability requirement. If the rotation process causes downtime, it could impact our application's stability","timestamp":"1723699800.0","poster":"Saurabh04","comments":[{"upvote_count":"1","timestamp":"1727916480.0","comment_id":"1292577","content":"\"managed rotation\" is not the correct terminology in AWS Secrets Manager","poster":"albert_kuo"}]},{"timestamp":"1721974380.0","comments":[],"upvote_count":"1","content":"Selected Answer: B\nB. Configure managed rotation with the alternating users rotation strategy.","poster":"albert_kuo","comment_id":"1255504"},{"timestamp":"1716558180.0","poster":"65703c1","upvote_count":"1","content":"Selected Answer: D\nD is the correct answer.","comment_id":"1217518"},{"upvote_count":"2","comment_id":"1168964","timestamp":"1709916600.0","poster":"Abdullah22","content":"Selected Answer: D\nAutomatic Rotation\n\nWe strongly recommend that you use automatic rotation instead of managed rotation. Automatic rotation simplifies the rotation process and offers several advantages over managed rotation, including:\n\nIt eliminates the need to create and manage Lambda functions to update the secret in AWS Secrets Manager or the database.\nIt supports the alternating users rotation strategy, which is no longer supported for managed rotation.\n(Source: AWS Secrets Manager documentation: https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html)"},{"poster":"SerialiDr","content":"Selected Answer: B\nUsing AWS Secrets Manager's managed rotation with the alternating users rotation strategy is ideal for databases like Amazon RDS for PostgreSQL. This strategy involves creating a second user in the database with the same permissions as the original user. During rotation, Secrets Manager switches between these two users, updating the credentials for the inactive user and then making it the active user for subsequent connections. This approach minimizes the risk of downtime because the application can continue to use the currently active credentials while the other set is being rotated. It also ensures that credentials are regularly updated, enhancing security without disrupting database access.","upvote_count":"2","comment_id":"1168793","timestamp":"1709902740.0"},{"content":"Selected Answer: D\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/tutorials_rotation-alternating.html#:~:text=This%20strategy%20is%20a%20good%20choice%20if%20you%20need%20high%20availability%20for%20your%20secret%2C%20because%20one%20of%20the%20alternating%20users%20has%20current%20credentials%20to%20the%20database%20while%20the%20other%20one%20is%20being%20updated.%20For%20more","comment_id":"1164882","poster":"KarBiswa","upvote_count":"2","timestamp":"1709479260.0"},{"poster":"CrescentShared","comment_id":"1156147","upvote_count":"3","content":"Selected Answer: B\nBoth B and D options involve using the alternating users rotation strategy, which is suitable for ensuring high availability and no downtime during secret rotation. The difference between \"managed rotation\" and \"automatic rotation\" is mostly semantic in this context, as both terms refer to the capability of AWS Secrets Manager to automatically rotate the secret. The more common terminology used in the context of AWS Secrets Manager is \"managed rotation,\" so option B is often preferred.","timestamp":"1708580280.0"}],"choices":{"D":"Configure automatic rotation with the alternating users rotation strategy.","C":"Configure automatic rotation with the single user rotation strategy.","A":"Configure managed rotation with the single user rotation strategy.","B":"Configure managed rotation with the alternating users rotation strategy."},"topic":"1","isMC":true},{"id":"iHEo4Bk3u2szYdMVbv2S","isMC":true,"answer":"C","answers_community":["C (70%)","A (30%)"],"answer_images":[],"answer_ET":"C","question_text":"A company runs an application on AWS. The application consists of a static website that is hosted on Amazon S3. The application includes Amazon API Gateway APIs that invoke AWS Lambda functions. During a period of high traffic on the application, application users reported that the application was slow at irregular intervals. There were no failed requests.\n\nA developer needs to find the slow executions across all the Lambda functions.\n\nWhich solution will meet these requirements?","answer_description":"","unix_timestamp":1708581240,"timestamp":"2024-02-22 06:54:00","exam_id":24,"choices":{"A":"Perform a query across all the Lambda function log groups by using Amazon CloudWatch Logs Insights. Filter on type of report and sort descending by Lambda function execution duration.","B":"Enable AWS CloudTrail Insights on the account where the Lambda functions are running. After CloudTrail Insights has finished processing, review CloudTrail Insights to find the anomalous functions.","D":"Set up AWS Glue to crawl through the logs in Amazon CloudWatch Logs for the Lambda functions. Configure an AWS Glue job to transform the logs into a structured format and to output the logs into Amazon S3. Use the Amazon CloudWatch dashboard to visualize the slowest functions based on the duration.","C":"Enable AWS X-Ray for all the Lambda functions. Configure an X-Ray insight on a new group that includes all the Lambda functions. After the X-Ray insight has finished processing, review the X-Ray logs."},"url":"https://www.examtopics.com/discussions/amazon/view/134339-exam-aws-certified-developer-associate-dva-c02-topic-1/","question_id":228,"topic":"1","question_images":[],"discussion":[{"upvote_count":"6","poster":"monishvster","comment_id":"1162076","content":"Selected Answer: C\nX-ray will provide better insights for performance","timestamp":"1709165760.0"},{"upvote_count":"1","content":"Selected Answer: C\nX-Ray for performance","timestamp":"1732154880.0","comment_id":"1315605","poster":"ShakthiGCP"},{"upvote_count":"2","poster":"BrainFried","content":"Selected Answer: A\nI think the answer is A\n\nThe goal is to analysis past executions of the Lambda functions, to isolate and identity the slow Lambda functions. This can be done with option A. \n\nOption D does not retroactively analyse past executions of Lambda functions - therefore it's not as effective as option A ~~","comment_id":"1264646","timestamp":"1723466160.0"},{"upvote_count":"1","poster":"65703c1","comment_id":"1217528","content":"Selected Answer: C\nC is the correct answer.","timestamp":"1716558660.0"},{"upvote_count":"4","timestamp":"1710219600.0","poster":"KarBiswa","comment_id":"1171439","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/lambda/latest/operatorguide/general-approach.html#:~:text=Use%20X%2DRay%20to%20find%20all%20the%20services%20involved%20in%20a%20request.%20For%20larger%20serverless%20applications%2C%20this%20is%20the%20fastest%20way%20to%20locate%20all%20of%20the%20interactions%20involved%20in%20the%20request.%20From%20X%2DRay%2C%20isolate%20the%20service%20where%20latency%20or%20errors%20are%20occurring%20then%20drill%20down%20further. It clearly an interaction issues among the services no failure has occurred"},{"poster":"Abdullah22","timestamp":"1709917260.0","content":"Selected Answer: C\nnot sure between A and C but going with C.","comment_id":"1168972","upvote_count":"2"},{"timestamp":"1709903760.0","upvote_count":"2","comments":[],"content":"Selected Answer: A\nA. Perform a query across all the Lambda function log groups by using Amazon CloudWatch Logs Insights. Filter on type of report and sort descending by Lambda function execution duration.\n\nHere's why this approach is most efficient:\n\nCentralized Logs: CloudWatch Logs Insights allows you to query logs across all your Lambda function log groups in a single location.\nTargeted Filtering: You can filter the query to focus on specific time periods of high traffic, pinpointing anomalies during those times.\nSorting by Duration: By sorting the results descending by execution duration, you can easily identify Lambda functions with the slowest execution times.\nFast Insights: CloudWatch Logs Insights offers near real-time analysis, enabling you to quickly identify performance bottlenecks.","comment_id":"1168815","poster":"SerialiDr"},{"upvote_count":"2","comment_id":"1156155","timestamp":"1708581240.0","poster":"CrescentShared","content":"Selected Answer: A\nHesitate. A or C?"}]},{"id":"bXj4bHjm4WmY1ZJIekqw","isMC":true,"answer_ET":"A","unix_timestamp":1708581600,"discussion":[{"upvote_count":"6","poster":"SerialiDr","content":"Selected Answer: A\nThis approach allows for easy management of multiple environments within the same AWS infrastructure. API Gateway stage variables can be used to manage configurations that differ between environments, such as endpoint URLs or configuration settings. Similarly, Lambda aliases can point to different versions of Lambda functions, making it possible to deploy different versions of the codebase to different environments (e.g., development, test, production) without duplicating the code. This solution is both efficient and scalable, enabling quick updates and minimal overhead in managing environment-specific configurations.","comment_id":"1168819","timestamp":"1725794340.0"},{"poster":"65703c1","upvote_count":"1","timestamp":"1732463580.0","content":"Selected Answer: A\nA is the correct answer.","comment_id":"1217531"},{"comment_id":"1168976","upvote_count":"4","poster":"Abdullah22","timestamp":"1725807840.0","content":"Selected Answer: A\ngoing with A"},{"upvote_count":"4","content":"Selected Answer: A\nD: not for serverless.","timestamp":"1724299200.0","comment_id":"1156158","poster":"CrescentShared"}],"exam_id":24,"question_images":[],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/134340-exam-aws-certified-developer-associate-dva-c02-topic-1/","choices":{"C":"Duplicate the code for each environment. Deploy the code to a separate API Gateway stage.","B":"Use Amazon Elastic Container Service (Amazon ECS) to deploy the application to the environments.","A":"Use API Gateway stage variables and create Lambda aliases to reference environment-specific resources.","D":"Use AWS Elastic Beanstalk to deploy the application to the environments."},"answer":"A","timestamp":"2024-02-22 07:00:00","question_text":"A company is building a serverless application on AWS. The application uses Amazon API Gateway and AWS Lambda. The company wants to deploy the application to its development, test, and production environments.\n\nWhich solution will meet these requirements with the LEAST development effort?","topic":"1","question_id":229,"answers_community":["A (100%)"],"answer_images":[]},{"id":"sA7tOMbPAH73if92XeML","isMC":true,"answer_ET":"A","unix_timestamp":1708582200,"discussion":[{"content":"Selected Answer: A\nResources:\n MyApi:\n Type: AWS::ApiGateway::RestApi\n Properties:\n Name: MyApi\n\n MyStateMachine:\n Type: AWS::StepFunctions::StateMachine\n Properties: \n DefinitionString: \n !Sub |\n {\n \"StartAt\": \"CallAPI\",\n \"States\": {\n \"CallAPI\": {\n \"Type\": \"Task\",\n \"Resource\": \"${ApiEndpoint}\",\n \"End\": true\n }\n }\n }\n DefinitionSubstitutions:\n ApiEndpoint: !Sub \"https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/prod\"\n RoleArn: arn:aws:iam::123456789012:role/service-role/MyStateMachineRole","poster":"albert_kuo","comment_id":"1292586","timestamp":"1727917860.0","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nThis approach is cost-effective","comment_id":"1266240","poster":"Saurabh04","timestamp":"1723700340.0"},{"poster":"jyrajan69","content":"Step Functions does not have a Definitions substitution property or feature, so that throws A out. The most cost effective has to be B","upvote_count":"1","comment_id":"1248774","timestamp":"1721119500.0"},{"content":"Selected Answer: A\nA is the correct answer.","comment_id":"1217536","poster":"65703c1","timestamp":"1716558960.0","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-stepfunctions-statemachine.html#:~:text=A%20map%20(string,key%2Dvalue%20map.","timestamp":"1710219960.0","comment_id":"1171444","poster":"KarBiswa"},{"timestamp":"1709918100.0","content":"Selected Answer: A\ngoing with A .","poster":"Abdullah22","upvote_count":"2","comment_id":"1168988"},{"upvote_count":"3","poster":"SerialiDr","content":"Selected Answer: A\nThis approach leverages CloudFormation's ability to dynamically substitute values within the definition of AWS resources. By using the DefinitionSubstitutions property for the AWS::StepFunctions::StateMachine resource, you can directly insert the API Gateway endpoint or other necessary parameters into the state machine's definition. This enables the state machine to reference the API Gateway API without hard-coding values, allowing for flexibility and reusability of the CloudFormation template across different deployments. It's also a cost-effective solution because it uses native CloudFormation capabilities without the need for additional resources or services.","comment_id":"1168826","timestamp":"1709904180.0"},{"poster":"CrescentShared","content":"Selected Answer: A\nThe other options (B, C, and D) involve using additional resources or services that are not necessary for this requirement and would therefore be less cost-effective.","upvote_count":"2","comment_id":"1156166","timestamp":"1708582200.0"}],"exam_id":24,"question_images":[],"answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/134341-exam-aws-certified-developer-associate-dva-c02-topic-1/","choices":{"C":"Configure the CloudFormation template to store the API endpoint in a standard AWS::SecretsManager::Secret resource. Configure the state machine to reference the resource.","A":"Configure the CloudFormation template to reference the API endpoint in the DefinitionSubstitutions property for the AWS::StepFunctions::StateMachine resource.","B":"Configure the CloudFormation template to store the API endpoint in an environment variable for the AWS::StepFunctions::StateMachine resource. Configure the state machine to reference the environment variable.","D":"Configure the CloudFormation template to store the API endpoint in a standard AWS::AppConfig::ConfigurationProfile resource. Configure the state machine to reference the resource."},"answer":"A","timestamp":"2024-02-22 07:10:00","question_text":"A developer uses AWS CloudFormation to deploy an Amazon API Gateway API and an AWS Step Functions state machine. The state machine must reference the API Gateway API after the CloudFormation template is deployed. The developer needs a solution that uses the state machine to reference the API Gateway endpoint.\n\nWhich solution will meet these requirements MOST cost-effectively?","topic":"1","question_id":230,"answers_community":["A (92%)","8%"],"answer_images":[]}],"exam":{"provider":"Amazon","isBeta":false,"isMCOnly":true,"id":24,"name":"AWS Certified Developer - Associate DVA-C02","isImplemented":true,"lastUpdated":"11 Apr 2025","numberOfQuestions":551},"currentPage":46},"__N_SSP":true}