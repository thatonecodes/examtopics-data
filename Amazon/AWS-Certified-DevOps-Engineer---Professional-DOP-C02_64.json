{"pageProps":{"questions":[{"id":"JpareXpoT0RwzNpKSKEi","answer_description":"","answer_ET":"B","exam_id":23,"question_text":"A company has enabled all features for its organization in AWS Organizations. The organization contains 10 AWS accounts. The company has turned on AWS CloudTrail in all the accounts. The company expects the number of AWS accounts in the organization to increase to 500 during the next year. The company plans to use multiple OUs for these accounts.\nThe company has enabled AWS Config in each existing AWS account in the organization. A DevOps engineer must implement a solution that enables AWS Config automatically for all future AWS accounts that are created in the organization.\nWhich solution will meet this requirement?","url":"https://www.examtopics.com/discussions/amazon/view/106258-exam-aws-certified-devops-engineer-professional-dop-c02/","unix_timestamp":1681568460,"choices":{"A":"In the organization's management account, create an Amazon EventBridge rule that reacts to a CreateAccount API call. Configure the rule to invoke an AWS Lambda function that enables trusted access to AWS Config for the organization.","C":"In the organization's management account, create an SCP that allows the appropriate AWS Config API calls to enable AWS Config. Apply the SCP to the root-level OU.","B":"In the organization's management account, create an AWS CloudFormation stack set to enable AWS Config. Configure the stack set to deploy automatically when an account is created through Organizations.","D":"In the organization's management account, create an Amazon EventBridge rule that reacts to a CreateAccount API call. Configure the rule to invoke an AWS Systems Manager Automation runbook to enable AWS Config for the account."},"discussion":[{"poster":"thanhnv142","content":"B is correct: The question ask a solution to \"enables AWS Config automatically\" for all future accounts. In AWS org, to provision or configure resources on other accounts, we use ACF\nA, C and D: no mention of ACF","upvote_count":"2","timestamp":"1722517800.0","comments":[{"upvote_count":"1","poster":"thanhnv142","content":"A: trusted access to AWS Config: this is used by other services to access to AWS config, not for account\nD: enable AWS Config for the account: this means we only activate AWS config for the management account, not the newly created ones","timestamp":"1722776160.0","comment_id":"1140276"}],"comment_id":"1137720"},{"content":"B:\nDetails the new feature with enable trusted access to new accounts in any region\nhttps://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-cloudformation.html","comment_id":"1063725","timestamp":"1714983300.0","upvote_count":"1","poster":"2pk"},{"timestamp":"1708581480.0","upvote_count":"1","poster":"hjey0329","comment_id":"987054","content":"B \nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-sampletemplates.html"},{"content":"Selected Answer: B\nB is the best solution.","timestamp":"1703150820.0","poster":"madperro","upvote_count":"1","comment_id":"929157"},{"comment_id":"903603","upvote_count":"2","content":"B\nhttps://aws.amazon.com/about-aws/whats-new/2020/02/aws-cloudformation-stacksets-introduces-automatic-deployments-across-accounts-and-regions-through-aws-organizations/","poster":"samgyeopsal","timestamp":"1700621880.0"},{"timestamp":"1698821640.0","poster":"haazybanj","content":"Selected Answer: B\nThe correct solution to enable AWS Config automatically for all future AWS accounts created in the organization is Option B: In the organization's management account, create an AWS CloudFormation stack set to enable AWS Config. Configure the stack set to deploy automatically when an account is created through Organizations.\n\nOption C is incorrect because although it suggests creating an SCP that allows the appropriate AWS Config API calls to enable AWS Config and applying the SCP to the root-level OU, it does not specifically enable AWS Config automatically for all future AWS accounts that are created in the organization.","comments":[{"comment_id":"1101097","content":"In terms of Option C: SCP can only Deny access, not Allow","timestamp":"1718837580.0","upvote_count":"3","poster":"Olelukoe"}],"upvote_count":"4","comment_id":"885878"},{"timestamp":"1697379660.0","content":"Selected Answer: B\nB is correct","poster":"alce2020","comment_id":"870983","upvote_count":"1"}],"answers_community":["B (100%)"],"answer":"B","question_id":316,"question_images":[],"answer_images":[],"timestamp":"2023-04-15 16:21:00","isMC":true,"topic":"1"},{"id":"YhOaJJrLz94zCIVG7NAm","unix_timestamp":1682917020,"discussion":[{"timestamp":"1698821820.0","comment_id":"885879","upvote_count":"11","poster":"haazybanj","content":"Selected Answer: D\nOption D is the best choice to meet the requirements of centralized control of source code, a consistent and automatic delivery pipeline, and minimal maintenance tasks.\nOption D is the best choice because it allows each application to have its own repository and build process, but uses containerization to create a consistent and automatic delivery pipeline that can be easily deployed to Amazon ECS on infrastructure that AWS Fargate manages. This approach also provides scalability and ease of maintenance."},{"timestamp":"1722518160.0","upvote_count":"1","comment_id":"1137726","poster":"thanhnv142","content":"D is correct: \"centralized control of source code\" = CodeCommit. \"Consistent and automatic delivery pipeline\" = codepipeline/codebuide/codedeploy. \"as few maintenance tasks as possible on the underlying infrastructur\" = containerization\nA: \"CodeCommit repository for all applications\": should not, need separate repos for each app\nB and C: no mention of containerization (fargate, ECS)"},{"content":"D is the Answer: https://aws.amazon.com/blogs/compute/building-deploying-and-operating-containerized-applications-with-aws-fargate/","upvote_count":"1","comment_id":"1023022","timestamp":"1712055240.0","poster":"DaddyDee"},{"timestamp":"1705928040.0","comments":[{"timestamp":"1720379820.0","content":"Of course no, it is the most wrong one, It saying to have all the applications code in one repo (bad thing to do), separated in branches, and after that merge them (second very bad thing to do).","comment_id":"1116172","upvote_count":"2","poster":"davdan99"}],"upvote_count":"1","comment_id":"959427","poster":"ddedqdqw","content":"Selected Answer: A\nA ISNT CORRECT?"},{"timestamp":"1703178780.0","comment_id":"929667","content":"Option D. \nI was torn between C and D, but the requirement for ease of maintenance on the underlying infrastructure clearly points to ECS.","poster":"RickSk","upvote_count":"3"},{"content":"Selected Answer: D\nD is the best option, there is virtually no infrastructure to manage.","poster":"madperro","timestamp":"1703151060.0","upvote_count":"1","comment_id":"929159"},{"comment_id":"896739","upvote_count":"1","content":"Selected Answer: D\nD is best option.","timestamp":"1699892460.0","poster":"ele"}],"choices":{"D":"Create one AWS CodeCommit repository for each of the applications. Use AWS CodeBuild to build one Docker image for each application in Amazon Elastic Container Registry (Amazon ECR). Use AWS CodeDeploy to deploy the applications to Amazon Elastic Container Service (Amazon ECS) on infrastructure that AWS Fargate manages.","B":"Create one AWS CodeCommit repository for each of the applications. Use AWS CodeBuild to build the applications one at a time. Use AWS CodeDeploy to deploy the applications to one centralized application server.","A":"Create one AWS CodeCommit repository for all applications. Put each application's code in a different branch. Merge the branches, and use AWS CodeBuild to build the applications. Use AWS CodeDeploy to deploy the applications to one centralized application server.","C":"Create one AWS CodeCommit repository for each of the applications. Use AWS CodeBuild to build the applications one at a time and to create one AMI for each server. Use AWS CloudFormation StackSets to automatically provision and decommission Amazon EC2 fleets by using these AMIs."},"url":"https://www.examtopics.com/discussions/amazon/view/108077-exam-aws-certified-devops-engineer-professional-dop-c02/","question_id":317,"answer_images":[],"exam_id":23,"isMC":true,"timestamp":"2023-05-01 06:57:00","question_images":[],"topic":"1","question_text":"A company has many applications. Different teams in the company developed the applications by using multiple languages and frameworks. The applications run on premises and on different servers with different operating systems. Each team has its own release protocol and process. The company wants to reduce the complexity of the release and maintenance of these applications.\nThe company is migrating its technology stacks, including these applications, to AWS. The company wants centralized control of source code, a consistent and automatic delivery pipeline, and as few maintenance tasks as possible on the underlying infrastructure.\nWhat should a DevOps engineer do to meet these requirements?","answer_ET":"D","answer":"D","answers_community":["D (93%)","7%"],"answer_description":""},{"id":"IDsy3hpnpr6m66HbxzD5","unix_timestamp":1681679520,"answer":"CDF","question_images":[],"exam_id":23,"choices":{"C":"Create new ALB and Auto Scaling group resources in the new Region and configure the new ALB to direct traffic to the new Auto Scaling group.","D":"Create Amazon Route 53 records, health checks, and latency-based routing policies to route to the ALB.","F":"Convert the DynamoDB table to a global table.","B":"Create new ALB and Auto Scaling group global resources and configure the new ALB to direct traffic to the new Auto Scaling group.","E":"Create Amazon Route 53 aliases, health checks, and failover routing policies to route to the ALB.","A":"Create a new DynamoDB table in the new Region with cross-Region replication enabled."},"answer_description":"","question_id":318,"topic":"1","discussion":[{"poster":"haazybanj","comment_id":"885880","content":"Selected Answer: CDF\nC. Create new ALB and Auto Scaling group resources in the new Region and configure the new ALB to direct traffic to the new Auto Scaling group. This will allow users in the new Region to access the application with lower latency by reducing the network hops between the user and the application servers.\n\nD. Create Amazon Route 53 records, health checks, and latency-based routing policies to route to the ALB. This will enable Route 53 to route user traffic to the nearest healthy ALB, based on the latency between the user and the ALBs.\n\nF. Convert the DynamoDB table to a global table. This will enable reads and writes to the table in both Regions with low latency, improving the overall response time of the application","timestamp":"1698822120.0","upvote_count":"10"},{"poster":"xdkonorek2","content":"Technically converting dynamodb table to global table requires creating replica in another region with cross-region replication and you don't \"convert\" you add a replica in \"global tables\" in specified region so this answers are a little bit misleading.\n\nProbably F is better than A since they name this operation as \"converting\" e.g. here https://aws.amazon.com/blogs/aws/new-convert-your-single-region-amazon-dynamodb-tables-to-global-tables/","comment_id":"1199494","timestamp":"1729494420.0","upvote_count":"2"},{"timestamp":"1722519300.0","poster":"thanhnv142","upvote_count":"1","comment_id":"1137739","content":"D is, of course, correct: <apply a core set of security controls to an existing set of AWS accounts> and <The accounts are in an organization in AWS Organizations> means we need ACF template to deploy these set of security controls. <Individual account administrators must not be able to edit or delete any of the baseline resources> means we need scp to deny permission\nA and B: no mention of SCP\nC: this option deploy the rules by AWS Config management account, which is not correct because we need ACF. Additionally, no mention of denying modification to CloudTrail trails"},{"poster":"thanhnv142","timestamp":"1722518820.0","content":"CDF: <opened a new office on a different continent> and <The users in the new office are experiencing high latency> means they need to replicate their existing site to the new region. <Amazon EC2 instances behind an Application Load Balancer (ALB)> means they need to replicate both these. <address the latency issues> means they need route53 with latency-based and health check\nA: <cross-Region replication> is used for backup only, not a live site. It would introduce a lot of latency\nB: <Auto Scaling group global resources>: there is no such thing\nE: No mention of latency-based.","comment_id":"1137732","upvote_count":"1"},{"comment_id":"1104435","upvote_count":"1","timestamp":"1719192240.0","content":"Selected Answer: CDF\nCDF very easy","poster":"z_inderjot"},{"content":"CDF is collect","poster":"IIIIIIIIIlllll","upvote_count":"1","timestamp":"1713874500.0","comment_id":"1051806"},{"timestamp":"1697490720.0","content":"Selected Answer: CDF\nC,D,F are correct","comment_id":"872191","poster":"alce2020","upvote_count":"2"}],"url":"https://www.examtopics.com/discussions/amazon/view/106444-exam-aws-certified-devops-engineer-professional-dop-c02/","isMC":true,"answer_ET":"CDF","question_text":"A company's application is currently deployed to a single AWS Region. Recently, the company opened a new office on a different continent. The users in the new office are experiencing high latency. The company's application runs on Amazon EC2 instances behind an Application Load Balancer (ALB) and uses Amazon DynamoDB as the database layer. The instances run in an EC2 Auto Scaling group across multiple Availability Zones. A DevOps engineer is tasked with minimizing application response times and improving availability for users in both Regions.\nWhich combination of actions should be taken to address the latency issues? (Choose three.)","answers_community":["CDF (100%)"],"timestamp":"2023-04-16 23:12:00","answer_images":[]},{"id":"HYekPj2RmeFhEh6Lcaiz","answer":"D","exam_id":23,"topic":"1","url":"https://www.examtopics.com/discussions/amazon/view/106219-exam-aws-certified-devops-engineer-professional-dop-c02/","timestamp":"2023-04-15 04:14:00","answer_ET":"D","answer_images":[],"unix_timestamp":1681524840,"choices":{"D":"Create an AWS CloudFormation template that defines the standard account resources. Deploy the template to all accounts from the organization's management account by using Cloud Formation StackSets Create an SCP that prevents updates or deletions to CloudTrail resources or AWS Config resources unless the principal is an administrator of the organization's management account.","B":"Enable AWS Control Tower. Enroll the existing accounts in AWS Control Tower. Grant the individual account administrators access to CloudTrail and AWS Config.","C":"Designate an AWS Config management account. Create AWS Config recorders in all accounts by using AWS CloudFormation StackSets. Deploy AWS Config rules to the organization by using the AWS Config management account. Create a CloudTrail organization trail in the organization’s management account. Deny modification or deletion of the AWS Config recorders by using an SCP.","A":"Create an AWS CloudFormation template that defines the standard account resources. Deploy the template to all accounts from the organization's management account by using CloudFormation StackSets. Set the stack policy to deny Update:Delete actions."},"answer_description":"","answers_community":["D (46%)","C (44%)","10%"],"question_images":[],"question_id":319,"question_text":"A DevOps engineer needs to apply a core set of security controls to an existing set of AWS accounts. The accounts are in an organization in AWS Organizations. Individual teams will administer individual accounts by using the AdministratorAccess AWS managed policy. For all accounts. AWS CloudTrail and AWS Config must be turned on in all available AWS Regions. Individual account administrators must not be able to edit or delete any of the baseline resources. However, individual account administrators must be able to edit or delete their own CloudTrail trails and AWS Config rules.\nWhich solution will meet these requirements in the MOST operationally efficient way?","isMC":true,"discussion":[{"comment_id":"885884","timestamp":"1682917620.0","comments":[{"comments":[{"upvote_count":"1","comment_id":"1096889","content":"C is good. \nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html","timestamp":"1702594320.0","poster":"bnagaraja9099"}],"content":"this solution lacks clarity on allowing individual account administrators control over their CloudTrail trails.","upvote_count":"4","timestamp":"1700630460.0","poster":"koenigParas2324","comment_id":"1076928"},{"upvote_count":"5","poster":"a1234321606","timestamp":"1700317740.0","comment_id":"1074061","content":"Why C? If you deny modification or deletion of the AWS Config recorders by using an SCP, how do individual account administrators edit or delete their own CloudTrail trails and AWS Config rules?"}],"content":"Selected Answer: C\nC\nThis solution meets the requirements in the most operationally efficient way. It uses AWS CloudFormation StackSets to deploy AWS Config recorders in all accounts and AWS Config rules to the organization, which can be centrally managed from an AWS Config management account. A CloudTrail organization trail can also be created in the organization’s management account to collect logs from all accounts. An SCP can be used to deny modification or deletion of the AWS Config recorders, ensuring that the baseline resources cannot be modified or deleted by individual account administrators. However, individual account administrators can still edit or delete their own CloudTrail trails and AWS Config rules.","poster":"haazybanj","upvote_count":"19"},{"upvote_count":"6","timestamp":"1708759320.0","comment_id":"1157707","content":"Selected Answer: B\nWhen Control Tower is enabled, AWS-GR_CLOUDTRAIL_ENABLED and AWS-GR_CONFIG_ENABLED will enable CloudTrail and Config in all available regions. The guardrails are automatically set to disallow changes to baseline resources.\n\nA, C, D - No mention about baseline resource.","poster":"dzn"},{"content":"Selected Answer: D\nFor the people fighting over Option C or D:\n\nOption D is a better choice because it deploys all the required baseline resources—both CloudTrail and AWS Config—across every account using CloudFormation StackSets, and then locks them down with an SCP. This setup makes sure that only the management account’s administrators can change or remove these core security controls. \nMeanwhile, individual account admins can still manage any extra CloudTrail trails or Config rules they create on their own. \n\nBut, Option C, mainly focuses on AWS Config recorders and doesn't clearly cover CloudTrail, so it does not offer us as complete a solution.","upvote_count":"2","comment_id":"1350892","poster":"lovekiller","timestamp":"1738589580.0"},{"content":"Selected Answer: D\nOption D:\n\nCreate an AWS CloudFormation Template: Develop a template that defines the standard resources, including CloudTrail and AWS Config, configured to operate in all available AWS Regions.\n\nDeploy Using CloudFormation StackSets: Utilize AWS CloudFormation StackSets from the organization's management account to deploy the template across all member accounts. This approach ensures consistent configuration and simplifies management.\n\nImplement a Service Control Policy (SCP): Establish an SCP that restricts updates or deletions of CloudTrail and AWS Config resources. This policy should allow only the organization's management account administrators to perform such actions, preventing individual account administrators from making unauthorized changes.","timestamp":"1735548720.0","comment_id":"1334000","poster":"Slays","upvote_count":"2"},{"poster":"youonebe","comment_id":"1329591","upvote_count":"2","content":"Selected Answer: D\nThis is the most operationally efficient solution. Using CloudFormation StackSets ensures standard resources are consistently deployed, and SCPs provide the necessary restrictions and flexibility.","timestamp":"1734716340.0"},{"timestamp":"1732490580.0","comment_id":"1317238","comments":[{"comment_id":"1317240","timestamp":"1732490700.0","upvote_count":"1","content":"moreover Principals are not supported in SCPs https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps_syntax.html#scp-syntax-unsupported","poster":"steli0"}],"content":"Selected Answer: C\nI think C because the SCP defines the principal being an administrator from the management account, not the individual account.","poster":"steli0","upvote_count":"1"},{"comment_id":"1315518","content":"D. CloudFormation StackSets + SCP with conditional permissions:\n\n Centralized deployment of resources\n SCP prevents modifications to core resources\n Allows admins to edit their own resources (by implication)\n Matches all requirements efficiently","poster":"BrusingWayne","timestamp":"1732138860.0","upvote_count":"3"},{"upvote_count":"4","timestamp":"1723705080.0","poster":"rk0509","comment_id":"1266275","content":"Selected Answer: D\nD is correct"},{"poster":"jamesf","comment_id":"1255530","content":"Selected Answer: C\nI think should be C\nKeywords: \"an existing set of AWS accounts\"","timestamp":"1721977560.0","upvote_count":"1"},{"content":"Selected Answer: D\nmust be D","poster":"trungtd","upvote_count":"2","timestamp":"1721109840.0","comment_id":"1248709"},{"comment_id":"1205444","timestamp":"1714645560.0","upvote_count":"1","poster":"seetpt","content":"Selected Answer: C\nI agree with C"},{"timestamp":"1711185600.0","comment_id":"1180742","upvote_count":"2","content":"Selected Answer: C\nOption C is the most operationally efficient and meets all the requirements: ensuring CloudTrail and AWS Config are enabled in all regions, preventing the deletion or editing of baseline resources by individual account administrators, while still allowing them the flexibility to manage their own specific resources. This approach uses centralized control mechanisms (AWS Config management account and organization trail for CloudTrail) and leverages SCPs for enforcement, aligning with best practices for security and governance in AWS Organizations.","poster":"Mordans"},{"comment_id":"1166529","upvote_count":"2","poster":"CloudHandsOn","timestamp":"1709648100.0","content":"Selected Answer: D\nIm going with D. SCPs is what helps us here","comments":[{"poster":"vn_thanhtung","timestamp":"1715043300.0","comment_id":"1207650","upvote_count":"1","content":"but SCP not support direct principal."}]},{"comment_id":"1164707","timestamp":"1709462520.0","upvote_count":"5","content":"Selected Answer: D\nD for me. \nI think C is incorrect because \"However, individual account administrators must be able to edit or delete their own CloudTrail trails and AWS Config rules.\" requirement is not satisfied because this answer has nothing about individual account administrators are able to edit their own CloudTrail trails. Organisational trail can be edited only from management or delegated administrator account.","poster":"vmahilevskyi"},{"content":"Selected Answer: C\nC for sure","timestamp":"1709175480.0","comment_id":"1162160","upvote_count":"2","poster":"[Removed]"},{"timestamp":"1707815220.0","content":"Selected Answer: D\nD is correct: This denies modifications to AWS config or cloudtrail unless the principal is the management account\nA: No explicitly mention of denying modifications to Config or cloudtrail\nB: No explicitly mention of denying modifications to Config or cloudtrail\nC: < Create a CloudTrail organization trail in the organization’s management account>: This means the deny rule only affects the management account","poster":"thanhnv142","upvote_count":"2","comment_id":"1149023"},{"content":"Selected Answer: D\nC is using AWS Config Recorder, AWS Config uses the configuration recorder to detect changes in your resource configurations and capture these changes as configuration items.\n\nIt is not used for prevent you doing something, it is detecting something","comment_id":"1145598","timestamp":"1707493080.0","upvote_count":"3","poster":"Chelseajcole"},{"upvote_count":"2","timestamp":"1707232080.0","comments":[{"comment_id":"1142833","content":"how many questions are there in DOP-C02. It says 217, but i dont see that many","timestamp":"1707262080.0","poster":"jilly","upvote_count":"1","comments":[{"poster":"Ramdi1","timestamp":"1707754980.0","upvote_count":"1","comment_id":"1148350","content":"i only see 209 questions i think even though it says 217 not sure if its something that they have to wait 2 weeks to release the rest since they update it maybe"}]}],"comment_id":"1142294","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html","poster":"vortegon"},{"comment_id":"1137738","content":"CloudTrail trails","poster":"thanhnv142","timestamp":"1706801700.0","upvote_count":"1"},{"poster":"hotblooded","content":"Selected Answer: D\nCloudTrail resources we want todeny this not config recorder","upvote_count":"1","comment_id":"1134071","timestamp":"1706445060.0"},{"poster":"a54b16f","comment_id":"1123520","content":"Selected Answer: D\nthe common practice is using stacksets to enable AWS config, so D make sense","upvote_count":"1","timestamp":"1705336140.0"},{"poster":"a54b16f","timestamp":"1705336020.0","content":"Selected Answer: D\nC mentioned using AWS Config recorders, which is for drift detection and has nothing to do with enable AWS config","comment_id":"1123518","upvote_count":"1"},{"comment_id":"1117254","content":"Selected Answer: D\nAnswer is D.\nC is wrong because:\n\"Deny modification or deletion of the AWS Config recorders by using an SCP.\"\nAWS Config recroders track resource configurations.\nWe need to ensure that the baseline resources CANNOT be modified or deleted by individual account administrators. \nWe don't need to track this modifications)","poster":"AikAWS","timestamp":"1704784440.0","upvote_count":"1"},{"timestamp":"1704511200.0","comment_id":"1114950","content":"I think D is a better choice based on the following statement: Create an SCP that prevents updates or deletions to CloudTrail resources or AWS Config resources unless the principal is an administrator of the organization's management account.","upvote_count":"1","poster":"Jaguaroooo"},{"upvote_count":"3","comment_id":"1076925","content":"Selected Answer: D\nC. Designate Config Management Account, SCP, and StackSets:\n\nDeploys AWS Config recorders and rules using CloudFormation StackSets.\nUtilizes an SCP to prevent modification or deletion of AWS Config recorders.\nHowever, this solution lacks clarity on allowing individual account administrators control over their CloudTrail trails.\n\noption D appears to be the most operationally efficient. It employs CloudFormation for deployment and an SCP to control access to baseline resources while ensuring that only administrators of the management account can modify or delete the baseline resources. This ensures the core security controls and allows individual account administrators control over their own CloudTrail trails and AWS Config rules.","timestamp":"1700630280.0","poster":"koenigParas2324"},{"content":"Selected Answer: C\nD is wrong - This trail was created by the management account for your organization. You cannot edit or delete this trail unless you are logged in with that account","poster":"kacsabacsi78","upvote_count":"2","comment_id":"1047688","timestamp":"1697703120.0"},{"upvote_count":"2","timestamp":"1695515220.0","poster":"bugincloud","comment_id":"1015389","content":"Selected Answer: D\nIf you have an SCP to deny update & delete the administrators themselves won't be able to update the resources.\nIn my opinion D is the answer."},{"comment_id":"1012009","content":"Selected Answer: D\nchoose D","timestamp":"1695196380.0","poster":"HoangGuru","upvote_count":"1"},{"comment_id":"1001370","upvote_count":"1","poster":"beanxyz","content":"Selected Answer: D\nA and B are obviously wrong.\nC Why did we create aws config recorder to detect drift? Shall we write another lambda function to remediate the drift? It's not efficient\nD We can deploy the cfn to enable cloudtrail and aws config in each account via stackset. And use scp as a guardtrail to prevent updating and deletion actions.","timestamp":"1694078520.0"},{"comment_id":"949541","timestamp":"1689144960.0","content":"Selected Answer: D\nD is the right one!\nWhy?\nBecause you can ByPass a SCP...\n{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n {\n \"Sid\": \"ThisTemplateIsShortenForHere!\",\n \"Effect\": \"Deny\",\n \"NotAction\": [\n \"health:*\",\n \"iam:*\",\n\n ],\n \"Resource\": \"*\",\n \"Condition\": {\n \"StringNotEquals\": {\n \"aws:RequestedRegion\": [\n \"us-west-2\"\n ]\n },\n \"ArnNotLike\": {\n \"aws:PrincipalARN\": [\n \"arn:aws:iam::*:role/Role1AllowedToBypassThisSCP\",\n \"arn:aws:iam::*:role/Role2AllowedToBypassThisSCP\"\n ]\n }\n }\n }\n ]\n}","poster":"Just_Ninja","upvote_count":"1"},{"comment_id":"943498","poster":"Blueee","content":"Selected Answer: C\nAWS Control Tower is a service that provides the easiest way to set up and govern a new, secure, multi-account AWS environment based on best practices established through AWS’ experience working with thousands of enterprise customers as they move to the cloud1.\n\nWhile AWS Control Tower can be used to manage multiple AWS accounts and control access and permissions, it is not the most operationally efficient way to apply a core set of security controls to an existing set of AWS accounts.\n\nOption C is more operationally efficient because it allows individual teams to administer individual accounts by using the AdministratorAccess AWS managed policy while ensuring that AWS CloudTrail and AWS Config are turned on in all available AWS Regions. Individual account administrators will not be able to edit or delete any of the baseline resources but will be able to edit or delete their own CloudTrail trails and AWS Config rules","upvote_count":"3","timestamp":"1688547000.0"},{"timestamp":"1688263920.0","comment_id":"940434","content":"Selected Answer: B\nThe correct answer is B. AWS Control Tower enables AWS Config and AWS CloudTrail in every member account, as well as aggregates the logs from those services in the Audit account and Log archive accounts that it creates. This is one of the benefits of deploying Control Tower.","upvote_count":"2","poster":"sb333"},{"comment_id":"877962","upvote_count":"2","poster":"Sazeka","content":"Selected Answer: D\nThe answer is D. It's more efficient to use SCP than stack policies to deny permissions to update or delete resources that are provisioned using CloudFormation StackSets. A is also possible but create more overhead and is not a best practice.\nhttps://www.examtopics.com/exams/amazon/aws-devops-engineer-professional/view/3/","timestamp":"1682233380.0"},{"upvote_count":"3","timestamp":"1681524840.0","comment_id":"870560","poster":"alce2020","content":"Selected Answer: C\nC is the correct answer"}]},{"id":"8tISjk2s1w9auzn9JZyh","timestamp":"2023-04-06 20:30:00","answer_ET":"AE","answers_community":["AE (85%)","BD (15%)"],"answer":"AE","topic":"1","isMC":true,"question_id":320,"exam_id":23,"question_images":[],"answer_description":"","question_text":"A company has its AWS accounts in an organization in AWS Organizations. AWS Config is manually configured in each AWS account. The company needs to implement a solution to centrally configure AWS Config for all accounts in the organization The solution also must record resource changes to a central account.\nWhich combination of actions should a DevOps engineer perform to meet these requirements? (Choose two.)","unix_timestamp":1680805800,"answer_images":[],"choices":{"E":"Create an AWS Config organization aggregator in the delegated administrator account. Configure data collection from all AWS accounts in the organization and from all AWS Regions.","B":"Configure a delegated administrator account for AWS Config. Create a service-linked role for AWS Config in the organization’s management account.","D":"Create an AWS Config organization aggregator in the organization's management account. Configure data collection from all AWS accounts in the organization and from all AWS Regions.","C":"Create an AWS CloudFormation template to create an AWS Config aggregator. Configure a CloudFormation stack set to deploy the template to all accounts in the organization.","A":"Configure a delegated administrator account for AWS Config. Enable trusted access for AWS Config in the organization."},"discussion":[{"upvote_count":"17","poster":"asfsdfsdf","comment_id":"874034","content":"Selected Answer: AE\nAE \nhttps://aws.amazon.com/blogs/mt/org-aggregator-delegated-admin/\nA - When enabling trust - the service-linked role will be created but not the other way around.\nE - the delegated account will be the account that manages AWS config so it should collect all data centrally.","timestamp":"1681845420.0"},{"comment_id":"1255535","poster":"jamesf","content":"Selected Answer: AE\nA - You can enable trusted access using either the AWS Config console or the AWS Organizations console.\nhttps://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-config.html","upvote_count":"1","timestamp":"1721977920.0"},{"upvote_count":"1","comment_id":"1182607","poster":"zijo","timestamp":"1711381680.0","content":"AE is the answer\nAWS Config offers an organization-wide data aggregation capability called the Config organization aggregator. It allows you to collect and view configuration data from all member accounts within your AWS Organization in a single location. This centralizes your view of resource configurations and compliance posture across your entire AWS environment."},{"content":"A and E are correct: <AWS Config is manually configured in each AWS account> means we dont need ACF (only used for the deployment of AWS config). <centrally configure AWS Config for all accounts> means we need to allow a central account to control AWS config in all member accounts.\n- <record resource changes to a central account> means we need to collect data from all member accounts and push to the central account\nB: service-linked role only used for interacting with other AWS services\nC: no need ACF\nD: we need AWS Config organization aggregator in the delegated administrator account, not the organization's management account","poster":"thanhnv142","timestamp":"1706803380.0","comment_id":"1137752","upvote_count":"1"},{"content":"Selected Answer: AE\nAE is most correct","poster":"hoaile257","comment_id":"1017492","upvote_count":"2","timestamp":"1695711780.0"},{"timestamp":"1689145860.0","upvote_count":"3","comment_id":"949553","content":"Selected Answer: AE\nHere you have the Tutorial :) \nhttps://aws.amazon.com/blogs/mt/org-aggregator-delegated-admin/","poster":"Just_Ninja"},{"comment_id":"923349","upvote_count":"3","timestamp":"1686757440.0","content":"Selected Answer: AE\nhttps://aws.amazon.com/blogs/mt/org-aggregator-delegated-admin/\nhttps://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-config.html","poster":"rhinozD"},{"content":"BE is the most efficient","timestamp":"1684873680.0","comment_id":"905213","upvote_count":"3","poster":"Kodoma"},{"upvote_count":"3","poster":"ParagSanyashiv","comments":[{"timestamp":"1699264860.0","content":"Why ? it says setup service linked role in management account not in Delegated account?","poster":"2pk","comment_id":"1063717","upvote_count":"1"}],"comment_id":"892319","content":"Selected Answer: BD\nBD is most suitable in this case","timestamp":"1683562380.0"},{"content":"Selected Answer: BD\nThe correct answers are B and D. Option B is correct because it suggests configuring a delegated administrator account for AWS Config and creating a service-linked role for AWS Config in the organization’s management account. This allows AWS Config to perform supported operations within the accounts in the organization, and enables trusted access. Option D is correct because it suggests creating an AWS Config organization aggregator in the organization's management account and configuring data collection from all AWS accounts in the organization and from all AWS Regions, which enables multi-account, multi-region data aggregation. Options A and E are not correct because they do not suggest using a service-linked role for AWS Config or creating an AWS Config organization aggregator in the organization's management account.","comment_id":"870465","poster":"jqso234","timestamp":"1681504740.0","upvote_count":"2"},{"comment_id":"863231","poster":"Dimidrol","upvote_count":"3","timestamp":"1680805800.0","content":"Selected Answer: AE\nAE . https://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-config.html"}],"url":"https://www.examtopics.com/discussions/amazon/view/105450-exam-aws-certified-devops-engineer-professional-dop-c02/"}],"exam":{"name":"AWS Certified DevOps Engineer - Professional DOP-C02","lastUpdated":"11 Apr 2025","numberOfQuestions":355,"id":23,"isMCOnly":true,"provider":"Amazon","isBeta":false,"isImplemented":true},"currentPage":64},"__N_SSP":true}