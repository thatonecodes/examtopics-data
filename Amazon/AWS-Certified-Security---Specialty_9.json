{"pageProps":{"questions":[{"id":"GfugwexUiXI9taAykgGk","timestamp":"2020-03-14 06:30:00","answers_community":["CE (100%)"],"unix_timestamp":1584163800,"choices":{"D":"Use AWS KMS to encrypt all AWS account root user and AWS IAM access keys and set automatic rotation to 30 days","A":"Use the AWS account root user access keys instead of the AWS Management Console","B":"Enable multi-factor authentication for the AWS IAM users with the AdministratorAccess managed policy attached to them","C":"Enable multi-factor authentication for the AWS account root user","E":"Do not create access keys for the AWS account root user; instead, create AWS IAM users"},"isMC":true,"answer":"CE","question_id":41,"question_images":[],"answer_ET":"CE","question_text":"What are the MOST secure ways to protect the AWS account root user of a recently opened AWS account? (Choose two.)","answer_images":[],"topic":"1","discussion":[{"comment_id":"71675","content":"Should be CE：\nA：access key is the same with console，not help\nB: MFA for IAM user will not help root account;\nD: rotate will help a little, but the question is \"The most\";","upvote_count":"28","poster":"lifeisgift","timestamp":"1633071240.0"},{"comment_id":"353075","content":"Why is the answer incorrect as it is obvious that with the current answers it is C and E? Why don´t they get fixed? Are the answers being moved into different positions for some reason?","poster":"eskimolander","upvote_count":"5","timestamp":"1635704340.0"},{"content":"Selected Answer: CE\nCE definitely.","poster":"Raphaello","comment_id":"1150291","upvote_count":"1","timestamp":"1707922740.0"},{"comment_id":"946991","timestamp":"1688890440.0","content":"Selected Answer: CE\nIt is C and E","upvote_count":"1","poster":"pedrojorge"},{"content":"Selected Answer: CE\nCE가 맞습니다.","timestamp":"1688797440.0","poster":"preholic","comment_id":"946224","upvote_count":"1"},{"upvote_count":"1","content":"MFA is the best practice for root account. In addition, AWS recommends creating an IAM user so the answer is CE.","comment_id":"871668","timestamp":"1681642260.0","poster":"ITGURU51"},{"comment_id":"822782","timestamp":"1677434820.0","poster":"xplusfb","content":"Selected Answer: CE\nShould C and E. Because question asking basicaly what should we do.","upvote_count":"1"},{"poster":"dcasabona","timestamp":"1659471660.0","content":"Selected Answer: CE\nOption C and E.","comment_id":"641446","upvote_count":"2"},{"content":"Selected Answer: CE\nMfa for root. Don’t give keys for root","comment_id":"599634","poster":"Jonfernz","upvote_count":"1","timestamp":"1652192460.0"},{"poster":"1awssec","timestamp":"1635988260.0","content":"https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html","comment_id":"463547","upvote_count":"2"},{"comment_id":"437637","poster":"kiev","timestamp":"1635889320.0","content":"CE for me as well and that is full house CE","upvote_count":"3"},{"content":"CE for sure","timestamp":"1635009660.0","poster":"sanjaym","upvote_count":"1","comment_id":"352123"},{"timestamp":"1634397960.0","poster":"Nebolos","comment_id":"312976","upvote_count":"2","content":"CE is correct"},{"poster":"Ayusef","timestamp":"1634142480.0","comment_id":"303425","content":"CE 100%","upvote_count":"2"},{"poster":"farziuser","content":"C & E for sure. \n\nThere are five steps required to consider your root account secure.\n\nDelete your root access keys\nActivate MFA on your root account\nCreate individual IAM users\nUse groups to assign permissions\nApply an IAM password policy\n\nhttps://cloudaffaire.com/secure-aws-root-account/","comment_id":"197347","timestamp":"1634086500.0","upvote_count":"4"},{"content":"Correct answers : CE","upvote_count":"1","comment_id":"186442","timestamp":"1633887840.0","poster":"deegadaze1"},{"comment_id":"102631","poster":"RajeshNayyar","content":"CE is right answer, 100%, no doubt","timestamp":"1633614900.0","upvote_count":"1"},{"comment_id":"89516","content":"C, E for sure","poster":"gfhbox0083","upvote_count":"1","timestamp":"1633533600.0"},{"upvote_count":"1","comment_id":"66576","poster":"Raj9","content":"bc for me","timestamp":"1632712740.0","comments":[{"timestamp":"1633148640.0","poster":"xaccan","comment_id":"76483","upvote_count":"2","content":"B does not make sense. READ the question the issue is with root user not iam.\nRoot user who need to be secured.\nC and E"}]},{"comment_id":"66380","poster":"RaySmith","upvote_count":"3","timestamp":"1632659820.0","content":"CE to me"},{"comment_id":"65795","poster":"awssecuritynewbie","timestamp":"1632497640.0","upvote_count":"2","content":"the answer is C and E"},{"comment_id":"63734","poster":"joeboy","content":"Answer: CE","timestamp":"1632175140.0","upvote_count":"4"}],"exam_id":29,"url":"https://www.examtopics.com/discussions/amazon/view/16530-exam-aws-certified-security-specialty-topic-1-question-135/","answer_description":""},{"id":"ufdbJ5iTpGmPeYvbLkuf","answer_ET":"D","question_id":42,"answer":"D","exam_id":29,"discussion":[{"timestamp":"1632220320.0","comment_id":"66577","upvote_count":"16","comments":[{"poster":"kung07","timestamp":"1634254680.0","content":"C works, but is client-side encryption, so requires some effort to set it all up\nD uses default SSE-KMS, minimal configuration\n\n\"When you use Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), each object is encrypted with a unique key.\"\nAND \n\"Server-Side Encryption with Customer Master Keys (CMKs) Stored in AWS Key Management Service (SSE-KMS) is similar to SSE-S3, \nbut with some additional benefits and charges for using this service.\"\n'is similar' so should also encrypt each object with a unique key\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html","comment_id":"93098","upvote_count":"11"}],"content":"d seems correct","poster":"Raj9"},{"content":"Selected Answer: D\nD is the correct answer.\n\"When you use SSE-KMS to protect your data without an S3 Bucket Key, Amazon S3 uses an individual AWS KMS data key for every object.\" <<<<<<<<<<\n\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html#bucket-key-overview\nAnd bucket key are no enabled by default.","poster":"Raphaello","timestamp":"1707923280.0","comment_id":"1150293","upvote_count":"1"},{"upvote_count":"1","comment_id":"1065191","poster":"RosenYordanov","comments":[{"content":"Wrong.\n\n\"When you use SSE-KMS to protect your data without an S3 Bucket Key, Amazon S3 uses an individual AWS KMS data key for every object.\"\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/bucket-key.html#bucket-key-overview","poster":"Raphaello","comment_id":"1150294","upvote_count":"1","timestamp":"1707923340.0"}],"content":"D. Place all the files in the same S3 bucket. Use server-side encryption with AWS KMS-managed keys (SSE-KMS) to encrypt the data.\n\n This option uses SSE-KMS, but it doesn't provide separate keys for each file. It uses the same KMS key for all objects in the bucket, which doesn't meet the requirement of using different keys for each file.\n\nOption C, using the S3 encryption client to encrypt each file individually using S3-generated data keys, is the option that requires the least amount of configuration while still meeting the CISO's requirement for encrypting each file with a different key. This approach is more straightforward and doesn't involve the complex management of separate buckets and keys or writing custom Lambda functions.","timestamp":"1699395120.0"},{"timestamp":"1682350380.0","comment_id":"879498","content":"D for data keys, it uses KMS to generate the data key and encrypt it, resulting in different encryption key for each object","upvote_count":"1","poster":"Dmosh"},{"comment_id":"871945","upvote_count":"1","poster":"ITGURU51","content":"Server-side encryption will encrypt the data using a unique key. Therefore D, would be a good choice.","timestamp":"1681663320.0"},{"poster":"amaltare","timestamp":"1680780540.0","comment_id":"862893","content":"Selected Answer: C\nthe support to my answer\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingClientSideEncryption.html\n\nD will have so much effort to create KMS keys for individual files","upvote_count":"1"},{"upvote_count":"1","poster":"fdsaket","timestamp":"1673358960.0","content":"Selected Answer: D\nC is wrong because S3 encryption client is a client-side encryption and not requires more configuration than D","comment_id":"771476"},{"comment_id":"764356","poster":"boooliyooo","content":"Selected Answer: C\nTo implement the approach of encrypting each file using a different key, the option that requires the least amount of configuration is:\n\n C. Use the S3 encryption client to encrypt each file individually using S3-generated data keys.\n\nUsing the S3 encryption client to encrypt each file individually allows the company to use a different key for each file, without the need to configure multiple S3 buckets or write an AWS Lambda function. The S3 encryption client handles the process of generating and using data keys for each file, which simplifies the configuration process.\n\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingClientSideEncryption.html","timestamp":"1672737720.0","upvote_count":"2"},{"upvote_count":"1","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingClientSideEncryption.html","timestamp":"1668355920.0","comment_id":"717414","poster":"Fyssy"},{"comment_id":"656379","poster":"sapien45","timestamp":"1662044160.0","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\nSSE-S3 (and not S3-client) and SSE-KMS can do the job ; each object is encrypted with a unique key. But SSE-S3 is not offered as option.","upvote_count":"1"},{"timestamp":"1650943860.0","comment_id":"592068","content":"Selected Answer: D\nIts D,\nAt first I misread C,\nWould of failed this at the exam i thought it was server side encryption which would of worked nicely.","upvote_count":"3","poster":"MoreOps"},{"poster":"Radhaghosh","timestamp":"1643340420.0","content":"D. Place all the files in the same S3 bucket. Use server-side encryption with AWS KMS-managed keys (SSE-KMS) to encrypt the data.","upvote_count":"1","comment_id":"534338"},{"comment_id":"530418","upvote_count":"2","content":"It is D \nAs per below, S3 server side encryption satisfies customer requirement. \n https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingServerSideEncryption.html\n“Server-side encryption protects data at rest. Amazon S3 encrypts each object with a unique key. As an additional safeguard, it encrypts the key itself with a key that it rotates regularly. Amazon S3 server-side encryption uses one of the strongest block ciphers available to encrypt your data, 256-bit Advanced Encryption Standard (AES-256).”","timestamp":"1642930560.0","comments":[{"content":"SSE-S3","upvote_count":"2","poster":"ExamTopix01","comment_id":"545066","timestamp":"1644556740.0"}],"poster":"NSF2"},{"timestamp":"1637597340.0","comment_id":"484352","content":"SSE KMS with Aws managed key encrypt data with unique key. And as question states with minimum efforts. So ans D is correct","poster":"munish3420","upvote_count":"1"},{"content":"D doesn't look right option. When you select S3-KMS with AWS managed key then it will create new key in KMS. This same key will be used for every upload.","comment_id":"483324","upvote_count":"1","poster":"HPCloud","timestamp":"1637504160.0"},{"content":"my advice for the answer comment is please put valid reason with the link for your answer you don't have to repeat the answer simply you need to put a reason to have genuine discussion","upvote_count":"4","poster":"TollaMS","timestamp":"1636265820.0","comment_id":"436998"},{"timestamp":"1636011660.0","comment_id":"352126","upvote_count":"1","poster":"sanjaym","content":"D looks correct to me."},{"upvote_count":"3","poster":"Edgecrusher77","timestamp":"1635353640.0","content":"Can someone explain how D answers \"encrypting ***each file using a different key*** instead of a single key\" ?\nFor me, only B make sense with this requirement","comments":[{"timestamp":"1635937920.0","poster":"chengxu32","content":"It's envelope encryption with CMK for S3. CMK will generate a data key for each encryption","upvote_count":"4","comment_id":"331423"}],"comment_id":"318044"},{"comment_id":"303475","timestamp":"1635290640.0","poster":"Ayusef","upvote_count":"3","content":"Its D.. guys. S3 does this by default with SSE from what I understand."},{"comment_id":"253603","upvote_count":"2","timestamp":"1635268980.0","poster":"PatrykMilewski","content":"D for me"},{"upvote_count":"2","timestamp":"1634996040.0","poster":"kj07","comments":[{"timestamp":"1635061080.0","poster":"deegadaze1","comment_id":"186449","upvote_count":"1","content":"Correct D"}],"comment_id":"178810","content":"Answer: D\nDuplicated with Q21 from Topic2"},{"poster":"PeppaPig","comment_id":"163847","timestamp":"1634914620.0","upvote_count":"3","content":"D is correct. \n\nC is 100% wrong simple because it is a client side encryption, the objects are already encrypted before uploading to S3, thus it has nothing to do with S3 generated data keys."},{"content":"C\nhttps://docs.aws.amazon.com/kms/latest/developerguide/services-s3.html#:~:text=SSE-S3%20requires%20that%20Amazon,Keys%20(SSE-S3).&text=SSE-KMS%20requires%20that%20AWS,(CMK)%20in%20AWS%20KMS.\nYou can protect data at rest in Amazon S3 by using three different modes of server-side encryption: SSE-S3, SSE-C, or SSE-KMS.\n\nSSE-S3 requires that Amazon S3 manage the data and master encryption keys. For more information about SSE-S3, see Protecting Data Using Server-Side Encryption with Amazon S3-Managed Encryption Keys (SSE-S3).\n\nSSE-C requires that you manage the encryption key. For more information about SSE-C, see Protecting Data Using Server-Side Encryption with Customer-Provided Encryption Keys (SSE-C).\n\nSSE-KMS requires that AWS manage the data key but you manage the customer master key (CMK) in AWS KMS.","comment_id":"124747","poster":"dirk_gentley","timestamp":"1634744640.0","upvote_count":"1"},{"content":"C i think.","timestamp":"1634556780.0","comment_id":"102634","upvote_count":"1","poster":"RajeshNayyar"},{"poster":"mychiv","content":"D\nWhen you use Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), each object is encrypted with a unique key. As an additional safeguard, it encrypts the key itself with a master key that it regularly rotates. \nSame principle applies to AWS KMS-managed keys (SSE-KMS)","upvote_count":"4","comment_id":"90765","timestamp":"1633980600.0"},{"timestamp":"1633880340.0","comment_id":"90764","content":"D\nWhen you use Server-Side Encryption with Amazon S3-Managed Keys (SSE-S3), each object is encrypted with a unique key. As an additional safeguard, it encrypts the key itself with a master key that it regularly rotates.","upvote_count":"3","poster":"mychiv"},{"comment_id":"79964","comments":[{"content":"Answer is D - Question is \"Least amount of configuration\". B and C propose to use different data keys, while D already does that by default. SSE-KMS uses the CMK to encrypt each file with it's own unique data key.","poster":"[Removed]","comments":[{"poster":"RajeshNayyar","comment_id":"102633","upvote_count":"1","content":"why not C, data is already encrypted on hard drives, why you need client encryption?","timestamp":"1634553480.0"}],"timestamp":"1634545680.0","upvote_count":"2","comment_id":"99561"}],"poster":"ADVIT","content":"Only C:\nencrypting each file using a different key instead of a single key","upvote_count":"3","timestamp":"1633571640.0"},{"content":"D for me","comment_id":"79144","upvote_count":"2","timestamp":"1633440660.0","poster":"abbusinghal"},{"poster":"Buggie","content":"It says -LEAST amount of configuration when implementing this approach.\nSo answer is D","comment_id":"76046","timestamp":"1632757440.0","comments":[{"comments":[{"upvote_count":"5","content":"You need to review your knowledge of KMS, more precisely CMK vs. Data Key. One single CMK generates a different data key on each encrypt of a file. No single file have the same data key. You are saying B is the answer, which is the same as D... except D does not require you to run custom lambda functions. B says: encrypt each file with a different \"data key\". SSE-KMS does this already without any customization.","comment_id":"99558","poster":"[Removed]","timestamp":"1634411760.0"}],"poster":"xaccan","upvote_count":"1","comment_id":"76487","content":"question is saying encrypt each file. D does not even make any sense. \ncorrect is B","timestamp":"1632982860.0"}],"upvote_count":"3"},{"timestamp":"1632705720.0","poster":"awssecuritynewbie","comment_id":"74620","content":"so basically everyone is saying something different but i think it would be B but is not least configuration but everything does uses the same key ..","upvote_count":"1"},{"comments":[{"upvote_count":"2","timestamp":"1632809280.0","content":"if you have 10000 files you will create 10000 buckets?","poster":"xaccan","comment_id":"76486"}],"upvote_count":"1","poster":"asldavid","timestamp":"1632521040.0","content":"A. Least configuration. to use different key require to rotate the key.","comment_id":"73366"},{"timestamp":"1632268620.0","poster":"roturotu88","content":"B is correct","comment_id":"69316","upvote_count":"2"},{"upvote_count":"1","timestamp":"1632150060.0","content":"C to me.","poster":"RaySmith","comment_id":"66384","comments":[{"upvote_count":"2","timestamp":"1633230840.0","comment_id":"77884","content":"Correct. The question is about encryption at rest. default S3 encrrytion creates a new key for every object and this satisfies the requirement.","poster":"lolcats"}]}],"question_text":"A company has decided to migrate sensitive documents from on-premises data centers to Amazon S3. Currently, the hard drives are encrypted to meet a compliance requirement regarding data encryption. The CISO wants to improve security by encrypting each file using a different key instead of a single key. Using a different key would limit the security impact of a single exposed key.\nWhich of the following requires the LEAST amount of configuration when implementing this approach?","timestamp":"2020-03-21 02:16:00","question_images":[],"isMC":true,"answers_community":["D (60%)","C (40%)"],"choices":{"C":"Use the S3 encryption client to encrypt each file individually using S3-generated data keys.","B":"Put all the files in the same S3 bucket. Using S3 events as a trigger, write an AWS Lambda function to encrypt each file as it is added using different AWS KMS data keys.","D":"Place all the files in the same S3 bucket. Use server-side encryption with AWS KMS-managed keys (SSE-KMS) to encrypt the data.","A":"Place each file into a different S3 bucket. Set the default encryption of each bucket to use a different AWS KMS customer managed key."},"topic":"1","url":"https://www.examtopics.com/discussions/amazon/view/17072-exam-aws-certified-security-specialty-topic-1-question-136/","unix_timestamp":1584753360,"answer_description":"","answer_images":[]},{"id":"diRFWKkzBDsLUxTTkSnj","choices":{"C":"The S3 bucket policy fails to explicitly grant access to the Application Developer","B":"The AWS KMS key for the S3 bucket fails to list the Application Developer as an administrator","A":"The S3 ACL for the S3 bucket fails to explicitly grant access to the Application Developer","D":"The S3 bucket policy explicitly denies access to the Application Developer"},"answer_description":"","answer":"D","isMC":true,"unix_timestamp":1584163980,"answer_ET":"D","answers_community":["D (70%)","B (20%)","10%"],"answer_images":[],"question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/16531-exam-aws-certified-security-specialty-topic-1-question-137/","topic":"1","timestamp":"2020-03-14 06:33:00","exam_id":29,"discussion":[{"content":"D is what i thought if the IAM is allowing the users the buckets policy is not needed but if the bucket policy is denying access no matter if the IAM user policy grants it","timestamp":"1632699720.0","poster":"awssecuritynewbie","upvote_count":"22","comment_id":"65797"},{"content":"Answer: D","comment_id":"63736","poster":"joeboy","timestamp":"1632496020.0","upvote_count":"8"},{"comment_id":"1150298","timestamp":"1707923460.0","content":"Selected Answer: D\nResource policy comes BEFORE identity policy when evaluating, and an explicit deny overrule an allow.\nD..ofc.","poster":"Raphaello","upvote_count":"1"},{"upvote_count":"1","comment_id":"1065194","timestamp":"1699395600.0","content":"Selected Answer: D\nD. The S3 bucket policy explicitly denies access to the Application Developer.\n\n If the S3 bucket policy explicitly denies access to the Application Developer, this would certainly cause the issue. S3 bucket policies can include \"Deny\" statements that override \"Allow\" statements in IAM policies.\n\nThe most likely cause of the issue is option D. The S3 bucket policy explicitly denying access to the Application Developer would result in the behavior described. You should check the S3 bucket policy to ensure that it does not contain any explicit \"Deny\" statements for the Application Developer.","poster":"RosenYordanov"},{"timestamp":"1695391800.0","comment_id":"1014187","upvote_count":"1","content":"Selected Answer: C\nOption \"D\" says explicitly denies which means, the particular user has to be denied. But that is not the case here. So, option \"C\" is the right answer because due to other reasons (like not granted) he might have got blocked","poster":"Senthil_SPM"},{"timestamp":"1693817400.0","upvote_count":"1","poster":"addy_prepare","comment_id":"998391","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html"},{"upvote_count":"2","timestamp":"1687193340.0","comment_id":"927708","poster":"Green53","content":"Selected Answer: D\nI'd go with D. If the IAM policy has an allow, only an *explicit* deny would stop the user from accessing the bucket.\nYes, it could be a problem with the key, but \"list the application developer as an administrator\" isn't required to use the key itself."},{"timestamp":"1686836940.0","poster":"OCHT","content":"Selected Answer: B\nTo explain, when you use server-side encryption with AWS Key Management Service (SSE-KMS) for an S3 bucket, not only does the IAM policy need to allow access to the S3 bucket, but the key policy for the KMS key used for encryption also needs to allow the necessary permissions.\n\nIn other words, if the Application Developer doesn't have the necessary permissions in the KMS key policy to use the key (like kms:Decrypt for reading objects, for example), they would be unable to access the objects in the bucket, even if their IAM policy allows S3 bucket access.\n\nOf course, without more specific details, this is just one possible cause. There could be other potential issues too (like explicit deny statements, lack of necessary S3 permissions in the IAM policy, etc.), but based on the information in the question, Option B seems the most likely.","comment_id":"924244","upvote_count":"2"},{"comment_id":"871973","poster":"ITGURU51","timestamp":"1681665360.0","upvote_count":"2","content":"The IAM role has been configured to allow access to the S3 resource. However the bucket has an explicit deny policy which takes precedence over the allow rule."},{"comment_id":"723362","upvote_count":"1","content":"Why is c not answer?","timestamp":"1669024680.0","comments":[{"upvote_count":"1","comment_id":"728597","poster":"landsamboni","timestamp":"1669583040.0","content":"I think it is C"},{"content":"IAM policy grants access, so explicit grant from bucket policy is not needed. Option D explicitly denies access, so the IAM policy is overridden.","timestamp":"1677106380.0","upvote_count":"1","comment_id":"818514","poster":"AshishFL"}],"poster":"Laziiie"},{"upvote_count":"1","timestamp":"1662044460.0","comment_id":"656382","poster":"sapien45","content":"Selected Answer: D\nhttps://aws.amazon.com/blogs/security/how-to-restrict-amazon-s3-bucket-access-to-a-specific-iam-role/"},{"content":"Selected Answer: D\nAnswer: D","poster":"lotfi50","comment_id":"612635","upvote_count":"1","timestamp":"1654589820.0"},{"content":"D is blocking, though IAM policy allowing as stated in the question","timestamp":"1635710880.0","comment_id":"463552","upvote_count":"1","poster":"1awssec"},{"poster":"nhokicuc","timestamp":"1635706080.0","comment_id":"424999","content":"I will go with D,E","upvote_count":"1"},{"comment_id":"423503","timestamp":"1635653040.0","poster":"vmalj","content":"Ans is D\n\nReason: You don't need to explicitly grant permission to user in S3 Policy if he\\she has permission in IAM, except when the S3 policy has explicit DENY","upvote_count":"1"},{"comments":[{"comment_id":"730842","content":"The AWS KMS key for the S3 bucket fails to list the Application Developer as an administrator - because it's nonsense and on the other hand you'll get a different error, not access deny.","upvote_count":"2","poster":"hubekpeter","timestamp":"1669754340.0"}],"poster":"skipbaylessfor3","upvote_count":"3","comment_id":"392155","timestamp":"1635599700.0","content":"It mentions the bucket is encrypted. It could have to do with something with KMS etc too right? Like, maybe the user doesn't have kms:Decrypt permissions? Or am I wrong here"},{"content":"I'll go with D","poster":"sanjaym","upvote_count":"1","timestamp":"1634855400.0","comment_id":"352127"},{"upvote_count":"1","comments":[{"content":"The IAM policy is an explicit Allow. A Deny is only implicit in the absence of an explicit Allow. Allows are never implicit, only explicit. An explicit Deny overrides an explicit Allow. Better replace your dictionary.","poster":"hortence7","comment_id":"380655","timestamp":"1634973120.0","upvote_count":"4"}],"timestamp":"1634849040.0","poster":"Edgecrusher77","content":"Answer should be D, but the deny is implicit, not explicit (please buy a dictionary!)","comment_id":"333852"},{"upvote_count":"2","comment_id":"272333","content":"Basic rule: to allow access there must be a explict allow and no explict deny in either S3 Bucket Policy, S3 ACL, Key Policy and IAM policy, so the answer is D","timestamp":"1634691300.0","poster":"beanxyz"},{"content":"D for sure","timestamp":"1634095380.0","poster":"gfhbox0083","comment_id":"89517","upvote_count":"2"},{"upvote_count":"1","comment_id":"73361","content":"A. Control access to object is thru S3 ACL.","comments":[{"comment_id":"76491","poster":"xaccan","timestamp":"1634062620.0","content":"d is correct very simple question","upvote_count":"2"},{"timestamp":"1634318400.0","content":"using ACL cannot be used to deny access to someone within the same account can be used for external accounts and also granting them access.","comment_id":"109642","poster":"awssecuritynewbie","upvote_count":"1"}],"timestamp":"1633636560.0","poster":"asldavid"},{"poster":"Raj9","content":"should be d","upvote_count":"3","timestamp":"1633496400.0","comment_id":"66581"},{"timestamp":"1633268880.0","upvote_count":"4","content":"D to me","poster":"RaySmith","comment_id":"66385"}],"question_text":"A company has an encrypted Amazon S3 bucket. An Application Developer has an IAM policy that allows access to the S3 bucket, but the Application Developer is unable to access objects within the bucket.\nWhat is a possible cause of the issue?","question_id":43},{"id":"2iSGAaNrzp4UrgvVT86W","answer_images":[],"answer":"DE","answer_description":"","question_text":"A Web Administrator for the website example.com has created an Amazon CloudFront distribution for dev.example.com, with a requirement to configure HTTPS using a custom TLS certificate imported to AWS Certificate Manager.\nWhich combination of steps is required to ensure availability of the certificate in the CloudFront console? (Choose two.)","question_images":[],"timestamp":"2020-03-14 06:35:00","answer_ET":"DE","unix_timestamp":1584164100,"url":"https://www.examtopics.com/discussions/amazon/view/16532-exam-aws-certified-security-specialty-topic-1-question-138/","topic":"1","answers_community":["DE (100%)"],"question_id":44,"exam_id":29,"choices":{"D":"Import the certificate in the us-east-1 (N. Virginia) Region.","E":"Ensure that the certificate, private key, and certificate chain are PEM-encoded.","A":"Call UploadServerCertificate with /cloudfront/dev/ in the path parameter.","B":"Import the certificate with a 4,096-bit RSA public key.","C":"Ensure that the certificate, private key, and certificate chain are PKCS #12-encoded."},"discussion":[{"timestamp":"1633442400.0","poster":"aacliper","comment_id":"67042","content":"DE is correct https://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront/","upvote_count":"28"},{"timestamp":"1632718200.0","content":"DE to me","comment_id":"66386","upvote_count":"15","poster":"RaySmith"},{"upvote_count":"1","content":"Selected Answer: DE\nDE....","poster":"Raphaello","timestamp":"1707924000.0","comment_id":"1150301"},{"content":"https://docs.aws.amazon.com/acm/latest/userguide/import-certificate-prerequisites.html\nThe above link is too sweet to ignore for this question","timestamp":"1695668220.0","comment_id":"1017143","poster":"Ernestokoro","upvote_count":"1"},{"poster":"ITGURU51","content":"The best answer is DE.","timestamp":"1681666320.0","upvote_count":"1","comment_id":"871984"},{"upvote_count":"1","content":"CD\nCloudFront can use an SSL/TLS certificate stored in AWS Certificate Manager (ACM) or a custom SSL/TLS certificate. When using a custom SSL/TLS certificate, you must import the certificate, private key, and certificate chain into ACM or IAM. To ensure that the certificate is available in the CloudFront console, it should be imported in the us-east-1 (N. Virginia) Region, and the certificate, private key, and certificate chain must be PKCS #12-encoded.\n\nOption A is incorrect because UploadServerCertificate is not a valid API action for importing a certificate to ACM.\n\nOption B is incorrect because there is no requirement to use a specific size for the RSA public key.\n\nOption E is incorrect because PEM encoding is not required for importing a certificate to ACM.","comment_id":"869009","poster":"Nikhil0222","timestamp":"1681352760.0"},{"upvote_count":"2","timestamp":"1668274860.0","content":"D&E are correct. \nIt's about the custom domain. https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-and-https-procedures.html#cnames-and-https-getting-certificates","poster":"tobedeleted","comment_id":"716842"},{"timestamp":"1662329880.0","upvote_count":"1","content":"Selected Answer: DE\nWhenever you import a cert to ACM regardless of which service you want to use it with:\nhttps://docs.aws.amazon.com/acm/latest/userguide/import-certificate-prerequisites.html","comment_id":"659593","poster":"Root_Access"},{"poster":"sapien45","comment_id":"656386","timestamp":"1662044940.0","upvote_count":"2","content":"Selected Answer: DE\nhttps://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront/\nTo assign an ACM certificate to a CloudFront distribution, you must request or import the certificate in the US East (N. Virginia) Region. If you're using the ACM console, check the Region selector in the navigation bar. Confirm that US East (N. Virginia) is selected before you request or import the certificate.\n\naws iam upload-server-certificate --server-certificate-name CertificateName\n--certificate-body file://public_key_certificate_file --private-key file://privatekey.pem \n--certificate-chain file://certificate_chain_file --path /cloudfront/DistributionName/"},{"content":"Selected Answer: DE\nD:\nhttps://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront/\n“\nTo assign an ACM certificate to a CloudFront distribution, you must request or import the certificate in the US East (N. Virginia) Region.\n“\n\nE:\nhttps://docs.aws.amazon.com/cli/latest/reference/iam/upload-server-certificate.html\n“\nThe server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded.","comment_id":"597751","timestamp":"1651845420.0","poster":"Alexey79","upvote_count":"2"},{"timestamp":"1636074540.0","upvote_count":"5","content":"Answer is D & E. \nPrivate Key is .pem encoded\naws iam upload-server-certificate --server-certificate-name CertificateName\n--certificate-body file://public_key_certificate_file --private-key file://privatekey.pem \n--certificate-chain file://certificate_chain_file --path /cloudfront/DistributionName/\nAlso ensure that certificate in imported from us-east North VA\nhttps://aws.amazon.com/premiumsupport/knowledge-center/custom-ssl-certificate-cloudfront","comment_id":"299815","poster":"fabvan"},{"upvote_count":"3","content":"Answer: DE\nDuplicated with Q22 Topic2","comment_id":"178813","poster":"kj07","timestamp":"1634902980.0","comments":[{"upvote_count":"1","poster":"deegadaze1","timestamp":"1635726840.0","content":"Correct","comment_id":"186452"}]},{"content":"Some people are seriously just not thinking at all.\nA. Nope.\nB. Really? Go and read the AWS ACM pre-req's.\nC. Nope.\nD. Yes. AWS limitation.\nE. Yes. ACM pre-req's documentation literally has this wording on the site.\nAnswer is DE. Took all of 5 minutes to confirm all of this.","poster":"lunt","comment_id":"123426","upvote_count":"9","timestamp":"1634591940.0"},{"timestamp":"1634533800.0","comment_id":"89520","upvote_count":"1","content":"D, E for sure","poster":"gfhbox0083"},{"upvote_count":"2","poster":"Raj9","comment_id":"75645","timestamp":"1634527080.0","content":"DE looks fine"},{"timestamp":"1633939260.0","upvote_count":"2","content":"can't be B, cloudfront supports max of 2048 bit","comment_id":"75644","poster":"Raj9"},{"upvote_count":"1","timestamp":"1632344760.0","comments":[{"comment_id":"65798","upvote_count":"7","poster":"awssecuritynewbie","content":"No it is D& E","timestamp":"1632462900.0"}],"content":"Answer: A D","comment_id":"63737","poster":"joeboy"}],"isMC":true},{"id":"evjMf2SamPrWHiy6i7oL","discussion":[{"poster":"RaySmith","timestamp":"1632177180.0","content":"D to me","comment_id":"66387","upvote_count":"13"},{"timestamp":"1708976820.0","comment_id":"1160027","content":"Selected Answer: D\nCorrect answer is D.\nObviously all users are allowed to access KMS key and \"kmsDecrypt\" action.\nThe point is to restrict action to the prefix that belong to each of them.\nPolicy variable is for this case\narn:aws:s3:::examplebucket/${aws:username}/","upvote_count":"1","poster":"Raphaello"},{"upvote_count":"2","poster":"ITGURU51","comment_id":"872042","content":"As per AWS documentation:\nIf the IAM user and S3 bucket belong to the same AWS account, then you can grant the user access to a specific bucket folder using an IAM policy. As long as the bucket policy doesn't explicitly deny the user access to the folder, you don't need to update the bucket policy if access is granted by the IAM policy. You can add the IAM policy to individual IAM users, or you can attach the IAM policy to an IAM role that multiple users can switch to. Answer D","timestamp":"1681669740.0"},{"upvote_count":"2","timestamp":"1677864420.0","content":"Selected Answer: D\nD for me. \nFound this on another site which had B marked as correct answer. hmm\nReally appreciate that we have the discussions here!","comment_id":"828177","poster":"roguecloud"},{"timestamp":"1669754940.0","poster":"hubekpeter","upvote_count":"3","comment_id":"730846","content":"Selected Answer: D\nIn case of B, you need to re-encrypt the data, which can be costly. The bucket already exists, therefore D is more appropriate in this case."},{"timestamp":"1662883680.0","comment_id":"665939","upvote_count":"1","poster":"bobsmith2000","content":"Selected Answer: B\nB and D make sense.\n\nFor B look up the following link:\nhttps://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html\nWe can utilize kms:EncryptionContext for adding IAM variables such as aws:username. CMK allows centralized access control and if it's not explicitly allowed in a key policy, v the request it's gonna be denied. (https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html).\nSo there's no way to allow access to s3 objects if it's not allowed in the key policy.\n\nD.\nIt's workable solution, but we ALLOW access. So any user can extend their privs by adding another policy for the entire bucket. There's no key policies involved due to amazon managed keys."},{"comment_id":"656393","poster":"sapien45","upvote_count":"1","content":"Selected Answer: D\nhttps://aws.amazon.com/premiumsupport/knowledge-center/iam-s3-user-specific-folder/\nYou can do this by using policy variables, which allow you to specify placeholders in a policy. When the policy is evaluated, the policy variables are replaced with values that come from the request itself.\n\nThis example shows a policy for an Amazon S3 bucket that uses the policy variable ${aws:username}:","timestamp":"1662045300.0"},{"comment_id":"641671","poster":"Rja148393","timestamp":"1659509040.0","upvote_count":"1","content":"Selected Answer: D\nD- this examples is given here \nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html"},{"content":"Selected Answer: D\nagree on D.","timestamp":"1659118320.0","poster":"dcasabona","comment_id":"639357","upvote_count":"1"},{"content":"D looks best but does it assume that the folder path has to follow a certain pattern that contains user name in it ? What if the path to be provided access does not have this pattern set ?","upvote_count":"3","timestamp":"1641633900.0","comment_id":"519403","poster":"network_zeal"},{"timestamp":"1636038780.0","content":"D is correct if the folder have the name of the user.","comment_id":"466890","upvote_count":"2","poster":"pfilourenco"},{"comment_id":"437643","upvote_count":"1","timestamp":"1635713940.0","content":"D for me","poster":"kiev"},{"poster":"skipbaylessfor3","upvote_count":"2","comment_id":"403375","timestamp":"1635705720.0","content":"Looks like it is D: https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-policies-s3.html\nScroll down a bit to the section labeled \"Allowing each IAM user access to a folder in a bucket\" and it explains how you can use the ${aws:username} policy variable to restrict users to their assigned folders only"},{"upvote_count":"2","poster":"sanjaym","comment_id":"352129","timestamp":"1633944840.0","content":"I'll go with D"},{"content":"I don't think it is D. Question is asking for folder level restriction. You cannot do this with IAM policy - only S3 ACL.","upvote_count":"1","comment_id":"323445","poster":"AWS_Noob_007","timestamp":"1633656420.0","comments":[{"comment_id":"381534","poster":"DerekKey","timestamp":"1635640440.0","upvote_count":"1","content":"WRONG - https://aws.amazon.com/premiumsupport/knowledge-center/s3-folder-user-access/"}]},{"timestamp":"1633492800.0","comment_id":"92967","content":"d for me","poster":"pitz","upvote_count":"2"},{"upvote_count":"2","timestamp":"1632368640.0","poster":"gfhbox0083","content":"D, for sure","comment_id":"89522"},{"content":"D looks good","comment_id":"75649","timestamp":"1632272460.0","poster":"Raj9","upvote_count":"2"}],"topic":"1","answer":"D","answer_ET":"D","choices":{"B":"Create a customer-managed CMK with a key policy granting ג€kms:Decryptג€ based on the ג€${aws:username}ג€ variable.","D":"Change the applicable IAM policy to grant S3 access to ג€Resourceג€: ג€arn:aws:s3:::examplebucket/${aws:username}/*ג€","A":"Use envelope encryption with the AWS-managed CMK aws/s3.","C":"Create a customer-managed CMK for each user. Add each user as a key user in their corresponding key policy."},"unix_timestamp":1584753600,"exam_id":29,"question_text":"A Security Engineer has discovered that, although encryption was enabled on the Amazon S3 bucket examplebucket, anyone who has access to the bucket has the ability to retrieve the files. The Engineer wants to limit access to each IAM user can access an assigned folder only.\nWhat should the Security Engineer do to achieve this?","question_images":[],"isMC":true,"question_id":45,"answer_images":[],"answer_description":"","answers_community":["D (90%)","10%"],"timestamp":"2020-03-21 02:20:00","url":"https://www.examtopics.com/discussions/amazon/view/17073-exam-aws-certified-security-specialty-topic-1-question-139/"}],"exam":{"id":29,"lastUpdated":"11 Apr 2025","provider":"Amazon","isBeta":false,"numberOfQuestions":509,"isImplemented":true,"isMCOnly":false,"name":"AWS Certified Security - Specialty"},"currentPage":9},"__N_SSP":true}