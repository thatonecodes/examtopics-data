{"pageProps":{"questions":[{"id":"71rvFvxXWErsCOtcnfzW","exam_id":24,"isMC":true,"discussion":[{"timestamp":"1739781720.0","upvote_count":"1","poster":"italiancloud2025","content":"Selected Answer: AD\nA: Sube el .zip a un bucket de S3 y luego usa la consola de Lambda para cargarlo desde allí, evitando el límite directo.\nD: Empaqueta la función como imagen de contenedor, súbela a ECR y crea la función referenciando esa imagen, lo cual permite manejar paquetes más grandes.","comment_id":"1357671"}],"unix_timestamp":1739781720,"answer_ET":"AD","answer_images":[],"answer_description":"","question_images":["https://img.examtopics.com/aws-certified-developer-associate-dva-c02/image29.png"],"url":"https://www.examtopics.com/discussions/amazon/view/156645-exam-aws-certified-developer-associate-dva-c02-topic-1/","timestamp":"2025-02-17 09:42:00","answers_community":["AD (100%)"],"question_id":406,"answer":"AD","question_text":"A developer compiles an AWS Lambda function and packages the result as a .zip file. The developer uses the Functions page on the Lambda console to attempt to upload the local packaged .zip file. When pushing the package ta Lambda, the console returns the following error:\n\n//IMG//\n\n\nWhich solutions can the developer use to publish the code? (Choose two.)","topic":"1","choices":{"A":"Upload the package to Amazon 3. Use the Functions page on the Lambda console to upload the package from the S3 location.","D":"Repackage the Lambda function as a Docker container image. Upload the image to Amazon Elastic Container Registry (Amazon ECR). Create a new Lambda function by using the Lambda console. Reference the image that is deployed to Amazon ECR.","C":"Use the update-function-code AWS CLI command. Pass the --publish parameter.","B":"Create an AWS Support ticket to increase the maximum package size.","E":"Sign the .zip file digitally. Create a new Lambda function by using the Lambda console. Update the configuration of the new Lambda function to include the Amazon Resource Name (ARN) of the code signing configuration."}},{"id":"k6gkAVs08Mf69cZdTktb","answer_ET":"B","isMC":true,"question_images":[],"answers_community":["B (100%)"],"timestamp":"2025-02-17 09:43:00","exam_id":24,"question_text":"A company runs an application on Amazon EC2 instances in an Auto Scaling group. The application experiences variable loads throughout each day.\n\nThe company needs to collect detailed metrics from the EC2 instances to right-size the instances. The company also wants to monitor custom application metrics to ensure the application is performing efficiently.\n\nWhich solution will meet these requirements?","answer":"B","choices":{"C":"Install the AWS SDK in the application’s cade. Update the application to use the AWS SDK to collect and publish the EC2 instance metrics and the custom application metrics.","A":"Install the AWS X-Ray agent on the instances. Configure the agent to collect the EC2 instance metrics and the custom application metrics.","B":"Install the Amazon CloudWatch agent on the instances. Configure the agent to collect the EC2 instance metrics and the custom application metrics.","D":"Configure AWS CloudTrail to capture and analyze the EC2 instance metrics and the custom application metrics."},"topic":"1","answer_images":[],"discussion":[{"poster":"italiancloud2025","timestamp":"1739781780.0","upvote_count":"1","content":"Selected Answer: B\nCloudWatch Agent te permite recopilar tanto métricas detalladas de las instancias EC2 (para ajustar su tamaño) como métricas personalizadas de la aplicación, todo sin modificar el código de la aplicación.","comment_id":"1357672"}],"url":"https://www.examtopics.com/discussions/amazon/view/156646-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_description":"","question_id":407,"unix_timestamp":1739781780},{"id":"pZxf5bkwxCofIN1xcB07","isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/153145-exam-aws-certified-developer-associate-dva-c02-topic-1/","unix_timestamp":1734488160,"exam_id":24,"topic":"1","question_images":[],"discussion":[{"timestamp":"1734488160.0","content":"Selected Answer: A\nWhy Use Query?\nTargeted Retrieval:\nSince the index is defined with the date, you can use the date as the partition key or sort key (depending on how the index is designed).\nThe Query operation allows you to specify the exact partition key (e.g., date = '2024-12-16' for the previous day).","comment_id":"1328234","poster":"ShakthiGCP","upvote_count":"2"}],"question_id":408,"choices":{"C":"BatchGetItem","A":"Query","B":"Scan","D":"GetItem"},"timestamp":"2024-12-18 03:16:00","answer_images":[],"answers_community":["A (100%)"],"answer_description":"","question_text":"A developer is creating an application that uses an Amazon DynamoDB table. The developer needs to develop code that reads all records that were added to the table during the previous day, creates HTML reports, and pushes the reports into third-party storage. The item size varies from 1 KB to 4 KB, and the index structure is defined with the date. The developer needs to minimize the read capacity that the application requires from the DynamoDB table.\n\nWhich DynamoDB API operation should the developer use in the code to meet these requirements?","answer_ET":"A","answer":"A"},{"id":"QMDtADgwFwVTqicR95GR","discussion":[{"comment_id":"905958","comments":[{"timestamp":"1685777640.0","content":"thanksss a lott!","comment_id":"913381","upvote_count":"1","poster":"yashika2005"},{"timestamp":"1698288600.0","comments":[{"comment_id":"1090722","poster":"[Removed]","upvote_count":"5","content":"I agree I think between A and B.- answer is B","timestamp":"1702003080.0"}],"upvote_count":"4","content":"The solution must make the most recent version of the application available at all times","poster":"minh12312312","comment_id":"1054252"},{"timestamp":"1690255860.0","content":"And what about this requisit? \"The solution must make the most recent version of the application available at all times\". Only the Answer B fulfill this part.","upvote_count":"4","comment_id":"962298","poster":"r3mo"}],"poster":"imvb88","content":"Selected Answer: AE\nWhy choose A over B? Problem is that B will tie an AMI with a specific version, so if there is a new version, we need to create a new AMI, and that contradicts with \"minimize the number of images that are created\". \n\nThen E over C, D? E is obviously complementary to A, where removing commands from User Data will make the instance booting process much faster (and of course with A you don't need that anymore). \n\nC and D also works but 1/not complementary with any other options; 2/CodeDeploy takes time to execute. \n\nHope this helps somebody struggling with this question.","timestamp":"1684937520.0","upvote_count":"38"},{"poster":"KillThemWithKindness","comments":[{"upvote_count":"2","content":"well if u choose B and E then this will resolve as well","timestamp":"1711850040.0","comment_id":"1186501","poster":"maurice2005"}],"content":"Selected Answer: AC\nOption E, which suggests removing operating system patching from the UserData script, might reduce the startup time. But this could leave your instances unpatched and vulnerable, which doesn't meet the requirement to apply all available security updates.","upvote_count":"15","timestamp":"1690660380.0","comment_id":"966617"},{"upvote_count":"1","poster":"Shamalka","content":"Selected Answer: AC\nA and C is the answer","timestamp":"1741278300.0","comment_id":"1365955"},{"upvote_count":"1","timestamp":"1735334880.0","content":"Selected Answer: AE\nAE is correct answer.","comment_id":"1332629","poster":"Arad"},{"content":"Selected Answer: AC\nB) Eliminated - Similar to option A, but also includes the latest version of the application in the AMI. While this reduces initialization time, it violates the requirement to \"minimize the number of images\" because it necessitates frequent AMI updates to keep the application version current.\n\nC) CodeDeploy ensures that the most recent version of the application is deployed during runtime.\n\nE) Eliminated - This violates the requirement to \"apply all available security updates\"","timestamp":"1734971340.0","upvote_count":"2","comment_id":"1330877","poster":"sumanshu"},{"poster":"Yuri_024","content":"Selected Answer: AE\n* The problem at hand is scaling-out events taking a long time (Instances need to spawn up fast, userData scripts must not run for long periods).\n* CodePipeline or CodeDeploy does not play any role there.\n* It does not mention an issue regarding the latest version of the application not being available.\n* So I choose A & E","timestamp":"1734447360.0","upvote_count":"1","comment_id":"1327970"},{"upvote_count":"1","poster":"youonebe","content":"Selected Answer: AC\nOption B is incorrect because:\nIncluding the application in the AMI would require new image creation for every application update\nResults in more frequent image builds than necessary\nIncreases maintenance overhead","timestamp":"1734098160.0","comment_id":"1326148"},{"comment_id":"1285013","upvote_count":"1","timestamp":"1726540080.0","poster":"albert_kuo","content":"Selected Answer: AC\nB. While similar to A, this option includes installing the latest version of the application in the AMI. This is not ideal because it would require creating a new AMI every time the application is updated, which doesn't align with the requirement to minimize the number of images created."},{"comment_id":"1267247","content":"Selected Answer: AC\nB would require new images for each new app version. Idea is to minimize image creation, so A is a better fit.\nE does speed up the process, BUT does not cover the app version requirement, nor the necessity to validate images, which codedeploy covers.","upvote_count":"2","poster":"wh1t4k3r","timestamp":"1723824180.0"},{"upvote_count":"1","timestamp":"1721301780.0","poster":"MrDurian","content":"IMO the correct answer is A and C.\n\nHaving a well set up AMI will reduce the need to run a long userData script.\n\nWhy not using B? Because that would couple the image with the app version. It is better to trigger a Code deploy that will deploy the latest version of the app on the 'optimized' AMI.\n\nRegarding answer E, it would also be correct IMO but A and C seems to be the perfect matching scenario","comment_id":"1250329"},{"timestamp":"1721006580.0","poster":"IYNH","comment_id":"1248013","upvote_count":"2","content":"Selected Answer: AC\nThe solution must make the most recent version of the application available at all times. B doesn't make sense because \"latest version at the time AMI is created\" becomes outdated when a newer one comes.\nC is obviously needed to make the actual \"latest\" version deploy."},{"comment_id":"1215118","content":"Selected Answer: BE\nBE is the correct answer.","timestamp":"1716311820.0","poster":"65703c1","upvote_count":"1"},{"poster":"MarcosSantos","comment_id":"1211040","content":"I choose BE. Is better response","upvote_count":"1","timestamp":"1715627220.0"},{"poster":"ufuomaapoki","timestamp":"1713011820.0","content":"Selected Answer: AC\nThe requirements are: \n1. Decreasing the time it takes for EC2 instances to become available during scale-out events.\n2. Ensuring the most recent version of the application is available.\n3. Applying all available security updates.\n4. Minimising the number of images created.\n\n[A] will satisfy requirements 1, 3, 4\n[B] is similar to A, but will involve more AMI images\n[C] Since the applications are on EC2 instances, CodeDeploy will do just fine to update the applications to the most recent version\n[E] Removing any command for updates will leave our instances susceptible to vulnerabilities. Some commands can be removed, leaving the essential ones","comment_id":"1194956","upvote_count":"2"},{"content":"B is faster than A. \nE delegates all run time to AMI build time on B option.","comment_id":"1186503","poster":"maurice2005","upvote_count":"2","timestamp":"1711850100.0"},{"upvote_count":"1","timestamp":"1711455720.0","comment_id":"1183301","content":"A and E.\nA because number of images needs to be minimized.\nE to speed up the boot time.","poster":"ibratoev"},{"upvote_count":"4","content":"Selected Answer: BE\nThe most practical answers","comment_id":"1179258","timestamp":"1711026600.0","poster":"KarBiswa"},{"timestamp":"1710258060.0","poster":"Abdullah22","comment_id":"1171801","content":"Selected Answer: AC\ngoing with ac","upvote_count":"1"},{"timestamp":"1709571480.0","content":"Selected Answer: AE\nB would need a new image every time the application is updated, so it doesnt meet requirements. Obviously you should remove the thing that is causing the problem in the first place with E","upvote_count":"1","poster":"TheFivePips","comment_id":"1165821"},{"upvote_count":"4","timestamp":"1708882680.0","poster":"SerialiDr","content":"Selected Answer: BE\nB.Use EC2 Image Builder to create an Amazon Machine Image (AMI) that includes the latest version of the application and all necessary patches and agents required to manage and run the application. This approach allows instances to launch faster because it minimizes the amount of setup required after instance startup, reducing the reliance on lengthy UserData scripts for initial setup. \n\nE.Remove any commands that perform operating system patching from the UserData script. Operating system patching can significantly increase the time it takes for an instance to become available, especially if there are many updates to apply. By removing these commands and ensuring that the AMI used already includes the latest patches, the startup time can be reduced.","comment_id":"1158991"},{"timestamp":"1706714280.0","upvote_count":"1","content":"Selected Answer: DE\nAnswers: DE\n\nA and B sound good, but since you only have 2 options they are not enough.\nC is not enough.\nD is wider and can build an AMI.\nE is a must to speed it up.","poster":"konieczny69","comment_id":"1136902"},{"comment_id":"1134937","upvote_count":"1","content":"Selected Answer: AE\nAE is correct.","timestamp":"1706531580.0","poster":"Ashwinvdm22"},{"comment_id":"1108748","content":"Option A suggests using EC2 Image Builder to create an AMI and install all the patches and agents needed for the application. This ensures that the AMI is pre-configured with the necessary updates and configurations, reducing the time it takes for instances to become available during scale-out events.\n\nOption E recommends removing operating system patching from the UserData script. This is because, with EC2 Image Builder, the patches are applied during the AMI creation process, so there's no need to perform patching in the UserData script. This helps in minimizing the time it takes for instances to launch during scale-out events.\n\nIt's A&E","timestamp":"1703858820.0","upvote_count":"1","poster":"BaYaga"},{"content":"Selected Answer: AD\nI think D > C\n\"The solution must make the most recent version of the application available at all times\"\nMost recent version of an application lives in source control and we need whole CI/CD for releasing this version which is use case for code pipeline, code deploy itself won't conduct the whole process","comment_id":"1104543","upvote_count":"1","timestamp":"1703413680.0","poster":"xdkonorek2"},{"timestamp":"1702831200.0","upvote_count":"1","poster":"Auronb","comment_id":"1099085","content":"Selected Answer: AC\nA-- Decrease the time for EC2 instance availability while minimizing the number of images created\nC-- Ensure the most recent version of the application( not d because it will also use code deploy)"},{"upvote_count":"1","content":"Selected Answer: CE\nThe script had time out issues so E covers that, again it must use minimum images so option C is suitable. A & B are created for confusions.","timestamp":"1702793940.0","comments":[{"upvote_count":"1","comment_id":"1157839","poster":"KarBiswa","content":"Modifying my answer to A,C","timestamp":"1708773600.0"}],"comment_id":"1098694","poster":"KarBiswa"},{"timestamp":"1702793820.0","upvote_count":"2","poster":"KarBiswa","content":"I would go for C&E","comment_id":"1098693"},{"poster":"Abdlhince","timestamp":"1702049040.0","content":"it is BC \nEC2 Image Builder (Option B):\n\nUsing EC2 Image Builder to create an AMI allows you to pre-bake the required configurations, application updates, and security patches into the image. This significantly reduces the launch time of instances as the AMI is already prepared with the necessary software and configurations.\nInstalling the latest version of the application along with patches and agents ensures that the AMI is up-to-date and secure.\n\nAWS CodeDeploy (Option C):\n\nAWS CodeDeploy allows you to deploy the most recent version of the application at runtime without the need to create a new AMI for every update. This helps in minimizing the number of images created and allows you to quickly roll out changes without launching new instances.\nThis approach also ensures that the most recent version of the application is always available.","upvote_count":"1","comment_id":"1091157"},{"upvote_count":"1","timestamp":"1701476400.0","comments":[{"poster":"Cable01011000","upvote_count":"1","content":"i just asked chatgpt for answer. It replied A and C. After reevaluation it was still A and C","timestamp":"1703174220.0","comment_id":"1102701"}],"content":"Selected Answer: BE\nBased on ChatGPT: BE","comment_id":"1085570","poster":"tqiu654"},{"content":"Selected Answer: AC\nA is correct. C vs E. C satisfies latest software req. E contradicts latest patch req., it is red herring to A bc you think that patches are unnecessary on a patched image, but they will eventually be.","poster":"ronn555","upvote_count":"1","comment_id":"1063924","timestamp":"1699280940.0"},{"content":"Selected Answer: AC\nA. Use o EC2 Image Builder para criar uma Amazon Machine Image (AMI). Instale todos os patches e agentes necessários para gerenciar e executar o aplicativo. Atualize a configuração de inicialização do grupo do Auto Scaling para usar a AMI.\n\nC. Configure o AWS CodeDeploy para implantar a versão mais recente do aplicativo em tempo de execução.","poster":"Jonalb","comment_id":"1054969","timestamp":"1698362520.0","upvote_count":"1"},{"poster":"Rameez1","content":"Selected Answer: AC\nIf I look for eliminating options which contradicts with the requirements BDE gets eliminated as below:\nB: Would need to recreate AMI for every version update (As per the requirement we need to minimize image creations) -> On contrary A will boost faster with all necessary packages and minimum number of AMI creations.\nD: Code pipeline can't deploy code of its own and would need code deploy for doing it -> Making C a better choice.\nE: User script is necessary for security updates.","upvote_count":"2","comment_id":"1042831","timestamp":"1697216460.0"},{"content":"Selected Answer: AC\nI think AC\nWhy not AE? -> \"must apply all available security updates\" on the question. need to update OS with userdata script","poster":"Cerakoted","timestamp":"1697091840.0","comment_id":"1041424","upvote_count":"1"},{"content":"Selected Answer: AC\n- Option B: Use EC2 Image Builder to create an Amazon Machine Image (AMI) that includes the latest version of the application and all necessary patches and agents. This ensures that the AMI is up-to-date and ready to use. Then, update the Auto Scaling group launch configuration to use this AMI.\n\n - Option C: Set up AWS CodeDeploy to deploy the most recent version of the application at runtime. CodeDeploy allows you to easily manage and deploy application updates without creating new AMIs. This helps ensure that the most recent version of the application is available without the need to recreate AMIs.\n\nThese steps minimize the number of images created (as you update the AMI when necessary) and allow for efficient updates of the application while ensuring security patches and updates are applied.","poster":"Die_fa_ed","comment_id":"1017982","timestamp":"1695745380.0","upvote_count":"1"},{"content":"I would say AC, but I see many answers AE. How AE is answer? the question says we need solution that also deploys latest code?","upvote_count":"3","timestamp":"1695495360.0","poster":"appuNBablu","comment_id":"1015241"},{"timestamp":"1693895520.0","upvote_count":"3","content":"Selected Answer: BE\nOption A is not correct because we need most recent version of application as well which is only fulfilled by Option B","poster":"Kashan6109","comment_id":"999169"},{"timestamp":"1693335840.0","upvote_count":"3","comment_id":"993441","content":"Selected Answer: AC\nOption E, which suggests removing any commands that perform operating system patching from the UserData script, might not be the best idea for ensuring the security and stability of your EC2 instances and application. Here's why it could be considered a bad idea:\n\nSecurity Vulnerabilities: Operating system patches often include security updates that address known vulnerabilities and protect your instances from potential threats. By removing patching from the UserData script, you might leave your instances exposed to security risks.","poster":"love777"},{"timestamp":"1692435420.0","comment_id":"985074","upvote_count":"5","poster":"ninomfr64","content":"Selected Answer: AC\nA) makes sure the instaces boot faster by having all patches and dependencies baked into the AMI (B would make it too, but would create a new AMI for any new app version thus conflicting with requirement \"minimize the number of images that are created\")\n\nC) When new EC2 instances are launched as part of an Auto Scaling group, CodeDeploy can deploy your revisions to the new instances automatically. This will meet the requirement to \"make the most recent application version available all the time\""},{"content":"Selected Answer: BE\nB. Using EC2 Image Builder to create an AMI ensures that the most recent version of the application, along with all necessary patches and agents, is pre-installed in the image. This reduces the time required during the scaling events because instances launched from this AMI will already have the application and updates in place.\n\nE. Removing operating system patching commands from the UserData script is essential because, during scale-out events, the UserData script is executed when a new EC2 instance is launched. If the script is performing time-consuming patching, it will increase the time it takes for the instance to become available. By removing the patching from the script and using a pre-built AMI with the latest patches, the instances will be ready much faster.","comment_id":"972147","poster":"jipark","upvote_count":"1","timestamp":"1691152560.0"},{"content":"Selected Answer: AE\nAE \nNot AC because app deployment from UserData is nonsense. Therefore, you don't need to change anything about deployment","poster":"[Removed]","upvote_count":"1","timestamp":"1689624420.0","comment_id":"954582"},{"content":"Selected Answer: AC\nA is obvious to reduce the time of EC2 available.\nC because codedeploy can deploy the lasted version on scale-out event of ASG\nhttps://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-auto-scaling.html","timestamp":"1689563160.0","upvote_count":"4","comment_id":"953796","poster":"acordovam"},{"content":"Selected Answer: BC\nI am not 100% confident but vote for B and C","upvote_count":"1","comment_id":"952202","timestamp":"1689411540.0","poster":"tttamtttam"},{"comment_id":"948382","upvote_count":"1","timestamp":"1689022320.0","content":"Selected Asnwer BC. \nI agree with eboehm2 \nB because it is the standard way to update patches. C Because it is necessary to update the app to the last version and B does not do that. You can do that automatically with CodeDeploy. https://docs.aws.amazon.com/codedeploy/latest/userguide/tutorials-auto-scaling-group.html\nhttps://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-auto-scaling.html","poster":"Pupina"},{"comment_id":"944565","upvote_count":"5","poster":"stlim83","timestamp":"1688641680.0","content":"Selected Answer: AC\nThe requirements: The solution must make the most recent version of the application available at all times and must apply all available security updates.\nB is incorrect because we need the most recent version of the application. this means we have to recreate AMI for every update.\nD is incorrect because CodePipeline can't deploy anything itself. It is using CodeDeploy for the deployment.\nE is also incorrect. because it must apply all available security updates. if we delete all commands for the os updates. it can't meet the requirements."},{"upvote_count":"1","comment_id":"922668","timestamp":"1686707820.0","content":"Selected Answer: BC\nMy guess is that the question is supposed to have you select 3 and not just 2. B&C fully solve the problem where E is just tidying up. That is if the updates are already installed, running the user script will just move on and still speed up the boot process.","poster":"eboehm2"},{"timestamp":"1684481520.0","poster":"mywogunleye","upvote_count":"2","content":"Ans: B & E \n\"The solution must make the most recent version of the application available at all times and must apply all available security updates\"","comment_id":"901733"},{"poster":"Nagendhar","comment_id":"895986","timestamp":"1683901140.0","upvote_count":"1","content":"Ans: A&C\n\nOption B suggests installing the latest version of the application, but does not specify how the patches and agents will be installed. Option D suggests using AWS CodePipeline, which is a continuous delivery service, not a deployment service, and does not apply patches and agents. Option E suggests removing operating system patching from the UserData script, but this does not address the requirement of making the most recent version of the application available at all times and applying security updates."},{"timestamp":"1682750760.0","poster":"ihebchorfi","upvote_count":"3","comment_id":"884100","content":"Selected Answer: AE\nA & E are complementary, other answers arent"},{"upvote_count":"4","comment_id":"880369","content":"Selected Answer: AE\nI would favor A instead of B. Question states \"The solution also must minimize the number of images that are created\" while each app code change would require a new image.","timestamp":"1682426100.0","poster":"[Removed]"},{"comment_id":"876523","poster":"Rpod","timestamp":"1682080500.0","content":"Selected Answer: BE\nShould it not be B and E ?","upvote_count":"1"},{"comment_id":"869489","poster":"robotgeek","content":"Poorly redacted question","upvote_count":"1","timestamp":"1681396080.0"},{"poster":"Untamables","comment_id":"850605","timestamp":"1679792940.0","upvote_count":"6","content":"Selected Answer: BE\nB and E.\nIt seems that the UserData script runs operating system patching in this scenario.\nhttps://docs.aws.amazon.com/imagebuilder/latest/userguide/what-is-image-builder.html"},{"content":"Selected Answer: AC\nA and C?\nhttps://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-auto-scaling.html","poster":"Watascript","timestamp":"1679752200.0","upvote_count":"5","comment_id":"850168"},{"comment_id":"849107","upvote_count":"4","timestamp":"1679645640.0","content":"Selected Answer: AE\nhow could A,B both be right?\neliminate UserData problem to deal the first deadly blow","poster":"clarksu"},{"poster":"March2023","timestamp":"1679622000.0","content":"Does anyone think this would be A and E?","comment_id":"848848","upvote_count":"3"}],"question_images":[],"answers_community":["AC (41%)","AE (40%)","Other"],"question_text":"An application uses an Amazon EC2 Auto Scaling group. A developer notices that EC2 instances are taking a long time to become available during scale-out events. The UserData script is taking a long time to run.\nThe developer must implement a solution to decrease the time that elapses before an EC2 instance becomes available. The solution must make the most recent version of the application available at all times and must apply all available security updates. The solution also must minimize the number of images that are created. The images must be validated.\nWhich combination of steps should the developer take to meet these requirements? (Choose two.)","isMC":true,"answer":"AC","answer_description":"","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/103721-exam-aws-certified-developer-associate-dva-c02-topic-1/","unix_timestamp":1679622000,"topic":"1","choices":{"C":"Set up AWS CodeDeploy to deploy the most recent version of the application at runtime.","D":"Set up AWS CodePipeline to deploy the most recent version of the application at runtime.","E":"Remove any commands that perform operating system patching from the UserData script.","B":"Use EC2 Image Builder to create an Amazon Machine Image (AMI). Install the latest version of the application and all the patches and agents that are needed to manage and run the application. Update the Auto Scaling group launch configuration to use the AMI.","A":"Use EC2 Image Builder to create an Amazon Machine Image (AMI). Install all the patches and agents that are needed to manage and run the application. Update the Auto Scaling group launch configuration to use the AMI."},"answer_ET":"AC","question_id":409,"timestamp":"2023-03-24 02:40:00","exam_id":24},{"id":"2K5vNgEKoYX4vB3WxFwN","answer":"D","answer_images":[],"discussion":[{"upvote_count":"1","content":"Selected Answer: D\nEl error HTTP 504 ocurre porque API Gateway tiene un tiempo de espera de integración que es menor que el tiempo total de ejecución (hasta 10 minutos). Refactorizando la función para iniciar un Step Functions state machine, se separa el procesamiento largo de la respuesta síncrona, evitando que API Gateway agote el tiempo de espera.","timestamp":"1739781840.0","poster":"italiancloud2025","comment_id":"1357673"}],"topic":"1","question_text":"A company is launching a feature that uses an HTTP API built with Amazon API Gateway and AWS Lambda. An API Gateway endpoint performs several independent tasks that run in a Lambda function. The independent tasks can take up to 10 minutes in total to finish running.\n\nUsers report that the endpoint sometimes returns an HTTP 604 status code. The Lambda function invocations are successful.\n\nWhich solution will stop the endpoint from returning the HTTP 504 status cade?","isMC":true,"answer_description":"","unix_timestamp":1739781840,"timestamp":"2025-02-17 09:44:00","exam_id":24,"question_images":[],"answers_community":["D (100%)"],"url":"https://www.examtopics.com/discussions/amazon/view/156647-exam-aws-certified-developer-associate-dva-c02-topic-1/","question_id":410,"answer_ET":"D","choices":{"A":"Increase the Lambda function’s timeout value.","B":"Increase the reserved concurrency of the Lambda function.","D":"Refactor the Lambda function to start an AWS Step Functions state machine.","C":"Increase the memory that is available to the Lambda function."}}],"exam":{"isMCOnly":true,"isBeta":false,"id":24,"numberOfQuestions":551,"isImplemented":true,"lastUpdated":"11 Apr 2025","name":"AWS Certified Developer - Associate DVA-C02","provider":"Amazon"},"currentPage":82},"__N_SSP":true}