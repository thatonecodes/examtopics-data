{"pageProps":{"questions":[{"id":"NpSNNXXhdaNtAqMtXCIh","url":"https://www.examtopics.com/discussions/amazon/view/95014-exam-aws-certified-solutions-architect-associate-saa-c03/","question_id":206,"answer_description":"","question_text":"A company has a popular gaming platform running on AWS. The application is sensitive to latency because latency can impact the user experience and introduce unfair advantages to some players. The application is deployed in every AWS Region. It runs on Amazon EC2 instances that are part of Auto Scaling groups configured behind Application Load Balancers (ALBs). A solutions architect needs to implement a mechanism to monitor the health of the application and redirect traffic to healthy endpoints.\n\nWhich solution meets these requirements?","answers_community":["A (100%)"],"exam_id":31,"answer_images":[],"timestamp":"2023-01-13 11:57:00","answer_ET":"A","answer":"A","unix_timestamp":1673607420,"choices":{"C":"Create an Amazon CloudFront distribution and specify Amazon S3 as the origin server. Configure the cache behavior to use origin cache headers. Use AWS Lambda functions to optimize the traffic.","A":"Configure an accelerator in AWS Global Accelerator. Add a listener for the port that the application listens on, and attach it to a Regional endpoint in each Region. Add the ALB as the endpoint.","B":"Create an Amazon CloudFront distribution and specify the ALB as the origin server. Configure the cache behavior to use origin cache headers. Use AWS Lambda functions to optimize the traffic.","D":"Configure an Amazon DynamoDB database to serve as the data store for the application. Create a DynamoDB Accelerator (DAX) cluster to act as the in-memory cache for DynamoDB hosting the application data."},"isMC":true,"question_images":[],"discussion":[{"upvote_count":"22","poster":"Aninina","timestamp":"1689366960.0","comment_id":"775981","content":"Selected Answer: A\nA. Configure an accelerator in AWS Global Accelerator. Add a listener for the port that the application listens on, and attach it to a Regional endpoint in each Region. Add the ALB as the endpoint.\n\nAWS Global Accelerator directs traffic to the optimal healthy endpoint based on health checks, it can also route traffic to the closest healthy endpoint based on geographic location of the client. By configuring an accelerator and attaching it to a Regional endpoint in each Region, and adding the ALB as the endpoint, the solution will redirect traffic to healthy endpoints, improving the user experience by reducing latency and ensuring that the application is running optimally. This solution will ensure that traffic is directed to the closest healthy endpoint and will help to improve the overall user experience."},{"upvote_count":"14","timestamp":"1700313780.0","comment_id":"901119","content":"Selected Answer: A\nDelivery gaming content --> AWS GLOBAL ACCELERATOR","poster":"michellemeloc"},{"upvote_count":"4","comment_id":"1107938","content":"Selected Answer: A\nWould have selected A just because B, C and D don't make any sense or have nothing to do with the requirements. But now learned that Global Accelerator checks health of resources BEHIND ALB/NLB, so it meets the requirements.","timestamp":"1719583020.0","poster":"pentium75"},{"poster":"mwwt2022","upvote_count":"5","comment_id":"1107828","content":"gaming platform -> Can't be CloudFront. Probably go for global accelerator","timestamp":"1719576000.0"},{"poster":"Ruffyit","comment_id":"1069171","upvote_count":"2","timestamp":"1715583360.0","content":"A. Configure an accelerator in AWS Global Accelerator. Add a listener for the port that the application listens on, and attach it to a Regional endpoint in each Region. Add the ALB as the endpoint.\n\nAWS Global Accelerator directs traffic to the optimal healthy endpoint based on health checks, it can also route traffic to the closest healthy endpoint based on geographic location of the client. By configuring an accelerator and attaching it to a Regional endpoint in each Region, and adding the ALB as the endpoint, the solution will redirect traffic to healthy endpoints, improving the user experience by reducing latency and ensuring that the application is running optimally. This solution will ensure that traffic is directed to the closest healthy endpoint and will help to improve the overall user experience."},{"comment_id":"1002595","poster":"Guru4Cloud","upvote_count":"2","timestamp":"1709918280.0","content":"Selected Answer: A\nA. Configure an accelerator in AWS Global Accelerator. Add a listener for the port that the application listens on, and attach it to a Regional endpoint in each Region. Add the ALB as the endpoint"},{"timestamp":"1706489760.0","comment_id":"965899","content":"Is any answer relevant to the question?","poster":"bjexamprep","upvote_count":"3"},{"content":"Selected Answer: A\nB. While CloudFront can help with caching and content delivery, it does not provide the mechanism to monitor the health of the application or perform traffic redirection based on health checks.\n\nC. This configuration is suitable for static content delivery but does not address the health monitoring and traffic redirection requirements of the application.\n\nD. While this can enhance performance, it does not monitor the health of the application or redirect traffic based on health checks.\n\nTherefore, option A is the most suitable solution as it leverages AWS Global Accelerator to monitor application health, route traffic to healthy endpoints, and optimize the user experience while addressing latency concerns.","timestamp":"1703842680.0","poster":"cookieMr","upvote_count":"6","comment_id":"937757"},{"timestamp":"1700899920.0","comment_id":"906435","poster":"antropaws","upvote_count":"2","content":"Selected Answer: A\nAgree with A"},{"comment_id":"816920","upvote_count":"9","comments":[{"content":"Though we seem to have http/https here, otherwise they could not use ALBs","poster":"pentium75","timestamp":"1719582780.0","comment_id":"1107934","upvote_count":"2"}],"poster":"Bhrino","timestamp":"1692631380.0","content":"Selected Answer: A\nGlobal accelerators can be used for non http cases such as UDP, tcp , gaming , or voip"},{"timestamp":"1689433680.0","comment_id":"776846","poster":"mhmt4438","content":"Selected Answer: A\nCorrect answer is A","upvote_count":"2"},{"timestamp":"1689367740.0","comment_id":"775992","poster":"AHUI","upvote_count":"2","content":"A: \nhttps://www.examtopics.com/discussions/amazon/view/46403-exam-aws-certified-solutions-architect-associate-saa-c02/"},{"poster":"alanp","upvote_count":"9","timestamp":"1689317460.0","comment_id":"775203","content":"A. When you have an Application Load Balancer or Network Load Balancer that includes multiple target groups, Global Accelerator considers the load balancer endpoint to be healthy only if each target group behind the load balancer has at least one healthy target. If any single target group for the load balancer has only unhealthy targets, Global Accelerator considers the endpoint to be unhealthy.\nhttps://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-health-check-options.html"},{"upvote_count":"2","poster":"Morinator","timestamp":"1689238620.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/global-accelerator/latest/dg/about-endpoint-groups-health-check-options.html","comment_id":"774352"}],"topic":"1"},{"id":"TbKvfSLUz3uGEBgDJWaG","answer_ET":"D","question_text":"A company has one million users that use its mobile app. The company must analyze the data usage in near-real time. The company also must encrypt the data in near-real time and must store the data in a centralized location in Apache Parquet format for further processing.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","answer_description":"","question_id":207,"discussion":[{"poster":"mhmt4438","upvote_count":"55","timestamp":"1689434040.0","content":"Selected Answer: D\nD. Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data.\n\nThis solution will meet the requirements with the least operational overhead as it uses Amazon Kinesis Data Firehose, which is a fully managed service that can automatically handle the data collection, data transformation, encryption, and data storage in near-real time. Kinesis Data Firehose can automatically store the data in Amazon S3 in Apache Parquet format for further processing. Additionally, it allows you to create an Amazon Kinesis Data Analytics application to analyze the data in near real-time, with no need to manage any infrastructure or invoke any Lambda function. This way you can process a large amount of data with the least operational overhead.","comment_id":"776851","comments":[{"poster":"antropaws","comment_id":"906437","content":"https://aws.amazon.com/blogs/big-data/analyzing-apache-parquet-optimized-data-using-amazon-kinesis-data-firehose-amazon-athena-and-amazon-redshift/","timestamp":"1700900280.0","upvote_count":"2"},{"comment_id":"838443","upvote_count":"2","timestamp":"1694644260.0","poster":"WherecanIstart","content":"Thanks for the explanation!"},{"content":"Apache Parquet format processing was not mentioned in the answer options. Strange.","poster":"LuckyAro","comment_id":"783027","timestamp":"1689911700.0","upvote_count":"7"},{"upvote_count":"3","comment_id":"784134","poster":"jainparag1","timestamp":"1690011240.0","content":"Nicely explained. Thanks."}]},{"comment_id":"937761","poster":"cookieMr","content":"Selected Answer: D\nA. requires invoking an Lambda to send the data to the analytics application. This introduces additional operational overhead and complexity.\n\nB. While EMR is a powerful tool for big data processing, it requires more operational management and configuration compared to Kinesis Data Analytics.\n\nC. introduces unnecessary complexity by involving EMR for data analysis when Kinesis Data Analytics can perform the analysis in a more streamlined and automated manner.\n\nTherefore, option D is the most suitable solution as it leverages Kinesis Data Firehose for data ingestion, stores the data in S3, and utilizes Kinesis Data Analytics for near-real-time analysis, providing a low operational overhead solution for data usage analysis and encryption.","timestamp":"1703842860.0","upvote_count":"8"},{"poster":"farnamjam","content":"Selected Answer: D\nA and B are out.\nKinesis Data Streams cannot directly send data to S3 by itself","upvote_count":"3","timestamp":"1722135360.0","comment_id":"1133833"},{"timestamp":"1715585040.0","upvote_count":"3","comment_id":"1069179","content":"D. Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data.\n\nThis solution will meet the requirements with the least operational overhead as it uses Amazon Kinesis Data Firehose, which is a fully managed service that can automatically handle the data collection, data transformation, encryption, and data storage in near-real time. Kinesis Data Firehose can automatically store the data in Amazon S3 in Apache Parquet format for further processing. Additionally, it allows you to create an Amazon Kinesis Data Analytics application to analyze the data in near real-time, with no need to manage any infrastructure or invoke any Lambda function. This way you can process a large amount of data with the least operational overhead.","poster":"Ruffyit"},{"timestamp":"1711693140.0","poster":"TariqKipkemei","comment_id":"1020441","upvote_count":"2","content":"Selected Answer: D\nCreate an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data"},{"content":"Selected Answer: D\nD. Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data","upvote_count":"2","timestamp":"1710161460.0","comment_id":"1004646","poster":"Guru4Cloud"},{"upvote_count":"1","poster":"AHUI","comment_id":"776044","content":"D:\nhttps://www.examtopics.com/discussions/amazon/view/82022-exam-aws-certified-solutions-architect-associate-saa-c02/","timestamp":"1689372060.0"},{"content":"Selected Answer: D\nD. Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data.\n\nAmazon Kinesis Data Firehose can automatically encrypt and store the data in Amazon S3 in Apache Parquet format for further processing, which reduces the operational overhead. It also allows for near-real-time data analysis using Kinesis Data Analytics, which is a fully managed service that makes it easy to analyze streaming data using SQL. This solution eliminates the need for setting up and maintaining an EMR cluster, which would require more operational overhead.","timestamp":"1689367320.0","poster":"Aninina","comment_id":"775986","upvote_count":"3"}],"answers_community":["D (100%)"],"unix_timestamp":1673736120,"topic":"1","isMC":true,"timestamp":"2023-01-14 23:42:00","choices":{"C":"Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon EMR cluster to analyze the data.","D":"Create an Amazon Kinesis Data Firehose delivery stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data.","A":"Create an Amazon Kinesis data stream to store the data in Amazon S3. Create an Amazon Kinesis Data Analytics application to analyze the data. Invoke an AWS Lambda function to send the data to the Kinesis Data Analytics application.","B":"Create an Amazon Kinesis data stream to store the data in Amazon S3. Create an Amazon EMR cluster to analyze the data. Invoke an AWS Lambda function to send the data to the EMR cluster."},"answer_images":[],"question_images":[],"answer":"D","exam_id":31,"url":"https://www.examtopics.com/discussions/amazon/view/95347-exam-aws-certified-solutions-architect-associate-saa-c03/"},{"id":"5XR5iYwcE1CwALBuTiHm","isMC":true,"unix_timestamp":1673564400,"answer_ET":"A","timestamp":"2023-01-13 00:00:00","discussion":[{"comment_id":"827120","content":"Selected Answer: A\nRds proxy is for too many connections, not for performance","poster":"Steve_4542636","upvote_count":"35","comments":[{"content":"to use elasticache , you need to perform heavy code change ,aand also elasticache do chaching that can improve read perfromance but will not provide scalability","upvote_count":"9","comments":[{"comments":[{"content":"minimize *architectural changes, NOT code changes","poster":"chickenmf","upvote_count":"2","timestamp":"1710717240.0","comment_id":"1176110"}],"upvote_count":"3","poster":"pentium75","comment_id":"1115689","content":"We should \"minimize\", not \"avoid\", code changes.","timestamp":"1704621000.0"}],"timestamp":"1687495560.0","poster":"vipyodha","comment_id":"931221"},{"timestamp":"1712250180.0","upvote_count":"3","poster":"JackyCCK","comment_id":"1189460","content":"RDS Proxy: It helps applications improve scalability and performance by managing database connections and pooling, which can significantly reduce the load on the database"},{"comments":[{"upvote_count":"4","comment_id":"1154626","timestamp":"1708424220.0","content":"“Data in the cache is never stale.\nBecause the data in the cache is updated every time it's written to the database, the data in the cache is always current and updated whenever data is written to the database.” https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html#Strategies.WriteThrough","poster":"Maru86"}],"upvote_count":"4","comment_id":"1135447","poster":"Mkenya08","timestamp":"1706582340.0","content":"ElastiCache stores data in memory, which means it may not always have the most up-to-date information. This might be acceptable for certain use cases where slightly stale data is acceptable, but for applications like gaming scores, real-time accuracy is often crucial."},{"poster":"Yadav_Sanjay","comment_id":"899762","upvote_count":"9","comments":[{"poster":"rfelipem","timestamp":"1685560260.0","comment_id":"911520","upvote_count":"5","content":"Users are starting to experience long delays and interruptions caused by the \"read performance\" of the database... While the score is dynamic, there is also read activity in the DB that is causing the delays and outages and this can be improved with Elastic Cache."}],"timestamp":"1684301400.0","content":"Can't use cache as score gates updated. If data would have been static then definitely can go with A. But here score is dynamic..."}],"timestamp":"1677775560.0"},{"content":"Selected Answer: B\nRDX proxy will :\"improve the user experience while minimizing changes\".","timestamp":"1680288360.0","upvote_count":"26","comment_id":"857364","comments":[{"poster":"pentium75","upvote_count":"3","timestamp":"1704620940.0","comment_id":"1115688","content":".. but not address issues with \"database read performance\"."}],"poster":"kraken21"},{"timestamp":"1733495640.0","comment_id":"1322791","content":"Selected Answer: A\nusers are experiencing long delays. This is the priority issue , so we need to use cache service urgently to solve this issues. If we need performence , we can use proxy. But in this case , latency is our priority. So Answer is A.","poster":"thiahthura","upvote_count":"1"},{"upvote_count":"1","timestamp":"1732519260.0","content":"Selected Answer: A\nA: Correct. Not suitable for write-heavy applications though.\nB: Reduces pressure on the database by reusing connections, but cannot address the slow-read problem.\nC: Why? Who would do this?\nD: It completely changes the architecture.","comment_id":"1317356","poster":"LeonSauveterre"},{"timestamp":"1731050580.0","comment_id":"1308663","upvote_count":"2","content":"Selected Answer: A\nUse Amazon ElastiCache in front of the database.","poster":"Mish"},{"poster":"pujithacg8","content":"A. Use Amazon ElastiCache in front of the database.\n\nExplanation:\n\nAmazon ElastiCache is a managed caching service that can be placed in front of the database to cache frequently accessed data. By caching the most common queries, it can significantly reduce the load on the database, leading to faster response times and an improved user experience.\nThis solution minimizes changes to the existing architecture because it doesn't require modifications to the application's core logic or database schema. Instead, it optimizes performance by reducing the need for repetitive database reads.\nElastiCache supports both Redis and Memcached, which are widely used for caching in web applications.","upvote_count":"2","comment_id":"1259151","timestamp":"1722476520.0"},{"upvote_count":"2","timestamp":"1720120320.0","content":"Selected Answer: A\nA for sure","poster":"ChymKuBoy","comment_id":"1242254"},{"comment_id":"1238932","poster":"Mayank0502","timestamp":"1719609540.0","upvote_count":"1","content":"Selected Answer: B\nanswer should be B"},{"timestamp":"1719464040.0","content":"Selected Answer: A\nNot B because this can help with connection management and improve scalability and availability but won't directly address read performance issues caused by high read traffic.","comment_id":"1237875","poster":"Manjeet_Kumar","upvote_count":"2"},{"poster":"MomenAWS","comment_id":"1229609","content":"Selected Answer: A\nAnother vague question from AWS: I would prefer A over B","timestamp":"1718250720.0","upvote_count":"2"},{"upvote_count":"2","poster":"[Removed]","timestamp":"1718224920.0","content":"A\n\nCaching frequently accessed data: ElastiCache can be used to reduce the load on your database by caching frequently accessed data. This can improve application performance and reduce the number of read queries to your database.\n\nReal-time applications: If your application requires real-time data processing, ElastiCache can help. Since it provides sub-millisecond response times, it can be used to power applications like gaming leaderboards, chat applications, and real-time analytics.","comment_id":"1229496"},{"poster":"rohitph","upvote_count":"1","comment_id":"1226821","content":"Selected Answer: B\nask is - minimum changes.\nRDS Proxy is a feature of Amazon RDS.\nThis would be easiest option to try.","timestamp":"1717863540.0"},{"poster":"MandAsh","comment_id":"1223779","content":"Selected Answer: A\nElasticache - reduce load due to read operations\nRDS proxy - reduce load due to lot of connections\nHere problem is read operations thus A is solution","upvote_count":"3","timestamp":"1717445280.0"},{"timestamp":"1716683100.0","content":"Selected Answer: A\nI vote for Elasticache","upvote_count":"2","comment_id":"1218649","poster":"hb0011"},{"content":"Selected Answer: B\nB - \"Use RDS Proxy between the application and the database.\"\nB because it improves the user experience while minimizing the changes.\nIf A is used, you have to modify your application to get the data from the cache first, if it is not there, then get from db; and also to invalidate the cache if there is a db update.","comment_id":"1212985","timestamp":"1715966340.0","upvote_count":"1","poster":"rjjkc"},{"comment_id":"1186172","upvote_count":"2","timestamp":"1711814460.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/Welcome.html","poster":"osmk"},{"content":"Selected Answer: B\nRDS Proxy: It helps applications improve scalability and performance by managing database connections and pooling, which can significantly reduce the load on the database. By using RDS Proxy, you can offload connection management tasks from your application and optimize database access, thereby improving read performance without making significant changes to the application's architecture.\n\nMinimizing Changes: Implementing RDS Proxy does not require architectural changes to the application. It works as a proxy layer between the application and the RDS database, so the application code remains unchanged. This minimizes the effort and risk associated with making modifications to the application.","comment_id":"1184292","timestamp":"1711564740.0","upvote_count":"2","poster":"Uzbekistan"},{"comment_id":"1178504","timestamp":"1710952500.0","content":"Selected Answer: A\nElastiCache stores data in memorY RESOLVE THE READING Issue","upvote_count":"2","poster":"alawada"},{"timestamp":"1709289480.0","poster":"bujuman","content":"Selected Answer: A\nA will be the best option regarding read performance and based on following link:\nhttps://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/creating-elasticache-cluster-with-RDS-settings.html","comment_id":"1163420","upvote_count":"3"},{"content":"Selected Answer: B\nA. Use Amazon ElastiCache in front of the database:\nCaching frequently accessed data in ElastiCache can help reduce the load on the database and improve read performance.\nHowever, it's essential to note that while ElastiCache can significantly enhance read performance by serving frequently accessed data from memory, it might not entirely eliminate long delays and interruptions if the root cause is related to the database itself or if the caching strategy is not effectively implemented.\n\nB. Use RDS Proxy between the application and the database:\nHelps improve database connection management, reducing the number of open connections to the database and enhancing overall performance.\nRDS Proxy handles connection pooling, which means it can efficiently manage and reuse database connections, reducing the overhead of establishing new connections for each query.\nIt supports features like read/write splitting, which directs read queries to read replicas, further distributing the load.","timestamp":"1708967640.0","poster":"TheFivePips","comments":[{"upvote_count":"2","timestamp":"1708967820.0","poster":"TheFivePips","content":"In this scenario, game scores are updated frequently so caching seems less useful than a proxy","comment_id":"1159961"}],"comment_id":"1159960","upvote_count":"2"},{"comment_id":"1158360","content":"The discussion is really helpful thanks everyone.","timestamp":"1708835940.0","poster":"[Removed]","upvote_count":"1"},{"timestamp":"1708829760.0","content":"RDS Proxy between the application and the database would likely be the better solution to improve user experience while minimizing changes to the application's architecture.","upvote_count":"2","comment_id":"1158307","poster":"sirasdf"},{"poster":"Maru86","upvote_count":"3","content":"Selected Answer: A\nIt's Implementing write-through caching strategy with ElastiCache “Data in the cache is never stale.\nBecause the data in the cache is updated every time it's written to the database, the data in the cache is always current and updated whenever data is written to the database.” https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Strategies.html#Strategies.WriteThrough","comment_id":"1154624","timestamp":"1708423980.0"},{"timestamp":"1708373460.0","content":"Selected Answer: B\nConnection Pooling: RDS Proxy intelligently manages a pool of database connections, reusing them across multiple application requests. This dramatically reduces the overhead associated with constantly opening and closing database connections, especially during traffic surges.\nOverload Protection: RDS Proxy can throttle or queue application requests if they would overwhelm the database. This protects your database from excessive load and helps maintain availability.\nEfficient Scaling: RDS Proxy allows your applications to scale more gracefully without hitting database connection limits. It manages connection pooling and sharing, increasing the number of concurrent connections your database can support from individual applications.\nBursty Workloads: Great for applications experiencing unpredictable traffic patterns. RDS Proxy handles spikes in requests without disrupting database performance.","comment_id":"1154254","poster":"SVDK","upvote_count":"1"},{"poster":"vip2","comment_id":"1152810","timestamp":"1708202640.0","content":"Selected Answer: A\nA is correct.\n\nElastiCache for caching, which accelerates application and database performance\n\nRDS proxy allows applications to pool and share connections established with the database, improving database efficiency and application scalability. It does not however specifically improve read performance like a caching layer would","upvote_count":"2"},{"upvote_count":"2","content":"Selected Answer: A\nA. Use Amazon ElastiCache in front of the database.","poster":"Rezaee","timestamp":"1706949360.0","comment_id":"1139094"},{"content":"Selected Answer: A\nWhile RDS Proxy addresses problems regarding too many connections and time-outs, ElastiCache is the solution for read performance.","comment_id":"1134777","upvote_count":"2","timestamp":"1706519100.0","poster":"lucashpunkt"},{"comment_id":"1127413","upvote_count":"2","content":"minimizing teh changes to application disqualifies elasticache thus RDS proxy is the only option left","poster":"Ditesh","timestamp":"1705771260.0"},{"timestamp":"1704617820.0","upvote_count":"2","comments":[{"content":"No one is talking about Redis here. Elasticache is just caching in general (Redis OR MemCached). \n\"long delays and interruptions that are caused by database read performance\" will be fixed by caching to reduce read load.\nB is for connection pooling which is NOT a problem here.","timestamp":"1705525200.0","upvote_count":"2","comment_id":"1125318","poster":"awsgeek75"}],"poster":"anikolov","comment_id":"1115657","content":"Selected Answer: B\nMy vote is for \"B\". It is Not \"A\", because ElastiCache for Redis is designed to be protocol compliant with open source Redis, which will require \"App Arch\" changes"},{"comment_id":"1112128","timestamp":"1704219300.0","content":"Selected Answer: A\nC,D are too much architecture work.\nB uses RDS Proxy which is mainly for connection pooling and availability issues and rarely helps with read performance issues.\nA is caching which is ideal for solving read issues","upvote_count":"5","comments":[{"upvote_count":"1","poster":"saymolet","timestamp":"1709485140.0","content":"\"The company wants to improve the user experience while minimizing changes to the application’s architecture.\" A would require heavy code changes to the application","comment_id":"1164950"}],"poster":"awsgeek75"},{"timestamp":"1703896860.0","poster":"farnamjam","content":"Selected Answer: A\none Elasticache usecase is for Gaming Leaderboards which are computationally complex","comment_id":"1109304","upvote_count":"3"},{"comment_id":"1108385","upvote_count":"4","poster":"pentium75","timestamp":"1703832660.0","content":"Selected Answer: A\nA will require code changes, but we should 'minimize changes to the architecture', not \"the code\". We're just introducing ONE additional component, as we would also with B.\n\nB, RDS Proxy would help if there are too many connections (not the issue here), querying multiple databases in parallel (not the issue here as there is only one DB) and failover between instances (not the issue here).\n\nC - Would completely overhaul the architecture\n\nD - From relational database to NoSQL database is bigger \"architectural change\" then placing cache in front of DB."},{"comment_id":"1105379","content":"Selected Answer: B\nThe answer should be B, Use RDS Proxy between the application and the database. The question emphasizes the need to minimize changes to the application's architecture, and RDS Proxy is the only option that meets this requirement without compromising performance improvement.\nRDS Proxy provides a lightweight and efficient way to enhance database performance while maintaining the existing application structure. It functions as a middle layer between the application and the database, optimizing data transfer, offloading authentication, and managing connections without requiring code changes to the application.","upvote_count":"3","timestamp":"1703520060.0","poster":"ale_brd_111"},{"poster":"Cyberkayu","upvote_count":"3","comment_id":"1095957","content":"Selected Answer: A\nDepends on the type of score. If this is a football game score which do not update that frequent during the game, and user is querying for the same dataset, cache will help","timestamp":"1702520220.0"},{"timestamp":"1702263000.0","comment_id":"1093030","upvote_count":"3","content":"Selected Answer: B\nElastiCache may help, but RDS Proxy is a more targeted solution for managing database connections and enhancing scalability without significant changes to the application’s architecture.","poster":"ansagr"},{"comment_id":"1092566","upvote_count":"3","timestamp":"1702220340.0","content":"Selected Answer: B\nMinimal change : First you add a proxy, it will minimize the exchanges with the DB and if it's still not enough you can think about adding an Elasticache that will imply more changes, but first since we have to make it simple we can add a proxy.","poster":"Mikado211"},{"timestamp":"1701394440.0","upvote_count":"2","content":"Selected Answer: B\nWe should not displays scores from Cache. Answer is B","comment_id":"1084863","poster":"com7"},{"comment_id":"1083931","timestamp":"1701311700.0","poster":"meowruki","content":"Selected Answer: B\nRDS Proxy: RDS Proxy is designed to manage database connections, pooling, and failover, improving database scalability and performance. It helps reduce the number of open connections to the database, which can be a common source of performance issues.\n\n Minimizing Changes: RDS Proxy can be introduced without significant changes to the application's architecture. It acts as an intermediary between the application and the database, handling connection pooling and reducing the load on the database.\n\nOption A (Use Amazon ElastiCache): While Amazon ElastiCache can improve performance by caching frequently accessed data, it's not specifically designed to address database read performance issues caused by connection management.","upvote_count":"4"},{"poster":"xdkonorek2","content":"Selected Answer: A\nI'd go for B at first but gaming score data is written once and is highly cachable","timestamp":"1700834160.0","upvote_count":"3","comment_id":"1079304"},{"timestamp":"1700810100.0","content":"Using RDS Proxy, you can handle unpredictable surges in database traffic. Otherwise, these surges might cause issues due to oversubscribing connections or creating new connections at a fast rate. RDS Proxy establishes a database connection pool and reuses connections in this pool.","upvote_count":"1","poster":"Abobaloyi","comment_id":"1079089"},{"timestamp":"1700554860.0","comment_id":"1076109","poster":"hungta","content":"Selected Answer: B\nA. Use Amazon ElastiCache in front of the database:\n\nElastiCache can improve performance by caching frequently accessed data, reducing the load on the database.\nThis solution might alleviate some read performance issues but might not entirely solve delays caused by database read performance.\n-> So, vote B","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nhttps://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy.html","comment_id":"1072942","poster":"dilaaziz","timestamp":"1700184000.0"},{"upvote_count":"2","timestamp":"1698903840.0","comment_id":"1060287","content":"Selected Answer: A\nElastiCache can help speed up the read performance of the database by caching\nfrequently accessed data, reducing latency and allowing the application to access the data\nmore quickly. This solution requires minimal modifications to the current architecture, as\nElastiCache can be used in conjunction with the existing Amazon RDS for MySQL\ndatabase.","poster":"Pankaj_007"},{"upvote_count":"3","comment_id":"1051259","content":"Selected Answer: A\nA for performance","poster":"canonlycontainletters1","timestamp":"1698020220.0"},{"timestamp":"1697556600.0","comments":[{"content":"but this use case is using RDS..... will Amazon ElastiCache still be relevant?","poster":"JA2018","comment_id":"1314695","timestamp":"1732025760.0","upvote_count":"1"}],"poster":"rvca231","content":"Seems like RDS Proxy is used for too many connections, while ElastiCache is general performance improvement.\n\nQ: Can I use Amazon ElastiCache for use cases other than caching?\nYes. ElastiCache for Redis can be used as a primary in-memory key-value data store, providing fast, sub millisecond data performance, high availability and scalability. You can choose to configure a 500-node cluster that ranges between 83 shards (one master and five replicas per shard) and 500 shards (single master and no replicas), giving you up to 340 TB of memory. Support for 500-node cluster is available with Amazon ElastiCache for Redis starting with Redis version 5.0.6. See here for other use cases, such as leaderboards, rate limiting, queues, and chat.\n\nfrom: https://aws.amazon.com/elasticache/faqs/","comment_id":"1046145","upvote_count":"2"},{"upvote_count":"2","content":"Selected Answer: A\nA. Use Amazon ElastiCache in front of the database.\n\nIt does not says the score is in real time, so elasticache is the choice","comment_id":"1045576","poster":"suflam3","timestamp":"1697520840.0"},{"poster":"daniel1","timestamp":"1697132700.0","comment_id":"1041981","upvote_count":"2","content":"Selected Answer: A\nA. Use Amazon ElastiCache in front of the database.\n\nBy implementing Amazon ElastiCache, the company can alleviate the load on the RDS instance by caching frequent query results, which should improve database read performance and enhance the user experience with minimal architectural changes. --By ChatGPT4"},{"comment_id":"1025223","timestamp":"1696465380.0","upvote_count":"1","content":"Ans B - Amazon RDS Proxy: Amazon RDS Proxy is a fully managed database proxy service that helps improve the scalability and availability of your RDS databases. It can help reduce the load on your database and improve connection management.","poster":"prabhjot"},{"content":"Selected Answer: B\nOption A suggests using Amazon ElastiCache, which is a good solution for caching frequently accessed data but may require more application changes compared to RDS Proxy.","comment_id":"1020843","timestamp":"1695995700.0","poster":"vijaykamal","upvote_count":"1"},{"upvote_count":"3","timestamp":"1695961380.0","comment_id":"1020444","content":"Selected Answer: A\nRead performance = Amazon ElastiCache\nDB connection timeouts = RDS Proxy","poster":"TariqKipkemei"},{"poster":"JKevin778","upvote_count":"2","content":"Selected Answer: A\n“The application stores data in an Amazon RDS for MySQL databas”\nThere is only one database used in this case, therefore no where to use RDS Proxy.\nSO A.","comment_id":"1017142","timestamp":"1695668040.0"},{"content":"Selected Answer: A\nIt should be A, question said low performance due to \"read\" -> elasticache","comment_id":"999452","upvote_count":"2","timestamp":"1693914900.0","poster":"LazyTs"},{"comment_id":"971473","content":"Answer is A:\nB also would be an option but in order to use RDS Proxy we need an additional configuration in the server. The question is specifically asking us to avoid from it.","upvote_count":"2","timestamp":"1691098920.0","comments":[{"comment_id":"1108380","content":"But A required much more changes. ElastiCache isn't automatic, the application must fill it with data and query it (\"check if data is in cache, otherwise get it from database\").","timestamp":"1703831340.0","poster":"pentium75","upvote_count":"1"}],"poster":"oguzbeliren"},{"poster":"ccmc","comment_id":"971026","content":"elasticache require manual coding and it requires code level changes as well, architecture also changes, answer should be RDS proxy","upvote_count":"1","timestamp":"1691060280.0"},{"timestamp":"1690813140.0","content":"Selected Answer: A\nImplement caching mechanisms to reduce the need for frequent database reads. Use Amazon ElastiCache, a managed in-memory caching service, to store frequently accessed data in-memory. This can significantly reduce the response time for frequently requested data and lower the load on the database.","poster":"Undisputed","upvote_count":"2","comment_id":"968177"},{"poster":"darekw","timestamp":"1690641180.0","content":"Question says: \"long delays and interruptions that are caused by database read performance\". So in my understanding improving reads should help.","comment_id":"966476","upvote_count":"2"},{"content":"I think it should be A.\nRDS proxy only suitable for read-write database connections.","comment_id":"956765","upvote_count":"2","poster":"vini15","timestamp":"1689780540.0"},{"upvote_count":"3","content":"Selected Answer: A\nElasticache is best for read usecases, RDX proxy is best for read and write usecases","poster":"corruptbits","comment_id":"950539","timestamp":"1689243000.0"},{"timestamp":"1688390700.0","comment_id":"941878","content":"Selected Answer: A\nElasticache will improve read performance. THe question asks for 'no less architectural changes'. Yes, implementing elasticache will need efforts, but those are from code side & not architecture.","poster":"animefan1","upvote_count":"3"},{"poster":"cookieMr","timestamp":"1688024700.0","comment_id":"937765","upvote_count":"6","content":"Selected Answer: B\nA. While ElastiCache can improve read performance by caching frequently accessed data, it requires changes to the application's architecture. Additionally, it may not provide the same level of improvement in read performance as RDS Proxy, especially if the application's database usage involves complex queries or frequent data updates.\n\nC. While Lambda can offer benefits such as scalability and reduced operational overhead, it may not directly address the database read performance issues. Migrating to Lambda would require significant changes to the application's architecture and codebase.\n\nD. While DynamoDB is a scalable and high-performance NoSQL database, migrating from a relational database like MySQL to DynamoDB would require significant changes to the application's data model and query patterns.\n\nTherefore, option B is the most appropriate solution as it leverages RDS Proxy to optimize database connections and improve read performance, minimizing changes to the application's architecture and providing a scalable and efficient solution for addressing the database read performance issues."},{"content":"Selected Answer: A\nThe problem has been shown to be long delays and outages caused by read performance, and it is clear that B is not appropriate. a. Although it will modify the code, it will not modify the architecture of the application.","timestamp":"1688001960.0","upvote_count":"2","poster":"twowind","comment_id":"937318"},{"content":"Selected Answer: B\nIt is not clearly stated, but I believe that the game scores will be updated frequently.\nThe answer should be the RDS proxy, not the cache.","upvote_count":"2","comment_id":"923498","timestamp":"1686768540.0","poster":"jayce5"},{"upvote_count":"2","content":"Selected Answer: B\nB is correct as it requires minimum changes and A is wrong because creating the cache will require writing manual coding","timestamp":"1686568260.0","comment_id":"921382","poster":"migo7"},{"poster":"migo7","content":"B is correct as it requires minimum changes and A is wrong because creating the cache will require writing manual coding","upvote_count":"1","comment_id":"921380","timestamp":"1686568200.0"},{"timestamp":"1685694780.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-use-cases.html#elasticache-for-redis-use-cases-gaming\nhttps://d0.awsstatic.com/whitepapers/performance-at-scale-with-amazon-elasticache.pdf","poster":"DrWatson","upvote_count":"2","comment_id":"912642"},{"timestamp":"1682138700.0","poster":"arjundevops","comment_id":"877026","upvote_count":"4","comments":[{"timestamp":"1685890080.0","comment_id":"914755","poster":"ruqui","upvote_count":"2","content":"the problem is not the amount of connections to the database, it's slow performance because of read operations ... this problem is solved with Elasticache, so the answer is A"}],"content":"Selected Answer: B\nRDS Proxy is a fully managed database proxy that allows applications to pool and share connections to an RDS database instance, reducing the number of connections made to the database and improving the performance of read-heavy workloads. RDS Proxy also provides features like connection pooling, query logging, and automatic failover, which can help to improve the availability and performance of the database.\n\nBy using RDS Proxy between the application and the database, the gaming company can improve the performance of the application without making significant changes to the application's architecture. RDS Proxy can help to reduce the number of connections made to the database, optimize query execution, and provide automatic failover in case of a database failure."},{"poster":"ErfanKh","comment_id":"868981","upvote_count":"3","content":"Selected Answer: B\nChatGPT says B","timestamp":"1681349580.0"},{"poster":"channn","upvote_count":"2","content":"Selected Answer: A\nchoose A as the issue is on db read performance","timestamp":"1681208100.0","comment_id":"867165"},{"upvote_count":"4","content":"Selected Answer: B\n\"minimizing changes to the application’s architecture\" -> B\nElastiCache requires logic to handle.","comment_id":"858283","timestamp":"1680381720.0","poster":"jayce5"},{"comment_id":"849319","upvote_count":"2","content":"Selected Answer: B\nRDS proxy","poster":"Nagarjunaaa","timestamp":"1679664780.0"},{"content":"Selected Answer: B\nBy using RDS Proxy, the application can offload the task of managing database connections and pooling from the application to the proxy. This can help reduce connection overhead, improve connection reuse, and help to reduce the overall number of connections to the database, which can lead to better performance.\n\nAdditionally, RDS Proxy has built-in read and write connection pooling, which can help to reduce latency and improve throughput for read-heavy workloads like the gaming company's web application.\n\nOverall, using RDS Proxy is a good option for improving the user experience and database performance without making significant changes to the application's architecture.","upvote_count":"2","poster":"neverdie","comment_id":"847930","timestamp":"1679556540.0"},{"poster":"Grace83","comment_id":"844654","content":"anyone know if A or B is the correct answer?","upvote_count":"2","timestamp":"1679301360.0"},{"poster":"MLCL","comment_id":"843988","comments":[{"content":"Y ... but we should avoid changes to the architecture, not to the code ...","poster":"pentium75","comment_id":"1108381","timestamp":"1703831460.0","upvote_count":"1"}],"content":"Selected Answer: B\nB is the correct answer, A would require significant changes to the application code","timestamp":"1679244600.0","upvote_count":"3"},{"upvote_count":"3","content":"Selected Answer: B\nAmazon RDS Proxy can be enabled for most applications with no code changes. (https://aws.amazon.com/rds/proxy/)\nYou can also use Amazon RDS Proxy with read-only endpoints to help you achieve read scalability of your read-heavy workloads. (https://aws.amazon.com/blogs/database/use-amazon-rds-proxy-with-read-only-endpoints/)\n\nElasticache can improve read performance but it relies on heavy code changes, so A is incorrect.","comment_id":"841231","timestamp":"1678987920.0","poster":"abitwrong"},{"content":"Selected Answer: B\nIt should B ,key is here to minimize application change","upvote_count":"1","comment_id":"824831","timestamp":"1677590280.0","poster":"K0nAn"},{"content":"Selected Answer: B\ncorrect answer is 'B' Amazon RDS Proxy, you can allow your applications to pool and share database connections to improve their ability to scale. RDS Proxy makes applications more resilient to database failures by automatically connecting to a standby DB instance while preserving application connections.","timestamp":"1677516240.0","comment_id":"823960","poster":"ZiEthio","upvote_count":"3"},{"poster":"Ja13","comment_id":"823831","upvote_count":"4","content":"Selected Answer: A\nI think it should be A, it says \"minimize code changes\" no \"reduce code change to zero\", so some changes are allowed. Also indicate that the problem is the performance reading operations, elasticache solved reads.","timestamp":"1677509460.0"},{"upvote_count":"2","poster":"Bhrino","content":"Selected Answer: B\nEvery other answer choice can simnifically change the architecture or can someone explain?\n\nA. Elasticache changes code\nC. can take time and effort to implement\nD. Going from an SQL to no sql can be challenging and take time. Probably not the best idea when its being done for no reason","timestamp":"1677000480.0","comment_id":"816927"},{"upvote_count":"4","timestamp":"1675739700.0","comment_id":"800497","content":"Selected Answer: B\nBy using Amazon RDS Proxy, you can allow your applications to pool and share database connections to improve their ability to scale. RDS Proxy makes applications more resilient to database failures by automatically connecting to a standby DB instance while preserving application connections. By using RDS Proxy, you can also enforce AWS Identity and Access Management (IAM) authentication for databases, and securely store credentials in AWS Secrets Manager.\n\nUsing RDS Proxy, you can handle unpredictable surges in database traffic. Otherwise, these surges might cause issues due to oversubscribing connections or creating new connections at a fast rate. RDS Proxy establishes a database connection pool and reuses connections in this pool. This approach avoids the memory and CPU overhead of opening a new database connection each time. To protect the database against oversubscription, you can control the number of database connections that are created.","poster":"Bofi"},{"upvote_count":"4","timestamp":"1675621440.0","content":"Selected Answer: A\nPROBLEM: long delays and interruptions that are CAUSED BY database “read performance”.\nTASK: is to improve user experience w/o changing application architecture.","comment_id":"799074","poster":"Lonojack"},{"comments":[{"timestamp":"1676525880.0","comment_id":"810286","upvote_count":"1","content":"By using Amazon RDS Proxy, you can allow your applications to pool and share database connections to improve their ability to scale. RDS Proxy makes applications more resilient to database failures by automatically connecting to a standby DB instance while preserving application connections.","poster":"Lalo"},{"timestamp":"1676525820.0","poster":"Lalo","comment_id":"810283","comments":[{"upvote_count":"1","timestamp":"1732025880.0","comment_id":"1314696","poster":"JA2018","content":"but this use case is using RDS....."}],"content":"Possible answers can be A or D.\nGaming companies use Amazon DynamoDB in all parts of game platforms, including game state, player data, session history, and leaderboards. The main benefits that these companies get from DynamoDB are its ability to scale reliably to millions of concurrent users and requests while ensuring consistently low latency—measured in single-digit milliseconds. Using DynamoDB to store player game state and other player data allows game companies to accommodate high numbers of concurrent players while maintaining millisecond access latency. As an example, consider Electronic Arts (EA)\nBUT BUT the question indicates \"minimizing changes to the application's architecture\" therefore we discard answer D, leaving it as the correct answer AAAAAAAAAA","upvote_count":"1"}],"comment_id":"798205","content":"Selected Answer: B\nAnswer is B : Even though elastic cache improves read performance still there will be a lot of code changes, RDS proxy manages if a database has a lot of connections and hence improves performance","timestamp":"1675531680.0","upvote_count":"2","poster":"aakashkumar1999"},{"timestamp":"1675085940.0","comment_id":"792872","upvote_count":"2","poster":"ogerber","content":"But Elasticache request application changes, so I think It's RDS proxy"},{"upvote_count":"5","poster":"devonwho","comment_id":"787050","timestamp":"1674600480.0","content":"Selected Answer: A\nAmazon ElastiCache is a web service that makes it easy to deploy, operate, and scale an in-memory data store or cache in the cloud. The service improves the performance of web applications by allowing you to retrieve information from fast, managed, in-memory data stores, instead of relying entirely on slower disk-based databases."},{"poster":"mhmt4438","timestamp":"1673802960.0","comment_id":"776853","content":"Selected Answer: A\nCorrect answer is A","upvote_count":"4"},{"upvote_count":"3","comment_id":"776048","timestamp":"1673741340.0","content":"A: https://www.examtopics.com/discussions/amazon/view/86219-exam-aws-certified-solutions-architect-associate-saa-c02/","poster":"AHUI"},{"comment_id":"775989","timestamp":"1673736300.0","upvote_count":"3","poster":"Aninina","content":"Selected Answer: A\nA is correct"},{"poster":"bamishr","comment_id":"774436","timestamp":"1673612100.0","upvote_count":"4","content":"Selected Answer: A\nA. Use Amazon ElastiCache in front of the database"},{"upvote_count":"3","content":"Selected Answer: A\nhttps://aws.amazon.com/caching/","timestamp":"1673607600.0","poster":"Morinator","comment_id":"774354"}],"answer":"A","question_text":"A gaming company has a web application that displays scores. The application runs on Amazon EC2 instances behind an Application Load Balancer. The application stores data in an Amazon RDS for MySQL database. Users are starting to experience long delays and interruptions that are caused by database read performance. The company wants to improve the user experience while minimizing changes to the application’s architecture.\n\nWhat should a solutions architect do to meet these requirements?","exam_id":31,"answers_community":["A (59%)","B (41%)"],"topic":"1","answer_images":[],"answer_description":"","question_images":[],"question_id":208,"url":"https://www.examtopics.com/discussions/amazon/view/95016-exam-aws-certified-solutions-architect-associate-saa-c03/","choices":{"D":"Migrate the database from Amazon RDS for MySQL to Amazon DynamoDB.","B":"Use RDS Proxy between the application and the database.","A":"Use Amazon ElastiCache in front of the database.","C":"Migrate the application from EC2 instances to AWS Lambda."}},{"id":"RKPrBueftA8hPsYgkQD3","question_images":[],"answer_description":"","topic":"1","question_text":"An ecommerce company has noticed performance degradation of its Amazon RDS based web application. The performance degradation is attributed to an increase in the number of read-only SQL queries triggered by business analysts. A solutions architect needs to solve the problem with minimal changes to the existing web application.\n\nWhat should the solutions architect recommend?","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/95032-exam-aws-certified-solutions-architect-associate-saa-c03/","exam_id":31,"unix_timestamp":1673612040,"isMC":true,"answer":"C","choices":{"C":"Create a read replica of the primary database and have the business analysts run their queries.","A":"Export the data to Amazon DynamoDB and have the business analysts run their queries.","B":"Load the data into Amazon ElastiCache and have the business analysts run their queries.","D":"Copy the data into an Amazon Redshift cluster and have the business analysts run their queries."},"timestamp":"2023-01-13 13:14:00","question_id":209,"answer_ET":"C","discussion":[{"upvote_count":"6","comment_id":"775996","content":"Selected Answer: C\nC. Create a read replica of the primary database and have the business analysts run their queries.\n\nCreating a read replica of the primary RDS database will offload the read-only SQL queries from the primary database, which will help to improve the performance of the web application. Read replicas are exact copies of the primary database that can be used to handle read-only traffic, which will reduce the load on the primary database and improve the performance of the web application. This solution can be implemented with minimal changes to the existing web application, as the business analysts can continue to run their queries on the read replica without modifying the code.","poster":"Aninina","timestamp":"1689367980.0"},{"poster":"awsgeek75","upvote_count":"4","timestamp":"1721243040.0","comment_id":"1125320","content":"Selected Answer: C\n\". A solutions architect needs to solve the problem with minimal changes to the existing web application.\"\nABD all require major changes to the application.\nA: DynamoDB is NoSQL so big change\nB: Elasticache is a caching layer which require code change normally significant code change\nD: Redshift is analytics so not a solution"},{"upvote_count":"2","poster":"Ruffyit","comment_id":"1069190","content":". While DynamoDB is a scalable NoSQL database, it requires changes to the application's data model and query patterns.\n\nB. ElastiCache is an in-memory data store that can improve query performance, but it is primarily used for caching rather than running complex queries.\n\nD. Redshift is a powerful data warehousing solution, but migrating the data and adapting the queries to Redshift's columnar architecture would require significant changes to the application and query logic.\n\nTherefore, option C is the most appropriate recommendation as it leverages read replicas in RDS to offload read-only query traffic from the primary database, allowing the business analysts to run their queries without impacting the performance of the web application. It provides a scalable and efficient solution with minimal changes to the existing web application.","timestamp":"1715586540.0"},{"upvote_count":"2","content":"Selected Answer: C\nC. Create a read replica of the primary database and have the business analysts run their queries","poster":"nileeka97","timestamp":"1711292280.0","comment_id":"1015792"},{"comment_id":"937777","poster":"cookieMr","upvote_count":"3","timestamp":"1703843220.0","content":"Selected Answer: C\nA. While DynamoDB is a scalable NoSQL database, it requires changes to the application's data model and query patterns.\n\nB. ElastiCache is an in-memory data store that can improve query performance, but it is primarily used for caching rather than running complex queries.\n\nD. Redshift is a powerful data warehousing solution, but migrating the data and adapting the queries to Redshift's columnar architecture would require significant changes to the application and query logic.\n\nTherefore, option C is the most appropriate recommendation as it leverages read replicas in RDS to offload read-only query traffic from the primary database, allowing the business analysts to run their queries without impacting the performance of the web application. It provides a scalable and efficient solution with minimal changes to the existing web application."},{"poster":"antropaws","content":"Selected Answer: C\nC, no doubt.","comment_id":"906439","timestamp":"1700900400.0","upvote_count":"3"},{"poster":"mhmt4438","content":"Selected Answer: C\nC is correct answer","timestamp":"1689434220.0","comment_id":"776856","upvote_count":"3"},{"timestamp":"1689243240.0","poster":"bamishr","upvote_count":"2","content":"Selected Answer: C\nCreate a read replica of the primary database and have the business analysts run their queries.","comment_id":"774432"}],"answers_community":["C (100%)"]},{"id":"5Vmw5U7B8npfBdern85K","discussion":[{"comment_id":"692736","comments":[{"upvote_count":"9","timestamp":"1665933420.0","content":"Thanks for the link! No doubt A is the answer.","poster":"123jhl0","comment_id":"696327"},{"timestamp":"1706058900.0","comments":[{"content":"while CloudWatch dashboard sharing doesn't perfectly align with the strictest interpretation of least privilege, it can be made more secure by carefully designing the dashboard, implementing strong governance, and educating the user. If the data within the dashboard is highly sensitive, then creating a custom application would be the best method.\n\nTherefore, while option A is the most efficient and simple, it is important to understand the security trade offs that are being made.","upvote_count":"1","poster":"Yak_Yeti","timestamp":"1743037740.0","comment_id":"1410686"}],"comment_id":"1130132","upvote_count":"4","content":"But this link also says All people who you share the dashboard with are granted these permissions for the account. If you share the dashboard publicly, then everyone who has the link to the dashboard has these permissions.\n\nThe cloudwatch:GetMetricData and ec2:DescribeTags permissions cannot be scoped down to specific metrics or EC2 instances, so the people with access to the dashboard can query all CloudWatch metrics and the names and tags of all EC2 instances in the account. If that is the case, how is the least privilege principle applicable?","poster":"mn2013"}],"poster":"masetromain","timestamp":"1665554880.0","upvote_count":"92","content":"Selected Answer: A\nAnswere A : https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-dashboard-sharing.html\n\nShare a single dashboard and designate specific email addresses of the people who can view the dashboard. Each of these users creates their own password that they must enter to view the dashboard."},{"comments":[{"content":"b has a problem for cloudwatchreadonlyacess policy, it’s not only grant read access to dashboard, but other read permission for logs, insights, etc. so it does not follows the principle of least privilege. Option A only grants access to dashboard.","timestamp":"1696909320.0","comment_id":"1039138","upvote_count":"17","poster":"emilyhu08"}],"poster":"Guru4Cloud","upvote_count":"19","timestamp":"1689952260.0","content":"Selected Answer: B\nOption B provides the product manager with specific access to the CloudWatch dashboard using an IAM user with the CloudWatchReadOnlyAccess policy attached. The IAM user has only read-only access to the required resources, which follows the principle of least privilege.","comment_id":"958631"},{"timestamp":"1739825460.0","upvote_count":"1","content":"Selected Answer: A\nAnswer is A. This option is available in Cloudwatch","comment_id":"1357979","poster":"Vandaman"},{"comment_id":"1356104","content":"Selected Answer: B\nCloudWatch does not allow public links by default, but you can share temporary access using AWS IAM Identity Center (formerly AWS SSO) or a federated user with specific permissions.","poster":"Nacho2222222","timestamp":"1739450580.0","upvote_count":"1"},{"upvote_count":"1","poster":"Krenil","timestamp":"1738574760.0","comments":[{"upvote_count":"1","poster":"testiaced","content":"\"To view a dashboard that you create, users must have the required permissions, or the dashboard must be shared across AWS accounts. You can’t just email a link to a user who isn’t signed into AWS and allow them to view the dashboard.\"","timestamp":"1741655460.0","comment_id":"1387234"}],"content":"Selected Answer: B\nOption - B:\nHere’s why:\n\nPrinciple of Least Privilege: The product manager should only be given the permissions necessary to access the CloudWatch dashboard. The CloudWatchReadOnlyAccess policy grants the least privilege access to view CloudWatch metrics and dashboards.\nIAM User: Since the product manager does not have an AWS account, creating a specific IAM user for the product manager ensures they can log in securely to AWS, without needing to share broader permissions.\nSimple Access: After the IAM user is created, the product manager can directly log into AWS, navigate to the CloudWatch dashboard, and access the metrics they need, without excessive complexity or unnecessary access.","comment_id":"1350806"},{"comment_id":"1347233","timestamp":"1737952980.0","upvote_count":"1","poster":"AfricanCloudGuru","content":"Selected Answer: A\nSince the Product manager access the account periodically , sharing the account will be the best option\n\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-dashboard-sharing.html"},{"content":"Selected Answer: A\nCloudWatch allows dashboards to be shared publicly or with specific users using a shareable URL. This enables access without requiring an AWS account.\nThis approach follows the principle of least privilege because the product manager is given only the ability to view the dashboard via the shared link, without needing broader access to the AWS environment.\nThis is the correct choice because it directly meets the requirements without granting unnecessary permissions or requiring the creation of AWS credentials.","upvote_count":"3","timestamp":"1735270020.0","poster":"MGKYAING","comment_id":"1332204"},{"upvote_count":"1","content":"Selected Answer: A\n1.Direct Sharing Without AWS Account:\nAmazon CloudWatch allows dashboards to be shared externally via a shareable link. This enables users without an AWS account to access the dashboard securely, which meets the requirement to allow the product manager (who doesn’t have an AWS account) to view the dashboard.\n2.Least Privilege Principle:\nThe product manager only gets access to the specific dashboard, and no additional permissions or access to the AWS environment are granted. This aligns with the principle of least privilege.\n3.No Operational Overhead:\nThe solution does not require creating new IAM users or setting up infrastructure like bastion servers. It’s straightforward and efficient.","timestamp":"1735216200.0","poster":"MGKYAING","comment_id":"1331910"},{"poster":"EzKkk","timestamp":"1732002540.0","content":"Selected Answer: B\nI will go with B even though A sounds like a better choice for the following reasons:\n1, You need a solution to share your dashboard.\n2, You only share a specific metric of an application to whom lack access to AWS.\n3, Target in question only access periodically.\n4, Must apply least privilege.\n\nThough A & B are good choices to share you dashboard, A doesn't follow least privilege principal because it provides more permission than needed. Not to mention this solution also raises concerns about security since this dashboard is public.","comment_id":"1314504","upvote_count":"2"},{"comment_id":"1311000","upvote_count":"1","poster":"f51a8bd","content":"respuesta es A: \nEsta solución permite cumplir con los requisitos de acceso seguro y controlado sin una cuenta completa de AWS y sigue el principio de mínimo privilegio para acceder solo a los paneles necesarios en Amazon CloudWatch.","timestamp":"1731456600.0"},{"timestamp":"1729743720.0","comment_id":"1302296","upvote_count":"3","content":"Selected Answer: A\nThe correct answer is:\n\nA. Share the dashboard from the CloudWatch console. Enter the product manager's email address, and complete the sharing steps. Provide a shareable link for the dashboard to the product manager.\nExplanation:\nPrinciple of Least Privilege: The solution should only provide the minimum necessary access. Sharing a CloudWatch dashboard directly meets this principle without the need for an AWS account.\nShareable Link: CloudWatch allows you to share a dashboard using a shareable URL that can be accessed without requiring AWS credentials. This way, the product manager can view the dashboard without having an AWS account.\nNo IAM User Required: Solutions involving IAM users (options B and C) require creating an AWS identity and sharing credentials, which introduces unnecessary security risks and management overhead.\nNo Bastion Server: Deploying a bastion server (option D) is not practical, involves additional costs, and requires managing another infrastructure component, which goes against simplicity and security best practices.","poster":"mzeynalli"},{"content":"The correct answer is:\n\nA. Share the dashboard from the CloudWatch console. Enter the product manager's email address, and complete the sharing steps. Provide a shareable link for the dashboard to the product manager.\nExplanation:\nPrinciple of Least Privilege: The solution should only provide the minimum necessary access. Sharing a CloudWatch dashboard directly meets this principle without the need for an AWS account.\nShareable Link: CloudWatch allows you to share a dashboard using a shareable URL that can be accessed without requiring AWS credentials. This way, the product manager can view the dashboard without having an AWS account.\nNo IAM User Required: Solutions involving IAM users (options B and C) require creating an AWS identity and sharing credentials, which introduces unnecessary security risks and management overhead.\nNo Bastion Server: Deploying a bastion server (option D) is not practical, involves additional costs, and requires managing another infrastructure component, which goes against simplicity and security best practices.","upvote_count":"2","timestamp":"1729743660.0","poster":"mzeynalli","comment_id":"1302295"},{"timestamp":"1728759180.0","comment_id":"1296609","content":"Selected Answer: B\ncorrect answer B\nthe reason A is not a good answer is: \nwhen sharing a link to the CloudWatch dashboard the following warning appears\nWe recommend that you do not share dashboards if your account contains any sensitive information which you would not wish to share with the users with whom you are sharing the dashboard.\nThe users that you specified above will be granted the following permissions: CloudWatch read-only permissions to alarms and contributor insights rules in the Dashboard which you share, and to all metrics and the names and tags of all EC2 instances in your account even if they are not shown in the Dashboard which you share. We recommend that you consider whether it is appropriate to make this information available to the users with whom you are sharing.\nso following the least privilege principle, creating an IAM User in option B is more secure","poster":"e854fbe","upvote_count":"3"},{"poster":"Micha3l","content":"Selected Answer: B\nThe goal is to allow a product manager (who does not have an AWS account) to access a CloudWatch dashboard periodically.\nB follows the principle of least privilege, ensuring that the product manager can only view the dashboard and not perform any other actions within AWS.Is direct email sharing is not a feature of CloudWatch?","comment_id":"1285055","upvote_count":"2","timestamp":"1726554240.0"},{"poster":"Omshanti","comment_id":"1283786","upvote_count":"1","content":"Selected Answer: B\nLeast privilege","timestamp":"1726352460.0"},{"poster":"pranavff_examtopics_1993","content":"Selected Answer: B\nA would be indeed following the principle of least privilege, but periodic access means we have to do this time and time again when the product manager requests access. B is better","upvote_count":"2","timestamp":"1725870540.0","comment_id":"1280806"},{"timestamp":"1723582380.0","comment_id":"1265365","poster":"PaulGa","upvote_count":"1","content":"Selected Answer: B\nAns B – its tidy and self-contained, and uses IAM roles as the solution should\nOthers: \no Ans A – means personalising access by relying upon the Product Manager’s email – what if he changes his name or a new Product Manager is hired? \no Ans C – too lengthy and introduces potential for mistakes \no Ans D – not even sure why this is here…"}],"answers_community":["A (71%)","B (28%)","1%"],"choices":{"C":"Create an IAM user for the company's employees. Attach the ViewOnlyAccess AWS managed policy to the IAM user. Share the new login credentials with the product manager. Ask the product manager to navigate to the CloudWatch console and locate the dashboard by name in the Dashboards section.","D":"Deploy a bastion server in a public subnet. When the product manager requires access to the dashboard, start the server and share the RDP credentials. On the bastion server, ensure that the browser is configured to open the dashboard URL with cached AWS credentials that have appropriate permissions to view the dashboard.","B":"Create an IAM user specifically for the product manager. Attach the CloudWatchReadOnlyAccess AWS managed policy to the user. Share the new login credentials with the product manager. Share the browser URL of the correct dashboard with the product manager.","A":"Share the dashboard from the CloudWatch console. Enter the product manager's email address, and complete the sharing steps. Provide a shareable link for the dashboard to the product manager."},"isMC":true,"unix_timestamp":1665549720,"question_id":210,"question_images":[],"answer_images":[],"answer_description":"","timestamp":"2022-10-12 06:42:00","question_text":"A company is launching a new application and will display application metrics on an Amazon CloudWatch dashboard. The company's product manager needs to access this dashboard periodically. The product manager does not have an AWS account. A solutions architect must provide access to the product manager by following the principle of least privilege.\nWhich solution will meet these requirements?","exam_id":31,"url":"https://www.examtopics.com/discussions/amazon/view/85227-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"A","answer":"A","topic":"1"}],"exam":{"isMCOnly":true,"name":"AWS Certified Solutions Architect - Associate SAA-C03","isImplemented":true,"lastUpdated":"11 Apr 2025","numberOfQuestions":1019,"provider":"Amazon","isBeta":false,"id":31},"currentPage":42},"__N_SSP":true}