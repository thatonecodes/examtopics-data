{"pageProps":{"questions":[{"id":"iQ8P02ZJ4KF8qAB8It4R","answer_images":[],"discussion":[{"poster":"SilentMilli","upvote_count":"36","content":"Selected Answer: B\nBy configuring the Auto Scaling group to use multiple Availability Zones, the application will be able to continue running even if one Availability Zone goes down. Configuring the database as Multi-AZ will also ensure that the database remains available in the event of a failure in one Availability Zone. Using an Amazon RDS Proxy instance for the database will allow the application to automatically route traffic to healthy database instances, further increasing the availability of the application. This solution will meet the requirements for high availability with minimal operational effort.","timestamp":"1673058840.0","comment_id":"768211"},{"content":"Selected Answer: B\nRDS Proxy for Aurora https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/rds-proxy.html","upvote_count":"8","poster":"KVK16","timestamp":"1665917880.0","comment_id":"696194"},{"poster":"AshishDhole","upvote_count":"1","content":"Selected Answer: B\nHighly Available = Multi AZ\nDR = Multiple Region","comment_id":"1339858","timestamp":"1736764920.0"},{"upvote_count":"1","content":"Selected Answer: B\nConclusão:\nA configuração B oferece alta disponibilidade tanto para as instâncias do EC2 quanto para o banco de dados Aurora PostgreSQL com o mínimo esforço operacional. Isso atende aos requisitos de tempo de inatividade mínimo e perda mínima de dados.","comment_id":"1339275","timestamp":"1736627580.0","poster":"Rcosmos"},{"content":"Selected Answer: B\nAns B - good explanation by SilentMilli (1yr 8mth ago). The database Proxy is key.","upvote_count":"2","timestamp":"1726061280.0","poster":"PaulGa","comment_id":"1282142"},{"poster":"SaurabhTiwari1","timestamp":"1724660280.0","upvote_count":"1","comment_id":"1272549","content":"Selected Answer: B\nKeyword - Higly available\nUse multiple availability zones"},{"timestamp":"1705251540.0","comment_id":"1122695","upvote_count":"3","comments":[{"comment_id":"1161788","content":"One of the benefits of Amazon RDS Proxy is that it can improve application recovery time after database failovers. While RDS Proxy supports both MySQL as well as PostgreSQL engines, in this post, we will use a MySQL test workload to demonstrate how RDS Proxy reduces client recovery time after failover by up to 79% for Amazon Aurora MySQL and by up to 32% for Amazon RDS for MySQL. \n\n-> contributes to minimum downtime req","timestamp":"1709137380.0","comments":[{"comment_id":"1161789","timestamp":"1709137380.0","poster":"dkw2342","upvote_count":"1","content":"PS: https://aws.amazon.com/blogs/database/improving-application-availability-with-amazon-rds-proxy/"}],"upvote_count":"1","poster":"dkw2342"}],"content":"Selected Answer: B\nA: Different region doesn't help\nC: Would have made sense if it wasn't restricting to one AZ.\nD: Regions + S3 + Lambda = Operational effort extreme\nB: Although not entirely sure how RDS Proxy helps because it is for connection pooling but it is the only workable solution using multi AZ","poster":"awsgeek75"},{"timestamp":"1700545920.0","content":"Selected Answer: A\nThe company wants to minimize costs and is willing to accept slower traffic if the primary connection fails, it may be tempted to choose a VPN connection as a backup, in which case the answer is A. Cost-Effectiveness: VPN connections are generally more economical than AWS Direct Connect, especially for low to moderate bandwidth needs.\nBackup connection: A VPN connection can serve as a more cost-effective backup if the primary Direct Connect connection fails, even if it may be slower. Acceptance of slower traffic: The question clearly states that the company is willing to accept slower traffic if the primary connection fails, which implies a tolerance for connection speeds.","comments":[{"upvote_count":"6","comment_id":"1105180","content":"This is about the previous question ;)","poster":"pentium75","timestamp":"1703500740.0"}],"upvote_count":"1","poster":"MiniYang","comment_id":"1076046"},{"upvote_count":"1","content":"Selected Answer: B\nASG and MultiAZ is the best answer","comment_id":"1009763","timestamp":"1694950440.0","poster":"asulhi"},{"timestamp":"1693851720.0","poster":"benacert","upvote_count":"1","comment_id":"998765","content":"B is the right answer"},{"content":"Selected Answer: B\nOption B requires the least operational effort to meet the high availability and minimum downtime/data loss requirements.\n\nThe key points are:\n\nUse an Auto Scaling group across multiple AZs for high availability of the EC2 instances.\nConfigure the Aurora DB as Multi-AZ for high availability, automatic failover, and minimum data loss.\nUse RDS Proxy for connection pooling to the DB for performance","timestamp":"1691689320.0","upvote_count":"2","poster":"Guru4Cloud","comment_id":"977964"},{"upvote_count":"1","poster":"TariqKipkemei","content":"Selected Answer: B\nHighly available, Minimum downtime and Minimum loss of data = Auto Scaling group on Multi-AZ, Database on Multi-AZ, Amazon RDS Proxy.","timestamp":"1691555700.0","comment_id":"976244"},{"upvote_count":"1","content":"Option B is the right answer.","poster":"miki111","timestamp":"1689786840.0","comment_id":"956851"},{"timestamp":"1687866180.0","content":"Selected Answer: B\nB is correct answer","poster":"hiepdz98","comment_id":"935305","upvote_count":"2"},{"poster":"cookieMr","upvote_count":"6","timestamp":"1687351800.0","content":"Selected Answer: B\nA. This approach provides geographic redundancy, it introduces additional complexity and operational effort, including managing replication, handling latency, and potentially higher data transfer costs.\n\nC. While snapshots can be used for data backup and recovery, they do not provide real-time failover capabilities and can result in significant data loss if a failure occurs between snapshots.\n\nD. While this approach offers some decoupling and scalability benefits, it adds complexity to the data flow and introduces additional overhead for data processing.\n\nIn comparison, option B provides a simpler and more streamlined solution by utilizing multiple AZs, Multi-AZ configuration for the database, and RDS Proxy for improved connection management. It ensures high availability, minimal downtime, and minimum loss of data with the least operational effort.","comment_id":"929519"},{"timestamp":"1684465560.0","comment_id":"901613","poster":"Abrar2022","content":"@Wajif the reason why it's not A is because the question mentions High availability and nothing to do with region. You can achieve HA without spanning multiple regions. Also B is incorrect because ALB are region specific and span across multiple AZ with that specific region (not cross region)","upvote_count":"1"},{"timestamp":"1675753560.0","comment_id":"800639","content":"Selected Answer: B\nRDS Proxy is fully managed by AWS for RDS/Aurora. It is auto-scaling and highly available by default.","poster":"UnluckyDucky","upvote_count":"1"},{"timestamp":"1672179360.0","upvote_count":"3","comment_id":"759107","poster":"Buruguduystunstugudunstuy","content":"Selected Answer: B\nThe correct solution is B: Configure the Auto Scaling group to use multiple Availability Zones. Configure the database as Multi-AZ. Configure an Amazon RDS Proxy instance for the database.\n\nThis solution will meet the requirements of high availability with minimum downtime and minimum loss of data with the least operational effort. By configuring the Auto Scaling group to use multiple Availability Zones, the web application will be able to withstand the failure of one Availability Zone without any disruption to the service. By configuring the database as Multi-AZ, the database will automatically failover to a standby instance in a different Availability Zone in the event of a failure, ensuring minimal downtime. Additionally, using an RDS Proxy instance will help to improve the performance and scalability of the database."},{"content":"Selected Answer: B\nAurora PostgreSQL DB clusters don't support Aurora Replicas in different AWS Regions\nhttps://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Replication.html","poster":"k1kavi1","upvote_count":"2","comment_id":"754804","timestamp":"1671876900.0"},{"timestamp":"1671418200.0","poster":"career360guru","comment_id":"749397","content":"Selected Answer: B\nOption B","upvote_count":"1"},{"timestamp":"1670952480.0","content":"Answer is B \nit will ensure that the database is highly available by replicating the data to a secondary instance in a different Availability Zone. In the event of a failure, the secondary instance will automatically take over and continue servicing database requests without any data loss. Additionally, configuring an Amazon RDS Proxy instance for the database will help improve the availability and scalability of the database","upvote_count":"4","poster":"Shasha1","comment_id":"744308"},{"upvote_count":"2","timestamp":"1669442220.0","poster":"Wajif","comments":[{"timestamp":"1669527480.0","poster":"koreanmonkey","comment_id":"727933","comments":[{"content":"\"The load balancer distributes incoming application traffic across multiple targets, such as EC2 instances, in multiple Availability Zones\". Why not A?","comments":[{"timestamp":"1670317800.0","upvote_count":"2","content":"They need to be in the same Region","poster":"javitech83","comment_id":"736664"},{"content":"The question states multiple regions not multiple Availability Zones, a big difference!","upvote_count":"1","comment_id":"736862","comments":[{"poster":"pentium75","timestamp":"1703500800.0","comment_id":"1105181","upvote_count":"1","content":"The question doesn't state anything but \"high availability\", so multiple AZs are enough."}],"timestamp":"1670334180.0","poster":"JayBee65"}],"upvote_count":"1","timestamp":"1670018520.0","comment_id":"734085","poster":"WZN"}],"content":"maybe because of load balancer, diffrent region can't be answer.","upvote_count":"2"},{"comment_id":"759112","content":"Here is why Option A is not the correct solution:\n\nOption A: Place the EC2 instances in different AWS Regions. Use Amazon Route 53 health checks to redirect traffic. Use Aurora PostgreSQL Cross-Region Replication.\n\nWhile this solution would provide high availability with minimum downtime, it would involve significant operational effort and may result in data loss. Placing the EC2 instances in different Regions would require significant infrastructure changes and could impact the performance of the application. Additionally, Aurora PostgreSQL Cross-Region Replication is designed to provide disaster recovery rather than high availability, and it may result in some data loss during the replication process.","timestamp":"1672179480.0","upvote_count":"5","poster":"Buruguduystunstugudunstuy"}],"comment_id":"727293","content":"Selected Answer: A\nWhy not A?"},{"timestamp":"1669041180.0","comment_id":"723618","upvote_count":"1","content":"B is correct","poster":"Wpcorgan"},{"content":"Important fact: EC2 Auto Scaling groups are regional constructs. They can span Availability Zones, but not AWS regions. So can't be D in case you are between B and D\nhttps://aws.amazon.com/tr/ec2/autoscaling/faqs/","timestamp":"1668602160.0","poster":"Ack3rman","comment_id":"719620","upvote_count":"2"},{"content":"Selected Answer: B\nMULTI-AZ FOR HIGH SCALABILITY .","timestamp":"1668147900.0","upvote_count":"4","comment_id":"715789","poster":"Anji69659"}],"answer":"B","unix_timestamp":1665917880,"timestamp":"2022-10-16 12:58:00","answer_description":"","choices":{"C":"Configure the Auto Scaling group to use one Availability Zone. Generate hourly snapshots of the database. Recover the database from the snapshots in the event of a failure.","B":"Configure the Auto Scaling group to use multiple Availability Zones. Configure the database as Multi-AZ. Configure an Amazon RDS Proxy instance for the database.","A":"Place the EC2 instances in different AWS Regions. Use Amazon Route 53 health checks to redirect traffic. Use Aurora PostgreSQL Cross-Region Replication.","D":"Configure the Auto Scaling group to use multiple AWS Regions. Write the data from the application to Amazon S3. Use S3 Event Notifications to launch an AWS Lambda function to write the data to the database."},"question_text":"A company is running a business-critical web application on Amazon EC2 instances behind an Application Load Balancer. The EC2 instances are in an Auto Scaling group. The application uses an Amazon Aurora PostgreSQL database that is deployed in a single Availability Zone. The company wants the application to be highly available with minimum downtime and minimum loss of data.\nWhich solution will meet these requirements with the LEAST operational effort?","answers_community":["B (96%)","4%"],"question_id":676,"isMC":true,"exam_id":31,"answer_ET":"B","url":"https://www.examtopics.com/discussions/amazon/view/85594-exam-aws-certified-solutions-architect-associate-saa-c03/","topic":"1","question_images":[]},{"id":"XCfvjNG9EBeC9QjC8Bcz","question_text":"A company regularly uploads GB-sized files to Amazon S3. After the company uploads the files, the company uses a fleet of Amazon EC2 Spot Instances to transcode the file format. The company needs to scale throughput when the company uploads data from the on-premises data center to Amazon S3 and when the company downloads data from Amazon S3 to the EC2 instances.\n\nWhich solutions will meet these requirements? (Choose two.)","question_images":[],"unix_timestamp":1707146640,"question_id":677,"timestamp":"2024-02-05 16:24:00","exam_id":31,"answer_ET":"CD","discussion":[{"timestamp":"1707167760.0","poster":"betttty","comment_id":"1141493","content":"CD\nC: Increase the file upload throughput\nD: increase the file download throughput","upvote_count":"10"},{"poster":"sandordini","upvote_count":"5","content":"Selected Answer: CD\nC: Upload: Multipart clear, \nD: Download: You can fetch a byte-range from an object, transferring only the specified portion. You can use concurrent connections to Amazon S3 to fetch different byte ranges from within the same object. This helps you achieve higher aggregate throughput versus a single whole-object request.\n\nA: S3 Access Points can be easily scaled, but are typically used to simplify data access for any AWS service or customer application that stores data in S3. \nE: Prefixes: You can increase your read or write performance by using parallelization. For example, if you create 10 prefixes in an Amazon S3 bucket to parallelize reads, you could scale your read performance to 55,000 read requests per second.\nBut wording in this answer is strange...","timestamp":"1714023900.0","comment_id":"1201765"},{"content":"Selected Answer: CD\nCD\nC: Increase the file upload throughput\nD: increase the file download throughpu","timestamp":"1732193760.0","upvote_count":"2","comment_id":"1315816","poster":"Salahdin"},{"comment_id":"1187970","upvote_count":"3","poster":"dds69","content":"Selected Answer: CD\nC&D are correct","timestamp":"1712053920.0"},{"comment_id":"1178421","upvote_count":"3","content":"Selected Answer: CD\nCd are correct","poster":"Bazzix","timestamp":"1710946860.0"},{"timestamp":"1709179140.0","content":"C &D Correct","upvote_count":"3","poster":"bodakrishna","comment_id":"1162205"},{"timestamp":"1707738900.0","poster":"Darshan07","content":"Selected Answer: CD\nCD are the correct options","upvote_count":"3","comment_id":"1148059"},{"poster":"Cali182","timestamp":"1707327420.0","comment_id":"1143588","content":"Selected Answer: CD\nCD is the correct for me","upvote_count":"2"},{"content":"Correct answer is CD","comment_id":"1141218","upvote_count":"2","poster":"Andy_09","timestamp":"1707146640.0"}],"url":"https://www.examtopics.com/discussions/amazon/view/132852-exam-aws-certified-solutions-architect-associate-saa-c03/","choices":{"D":"Fetch multiple byte-ranges of an object in parallel.","A":"Use the S3 bucket access point instead of accessing the S3 bucket directly.","B":"Upload the files into multiple S3 buckets.","C":"Use S3 multipart uploads.","E":"Add a random prefix to each object when uploading the files."},"answer_description":"","answer":"CD","topic":"1","answers_community":["CD (100%)"],"answer_images":[],"isMC":true},{"id":"r75NBWKvfWbP4vLwbGN9","choices":{"B":"Create an Amazon Elastic File System (Amazon EFS) file system. Mount the EFS file system on the individual EC2 instances.","A":"Use AWS Storage Gateway Volume Gateway Internet Small Computer Systems Interface (iSCSI) block storage that is mounted to the individual EC2 instances.","D":"Use AWS DataSync to perform continuous synchronization of data between EC2 hosts in the Auto Scaling group.","E":"Create an Amazon S3 bucket to store the web content. Set the metadata for the Cache-Control header to no-cache. Use Amazon CloudFront to deliver the content.","C":"Create a shared Amazon Elastic Block Store (Amazon EBS) volume. Mount the EBS volume on the individual EC2 instances."},"discussion":[{"poster":"Andy_09","content":"Correct answer BE","comment_id":"1141224","timestamp":"1707146940.0","upvote_count":"8"},{"comment_id":"1143738","upvote_count":"5","poster":"Cali182","content":"Selected Answer: BE\nB & E seems to be the most logic","timestamp":"1707334560.0"},{"timestamp":"1734242340.0","comment_id":"1326712","content":"Selected Answer: BE\nA - Volume Gateway is typically on-prem and optimized for hybrid setups, not for fully cloud-based solutions.\nB - EFS provides a fully managed, shared file storage system that works across multiple AZs.\nC - Even with Multi-Attach, sharing EBS volumes across AZs is pretty complex and error-prone.\nD - DataSync is designed for periodic synchronization and not real-time, frequent updates.\nE - The \"no-cache\" header ensures the content is always fetched fresh, and CloudFront delivers it efficiently with reduced latency. Although S3 is less efficient for frequent updates compared to a shared file system like EFS, but not a problem here.","poster":"LeonSauveterre","upvote_count":"3"},{"comments":[{"timestamp":"1735550760.0","poster":"Salilgen","content":"C is wrong: you cannot share EBS in multiple AZ","comment_id":"1334012","upvote_count":"1"}],"comment_id":"1322176","timestamp":"1733361780.0","upvote_count":"1","poster":"Penjerla","content":"Selected Answer: BC\nOption A is out as storage gateway is suited for hybrid cloud use cases where on-premises workloads need access to AWS cloud storage"},{"upvote_count":"2","comment_id":"1201880","timestamp":"1714037220.0","content":"Regarding storage, I'd go for EFS, although it never mentions the requirement for file storage.\nDatasync can copy data between several storage types, including EFS, agents can be installed on EC2, but you cannot perform continuous synchronization of EC2 instances. Only storage.\nCloudfront can publish both passive (s3) and active content (EC2+EFS) but wording doesn't tell a thing about such a share. And if it's a passive site why do we even have 2 storage types...\nI'd say, for me, the least bad solution seems to be B + E.","poster":"sandordini"},{"content":"Selected Answer: BE\nI choose BE","poster":"Hung23","upvote_count":"2","timestamp":"1711617900.0","comment_id":"1184668"},{"upvote_count":"2","content":"BD looks most logical to me - continuous changes required an update via DataSync","comment_id":"1180114","timestamp":"1711118580.0","poster":"alawada"}],"answers_community":["BE (91%)","9%"],"question_images":[],"answer":"BE","timestamp":"2024-02-05 16:29:00","answer_description":"","question_text":"A solutions architect is designing a shared storage solution for a web application that is deployed across multiple Availability Zones. The web application runs on Amazon EC2 instances that are in an Auto Scaling group. The company plans to make frequent changes to the content. The solution must have strong consistency in returning the new content as soon as the changes occur.\n\nWhich solutions meet these requirements? (Choose two.)","topic":"1","answer_ET":"BE","unix_timestamp":1707146940,"answer_images":[],"question_id":678,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/132853-exam-aws-certified-solutions-architect-associate-saa-c03/","exam_id":31},{"id":"DDT9gNaWswXRtsDxZkAX","discussion":[{"content":"Selected Answer: A\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html","timestamp":"1726731480.0","upvote_count":"6","poster":"Kezuko","comment_id":"1177175"},{"comment_id":"1181687","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html","upvote_count":"6","poster":"h0ng97_spare_002","timestamp":"1727180520.0"},{"timestamp":"1734242580.0","upvote_count":"1","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html\n\nTo provide the MOST high-performing experience, the Latency-based routing policy is the most appropriate. It ensures requests are routed to the AWS Region that provides the fastest response times based on real-world network conditions.","poster":"LeonSauveterre","comment_id":"1326713"},{"comments":[{"content":"Alias?! \"A record\" is NOT an Alias record; it's an ADDRESS RECORD. There's a difference in between an address record (A record) & an Alias. \n\nAn Address record will map to 1 or more IP addresses.\nAn Alias record will map to another name like a CNAME does. \n\nWe eliminate C&D bc we need an IP address that will give us the best performance; we distribute traffic to a certain IP address based on policy. \ngeolocation policy is defined by where the request comes from.\nlatency policy is defined by how fast (performance) we can reply.","timestamp":"1733880060.0","comment_id":"1228175","poster":"NSA_Poker","upvote_count":"2"}],"comment_id":"1201885","poster":"sandordini","timestamp":"1729848840.0","upvote_count":"4","content":"Selected Answer: A\n1. Given the chance >always use Alias over a Cname<\n2. Latency-based routing is for user experience. (low latency)\n\nFailover is for DR, Geolocation for local restrictions/rights/language/currency, and geo-proximity is a more complex, biased location-based routing, not part of the SA Associate exam."},{"content":"Selected Answer: A\nGeoproximity Policy routing users to resources based on their geographic location, routing based on geographic location may not always be the absolute lowest latency. \n\nlatency-based routing prioritizes user experience.","comment_id":"1185006","poster":"mohammadthainat","timestamp":"1727547660.0","upvote_count":"4"},{"upvote_count":"3","timestamp":"1727264160.0","content":"A is true","poster":"TruthWS","comment_id":"1182513"},{"content":"Selected Answer: D\nThe correct is D, the question says \"using an Application Load Balancer\" the ALB has a DNS name assigned not an IP. A type A record will only allow you to point to an IPv4. If I'm wrong, happy to be corrected.","comment_id":"1166241","timestamp":"1725507600.0","upvote_count":"3","poster":"cedser8","comments":[{"timestamp":"1727174820.0","content":"Answer A is correct.\n\nRoute53 uses an internal record type called ALIAS, but from a DNS point of view it's still an A record. \n\nJust try it yourself, create an ALB and create a DNS record in Route53. While you can technically use a CNAME (for subdomains, see below), the wizard will guide you to use an A ALIAS record, which also makes the most sense.\n\nThe problem with CNAME records is that it's not possible to create them at the root level of the domain. Let's say your domain is somedomain.com - you can't create a CNAME for the apex of the domain (mydomain.com), only for subdomains (subdomain.mydomain.com).\n\nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-choosing-alias-non-alias.html","poster":"dkw2342","comment_id":"1181530","upvote_count":"5"}]},{"content":"ChatGPT:\nThe most high-performing experience in this scenario would be achieved by using:\n\nD. Create a CNAME record with a geoproximity policy.\n\nGeoproximity routing allows you to route traffic based on the geographic location of your users and your resources. This would distribute traffic to the AWS Region that is closest to the user, optimizing performance by reducing latency. It's particularly useful when deploying applications across multiple regions to ensure users are directed to the closest region, minimizing network latency and providing the best user experience.","upvote_count":"1","timestamp":"1724896080.0","poster":"bodakrishna","comment_id":"1162202","comments":[{"content":"And, exactly, this is the reason why you should not rely on a LANGUAGE MODEL when you need a solution architect's advice .","comment_id":"1201882","upvote_count":"5","timestamp":"1729848660.0","poster":"sandordini"}]},{"comment_id":"1152343","poster":"osmk","upvote_count":"2","timestamp":"1723856580.0","content":"A \nhttps://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html"},{"poster":"haci","content":"Selected Answer: A\nBased on previous questions, I believe A is correct. Because; the closest geolocated server doesn't necessarily provide the best performance. Geolocated load balancing is mostly used for serving location-specific content.","timestamp":"1723819560.0","upvote_count":"3","comment_id":"1152120"},{"timestamp":"1723426440.0","poster":"1Alpha1","comment_id":"1147808","content":"Selected Answer: A\nQ. What is Amazon Route 53's Latency Based Routing (LBR) feature?\n\nLBR (Latency Based Routing) is a new feature for Amazon Route 53 that helps you improve your application’s performance for a global audience. You can run applications in multiple AWS regions and Amazon Route 53, using dozens of edge locations worldwide, will route end users to the AWS region that provides the lowest latency.\n\nhttps://aws.amazon.com/route53/faqs/","upvote_count":"3"},{"timestamp":"1723052400.0","content":"Selected Answer: B\nWhy would you use a CNAME record?? Most suitable seems to be option B","comment_id":"1143740","poster":"Cali182","upvote_count":"1","comments":[{"poster":"osmk","content":"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-latency.html","upvote_count":"2","timestamp":"1723856640.0","comment_id":"1152345"},{"comments":[{"comment_id":"1165336","content":"But generally speaking it's not a bad idea. But yes A record alias name can point to it. and i don't think it's B cause even if it's geolocation it may not always result in a high-performing exp.","poster":"Typewriter101","timestamp":"1725422460.0","upvote_count":"2"}],"content":"Not really sure but ALBs do not have a static ip address they have domains assigned to them and also an Elastic ip can't be attached to an ALB. So mainly a cname would be preferred here.","timestamp":"1725421920.0","comment_id":"1165333","poster":"Typewriter101","upvote_count":"2"}]},{"timestamp":"1722944880.0","poster":"Andy_09","upvote_count":"1","comment_id":"1142183","content":"Sorry changing to B."},{"content":"D looks correct.","poster":"Andy_09","timestamp":"1722864660.0","comment_id":"1141225","upvote_count":"2"}],"isMC":true,"exam_id":31,"answers_community":["A (87%)","10%"],"topic":"1","timestamp":"2024-02-05 16:31:00","url":"https://www.examtopics.com/discussions/amazon/view/132854-exam-aws-certified-solutions-architect-associate-saa-c03/","question_text":"A company is deploying an application in three AWS Regions using an Application Load Balancer. Amazon Route 53 will be used to distribute traffic between these Regions.\n\nWhich Route 53 configuration should a solutions architect use to provide the MOST high-performing experience?","question_images":[],"question_id":679,"answer_description":"","answer_ET":"A","answer":"A","unix_timestamp":1707147060,"answer_images":[],"choices":{"B":"Create an A record with a geolocation policy.","A":"Create an A record with a latency policy.","D":"Create a CNAME record with a geoproximity policy.","C":"Create a CNAME record with a failover policy."}},{"id":"zoJxPQMKfpr2pu9pZ7aW","exam_id":31,"topic":"1","answers_community":["D (100%)"],"question_id":680,"question_text":"A company has a web application that includes an embedded NoSQL database. The application runs on Amazon EC2 instances behind an Application Load Balancer (ALB). The instances run in an Amazon EC2 Auto Scaling group in a single Availability Zone.\n\nA recent increase in traffic requires the application to be highly available and for the database to be eventually consistent.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","isMC":true,"answer_ET":"D","answer_images":[],"choices":{"D":"Modify the Auto Scaling group to use EC2 instances across three Availability Zones. Migrate the embedded NoSQL database to Amazon DynamoDB by using AWS Database Migration Service (AWS DMS).","C":"Modify the Auto Scaling group to use EC2 instances across three Availability Zones. Maintain the embedded NoSQL database with its replication service on the EC2 instances.","A":"Replace the ALB with a Network Load Balancer. Maintain the embedded NoSQL database with its replication service on the EC2 instances.","B":"Replace the ALB with a Network Load Balancer. Migrate the embedded NoSQL database to Amazon DynamoDB by using AWS Database Migration Service (AWS DMS)."},"answer_description":"","timestamp":"2024-02-05 16:32:00","unix_timestamp":1707147120,"discussion":[{"upvote_count":"2","content":"Selected Answer: D\nApplication Load Balancer (ALB) is better suited for HTTP/HTTPS traffic. A & B are out.\n\nMaintaining replication and failover for the embedded database across AZs is frustratingly complex and operationally intensive. Migration to DynamoDB requires initial effort but reduces long-term operational overhead. So D.","poster":"LeonSauveterre","comment_id":"1326715","timestamp":"1734243000.0"},{"poster":"freedafeng","timestamp":"1721528280.0","upvote_count":"1","comment_id":"1252152","content":"I honestly don't think you can use db Migration service to migrate an embedding db."},{"timestamp":"1715241120.0","content":"DDDDDDDDDDDDDDDDDD","upvote_count":"1","comment_id":"1208749","poster":"HTHK"},{"timestamp":"1711422720.0","content":"Option D: let focus on HA + Scaling","comment_id":"1182962","poster":"TruthWS","upvote_count":"1"},{"content":"Selected Answer: D\nASG for application HA + DynamoDB Scale for HA","upvote_count":"4","comment_id":"1177180","poster":"Kezuko","timestamp":"1710841320.0"},{"poster":"rubiteb","upvote_count":"1","timestamp":"1708996500.0","comments":[{"content":"ALB -> NLB makes no sense and solution lacks HA for the app layer.","timestamp":"1711284720.0","comment_id":"1181535","poster":"dkw2342","upvote_count":"1"}],"comment_id":"1160182","content":"B as it's highly available and has less operational overhead than D."},{"timestamp":"1708354380.0","upvote_count":"1","comment_id":"1154037","comments":[{"timestamp":"1726605600.0","content":"No, the very opposite: \n\n\"Amazon DynamoDB is a fully managed, serverless, key-value NoSQL database that runs high-performance applications at any scale.\"","poster":"MatAlves","upvote_count":"1","comment_id":"1285449"}],"poster":"NayeraB","content":"But wouldn't migrating an embedded database to a new one introduce operational overhead now and in the future?"},{"poster":"1Alpha1","content":"Selected Answer: D\nDynamoDB + Modifying the Auto Scaling group","comment_id":"1147810","upvote_count":"2","timestamp":"1707709080.0"},{"timestamp":"1707338520.0","content":"Selected Answer: D\nDynamo DB presents more advantages, because it would need less administrative effort","poster":"Cali182","comment_id":"1143803","upvote_count":"2"},{"comment_id":"1141226","upvote_count":"4","poster":"Andy_09","timestamp":"1707147120.0","content":"The correct option should be D"}],"answer":"D","url":"https://www.examtopics.com/discussions/amazon/view/132855-exam-aws-certified-solutions-architect-associate-saa-c03/","question_images":[]}],"exam":{"isBeta":false,"provider":"Amazon","name":"AWS Certified Solutions Architect - Associate SAA-C03","id":31,"isMCOnly":true,"lastUpdated":"11 Apr 2025","isImplemented":true,"numberOfQuestions":1019},"currentPage":136},"__N_SSP":true}