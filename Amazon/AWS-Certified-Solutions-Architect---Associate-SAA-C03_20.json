{"pageProps":{"questions":[{"id":"SUzU0GFfp7SLe5wwVdKx","url":"https://www.examtopics.com/discussions/amazon/view/87510-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"D","answers_community":["D (56%)","C (43%)","0%"],"answer":"D","topic":"1","question_text":"A company runs a production application on a fleet of Amazon EC2 instances. The application reads the data from an Amazon SQS queue and processes the messages in parallel. The message volume is unpredictable and often has intermittent traffic. This application should continually process messages without any downtime.\n\nWhich solution meets these requirements MOST cost-effectively?","answer_images":[],"timestamp":"2022-11-15 14:38:00","answer_description":"","discussion":[{"timestamp":"1672822740.0","poster":"HayLLlHuK","upvote_count":"44","comment_id":"765413","comments":[{"timestamp":"1673909520.0","content":"Dude, read the question, cost consideration was not mentioned in the question.","comment_id":"778353","upvote_count":"3","poster":"LuckyAro","comments":[{"upvote_count":"45","content":"Dude, read the question, \"Which solution meets these requirements MOST cost-effectively?\"","timestamp":"1674233820.0","poster":"ShinobiGrappler","comments":[{"poster":"kraken21","content":"I am leaning towards C because the idea of having a queue is to decouple the processing. If an instance goes down(spot) while processing will it not show up back after the visibility timeout? So using spot meets the cost-effective objective.","comments":[{"content":"Intermediate data stored in SQS queue so once free then it take data and process.","poster":"Sutariya","timestamp":"1693761000.0","upvote_count":"1","comment_id":"997821"}],"upvote_count":"5","timestamp":"1680629820.0","comment_id":"861332"},{"comment_id":"884033","upvote_count":"15","timestamp":"1682742720.0","content":"cost-effectively means, Cheapest solution (cost) that achieve all the requirements (effectively). Its not cost-effectively if is just cheapest solution that fail to address all the requirements, in this case. (This application should continually process messages without any downtime) no matter the volume, since it is unpredictable. B for example, address the requirement but not the cheapest solution that achieve it. D is the cheaper choice that address the requirement (without any downtime). and C is cheaper than D but do not garantee that you wont have downtime since it is SPOT instances.","poster":"MrSaint"}],"comment_id":"782531"}]},{"comments":[{"upvote_count":"1","timestamp":"1689941340.0","poster":"MutiverseAgent","content":"For this reason I think correct answer is A","comments":[{"content":"Spot instances cannot be an option as it is unreliable and the question requires the messages to be continuously processed","upvote_count":"5","poster":"Macadam","timestamp":"1699889460.0","comment_id":"1069454"}],"comment_id":"958447"}],"timestamp":"1680125400.0","comment_id":"854977","content":"How can you have baseline capacity when your message volume is unpredictable and often has intermittent traffic?","upvote_count":"4","poster":"kraken21"}],"content":"Selected Answer: C\n\"without any downtime\" - Reserved Instances for the baseline capacity\n\"MOST cost-effectively\" - Spot Instances to handle additional capacity"},{"poster":"taer","upvote_count":"27","comments":[{"poster":"Drayen25","upvote_count":"6","comments":[{"content":"AWS has stopped issuing spot instances so i think C","poster":"diabloexodia","comments":[{"comment_id":"954957","content":"so i think C is incorrect*. the Correct ans is D.","timestamp":"1689656040.0","poster":"diabloexodia","upvote_count":"2"}],"timestamp":"1689656040.0","upvote_count":"1","comment_id":"954956"},{"poster":"sezer","upvote_count":"13","content":"if you cannot find enough spot instance you will have downtime\nyou cannot always find spot instance","comment_id":"854111","timestamp":"1680074160.0","comments":[{"timestamp":"1685100960.0","content":"Why downtime when there are baseline reserved instances?","poster":"Kumaran1508","comment_id":"907310","upvote_count":"3","comments":[{"upvote_count":"2","timestamp":"1721097300.0","comment_id":"1248629","poster":"creamymangosauce","content":"When traffic spikes and there happens to an increase in the spot price, if the price exceeds the threshold set then there would be downtime as no additional compute can be acquired. Hence even if spot instances are more cost effective, I would interpret the cost effective requirement to be the ability to reliably acquire new instances and dispose of when not needed, hence on demand instances"},{"timestamp":"1693760880.0","upvote_count":"2","comment_id":"997817","content":"Baseline reserved instances and ondemand Spot instance is cost saver","poster":"Sutariya"}]}]}],"comment_id":"804640","timestamp":"1676053320.0","content":"C is correct, read for cost effectiveness"}],"content":"Selected Answer: D\nD is the correct answer","timestamp":"1668663660.0","comment_id":"720240"},{"comment_id":"1559349","timestamp":"1744224780.0","poster":"Yak_Yeti","content":"Selected Answer: C\n\"MOST cost-effectively\" - Spot Instances to handle additional capacity\nThe application will process the messages with the reserved instances - slowly - with no downtime.","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: C\nCost-effective - C.","comment_id":"1558696","timestamp":"1744053960.0","poster":"chest_jd"},{"comment_id":"1415116","upvote_count":"1","content":"Selected Answer: C\nI am leaning towards C because the idea of having a queue is to decouple the processing.","poster":"Faraz999","timestamp":"1743424500.0"},{"timestamp":"1743335520.0","upvote_count":"1","content":"Selected Answer: C\nSpot Instances can be used to handle additional capacity to accommodate intermittent traffic. Spot Instances are ideal for variable and unpredictable workloads because they allow you to take advantage of unused EC2 capacity at a significantly lower cost than On-Demand Instances.","comment_id":"1412204","poster":"triptimandal01"},{"comment_id":"1366475","upvote_count":"1","timestamp":"1741404780.0","poster":"tch","content":"Selected Answer: D\nbaseline capacity\" refers to the normal or expected capacity performance of a system or process, so use reserved instance - this to fulfil without any downtime and cost-effective \n\nif \"additional capacity\" refers to resources or capabilities beyond the standard or baseline capacity needed to handle normal operations, allowing for flexibility and the ability to handle surges in demand or unexpected events - then we should use on-demand instances"},{"comment_id":"1352854","timestamp":"1738907580.0","content":"Selected Answer: C\nC is correct because it balances cost and reliability using a combination of:\n\n- Reserved Instances for steady-state traffic (ensuring continuous processing).\n- Spot Instances for handling spikes in traffic (reducing costs significantly).\n\nA - ❌ Not Reliable – Spot Instances can be interrupted at any time. Using them exclusively could cause processing delays or failures.\nB - ❌ Not Cost-Effective – RIs are best for predictable workloads, but over-provisioning for peak loads leads to unnecessary costs when traffic is low.\nD - ❌ More Expensive Than Spot Instances – On-Demand Instances are more costly than Spot Instances for handling additional capacity.","upvote_count":"1","poster":"iamroyalty_k"},{"upvote_count":"1","content":"Selected Answer: D\nI believe the best fit for the scenario is D. D has a portion that is about 90% more expensive than C. However, Spot instances can be interrupted which means that some of the processes can be interrupted, which is not acceptable. So considering that I am choosing D.","poster":"Dharmarajan","comment_id":"1352586","timestamp":"1738867680.0"},{"poster":"Mrigraj12","timestamp":"1738732620.0","upvote_count":"1","content":"Selected Answer: C\nEasily the most cost effective","comment_id":"1351714"},{"content":"Selected Answer: C\nSpot Instances – Can be scaled up dynamically when message volume increases, at a much lower cost than On-Demand instances.","timestamp":"1738344180.0","comment_id":"1349606","upvote_count":"1","poster":"mayorpasca32"},{"timestamp":"1737610200.0","content":"Selected Answer: C\nWhy Option C is Correct:\nReserved Instances: Provide a cost-effective solution for the baseline capacity (predictable, steady traffic) with a significant discount compared to On-Demand Instances.\nSpot Instances: Are highly cost-effective (up to 90% cheaper than On-Demand Instances) and can be used for handling additional, variable traffic since the application processes messages in parallel and can tolerate instance interruptions.\nCombining these instance types ensures a balance of cost savings and availability.","comment_id":"1345114","upvote_count":"1","poster":"skybrink"},{"content":"Selected Answer: C\nI think it is C\nThe instance will remove the message from the queue when it is already processed, there is one downside here when the spot instance is terminated before message removal, it will lead to double processing. The question is not talking about time, so having baseline + spot is the most cost effective here.","comment_id":"1336459","poster":"henrikamirbekyan","timestamp":"1736011260.0","upvote_count":"1"},{"comment_id":"1331056","upvote_count":"1","poster":"HiraPBI","timestamp":"1735029420.0","content":"Selected Answer: C\nC - Because of cost effectiveness."},{"comment_id":"1321999","content":"Selected Answer: D\nD. Use Reserved Instances for the baseline capacity and use On-Demand Instances to handle additional capacity. Most Voted","poster":"wellzz5422","timestamp":"1733326980.0","upvote_count":"1"},{"content":"Selected Answer: D\n\"without any downtime\" rules out spot instance.","comment_id":"1320619","upvote_count":"2","timestamp":"1733069880.0","poster":"tom_cruise"},{"timestamp":"1732678620.0","content":"Selected Answer: C\nComparison with other options:\nA. Spot Instances exclusively:\nWhile cost-effective, Spot Instances can be interrupted and may not ensure uninterrupted message processing, which is critical for this application.\nB. Reserved Instances exclusively:\nOver-provisioning Reserved Instances to handle the maximum capacity would lead to unnecessary costs during low-traffic periods.\nD. Reserved Instances + On-Demand Instances:\nOn-Demand Instances are more expensive than Spot Instances for handling additional capacity, making this less cost-effective.","comment_id":"1318411","upvote_count":"1","poster":"[Removed]"},{"comment_id":"1303222","upvote_count":"3","content":"Selected Answer: D\nAns D - \"Continual processing\" rules out Spot; so its Reserved Instances for the baseline capacity and use On-Demand Instances for peak","timestamp":"1729937160.0","poster":"PaulGa"},{"upvote_count":"1","comment_id":"1302932","timestamp":"1729873080.0","poster":"Mish","content":"Selected Answer: C\nwithout any downtime - Reserved Instances for the baseline capacity\ncost-effectively - Spot Instances to handle additional capacity"},{"content":"C. Use Reserved Instances for the baseline capacity and use Spot Instances to handle additional capacity.","timestamp":"1729873020.0","comment_id":"1302930","poster":"Mish","upvote_count":"1"},{"poster":"aturret","comment_id":"1294753","content":"Selected Answer: D\nFirst we need to ensure that no downtime. Then we can talk about cost-effective.","timestamp":"1728400320.0","upvote_count":"3"},{"timestamp":"1726095540.0","poster":"XXXXXlNN","content":"without any downtime... this imediately exclude spot instances...","upvote_count":"2","comment_id":"1282359"},{"comments":[{"upvote_count":"3","timestamp":"1725501480.0","comment_id":"1278581","poster":"MatAlves","content":"it LITERALLY says: \"Which solution meets these requirements MOST cost-effectively?\""}],"timestamp":"1725294120.0","poster":"bignatov","upvote_count":"2","content":"Selected Answer: D\nI think it is D, because NOWHERE is mentioned that it should be the most cost effective scenario. It is mentioned that it must process messages without any downtime.","comment_id":"1276926"},{"content":"Selected Answer: C\n\"without any downtime\" - Reserved Instances for the baseline capacity \"MOST cost-effectively\" - Spot Instances to handle additional capacity","poster":"[Removed]","timestamp":"1723153140.0","upvote_count":"1","comment_id":"1262670"},{"comment_id":"1256920","content":"C is definitely the most cost-effective, also the application shouldn't face any downtime because of the reserved instances always running.","poster":"jaradat02","timestamp":"1722184800.0","upvote_count":"1"},{"upvote_count":"4","poster":"jatric","content":"Selected Answer: D\nDude without downtime - spot instances might interrupt the processing if it goes away. So correct answer is D","comment_id":"1243483","timestamp":"1720289100.0"},{"upvote_count":"1","poster":"ChymKuBoy","content":"Selected Answer: C\nC for sure","comment_id":"1235199","timestamp":"1719037500.0"},{"comment_id":"1224795","timestamp":"1717600440.0","upvote_count":"1","content":"Selected Answer: C\nReserved Instances (RIs) provide a cost-effective way to cover the baseline capacity, ensuring a predictable number of instances are always available.\nSpot Instances can handle additional capacity during traffic spikes, providing scalability without committing to a specific number of instances.\nThis combination (C) offers the most cost-effective solution, as RIs cover the baseline and Spot Instances handle variable demand.\n\nWhy not D? On demand is expensive than Spot instances.","poster":"shil_31"},{"content":"Selected Answer: D\nIf it is a spot instance, it may become unusable. Since the question states that there is no downtime, I think D is more in line with the purpose.","upvote_count":"2","timestamp":"1717106640.0","comment_id":"1221836","poster":"pipisyokunin"},{"upvote_count":"2","comment_id":"1206556","poster":"ManikRoy","timestamp":"1714839000.0","content":"Selected Answer: D\nkey word - production System & without any down time. This excludes spot instance."},{"comment_id":"1182595","upvote_count":"1","timestamp":"1711380300.0","poster":"TruthWS","content":"C is correct because MOST cost-effective reason"},{"upvote_count":"1","content":"Selected Answer: C\nUsing Reserved Instances (RIs) for baseline capacity ensures a lower cost for the instances that are constantly required to maintain the application's baseline workload. RIs offer significant cost savings compared to On-Demand instances, making them a cost-effective choice for steady-state workloads.\n\nSpot Instances can then be utilized to handle additional capacity during periods of higher message volume. Spot Instances provide spare EC2 capacity at significantly reduced prices compared to On-Demand instances, allowing for cost savings during peak workloads. Since the message volume is unpredictable and often intermittent, Spot Instances can efficiently handle the fluctuating demand without incurring high costs.","comment_id":"1181037","timestamp":"1711213440.0","poster":"Uzbekistan"},{"content":"Missing some information to make a proper decision. What does \"without downtime\" mean? We are already outside of Realtime processing, and messages can remain in the queue until picked up. Purely using Spot instances _might_ do just fine, but there could be times when no spare capacity is available. How much delay is acceptable? I'd go with reserved+spot, but reserved+on demand may be required for priority on bursty load. \n\nB is the one option i would rule out completely. The workload is unpredictable, we can't reserve infinity instances for all eternity.","timestamp":"1710241860.0","upvote_count":"2","poster":"escalibran","comment_id":"1171620"},{"timestamp":"1709875260.0","poster":"Hrishi_707","upvote_count":"2","comment_id":"1168566","content":"Keywords are - Production, without any downtime. I would prefer D option as AWS itself recommends, spot instances should not be used in Prod environment."},{"timestamp":"1707991980.0","poster":"NayeraB","upvote_count":"6","comment_id":"1150880","content":"Selected Answer: D\nI think this phrase \"This application should continually process messages without any downtime.\" killed the idea of using Spot instances, not 100% sure though."},{"upvote_count":"1","comment_id":"1136537","poster":"MrPCarrot","timestamp":"1706689980.0","content":"Answer is C Reserved Instances for the baseline capacity can be used to handle downtime issue and Spot Instances to handle additional capacity is the most cost effective"},{"content":"Selected Answer: D\nReserved Instances for Baseline + On-Demand for unpredictable volume and intermittent traffic without downtime. \nKeywords:\n1. Production Application\n2. Unpredictable Volume and intermittent traffic\n3. Without any down-time\n\nSpot-instances is a cheaper option, but cannot guarantee downtime, and it is subject to availability too, hence the best choice is to go for On-Demand instances.","poster":"Charumathi","timestamp":"1706356620.0","comment_id":"1133313","upvote_count":"5"},{"timestamp":"1706076360.0","poster":"Leybiuk","content":"Selected Answer: C\nCheaper option which meets requirement","comment_id":"1130284","upvote_count":"1"},{"upvote_count":"3","poster":"awsgeek75","timestamp":"1705434900.0","comment_id":"1124477","content":"Selected Answer: D\nreserved for baseline + on-demand for additional\nC will work but spot does not guarantee \"continually process messages without any downtime\"\nspot instance may not even be available so what happens with the messages which exceed baseline requirements?"},{"content":"C is correct. Because\n- This application should continually process messages without any downtime -> RI for baseline workload\n- The message volume is unpredictable and often has intermittent traffic. -> Spot instances or on demand instances\n- Which solution meets these requirements MOST cost-effectively -> Spot instances (ruling out/dismissing on demand instances","upvote_count":"1","comment_id":"1115894","poster":"SVDK","timestamp":"1704636600.0"},{"timestamp":"1703801460.0","upvote_count":"4","content":"Selected Answer: D\nAlthough Spot instance is cheaper, but it might be terminated so it's not a reliable solution.","poster":"farnamjam","comment_id":"1108130"},{"timestamp":"1703555160.0","poster":"bi11","comment_id":"1105631","content":"Selected Answer: C\ncccccccccccc","upvote_count":"1"},{"poster":"ale_brd_111","upvote_count":"1","timestamp":"1702393140.0","content":"Selected Answer: C\nOn-Demand Instances are generally more expensive compared to Spot Instances. In scenarios with unpredictable and intermittent traffic, using On-Demand Instances for additional capacity may result in higher costs than leveraging Spot Instances.\n\nIn summary, Option C is more cost-effective because it leverages the potential cost savings of Spot Instances for handling increased demand during unpredictable traffic spikes, providing a balance between cost predictability (with Reserved Instances) and cost efficiency (with Spot Instances).","comment_id":"1094639"},{"poster":"ansagr","content":"Selected Answer: C\nThis option combines the cost savings of Reserved Instances for the baseline workload with the flexibility and potential cost savings of Spot Instances for handling bursts of additional capacity. It provides a balance between cost-effectiveness and ensuring continuous processing even during peak periods.\nMessages are read from SQS, meaning that if a Spot instance is terminated while processing a message, the message will remain in the queue for retry.","upvote_count":"1","comment_id":"1092190","timestamp":"1702167540.0"},{"content":"Selected Answer: C\nThe traffic itself is also intermittent so for additional capacity, spot instance along with SQS should be good to go to handle these traffic to avoid downtime and also have least cost of instances. Of course for based line capacity, reserved instance is reliable and also cheaper than on-demand. C","poster":"Marco_St","timestamp":"1700923380.0","comment_id":"1080074","upvote_count":"1"},{"timestamp":"1700424600.0","upvote_count":"2","comment_id":"1074908","content":"Selected Answer: D\nspot instance is not reliable solution","poster":"slots"},{"comment_id":"1073980","poster":"Richi0907","upvote_count":"1","timestamp":"1700310600.0","content":"Selected Answer: C\ncccccccccc"},{"timestamp":"1698909180.0","upvote_count":"7","poster":"Alex1atd","comment_id":"1060334","content":"Selected Answer: D\nNO Downtime != spot instance\nYes, C is cheaper, but you could have downtime. The request is to be Cost-effective, but also no downtime. To accomplish both, the answer is D (it will cost more than C, this is for sure, but you will have no downtime)"},{"timestamp":"1698407820.0","poster":"wsdasdasdqwdaw","upvote_count":"4","content":"C is more effective than D but it is not possible because of the last requirement \"This application should continually process messages without any downtime.\" So spot instances are out of the games as well as C option. The correct one is option D","comment_id":"1055561"},{"timestamp":"1698007980.0","poster":"rlamberti","upvote_count":"3","comment_id":"1051098","content":"Selected Answer: D\n\"process messages without any downtime\"\nSpot instances can be terminated anytime, so C is not an option.\nAnswer is D."},{"upvote_count":"5","poster":"awashenko","comment_id":"1042070","content":"Selected Answer: D\nI commented on a few post arguing for C but I spent 20 mins just thinking about this question. Its tricky because your weighing the cost and downtime perspective. The reason I now think its D is because there is a chance you might not get a spot instance when you get an influx of data over the amount of your reserve. In this case, you would have downtime as there arent any spot instances available and you have more data than the reserve can handle. So I think D is the correct answer with On-Demand.","timestamp":"1697141280.0"},{"comment_id":"1023717","content":"Selected Answer: C\nC is correct, it is not just relying on the spot instance, when the instance become available it can be added back in.","timestamp":"1696317360.0","poster":"Ramdi1","upvote_count":"1"},{"content":"Selected Answer: D\nD: On-demand instances would always be available, whereas Spot (C) would not.","upvote_count":"1","timestamp":"1696059960.0","comment_id":"1021330","poster":"mildewCake"},{"comments":[{"timestamp":"1697140980.0","content":"The reserve instances would cover for this. There still shouldnt be downtime. \n\nI think Spot instance is correct. The only issue I could possibly see here is if you got a massive influx of data coming in and couldnt get any spot instances. I'm not sure if thats ever been an issue though.","upvote_count":"3","comment_id":"1042066","poster":"awashenko"}],"content":"Selected Answer: D\nwithout any downtime = NO Spot Instances","timestamp":"1694550360.0","poster":"Guru4Cloud","comment_id":"1006030","upvote_count":"5"},{"content":"Selected Answer: D\nD is the answer - the question states \"should continually process messages without any downtime\".\nSo, spot instances can offer up to 90% discount but quickly get interrupted.","poster":"daniel33","comment_id":"1005690","upvote_count":"2","timestamp":"1694518440.0"},{"timestamp":"1694413320.0","content":"Selected Answer: D\n'This application should continually process messages without any downtime'. \nWith spot instances there are chances of downtime.\nOn-demand will handle the peak times with no downtime.","comment_id":"1004491","upvote_count":"1","poster":"TariqKipkemei"},{"upvote_count":"2","poster":"Valder21","timestamp":"1693814340.0","comment_id":"998341","content":"Selected Answer: D\nwithout any downtime=no spot instances"},{"content":"Selected Answer: C\nC has no downtime either","timestamp":"1693306380.0","upvote_count":"1","poster":"coolkidsclubvip","comment_id":"993000"},{"comment_id":"991768","poster":"AKBM7829","upvote_count":"2","timestamp":"1693191780.0","content":"D is correct answer\nKeyword: unpredictable and often has intermittent traffic is ON-Demand"},{"content":"Selected Answer: C\nEl proceso es continuo con las instancias reservadas y las instancias spot son más rentables para procesos adicionales.","upvote_count":"1","comment_id":"985912","poster":"samiizduma","timestamp":"1692546060.0"},{"upvote_count":"2","poster":"040AG","content":"Selected Answer: D\nD is CORRECT (NOT C)\nThe question states \"... application should continually process messages without any downtime.\" it then asks which solution meets the requirements MOST cost-effectively. Hence, GIVEN that there can be no downtime, which is most cost-effective?\nThis therefore eliminates option C as it is vulnerable to \"Spot Instance Interruptions\", i.e. downtime. In addition to this, from the perspective of scaling out for increased application demand, you are at the mercy of spot instance availability which at that given time might be scarce / limited and thus there is wait time before capacity is freed up and a new spot instance can be added to the target group, i.e. downtime.","timestamp":"1692167760.0","comment_id":"982257"},{"timestamp":"1692005760.0","content":"Selected Answer: D\nD가 정답입니다","poster":"miniranda","comment_id":"980648","upvote_count":"1"},{"poster":"Sat897","comment_id":"980306","content":"Selected Answer: D\nD is correct without any doubts.. Even though cost effectiveness: required is - unpredictable and often has intermittent traffic - On-Demand","upvote_count":"2","timestamp":"1691961360.0"},{"upvote_count":"2","timestamp":"1691633760.0","comment_id":"977174","content":"Selected Answer: D\nThe EC2 instance fleet does not mention any external storage. If you are processing data, where are you saving it? I will choose D just to have the flexibility to add more instances from a snapshot if necessary","poster":"Moss2011"},{"poster":"n43u435b543ht2b","timestamp":"1691525820.0","comment_id":"976022","content":"Selected Answer: C\nC for cost-effectiveness. \nReserved instances will cover the baseline compute, and spot instances can be utilized for the unpredictable workloads. Even if a spot instance is unavailable when required, the base reserved compute can handle the workload until a spot instance becomes available.\n\nWhile using on-demand for the unpredictable workloads would mean that they are always available when required, this question asks for the most cost effective solution, and does not specify for the most operationally efficient solution.","upvote_count":"2"},{"upvote_count":"2","poster":"oguzbeliren","content":"Common confusion about the C and D. Both sounds suitable but using spot instance for additional capacity is more cost-effective than using on-demand instance. In the quieston, it doesnt have any restriction for the instance cutdown. The answer is C","comment_id":"970283","timestamp":"1690986720.0"},{"poster":"Nazmul123","timestamp":"1690436580.0","content":"With reserved instances your service will never have any downtime. Given that you have spot-instances, the quality of the service may degrade but you will not get any downtime \n\nC is correct.","upvote_count":"1","comment_id":"964385"},{"poster":"Smart","upvote_count":"2","comment_id":"961972","timestamp":"1690226640.0","content":"Selected Answer: C\nC is correct. If spot instances are unavailable, then, it may cause the queue length to increase. However, reserved instances could catch up due to unpredictable traffic. \n\nBasically, at worst, there will be some throttling but not unavailability."},{"upvote_count":"1","timestamp":"1689941040.0","content":"Selected Answer: A\nHow can I have reserved instances if the traffic is unpredictable? I think that is the purpose of spot instances. Spot instances sound attractive as well as reserved instances, but if traffic is unpredictable and intermitent (12 hrs without traffic) reserved instances are not the best option.","comments":[{"comment_id":"958441","content":"Correction on my previous comment... \"(...) I think that is the purpose of ON-DEMAND instances\"","upvote_count":"2","timestamp":"1689941100.0","poster":"MutiverseAgent"}],"poster":"MutiverseAgent","comment_id":"958439"},{"upvote_count":"2","comment_id":"954556","timestamp":"1689620940.0","poster":"Destravna","content":"Selected Answer: D\nThe application might face downtime even if we have reserved capacity when the server gets overwhelmed, spot instances aren't always available so we have option to use either on demand or reserved instances in case of heavy workloads, using reserved instances for heavy workloads might help reduce the cost but may also increase the cost as we may not use the reserved capacity for the entire duration, also since the traffic is unpredictable there is a chance of even extra reserved capcity to run out, hence we use on demand"},{"comment_id":"952338","upvote_count":"1","timestamp":"1689422460.0","content":"Selected Answer: C\ncost effectiveness.","poster":"sbnpj"},{"content":"Selected Answer: C\nC: you have some instances to support the traffic considered normal and if you require more capacity you use spoot instances. Understanding that the application is volatile, but you can average its consumption and leave it as a baseline","poster":"fuzzycr","upvote_count":"1","timestamp":"1689295080.0","comment_id":"951099"},{"poster":"aadityaravi8","content":"D right answer. \nReserved Instances are a more expensive way to run Amazon EC2 instances, but they offer guaranteed capacity and pricing. Reserved Instances are a good option for applications that need to run continuously.\nSpot Instances are a cost-effective way to run Amazon EC2 instances when you have unpredictable or intermittent traffic. Spot Instances are available at a discounted price, but they can be interrupted if there is higher demand for EC2 instances. In question it is clearly mentioning that the application should run without any downtime. hence On Demand instance is best fit here for additional capacity needed.","upvote_count":"3","comment_id":"944234","timestamp":"1688608620.0"},{"comment_id":"934139","poster":"cookieMr","upvote_count":"4","content":"Selected Answer: C\nBy reserving instances in advance, the company can benefit from discounted pricing compared to On-Demand instances. As the message volume is unpredictable and intermittent, utilizing Spot Instances can provide additional capacity during peak periods at a much lower cost. By combining both, the company can optimize costs while ensuring continuous processing of messages without downtime.\n\nOption A (using Spot Instances exclusively) may result in interruptions or terminations when the Spot price exceeds the bid or there is a capacity constraint, leading to potential downtime or message processing delays.\n\nOption B (using Reserved Instances exclusively) may result in higher costs as Reserved Instances are more suitable for predictable or baseline workloads, and the company may incur unused capacity during periods of low message volume.\n\nOption D (using Reserved Instances for baseline capacity and On-Demand Instances for additional capacity) can be costlier compared to using Spot Instances for additional capacity as On-Demand Instances do not offer the same level of cost savings as Spot Instances.","timestamp":"1687762680.0"},{"timestamp":"1687094280.0","upvote_count":"1","poster":"teja54","comment_id":"926714","content":"Selected Answer: C\nc is correct based on cost-effectiveness"},{"poster":"beginnercloud","upvote_count":"1","timestamp":"1686817740.0","content":"Selected Answer: D\nD is correct.","comment_id":"923881"},{"upvote_count":"1","content":"Selected Answer: D\nI'd say C if it was a Spot Fleet, not spot instances.","comment_id":"912018","timestamp":"1685619420.0","poster":"antropaws"},{"upvote_count":"2","poster":"abhishek2021","content":"Selected Answer: D\nnumber of EC2 instances needs to scale with guarantee for high volume of traffic.\nSpot instances dosen't give that guarantee therefore may cause downtime. \nHence, D not C.","comment_id":"908191","timestamp":"1685221200.0"},{"poster":"Jumagul","content":"Selected Answer: D\nD is correct","upvote_count":"1","comment_id":"908122","timestamp":"1685207880.0"},{"content":"Selected Answer: C\nDowntime means a service is completely down. \nOpting C will not cause downtime as we have baseline reserved instances. Performance may degrade if spot instances are not available. \nBut overall , spot instances are cost effective than on-demand instances and the requirement is satisfied.","comment_id":"907318","timestamp":"1685101440.0","poster":"Kumaran1508","upvote_count":"2"},{"timestamp":"1684930020.0","poster":"Bmarodi","upvote_count":"1","comment_id":"905865","content":"Selected Answer: C\nOption C is MOST cost-effectively."},{"comment_id":"904705","content":"Selected Answer: D\nD is the answer. C is wrong because \"the application should continually process messages without any downtime\" ... you can't be certain to find spot instances when you need them","timestamp":"1684828440.0","upvote_count":"2","poster":"ruqui"},{"timestamp":"1683976440.0","upvote_count":"1","comment_id":"896617","poster":"studynoplay","content":"Selected Answer: D\nwithout any downtime = NO Spot Instances"},{"comment_id":"891665","content":"Selected Answer: C\nKey requirements:\n- no downtime\n- most cost-effective\n\nReserved instances for baseline capacity satisfy both requirements\nSpot-instance satisfy cost-effectiveness. \n\nSince we're not talking about performance AND we already have instances reserved D is not solving \"no downtime\" while loses to C in cost-effectiveness","timestamp":"1683489240.0","poster":"Konb","upvote_count":"2"},{"upvote_count":"4","timestamp":"1682556540.0","content":"Selected Answer: D\nMost important phrase \"without any downtime\"- D","comment_id":"882120","poster":"OAdekunle"},{"timestamp":"1682463480.0","upvote_count":"4","comment_id":"880934","poster":"jayce5","content":"Selected Answer: D\n\"process messages without any downtime\" -> D.\nSpot Instances are cost-effective, but they may produce downtime."},{"content":"Selected Answer: D\nD is the correct answer. Keyword is without downtime, so spot instance is out of the question. D also addresses cost-effectiveness, by being more cost-effective than B","timestamp":"1682407920.0","comment_id":"880081","poster":"john_nch","upvote_count":"4"},{"upvote_count":"2","comment_id":"878716","timestamp":"1682273580.0","poster":"HelloTomorrow","content":"D - as you can get spot instance by provide marginal price and may also reprocess the queue msg when spot instance is not available. It would server both - cost and avoid downtime"},{"content":"Selected Answer: C\nOption C correct , most cost-effectively","timestamp":"1682252760.0","poster":"seifshendy99","upvote_count":"1","comment_id":"878329"},{"upvote_count":"3","poster":"darn","timestamp":"1682045580.0","comment_id":"876151","content":"Selected Answer: D\nD, WITHOUT DOWNTIME"},{"content":"Selected Answer: D\nYes, you have to find the most cost effective solution that meets the requirements, and the requirements demand that there is no downtime. With C (spot instances), you can have downtime, so you can't pick that.","comment_id":"873747","upvote_count":"4","poster":"Robrobtutu","timestamp":"1681828980.0"},{"timestamp":"1681176120.0","poster":"ErfanKh","comment_id":"866755","content":"Selected Answer: D\nI say D, with Spot you can have downtime.","upvote_count":"2"},{"poster":"f9ly","upvote_count":"1","timestamp":"1681139940.0","comment_id":"866383","content":"Selected Answer: C\nthe question states that the processing is on a fleet of EC2 instances so basically it runs a distributed application with fault tolerance (SPOT INSTANCE), (ON-DEMAND) if there is no fault tolerance in that application."},{"comment_id":"865293","upvote_count":"2","poster":"Diyang","timestamp":"1681016640.0","content":"Selected Answer: D\nD for sure, if your argument is most cost-effective, you can just go with all spots, which you can't because there should be no downtime."},{"content":"Selected Answer: C\nC makes more sense, Spot instances will result in reduced availability","poster":"notacert","comments":[{"timestamp":"1680991020.0","upvote_count":"1","content":"I meant D, there is no way to edit the comment or delete it","comment_id":"865090","poster":"notacert"}],"comment_id":"865088","timestamp":"1680991020.0","upvote_count":"1"},{"comment_id":"854980","content":"Selected Answer: D\nI vote D because the baseline is unpredictable and spot availability can cause downtime.","poster":"kraken21","timestamp":"1680125640.0","upvote_count":"2"},{"upvote_count":"2","comment_id":"854762","poster":"Antonio1999","content":"Selected Answer: D\nThe key is \"This application should continually process messages without any downtime\"\nAnswer is D","timestamp":"1680111480.0"},{"content":"Selected Answer: C\n\"continually process messages without any downtime\" is just for making noise, Sopt instances do it when there is a SQS. C is the most cost-effective.","timestamp":"1679555220.0","upvote_count":"3","poster":"MssP","comment_id":"847904"},{"content":"Selected Answer: C\nKey to answering this question is how you think AWS interprets \"continually process messages without any downtime\".\nAs suggested by the info provided by Alhaz and others, applications can minimize the impact of a Spot Instance interruption. \nData will not be lost because another instance will poll the message again. \nAs Reserved Instances are being used for the baseline capacity continuously processing should be ensured (even if slowed down due to Spot Instance interruption).\nAs they want the most cost-effectively solution, C looks right to me.","comment_id":"817579","timestamp":"1677051420.0","poster":"Tofu13","upvote_count":"3"},{"comment_id":"816487","content":"Selected Answer: C\nhttps://aws.amazon.com/blogs/compute/running-cost-effective-queue-workers-with-amazon-sqs-and-amazon-ec2-spot-instances/","timestamp":"1676978880.0","upvote_count":"3","poster":"Alhaz"},{"content":"Selected Answer: C\nI change my answer to 'C' because of cost and explanation below:\nhttps://aws.amazon.com/blogs/compute/running-cost-effective-queue\n-workers-with-amazon-sqs-and-amazon-ec2-spot-instances/","upvote_count":"4","timestamp":"1676572260.0","comment_id":"810999","poster":"bdp123"},{"timestamp":"1676385660.0","upvote_count":"4","poster":"bdp123","content":"Selected Answer: D\nWe recommend that you use On-Demand Instances for applications with short-term, irregular workloads that cannot be interrupted.\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html","comment_id":"808471"},{"comment_id":"806253","content":"Selected Answer: D\nWithout downtime so On-demand","timestamp":"1676200980.0","upvote_count":"3","poster":"Ouk"},{"upvote_count":"2","comment_id":"803754","timestamp":"1675983720.0","poster":"Deepak_k","comments":[{"poster":"Deepak_k","comment_id":"803756","content":"Handling Spot Instance interruptions\n\nApplications can minimize the impact of a Spot Instance interruption. To do so, an application catches the two-minute interruption notification (available in the instance’s metadata), and instructs itself to stop fetching jobs from the queue. If there’s an image still being processed when the two minutes expire and the instance is terminated, the application does not delete the message from the queue after finishing the process. Instead, the message simply becomes visible again for another instance to pick up and process after the Amazon SQS visibility timeout expires.\n\nAlternatively, you can release any ongoing job back to the queue upon receiving a Spot Instance interruption notification by setting the visibility timeout of the specific message to 0. This timeout potentially decreases the total time it takes to process the message.","upvote_count":"1","timestamp":"1675983840.0"}],"content":"Selected Answer: C\nAnswer : C (Explained clearly when spot instance terminated and what happens to the message in queue)\nhttps://aws.amazon.com/blogs/compute/running-cost-effective-queue\n-workers-with-amazon-sqs-and-amazon-ec2-spot-instances/"},{"timestamp":"1675842780.0","content":"Selected Answer: D\nExplanation/Reference: We recommend that you use On-Demand Instances for applications with short-term, irregular workloads thatcannot be interrupted.","poster":"omarinux","upvote_count":"2","comment_id":"801754"},{"timestamp":"1675774500.0","upvote_count":"2","content":"Selected Answer: C\nI think the right option is C based on the cost-effectively request.","poster":"AndyMartinez","comment_id":"800891"},{"upvote_count":"2","timestamp":"1675390860.0","poster":"remand","content":"Selected Answer: C\nThis is the sneaky way of saying processing can be terminated anytime. Because messages can go back to SQS if Spot instance is pulled back, C is correct","comment_id":"796639"},{"poster":"LuckyAro","upvote_count":"1","timestamp":"1675328820.0","content":"Selected Answer: B\nThe message volume is unpredictable and often has intermittent traffic = No Baseline period = C % D are incorrect. \nThis application should continually process messages without any downtime = No Spot Instances = A is Incorrect.\n\nB is the answer = On demand instances due to unpredictable pattern.","comment_id":"795904"},{"comment_id":"791359","poster":"joric","upvote_count":"2","timestamp":"1674962760.0","content":"Selected Answer: C\nc - most cost effective: spot instanes for traffic peaks"},{"comment_id":"778356","poster":"LuckyAro","upvote_count":"2","comments":[{"upvote_count":"3","content":"It is the main question. Which solution meets these requirements MOST cost-effectively?","poster":"mj61","timestamp":"1674160740.0","comment_id":"781583"}],"timestamp":"1673909640.0","content":"Selected Answer: D\nBecause cost was not a consideration in the question, I would reluctantly vote D. Autoscaling group filled with spot instances would have made better architecture due to cost consideration."},{"poster":"JayBee65","comment_id":"767508","timestamp":"1673000280.0","upvote_count":"1","content":"There is no sensible logical explanation given for D. The explanations below are all flawed. C is explained accurately"},{"content":"Selected Answer: D\nArguments from SAA-CO2\n\nA. Nop, we need to process messages without any downtime.\nB. It would be a waste to have instances running when there is intermittent traffic.\nC. Could be, but we can't use Spot Instances\nD. Sounds about right, even though on-demand is expensive, there can't be any downtime.","upvote_count":"2","timestamp":"1672843980.0","comment_id":"765774","poster":"aba2s"},{"content":"Selected Answer: C\nC, \nyou have a Reserved Instances of EC2 handle part of capacity which is baseline volume, and you config to have many Spot instance to handle additional task if the queue is filled up","comment_id":"763924","poster":"gustavtd","upvote_count":"2","timestamp":"1672686000.0"},{"comment_id":"763460","content":"Selected Answer: C\nhttps://www.examtopics.com/discussions/amazon/view/35772-exam-aws-certified-solutions-architect-associate-saa-c02/\nSo many people keep arguing that a spot instance can be interrupted and that would mean downtime.\nGuys, please understand the difference between downtime and delay.\nIf a spot instance is interrupted the SQS has a retry mechanism built in (message not deleted and a new consumer can consume the same message. The default time setting for message visibility is 30 seconds. Assume it doesn`t get processed and deleted by a spot instance, that means it will be put back in the queue and a new consumer (reserved instance) will be available to process that message.\nPlease learn the differences between no delay and no downtime.","comments":[{"comment_id":"789945","poster":"OR2","content":"There is SQS, so spot instance makes perfect sense","timestamp":"1674847920.0","upvote_count":"2"}],"timestamp":"1672626000.0","poster":"Zerotn3","upvote_count":"3"},{"poster":"Zerotn3","upvote_count":"3","timestamp":"1672625100.0","content":"Selected Answer: C\noption D is not the most cost-effective solution for this scenario. Option D states that the company should use Reserved Instances for the baseline capacity and On-Demand Instances to handle additional capacity.\n\nUsing On-Demand Instances to handle additional capacity would likely be the least cost-effective option, as On-Demand Instances are generally more expensive than both Spot and Reserved Instances.\n\nThe most cost-effective solution for this scenario would be to use a combination of Reserved Instances for the baseline capacity and Spot Instances to handle additional capacity. This would allow the company to take advantage of the lower costs of Spot Instances for the unpredictable, intermittent traffic, while also ensuring that there is a baseline of capacity available at all times through the use of Reserved Instances.","comment_id":"763451"},{"poster":"Buruguduystunstugudunstuy","comments":[{"content":"Not a suitable solution.\n\nOption A (using Spot Instances exclusively) would not be a suitable solution as Spot Instances may not provide a consistent and reliable capacity.\n\nOption B (using Reserved Instances exclusively) would not be a suitable solution as it may not be cost-effective to pay the higher On-Demand prices for capacity that is not always used.\n\nOption D (using Reserved Instances for the baseline capacity and On-Demand Instances to handle additional capacity) would not be a cost-effective solution as On-Demand Instances are generally more expensive than Spot Instances.","poster":"Buruguduystunstugudunstuy","upvote_count":"3","comment_id":"753558","timestamp":"1671732600.0"},{"upvote_count":"3","content":"Explanation as to WHY Reserved/Spot Instances are suitable.\n\nReserved Instances are a cost-effective option for instances that are used consistently over a longer period of time, as they offer a significant discount compared to On-Demand Instances. By using Reserved Instances for the baseline capacity, you can ensure that you have a consistent and reliable capacity available to process messages, without incurring the higher costs of On-Demand Instances.\n\nSpot Instances are instances that are available at a discounted price, in exchange for the ability to interrupt the instances when EC2 needs the capacity back. While Spot Instances can be a cost-effective option for handling unpredictable workloads, they may not be suitable for applications that require a consistent and reliable capacity. However, by using Spot Instances to handle additional capacity, you can take advantage of the discounted prices while still having a consistent and reliable capacity available through the Reserved Instances.","poster":"Buruguduystunstugudunstuy","comment_id":"753560","timestamp":"1671732660.0"}],"comment_id":"753557","timestamp":"1671732540.0","content":"Selected Answer: C\nThe most cost-effective solution for continually processing messages without any downtime would be to use a combination of Reserved Instances for the baseline capacity and Spot Instances to handle additional capacity (Option C).","upvote_count":"4"},{"upvote_count":"1","comment_id":"750484","poster":"BENICE","content":"Looks like C is correct answer","timestamp":"1671509340.0"},{"comment_id":"748654","upvote_count":"1","content":"answer is c","timestamp":"1671347880.0","poster":"Sahilbhai"},{"comment_id":"748368","content":"Selected Answer: D\nOption D to avoid any downtime due to spot instances going away as load is unpredictable.","comments":[{"comment_id":"767502","timestamp":"1673000100.0","upvote_count":"1","content":"That is not a requirement of the question. The reserved instance would continually process the queue","poster":"JayBee65"}],"poster":"career360guru","upvote_count":"2","timestamp":"1671307500.0"},{"comments":[],"timestamp":"1670902560.0","comment_id":"743565","poster":"Qjb8m9h","upvote_count":"2","content":"\"This application should continually process messages without any downtime\"- Spot Instance could be distrupted. but requirement wants persistency \nHence Answer is : D"},{"comment_id":"734945","content":"Selected Answer: D\nI've read the C002 discussions on the same question. Ppl selecting C are doing so because there is a baseline of EC2 involved. \n\nHowever, what if the baseline is full, and it cannot provide any more answers to the customers? This is why we need additional instances after all (in the cheapest way) -> to handle additional workload - not supported by baseline.\n\nMore costly than C, but C defeats the purpose of the question.","poster":"ocbn3wby","comments":[{"upvote_count":"1","comment_id":"767504","comments":[{"upvote_count":"1","comment_id":"793720","poster":"ocbn3wby","timestamp":"1675146060.0","content":"Weeks later and I think you're right. Goddamn this exam"}],"poster":"JayBee65","content":"That explanation makes no sense\n\"what if the baseline is full, and it cannot provide any more answers to the customers?\" Then messages will Q, which is fine.","timestamp":"1673000160.0"}],"upvote_count":"2","timestamp":"1670142900.0"},{"content":"Selected Answer: D\nNo downtime eliminates option A and C, as spot instances can be lost unexpectedly. Unpredictable volumes directs towards on Demand instances. So Option D is the right answer.","upvote_count":"4","comments":[{"content":"The reserved instance would continually process the queue if the spot instance was not available","poster":"JayBee65","timestamp":"1673000220.0","upvote_count":"1","comment_id":"767506"}],"comment_id":"734700","timestamp":"1670102460.0","poster":"Rameez1"},{"upvote_count":"3","comment_id":"724983","content":"Selected Answer: C\nA - it's out because it's not ok to use full spot coverage.\nB - it's hard to predict how much resources are needed to buy ahead, so it's suitable to no have any down time but not the best from cost perspective\nC - possible to be correct answer such as use cover baseline with RI and rest with spot that is cheaper. Regarding don't time. there is no downtime because vaseline covered with RI and all communication is via SQS (distributed model)\nD - possible but less cost effective then C","poster":"romko","timestamp":"1669191120.0"},{"upvote_count":"1","timestamp":"1669134660.0","poster":"Wpcorgan","content":"D is correct","comment_id":"724468"},{"upvote_count":"2","comment_id":"721183","poster":"ds0321","content":"Selected Answer: D\nD is the correct answer","timestamp":"1668761880.0"},{"upvote_count":"2","comment_id":"720079","poster":"Danny23132412141_2312","content":"D is the correct answer","timestamp":"1668641760.0"},{"content":"Selected Answer: D\nAnswer D: unpredictable and often has intermittent traffic","poster":"mabotega","upvote_count":"3","comment_id":"719896","timestamp":"1668622560.0"},{"comment_id":"719593","content":"Selected Answer: D\nNo downtime required so the answer is D","upvote_count":"4","poster":"babaxoxo","timestamp":"1668599880.0"},{"timestamp":"1668599520.0","upvote_count":"2","poster":"mricee9","comment_id":"719585","content":"Selected Answer: C\nC \nhttps://www.examtopics.com/discussions/amazon/view/35772-exam-aws-certified-solutions-architect-associate-saa-c02/"},{"content":"Answer is D because you CAN NOT use spot instances for unpredictability","upvote_count":"3","comment_id":"718867","comments":[],"timestamp":"1668523140.0","poster":"Nigma"},{"comment_id":"718753","upvote_count":"3","timestamp":"1668519480.0","content":"Selected Answer: C\nreserved instance and spot instance","poster":"goatbernard"}],"exam_id":31,"question_id":96,"unix_timestamp":1668519480,"question_images":[],"choices":{"A":"Use Spot Instances exclusively to handle the maximum capacity required.","C":"Use Reserved Instances for the baseline capacity and use Spot Instances to handle additional capacity.","D":"Use Reserved Instances for the baseline capacity and use On-Demand Instances to handle additional capacity.","B":"Use Reserved Instances exclusively to handle the maximum capacity required."},"isMC":true},{"id":"j4mXyxvbi3E2JCkMgdUI","unix_timestamp":1668519600,"answer_ET":"D","answer":"D","question_id":97,"choices":{"C":"Create cross-account roles in each account to deny access to the services or actions.","B":"Create a security group to allow accounts and attach it to user groups.","A":"Create an ACL to provide access to the services or actions.","D":"Create a service control policy in the root organizational unit to deny access to the services or actions."},"topic":"1","answers_community":["D (100%)"],"question_text":"A security team wants to limit access to specific services or actions in all of the team’s AWS accounts. All accounts belong to a large organization in AWS Organizations. The solution must be scalable and there must be a single point where permissions can be maintained.\n\nWhat should a solutions architect do to accomplish this?","answer_description":"","isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/87512-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_images":[],"exam_id":31,"discussion":[{"comment_id":"718869","timestamp":"1668523260.0","upvote_count":"21","content":"D. Service control policies (SCPs) are one type of policy that you can use to manage your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization, allowing you to ensure your accounts stay within your organization's access control guidelines. See https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html.","poster":"Nigma"},{"comment_id":"934159","poster":"cookieMr","content":"By creating an SCP in the root organizational unit, the security team can define and enforce fine-grained permissions that limit access to specific services or actions across all member accounts. The SCP acts as a guardrail, denying access to specified services or actions, ensuring that the permissions are consistent and applied uniformly across the organization. SCPs are scalable and provide a single point of control for managing permissions, allowing the security team to centrally manage access restrictions without needing to modify individual account settings.\n\nOption A and option B are not suitable for controlling access across multiple accounts in AWS Organizations. ACLs and security groups are typically used for managing network traffic and access within a single account or a specific resource.\n\nOption C is not the recommended approach. Cross-account roles are used for granting access, and denying access through cross-account roles can be complex and less manageable compared to using SCPs.","upvote_count":"10","comments":[{"poster":"awashenko","content":"This was a good explanation of why A and B are not correct. I was thinking A but after reading this I agree with you D is correct.","comment_id":"1042073","upvote_count":"2","timestamp":"1697141520.0"}],"timestamp":"1687764300.0"},{"upvote_count":"1","timestamp":"1739034120.0","comment_id":"1353517","content":"Selected Answer: D\nSCP are most suitable with AWS Organizations","poster":"satyaammm"},{"poster":"Dharmarajan","timestamp":"1738867740.0","upvote_count":"1","comment_id":"1352587","content":"Selected Answer: D\nD is the best fit among the options. Better fit would be using AWS Control tower."},{"poster":"PaulGa","timestamp":"1729937340.0","upvote_count":"2","comment_id":"1303223","content":"Selected Answer: D\nAns D - \"A service control policy in the root organizational unit to deny access to the services or actions\" does it at source"},{"comment_id":"1084276","poster":"Ruffyit","upvote_count":"2","content":"D. Service control policies (SCPs) are one type of policy that you can use to manage your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization, allowing you to ensure your accounts stay within your organization's access control guidelines. See https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html.","timestamp":"1701342780.0"},{"content":"is D because of Deeznuts","poster":"mach2022","comment_id":"1059407","upvote_count":"2","comments":[{"timestamp":"1706036460.0","upvote_count":"1","content":"gottem","poster":"the_bong_lord","comment_id":"1129953"}],"timestamp":"1698820920.0"},{"comment_id":"1047148","content":"Selected Answer: D\nIts very clear question answer is D","poster":"xplusfb","timestamp":"1697654400.0","upvote_count":"3"},{"comment_id":"1004492","content":"Selected Answer: D\nService control policies (SCPs) are a type of organization policy that you can use to manage permissions in your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization. SCPs help you to ensure your accounts stay within your organization’s access control guidelines.","poster":"TariqKipkemei","timestamp":"1694413500.0","upvote_count":"2"},{"upvote_count":"2","poster":"Guru4Cloud","timestamp":"1692281100.0","comment_id":"983717","content":"Selected Answer: D\nD. Service control policies (SCPs) are one type of policy that you can use to manage your organization. SCPs offer central control over the maximum available permissions for all accounts in your organization, allowing you to ensure your accounts stay within your organization's access control guidelines. See https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html."},{"content":"Selected Answer: D\nI vote for option D by Creating a service control policy ( SCP) in the root organizational unit to deny access to the services or actions, meets the requirements.","timestamp":"1684930860.0","comment_id":"905877","upvote_count":"2","poster":"Bmarodi"},{"comment_id":"753561","upvote_count":"6","timestamp":"1671732900.0","poster":"Buruguduystunstugudunstuy","content":"Selected Answer: D\nTo limit access to specific services or actions in all of the team's AWS accounts and maintain a single point where permissions can be managed, the solutions architect should create a service control policy (SCP) in the root organizational unit to deny access to the services or actions (Option D).\n\nService control policies (SCPs) are policies that you can use to set fine-grained permissions for your AWS accounts within your organization. SCPs are attached to the root of the organizational unit (OU) or to individual accounts, and they specify the permissions that are allowed or denied for the accounts within the scope of the policy. By creating an SCP in the root organizational unit, the security team can set permissions for all of the accounts in the organization from a single location, ensuring that the permissions are consistently applied across all accounts."},{"comment_id":"748371","upvote_count":"1","timestamp":"1671307680.0","content":"Selected Answer: D\nOption D","poster":"career360guru"},{"content":"D iscorrect","timestamp":"1669134720.0","comment_id":"724469","upvote_count":"1","poster":"Wpcorgan"},{"content":"an organization and requires single point place to manage permissions","poster":"babaxoxo","upvote_count":"2","comment_id":"719595","timestamp":"1668600060.0"},{"poster":"goatbernard","content":"Selected Answer: D\nSCP for organization","upvote_count":"4","comment_id":"718757","timestamp":"1668519600.0"}],"question_images":[],"timestamp":"2022-11-15 14:40:00"},{"id":"PeZ5HUN4T94hACPtp8KP","answers_community":["C (100%)"],"timestamp":"2022-11-15 15:48:00","unix_timestamp":1668523680,"choices":{"A":"Add an Amazon Inspector agent to the ALB.","C":"Enable AWS Shield Advanced to prevent attacks.","B":"Configure Amazon Macie to prevent attacks.","D":"Configure Amazon GuardDuty to monitor the ALB."},"url":"https://www.examtopics.com/discussions/amazon/view/87526-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_ET":"C","question_id":98,"exam_id":31,"answer_description":"","topic":"1","question_text":"A company is concerned about the security of its public web application due to recent web attacks. The application uses an Application Load Balancer (ALB). A solutions architect must reduce the risk of DDoS attacks against the application.\n\nWhat should the solutions architect do to meet this requirement?","question_images":[],"isMC":true,"discussion":[{"poster":"studynoplay","comment_id":"896620","content":"What's going on, suddenly the questions are so easy","comments":[{"comment_id":"963538","timestamp":"1690362060.0","poster":"Sutariya","upvote_count":"7","content":"Its due to confidence level going up after experience."}],"upvote_count":"11","timestamp":"1683976680.0"},{"poster":"awashenko","comment_id":"1042075","timestamp":"1697141640.0","upvote_count":"7","content":"Selected Answer: C\nWhen you see DDOS immediately think Shield"},{"content":"Selected Answer: C\nAWS Shield is most suitable for DDoS attacks.","poster":"satyaammm","comment_id":"1353519","upvote_count":"1","timestamp":"1739034180.0"},{"content":"Selected Answer: C\nAns C - DDoS under AWS = Shield/ Shield Advanced","comment_id":"1303225","poster":"PaulGa","timestamp":"1729937520.0","upvote_count":"2"},{"content":"When you see DDOS immediately think Shield","comment_id":"1084277","poster":"Ruffyit","upvote_count":"6","timestamp":"1701342840.0"},{"content":"Selected Answer: C\nAWS Shield is a managed DDoS protection service that safeguards applications running on AWS.","timestamp":"1694413680.0","poster":"TariqKipkemei","upvote_count":"2","comment_id":"1004496"},{"content":"Selected Answer: C\nEnable AWS Shield Advanced to prevent attacks.","upvote_count":"2","poster":"Guru4Cloud","timestamp":"1692284100.0","comment_id":"983756"},{"timestamp":"1687764720.0","upvote_count":"4","content":"Selected Answer: C\nBy enabling Shield Advanced, the web application benefits from automatic protection against common and sophisticated DDoS attacks. It utilizes advanced detection and mitigation techniques, including ML algorithms and traffic analysis, to provide effective DDoS protection.\nIt also includes features like real-time monitoring, attack notifications, and detailed attack reports.\n\nA is not related to DDoS protection. Amazon Inspector is a security assessment service that helps identify vulnerabilities and security issues in applications and EC2.\n\nB is also not the appropriate solution. Macie is a service that uses machine learning to discover, classify, and protect sensitive data stored in AWS. It focuses on data security and protection, not specifically on DDoS prevention.\n\nD is not the most effective solution. GuardDuty is a threat detection service that analyzes events and network traffic to identify potential security threats and anomalies. While it can provide insights into potential DDoS attacks, it does not actively prevent or mitigate them.","comment_id":"934170","poster":"cookieMr"},{"upvote_count":"3","timestamp":"1672248840.0","comment_id":"760158","poster":"techhb","content":"Explained in details here https://medium.com/@tshemku/aws-waf-vs-firewall-manager-vs-shield-vs-shield-advanced-4c86911e94c6"},{"content":"Selected Answer: C\nTo reduce the risk of DDoS attacks against the application, the solutions architect should enable AWS Shield Advanced (Option C).\n\nAWS Shield is a managed Distributed Denial of Service (DDoS) protection service that helps protect web applications running on AWS from DDoS attacks. AWS Shield Advanced is an additional layer of protection that provides enhanced DDoS protection capabilities, including proactive monitoring and automatic inline mitigations, to help protect against even the largest and most sophisticated DDoS attacks. By enabling AWS Shield Advanced, the solutions architect can help protect the application from DDoS attacks and reduce the risk of disruption to the application.","upvote_count":"5","poster":"Buruguduystunstugudunstuy","timestamp":"1671733080.0","comment_id":"753562"},{"content":"Selected Answer: C\nC is right answer","timestamp":"1671307740.0","comment_id":"748374","upvote_count":"2","poster":"career360guru"},{"upvote_count":"2","content":"C is correct","poster":"Wpcorgan","comment_id":"724470","timestamp":"1669134720.0"},{"timestamp":"1668556260.0","content":"Selected Answer: C\nAWS Shield Advanced","upvote_count":"4","poster":"goatbernard","comment_id":"719189"},{"upvote_count":"5","comment_id":"718871","content":"DDOS = AWS Shield","poster":"Nigma","timestamp":"1668523680.0"}],"answer_images":[],"answer":"C"},{"id":"8aHccdhpTJMa95zQAm7d","answer_description":"","url":"https://www.examtopics.com/discussions/amazon/view/85032-exam-aws-certified-solutions-architect-associate-saa-c03/","question_text":"A company is implementing a new business application. The application runs on two Amazon EC2 instances and uses an Amazon S3 bucket for document storage. A solutions architect needs to ensure that the EC2 instances can access the S3 bucket.\nWhat should the solutions architect do to meet this requirement?","unix_timestamp":1665412140,"answer_images":[],"exam_id":31,"timestamp":"2022-10-10 16:29:00","answers_community":["A (100%)"],"choices":{"B":"Create an IAM policy that grants access to the S3 bucket. Attach the policy to the EC2 instances.","D":"Create an IAM user that grants access to the S3 bucket. Attach the user account to the EC2 instances.","A":"Create an IAM role that grants access to the S3 bucket. Attach the role to the EC2 instances.","C":"Create an IAM group that grants access to the S3 bucket. Attach the group to the EC2 instances."},"question_images":[],"answer":"A","answer_ET":"A","isMC":true,"discussion":[{"content":"Selected Answer: A\nAlways remember that you should associate IAM roles to EC2 instances","timestamp":"1665484140.0","upvote_count":"101","poster":"sba21","comment_id":"692001"},{"upvote_count":"72","poster":"Buruguduystunstugudunstuy","timestamp":"1672171800.0","comment_id":"759007","content":"Selected Answer: A\nThe correct option to meet this requirement is A: Create an IAM role that grants access to the S3 bucket and attach the role to the EC2 instances.\n\nAn IAM role is an AWS resource that allows you to delegate access to AWS resources and services. You can create an IAM role that grants access to the S3 bucket and then attach the role to the EC2 instances. This will allow the EC2 instances to access the S3 bucket and the documents stored within it.\n\nOption B is incorrect because an IAM policy is used to define permissions for an IAM user or group, not for an EC2 instance.\n\nOption C is incorrect because an IAM group is used to group together IAM users and policies, not to grant access to resources.\n\nOption D is incorrect because an IAM user is used to represent a person or service that interacts with AWS resources, not to grant access to resources."},{"poster":"satyaammm","timestamp":"1735494060.0","comment_id":"1333649","content":"Selected Answer: A\nOnly IAM role is suitable here as policies are added to IAM groups or users. Moreover, IAM groups cannot be attached to a resource and attaching IAM user credentials to a IAM role in risky and thereby not suitable.","upvote_count":"1"},{"content":"Selected Answer: A\nAns. A\n\nHere's why:\n\nIAM Role: Roles are designed to be assumed by entities like EC2 instances. By creating an IAM role with the necessary permissions to access the S3 bucket and attaching this role to the EC2 instances, you ensure that the instances can securely access the S3 bucket without needing to manage long-term credentials.\nIAM Policy: While policies define permissions, they need to be attached to roles or users. Attaching a policy directly to EC2 instances is not possible.\nIAM Group: Groups are used to manage permissions for multiple users, not instances.\nIAM User: Users are intended for individual people or applications, not for EC2 instances.\nBy using an IAM role, you follow AWS best practices for security and manageability. If you have any more questions or need further clarification, feel free to ask!","timestamp":"1733939220.0","upvote_count":"1","poster":"Tjazz04","comment_id":"1325137"},{"content":"Selected Answer: A\nIAM Role + EC2 instance = go-to solution","comment_id":"1311780","upvote_count":"1","poster":"EzKkk","timestamp":"1731569100.0"},{"comment_id":"1264122","timestamp":"1723378680.0","upvote_count":"1","content":"Selected Answer: A\nAns A - as per \"Buruguduystunstugudunstuy\" response.","poster":"PaulGa"},{"comment_id":"1121625","timestamp":"1705149240.0","content":"Selected Answer: A\nAnswer-A","upvote_count":"2","poster":"A_jaa"},{"timestamp":"1704444300.0","comments":[{"poster":"thewalker","content":"Some key points:\n1. Attaching an IAM role is preferred over creating a resource-based policy for S3 access from EC2 as it provides centralized access management.\n2. The instance will need internet access to communicate with S3. Make sure the associated security group and NACL rules allow outbound internet access.\n3. Check AWS documentation for latest steps to create and associate an IAM role with an EC2 instance. The console and CLI provide options to automate this process.","upvote_count":"1","comment_id":"1114363","timestamp":"1704444360.0"}],"content":"Selected Answer: A\nBelow is the response from Amazon Q: \n\nTo access S3 from an EC2 instance, you need to create an IAM role and associate that role with the EC2 instance. Here are the basic steps:\n1. Create an IAM role and attach the AmazonS3ReadOnlyAccess or AmazonS3FullAccess managed policy to grant S3 access.\n2. Launch the EC2 instance and select the IAM role you created during launch.\n3. The instance will now have the permissions defined in the IAM role and you can access S3 from the instance.","comment_id":"1114362","poster":"thewalker","upvote_count":"2"},{"upvote_count":"1","timestamp":"1702075920.0","comment_id":"1091356","poster":"jjcode","content":"Strangely straight forward, Almost had me confused."},{"upvote_count":"1","comment_id":"1059340","content":"Selected Answer: A\nFor sure","timestamp":"1698808440.0","poster":"GabrielSGoncalves"},{"comment_id":"1054266","upvote_count":"1","timestamp":"1698292020.0","content":"The correct option to meet this requirement is A: Create an IAM role that grants access to the S3 bucket and attach the role to the EC2 instances.\n\nAn IAM role is an AWS resource that allows you to delegate access to AWS resources and services. You can create an IAM role that grants access to the S3 bucket and then attach the role to the EC2 instances. This will allow the EC2 instances to access the S3 bucket and the documents stored within it.\n\nOption B is incorrect because an IAM policy is used to define permissions for an IAM user or group, not for an EC2 instance.\n\nOption C is incorrect because an IAM group is used to group together IAM users and policies, not to grant access to resources.\n\nOption D is incorrect because an IAM user is used to represent a person or service that interacts with AWS resources, not to grant access to resources.","poster":"Ruffyit"},{"poster":"danielpark99","comment_id":"1028777","content":"Selected Answer: A\nEC2 instances should be associated with IAM roles.\nPolicies can be applying to users and groups can help to apply multiple roles.","timestamp":"1696849440.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"975417","timestamp":"1691488380.0","content":"Option B may work but ,\n suggests creating an IAM policy directly and attaching it to the EC2 instances. While this might work, it's not the recommended approach. Using an IAM role is more secure and manageable.","poster":"Abdou1604"},{"upvote_count":"1","timestamp":"1689864780.0","comment_id":"957714","poster":"Guru4Cloud","content":"Selected Answer: A\nAlways remember that you should associate IAM roles to EC2 instances.\nAn IAM role is an AWS resource that allows you to delegate access to AWS resources and services. You can create an IAM role that grants access to the S3 bucket and then attach the role to the EC2 instances. This will allow the EC2 instances to access the S3 bucket and the documents stored within it."},{"comment_id":"955399","upvote_count":"2","timestamp":"1689683580.0","content":"Selected Answer: A\nIAM roles should be associated to EC2 instance","poster":"Rexino"},{"content":"Option A MET THE REQUIREMENT","timestamp":"1689179700.0","comment_id":"950008","upvote_count":"1","poster":"miki111"},{"timestamp":"1687075800.0","poster":"cookieMr","comment_id":"926539","upvote_count":"3","content":"Selected Answer: A\nOption A is the correct approach because IAM roles are designed to provide temporary credentials to AWS resources such as EC2 instances. By creating an IAM role, you can define the necessary permissions and policies that allow the EC2 instances to access the S3 bucket securely. Attaching the IAM role to the EC2 instances will automatically provide the necessary credentials to access the S3 bucket without the need for explicit access keys or secrets.\n\nOption B is not recommended in this case because IAM policies alone cannot be directly attached to EC2 instances. Policies are usually attached to IAM users, groups, or roles.\n\nOption C is not the most appropriate choice because IAM groups are used to manage collections of IAM users and their permissions, rather than granting access to specific resources like S3 buckets.\n\nOption D is not the optimal solution because IAM users are intended for individual user accounts and are not the recommended approach for granting access to resources within EC2 instances."},{"poster":"big0007","timestamp":"1684294740.0","upvote_count":"1","comment_id":"899717","content":"IAM Roles manage who/what has access to your AWS resources, whereas IAM policies control their permissions.\n\nTherefore, a Policy alone is useless without an active IAM Role or IAM User."},{"poster":"cheese929","timestamp":"1684049280.0","content":"Selected Answer: A\nA is correct","comment_id":"897352","upvote_count":"1"},{"comment_id":"871369","upvote_count":"1","poster":"zoblazo","timestamp":"1681600800.0","content":"Selected Answer: A\nalways role for ec2 instance"},{"timestamp":"1680833340.0","content":"Keywords: EC2 instances can access the S3 bucket.\n\nA: Correct - IAM role is used to grant access for AWS services like EC2, Lambda,... \nB: Incorrect - IAM policy only apply for users cannot attach it to EC2 (AWS service).\nC: Incorrect - IAM group is used to group of permission and attach to list of users.\nD: Incorrect - To make EC2 work we need access key and secret access key but not user account. But even when we use access key and secret access key of user it's not recommended because anyone can access EC2 instance can get your access key and secret access key and get all permission from the owner. The secure way is using IAM role which we just specify enough role for EC2 instance.","upvote_count":"4","comment_id":"863431","poster":"PhucVuu"},{"content":"A is correct","comment_id":"860555","upvote_count":"1","poster":"thanhvx1","timestamp":"1680575580.0"},{"timestamp":"1679745300.0","upvote_count":"1","comment_id":"850088","content":"Selected Answer: A\nA","poster":"r1skkam"},{"poster":"gold4otas","timestamp":"1679177340.0","upvote_count":"1","content":"Selected Answer: A\nIAM Role is the correct anwser.","comment_id":"843203"},{"poster":"bilel500","upvote_count":"1","timestamp":"1677456900.0","content":"Selected Answer: A\nIAM Role is the correct anwser.","comment_id":"823078"},{"poster":"buiducvu","content":"Selected Answer: A\nIAM Role","comment_id":"807149","upvote_count":"1","timestamp":"1676273940.0"},{"poster":"Pankul","timestamp":"1674932520.0","upvote_count":"1","comment_id":"790979","content":"Selected Answer: A\nAssociate IAM roles to EC2 instances"},{"timestamp":"1673027580.0","comment_id":"767938","upvote_count":"1","poster":"SilentMilli","content":"Selected Answer: A\nAn IAM role is an AWS identity that you can create and use to delegate permissions to AWS resources. To give the EC2 instances access to the S3 bucket, you can create an IAM role that grants the necessary permissions and then attach the role to the instances. This will allow the instances to access the S3 bucket using the permissions granted by the role."},{"poster":"Zerotn3","timestamp":"1672037460.0","content":"it's A: Create an IAM role that grants access to the S3 bucket. Attach the role to the EC2 instances.","comment_id":"757141","upvote_count":"1"},{"poster":"BENICE","comment_id":"750464","timestamp":"1671508320.0","upvote_count":"1","content":"A is correct answer"},{"timestamp":"1671442860.0","upvote_count":"1","comment_id":"749683","content":"Selected Answer: A\nA\nHow can I grant my Amazon EC2 instance access to an Amazon S3 bucket?","poster":"psr83"},{"upvote_count":"1","timestamp":"1671131640.0","comment_id":"746448","content":"Selected Answer: A\nIAM role can be assigned to Amazon EC2 instance\n1. create one IAM role 2. give S3 access to it. 3.Attach to EC2","poster":"NikaCZ"},{"comment_id":"740793","content":"A since EC2 instance is tied to role not policy","timestamp":"1670662680.0","poster":"benaws","upvote_count":"1"},{"upvote_count":"4","comment_id":"737162","content":"IAM Role = services","timestamp":"1670354940.0","poster":"beto07"},{"content":"Selected Answer: A\nOption A is the correct one","timestamp":"1670271480.0","upvote_count":"1","poster":"AlaN652","comment_id":"736265"},{"poster":"9014","upvote_count":"1","content":"Selected Answer: A\nAAAAAAAAAAAA","comment_id":"735070","timestamp":"1670156520.0"},{"timestamp":"1669792200.0","poster":"miki111","content":"AAAAAAAAAA","comment_id":"731185","upvote_count":"1"},{"timestamp":"1669518060.0","upvote_count":"1","poster":"DerekMinstP","content":"A for sure","comment_id":"727903"},{"content":"Selected Answer: A\nA is correct","poster":"sherbo","comment_id":"726156","upvote_count":"1","timestamp":"1669320420.0"},{"content":"Selected Answer: A\nA is correct","poster":"ashish_t","comment_id":"724625","timestamp":"1669146840.0","upvote_count":"1"},{"poster":"Wpcorgan","content":"A is correct","upvote_count":"1","timestamp":"1669034640.0","comment_id":"723485"},{"comment_id":"723163","upvote_count":"1","poster":"ABCMail","content":"Selected Answer: A\nIAM role is a better solution","timestamp":"1669005960.0"},{"timestamp":"1668235800.0","poster":"libz","content":"Selected Answer: A\nIAM roles","upvote_count":"4","comment_id":"716498"},{"timestamp":"1666622940.0","upvote_count":"3","comment_id":"703140","poster":"Six_Fingered_Jose","content":"Selected Answer: A\nagree with A"},{"poster":"Jahangeer_17","timestamp":"1665841980.0","upvote_count":"3","comment_id":"695442","content":"Create one IAM role, give S3 access to it. Attach to EC2"},{"poster":"Chunsli","comment_id":"694849","timestamp":"1665757800.0","content":"Policy is conceptual, role or account is more physical.","upvote_count":"3"},{"comment_id":"693743","poster":"Sinaneos","content":"Selected Answer: A\nIAM roles are the best and easiest way for this","timestamp":"1665649440.0","upvote_count":"3"},{"poster":"mattlai","comments":[{"upvote_count":"1","timestamp":"1670205660.0","comment_id":"735602","poster":"RBSK","content":"You attach Policy to role. Q is Attaching to EC2, hence you attach role to EC2 instance"},{"content":"nah create role and attach role","poster":"mattlai","comment_id":"691690","upvote_count":"4","timestamp":"1665459660.0"}],"content":"isnt the correct answer create role and attach policy?","upvote_count":"2","timestamp":"1665459660.0","comment_id":"691689"},{"upvote_count":"1","content":"Selected Answer: A\nCreate an AWS Identity and Access Management (IAM) profile role that grants access to Amazon S3. Attach the IAM instance profile to the instance.","poster":"galbimandu","timestamp":"1665452700.0","comments":[{"timestamp":"1665452820.0","comment_id":"691647","content":"IAM role, Bucket policy.","poster":"galbimandu","upvote_count":"2"}],"comment_id":"691645"},{"content":"A.","upvote_count":"3","poster":"Ekie","comment_id":"691409","timestamp":"1665426060.0"},{"comment_id":"691247","upvote_count":"1","poster":"ogerber","timestamp":"1665412140.0","content":"Selected Answer: B\nB is correct. you attach a policy to an instance not a role.","comments":[{"poster":"ArielSchivo","content":"How's so? You can go to the instance, then \"attach/replace IAM role\".","upvote_count":"3","timestamp":"1666006500.0","comment_id":"697365"}]}],"question_id":99,"topic":"1"},{"id":"3PBgp8yI6jENVlLtLpxy","isMC":true,"answer_images":[],"answer":"C","exam_id":31,"timestamp":"2022-11-15 15:53:00","question_images":[],"unix_timestamp":1668523980,"answer_description":"","question_text":"A company’s web application is running on Amazon EC2 instances behind an Application Load Balancer. The company recently changed its policy, which now requires the application to be accessed from one specific country only.\n\nWhich configuration will meet this requirement?","answers_community":["C (100%)"],"url":"https://www.examtopics.com/discussions/amazon/view/87528-exam-aws-certified-solutions-architect-associate-saa-c03/","discussion":[{"poster":"handyplazt","upvote_count":"29","timestamp":"1669036620.0","content":"Selected Answer: C\nGeographic (Geo) Match Conditions in AWS WAF. This new condition type allows you to use AWS WAF to restrict application access based on the geographic location of your viewers. With geo match conditions you can choose the countries from which AWS WAF should allow access. \nhttps://aws.amazon.com/about-aws/whats-new/2017/10/aws-waf-now-supports-geographic-match/","comment_id":"723531"},{"poster":"Buruguduystunstugudunstuy","timestamp":"1671733260.0","upvote_count":"6","comment_id":"753564","content":"Selected Answer: C\nTo meet the requirement of allowing the web application to be accessed from one specific country only, the company should configure AWS WAF (Web Application Firewall) on the Application Load Balancer in a VPC (Option C).\n\nAWS WAF is a web application firewall service that helps protect web applications from common web exploits that could affect application availability, compromise security, or consume excessive resources. AWS WAF allows you to create rules that block or allow traffic based on the values of specific request parameters, such as IP address, HTTP header, or query string value. By configuring AWS WAF on the Application Load Balancer and creating rules that allow traffic from a specific country, the company can ensure that the web application is only accessible from that country."},{"timestamp":"1738867920.0","comment_id":"1352588","content":"Selected Answer: C\nAWF's Geo Match rule helps in this scenario.","upvote_count":"1","poster":"Dharmarajan"},{"comment_id":"1303227","content":"Selected Answer: C\nAns C - WAF with geo-match (region or country). \nhttps://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-geo-match.html","poster":"PaulGa","timestamp":"1729938060.0","upvote_count":"2"},{"timestamp":"1722798180.0","content":"C --> One of the feature of WAF is Access Control: Implement IP whitelisting and blacklisting to allow or block traffic from specific IP addresses or address ranges. This can be useful for restricting access to your web application to trusted users or regions.","upvote_count":"3","poster":"PoolDead","comment_id":"1260774"},{"timestamp":"1701343080.0","poster":"Ruffyit","upvote_count":"4","comment_id":"1084283","content":"Geographic (Geo) Match Conditions in AWS WAF. This new condition type allows you to use AWS WAF to restrict application access based on the geographic location of your viewers. With geo match conditions you can choose the countries from which AWS WAF should allow access.\nhttps://aws.amazon.com/about-aws/whats-new/2017/10/aws-waf-now-supports-geographic-match/"},{"content":"Selected Answer: C\nC. Configure AWS WAF on the Application Load Balancer in a VPC","poster":"Guru4Cloud","upvote_count":"1","comment_id":"983757","timestamp":"1692284160.0"},{"comment_id":"963540","content":"We can use AWS WAF to configure access control rule to access from specific location.","poster":"Sutariya","upvote_count":"1","timestamp":"1690362180.0"},{"timestamp":"1687764900.0","comment_id":"934173","upvote_count":"5","content":"Selected Answer: C\nBy configuring AWS WAF on the ALB in a VPC, you can apply access control rules based on the geographic location of the incoming requests. AWS WAF allows you to create rules that include conditions based on the IP addresses' country of origin. You can specify the desired country and deny access to requests originating from any other country by leveraging AWS WAF's Geo Match feature.\n\nOption A and option B focus on network-level access control and do not provide country-specific filtering capabilities.\n\nOption D is not the ideal solution for restricting access based on country. Network ACLs primarily control traffic at the subnet level based on IP addresses and port numbers, but they do not have built-in capabilities for country-based filtering.","poster":"cookieMr"},{"content":"Configure AWS WAF for Geo Match Policy","timestamp":"1685263380.0","poster":"Abrar2022","comment_id":"908447","upvote_count":"3"},{"comment_id":"769629","timestamp":"1673195820.0","content":"Selected Answer: C\nSource from an AWS link\nGeographic (Geo) Match Conditions in AWS WAF. This condition type allows you to use AWS WAF to restrict application access based on the geographic location of your viewers.\nWith geo match conditions you can choose the countries from which AWS WAF should allow access.","poster":"aba2s","upvote_count":"3"},{"upvote_count":"2","content":"Selected Answer: C\nWAF Shield Advanced for DDOS,\nGuardDuty is a continuous monitoring service that alerts you of potential threats, while Inspector is a one-time assessment service that provides a report of vulnerabilities and deviations from best practices.","poster":"techhb","timestamp":"1671990540.0","comment_id":"755875"},{"timestamp":"1671304560.0","comment_id":"748324","content":"Selected Answer: C\nOptionC. Configure WAF for Geo Match Policy","upvote_count":"2","poster":"career360guru"},{"upvote_count":"2","poster":"Wpcorgan","comment_id":"724471","timestamp":"1669134780.0","content":"C is correct"},{"content":"Selected Answer: C\nC\nhttps://aws.amazon.com/about-aws/whats-new/2017/10/aws-waf-now-supports-geographic-match/","poster":"mricee9","comment_id":"719605","timestamp":"1668601320.0","upvote_count":"3"},{"comment_id":"718880","poster":"Nigma","content":"C. WAF with ALB is the right option","upvote_count":"2","timestamp":"1668523980.0"}],"answer_ET":"C","topic":"1","question_id":100,"choices":{"C":"Configure AWS WAF on the Application Load Balancer in a VPC.","B":"Configure the security group on the Application Load Balancer.","D":"Configure the network ACL for the subnet that contains the EC2 instances.","A":"Configure the security group for the EC2 instances."}}],"exam":{"provider":"Amazon","isBeta":false,"lastUpdated":"11 Apr 2025","isImplemented":true,"name":"AWS Certified Solutions Architect - Associate SAA-C03","id":31,"numberOfQuestions":1019,"isMCOnly":true},"currentPage":20},"__N_SSP":true}