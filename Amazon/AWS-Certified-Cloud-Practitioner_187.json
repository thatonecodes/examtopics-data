{"pageProps":{"questions":[{"id":"0KKohOoydaNRkSuHDCS4","question_id":931,"question_text":"A company wants to automatically set up and govern a multi-account AWS environment.\n\nWhich AWS service provides this functionality?","topic":"1","answer_images":[],"answer_description":"","choices":{"D":"AWS Control Tower","A":"AWS IAM Identity Center (AWS Single Sign-On)","C":"AWS Config","B":"AWS Systems Manager"},"url":"https://www.examtopics.com/discussions/amazon/view/113694-exam-aws-certified-cloud-practitioner-topic-1-question-937/","answers_community":["D (100%)"],"question_images":[],"isMC":true,"answer_ET":"D","exam_id":18,"answer":"D","timestamp":"2023-06-29 21:23:00","discussion":[{"content":"Selected Answer: D\nD. AWS Control Tower","timestamp":"1690972740.0","comment_id":"970045","upvote_count":"3","poster":"Pranava_GCP"},{"timestamp":"1688066580.0","upvote_count":"4","poster":"[Removed]","comment_id":"938495","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html"}],"unix_timestamp":1688066580},{"id":"ia3sNe8nvVMOzIsUisZL","url":"https://www.examtopics.com/discussions/amazon/view/113693-exam-aws-certified-cloud-practitioner-topic-1-question-938/","answer_description":"","isMC":true,"topic":"1","question_text":"A company wants its Amazon EC2 instances to share the same geographic area but use redundant underlying power sources.\n\nWhich solution will meet these requirements?","question_id":932,"answer_ET":"A","choices":{"C":"Use EC2 instances in the same edge location and the same Availability Zone.","D":"Use EC2 instances in AWS OpsWorks stacks in different AWS Regions.","A":"Use EC2 instances across multiple Availability Zones in the same AWS Region.","B":"Use Amazon CloudFront as the database for the EC2 instances."},"answer":"A","question_images":[],"unix_timestamp":1688066340,"answer_images":[],"discussion":[{"poster":"Pranava_GCP","upvote_count":"3","timestamp":"1690972920.0","comment_id":"970049","content":"Selected Answer: A\nA. Use EC2 instances across multiple Availability Zones in the same AWS Region."},{"timestamp":"1688066340.0","upvote_count":"3","comment_id":"938492","poster":"[Removed]","content":"Selected Answer: A\nhttps://aws.amazon.com/about-aws/global-infrastructure/regions_az/"}],"timestamp":"2023-06-29 21:19:00","exam_id":18,"answers_community":["A (100%)"]},{"id":"IVfhXo0LSvFHuBwunHqL","choices":{"D":"AWS WAF","C":"Amazon GuardDuty","B":"Amazon RDS for SQL Server","A":"AWS Network Firewall"},"url":"https://www.examtopics.com/discussions/amazon/view/113520-exam-aws-certified-cloud-practitioner-topic-1-question-939/","topic":"1","answer_images":[],"exam_id":18,"answers_community":["D (100%)"],"question_text":"A global company wants to use a managed security service for protection from SQL injection attacks. The service also must provide detailed logging information about access to the companyâ€™s ecommerce applications.\n\nWhich AWS service will meet these requirements?","question_images":[],"question_id":933,"answer_description":"","isMC":true,"timestamp":"2023-06-28 13:06:00","answer":"D","discussion":[{"timestamp":"1690973100.0","upvote_count":"4","poster":"Pranava_GCP","content":"Selected Answer: D\nD. AWS WAF\n\n\"AWS WAF is a web application firewall that helps protect web applications from attacks by allowing you to configure rules that allow, block, or monitor (count) web requests based on conditions that you define. These conditions include IP addresses, HTTP headers, HTTP body, URI strings, SQL injection and cross-site scripting.\"\n\nhttps://aws.amazon.com/waf/faqs/","comment_id":"970054"},{"content":"Selected Answer: D\nD D D D","poster":"jahmad0730","upvote_count":"4","comment_id":"949119","timestamp":"1689091200.0"},{"poster":"[Removed]","comment_id":"938486","timestamp":"1688066040.0","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/waf/latest/developerguide/logging.html","upvote_count":"4"},{"comment_id":"936530","upvote_count":"3","content":"Selected Answer: D\nWith AWS WAF, you can create security rules that control bot traffic and block common attack patterns such as SQL injection or cross-site scripting (XSS).","poster":"oskarq","timestamp":"1687950360.0"}],"answer_ET":"D","unix_timestamp":1687950360},{"id":"vZOqphbyytymGjrU7zKg","isMC":true,"answer_images":[],"answer":"D","unix_timestamp":1661890500,"answers_community":["D (96%)","4%"],"question_id":934,"url":"https://www.examtopics.com/discussions/amazon/view/78494-exam-aws-certified-cloud-practitioner-topic-1-question-94/","question_images":[],"choices":{"D":"Avoid monolithic architecture by segmenting workloads.","A":"Design tightly coupled components.","B":"Build a single application component that can handle all the application functionality.","C":"Make large changes on fewer iterations to reduce chances of failure."},"timestamp":"2022-08-30 22:15:00","answer_ET":"D","exam_id":18,"discussion":[{"poster":"Craig92866","content":"You'll laugh when you read question 95. XD It just proved C is not the answer.\n\n95. A company is designing its AWS workloads so that components can be updated regularly and so that changes can be made in small, reversible increments.\nWhich pillar of the AWS Well-Architected Framework does this design support?","upvote_count":"18","timestamp":"1664483820.0","comment_id":"683043","comments":[{"content":"bro why does this site have all incorrect answers","comments":[{"timestamp":"1696382700.0","comment_id":"1024323","poster":"[Removed]","upvote_count":"2","content":"Yes exactly , \nIn many questions most voted and correct option is not matching"},{"comment_id":"958961","content":"M WONDERING","timestamp":"1689974280.0","upvote_count":"1","poster":"Tarasharma","comments":[{"timestamp":"1690312020.0","comment_id":"963035","content":"so that we can discuss here and stay longer than expected.","poster":"santu83","upvote_count":"5"}]}],"timestamp":"1678614840.0","upvote_count":"15","poster":"Om555","comment_id":"836874"}]},{"poster":"davinkeithlewis","upvote_count":"9","comment_id":"654393","content":"D is the right answer","timestamp":"1661890500.0"},{"content":"Selected Answer: D\navoiding monolithic architecture","timestamp":"1738597680.0","upvote_count":"1","poster":"Dipa_2910","comment_id":"1350982"},{"content":"Selected Answer: D\nAvoid monolithic architecture by segmenting workloads.","poster":"sonaljain","timestamp":"1735374360.0","upvote_count":"1","comment_id":"1332857"},{"content":"Selected Answer: D\nAvoid monolithic architecture","poster":"ParVid","timestamp":"1694833800.0","upvote_count":"3","comment_id":"1008819"},{"content":"C is wrong, as best practice in any environment do small and frequent changes.","upvote_count":"1","timestamp":"1694105820.0","comment_id":"1001753","poster":"blopa"},{"comment_id":"985340","timestamp":"1692465360.0","poster":"Yuval711","content":"Selected Answer: D\nhttps://wa.aws.amazon.com/wat.question.REL_3.en.html\n\nIt says:\n\nMonolithic architecture should be avoided whenever possible. Instead, carefully consider which application components can be broken out into microservices.","upvote_count":"3"},{"content":"C does not make sense according to this:\nhttps://docs.aws.amazon.com/wellarchitected/latest/framework/oe-design-principles.html\n\nClearly says: \"Make frequent, small , reversible changes\"","timestamp":"1691960220.0","poster":"Yuval711","upvote_count":"2","comment_id":"980302"},{"content":"Selected Answer: D\nC is wrong, as the changes should be small, frequent and reversible.","poster":"shin3","upvote_count":"1","timestamp":"1691610780.0","comment_id":"976988"},{"content":"Selected Answer: D\nAnswer correct is D","upvote_count":"1","comment_id":"966641","timestamp":"1690664100.0","poster":"Bibs_s"},{"timestamp":"1689224880.0","content":"Selected Answer: D\nAWS recommends designing applications using a microservices architecture, which involves breaking down large, monolithic applications into smaller, loosely coupled components called microservices. Each microservice focuses on a specific business capability and can be developed, deployed, and scaled independently. This approach offers several benefits, including increased flexibility, scalability, and fault tolerance.","comment_id":"950346","poster":"man5484","upvote_count":"1"},{"content":"Selected Answer: D\nSure answer C","comment_id":"924067","poster":"Warsame21","upvote_count":"1","timestamp":"1686824220.0"},{"poster":"adrianap93","upvote_count":"1","timestamp":"1685883360.0","content":"Selected Answer: D\nit should be D","comment_id":"914617"},{"comment_id":"899181","poster":"starsea","content":"It's definitely D.","upvote_count":"1","timestamp":"1684240560.0"},{"upvote_count":"1","content":"Selected Answer: D\nd is right answer","poster":"huanghaiyao","timestamp":"1683361020.0","comment_id":"890581"},{"upvote_count":"4","poster":"Guru4Cloud","comment_id":"871140","content":"Selected Answer: D\nExplaination:\nThe recommended design principle for AWS Cloud architecture is to avoid monolithic architecture by segmenting workloads. Therefore, the correct answer is D.\n\nBy segmenting workloads, you can isolate different parts of your application and make them more modular, which can lead to greater flexibility, scalability, and fault tolerance. It also allows you to use different technologies and tools for different parts of the application, which can make it easier to optimize each part for its specific requirements.","timestamp":"1681578240.0"},{"comment_id":"861070","poster":"Guru4Cloud","upvote_count":"2","timestamp":"1680614100.0","content":"Selected Answer: D\nThe recommended design principle for AWS Cloud architecture is to avoid monolithic architecture by segmenting workloads."},{"comment_id":"827635","timestamp":"1677814260.0","poster":"harisene","content":"Selected Answer: D\nThe answer is D","upvote_count":"1"},{"upvote_count":"1","comment_id":"821918","content":"Selected Answer: D\nAvoid monolithic architecture by segmenting workloads","poster":"tahagmail","timestamp":"1677369840.0"},{"content":"D is the right amswer. loosely coupled architecture","comment_id":"796459","poster":"bestedeki","upvote_count":"1","timestamp":"1675373460.0"},{"content":"C Here are ten design principles that you must consider for your AWS cloud architecture :\n\nThink Adaptive and Elastic\nTreat servers as disposable resources instead of fixed components\nAutomate Automate Automate\nImplement loose coupling\nFocus on services, not servers\nDatabase is the base of it all\nBe sure to remove single points of failure\nOptimize for cost\nCaching\nAWS Cloud Architecture Security\n \n\nReference : https://www.botmetric.com/blog/aws-cloud-architecture-design-principles","timestamp":"1675123020.0","comment_id":"793472","upvote_count":"1","poster":"Onyejicash"},{"poster":"Saddle2DiEast","upvote_count":"1","comment_id":"784398","content":"Selected Answer: D\nD is the answer","timestamp":"1674398340.0"},{"timestamp":"1674081540.0","comment_id":"780488","content":"Selected Answer: D\nD is the answer.","upvote_count":"1","poster":"Saif93"},{"comment_id":"754148","timestamp":"1671794940.0","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/rel_service_architecture_monolith_soa_microservice.html","upvote_count":"1","poster":"Vrush44"},{"comment_id":"730378","timestamp":"1669725600.0","content":"Selected Answer: D\nNext question proves that C is wrong\nA & B are just obvious wrong answers","poster":"Testeurtest","upvote_count":"1"},{"timestamp":"1669547640.0","comment_id":"728149","content":"Selected Answer: D\nD is answer","poster":"N9","upvote_count":"1"},{"poster":"Cricca1862","upvote_count":"1","comment_id":"722688","content":"Selected Answer: D\nanswer is D","timestamp":"1668954000.0"},{"comment_id":"722471","content":"Selected Answer: D\nthis lookscorrect","poster":"anandasa920","timestamp":"1668933540.0","upvote_count":"1"},{"timestamp":"1667377800.0","content":"There are various AWS services that enable\nyou to build applications that adopt a decoupled architecture design. This enables you to\nmove away from traditional monolithic design in favor of the more modern microservice\narchitectures.","comment_id":"709696","poster":"Osmanly","upvote_count":"2"},{"poster":"apchandana","timestamp":"1666115100.0","comment_id":"698408","upvote_count":"2","content":"Selected Answer: D\nThis is very straight forward answer that design principal of avoiding monolithic application designing loosely coupled systems."},{"upvote_count":"1","timestamp":"1664522040.0","content":"Selected Answer: D\nAnswer is D","poster":"FR_Wolfman","comment_id":"683306"},{"upvote_count":"1","content":"Answer is D","comment_id":"681806","poster":"Istiaque","timestamp":"1664376480.0"},{"content":"Selected Answer: D\nRefer to design principles link to prove Option C is wrong\nhttps://docs.aws.amazon.com/wellarchitected/latest/framework/oe-design-principles.html\n\nRefer to design principles link to prove Option D is correct:\nhttps://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/design-your-workload-service-architecture.html","timestamp":"1663750800.0","comment_id":"674940","upvote_count":"5","poster":"music4kris"},{"timestamp":"1663580940.0","poster":"certiflux","upvote_count":"1","content":"Selected Answer: D\nMicro services archi is the way to go","comment_id":"673152"},{"content":"Vote for D","upvote_count":"2","poster":"sumanshu","comment_id":"670890","timestamp":"1663336800.0"},{"comment_id":"667127","poster":"pancman","timestamp":"1662994980.0","upvote_count":"1","content":"Selected Answer: D\nObviously D."},{"timestamp":"1662479220.0","poster":"bilel500","upvote_count":"1","content":"Selected Answer: D\nAnswer is D.","comment_id":"661406"},{"content":"Selected Answer: C\nAnswer should be C.\nIn D monolithic architecture should be avoided by cooperating parts of workload, not segmenting workloads.\nIn C large changes are made by iterations which means not by once, but in steps.","comments":[{"upvote_count":"1","content":"Hello Lianna, can you please refer the below link - based on which Option C is not correct. Option D is more closer and relevant.\nhttps://docs.aws.amazon.com/wellarchitected/latest/framework/oe-design-principles.html","comment_id":"674938","timestamp":"1663750500.0","poster":"music4kris"},{"timestamp":"1664483460.0","upvote_count":"1","comment_id":"683040","content":"D says to 'avoid monolithic architecture.'","poster":"Craig92866"},{"timestamp":"1668501300.0","comment_id":"718598","upvote_count":"1","poster":"N3ar","content":"In your reason 'monolithic architecture should be avoided by cooperating parts of workload' ... well, you shouldn't avoid monolith by doing monolithic things ðŸ˜…"}],"poster":"lianna","timestamp":"1662366900.0","comment_id":"659929","upvote_count":"1"},{"poster":"41km","upvote_count":"1","timestamp":"1662196260.0","content":"Selected Answer: D\nIt's D obviously.","comment_id":"658268"},{"comment_id":"656780","timestamp":"1662080520.0","poster":"30Miles","content":"Selected Answer: D\nD is correct","upvote_count":"1"},{"poster":"Learnerzero","timestamp":"1662010680.0","comment_id":"655842","content":"Selected Answer: D\nD is the answer. C is opposite to the principle.","upvote_count":"1"},{"comment_id":"655633","content":"Answer is D","timestamp":"1661993160.0","upvote_count":"1","poster":"learner2023"},{"comment_id":"655495","upvote_count":"1","timestamp":"1661980500.0","poster":"85SUBHO","content":"Selected Answer: D\nIt should be D"},{"poster":"GonzaloD","timestamp":"1661975040.0","upvote_count":"1","comment_id":"655434","content":"Selected Answer: D\nAlso think D is better answer"},{"comment_id":"655427","comments":[{"comment_id":"695995","upvote_count":"1","timestamp":"1665893760.0","content":"I think C means \"make a big changes with fewer updates\" which is definitely opposite from what you are saying","poster":"Foxxie"}],"timestamp":"1661974500.0","poster":"BlankByBlank","upvote_count":"1","content":"Selected Answer: C\nThe problem is that while D is a more \"right answer\", C is more accurate to the AWS materials. Answer C is the inverse of saying \"make frequent, small, reversible changes\"\n\nhttps://docs.aws.amazon.com/wellarchitected/latest/framework/oe-design-principles.html\n\n\"Make frequent, small, reversible changes: Design workloads to allow components to be updated regularly. Make changes in small increments that can be reversed if they fail (without affecting customers when possible).\""},{"poster":"NawlinsTaz","upvote_count":"1","content":"Selected Answer: D\nD is correct. Make large changes? What? lol","timestamp":"1661960640.0","comment_id":"655231"},{"poster":"SystemSix","timestamp":"1661948760.0","content":"Selected Answer: D\nD is one of the main principals","comment_id":"655067","upvote_count":"1"},{"poster":"Luwatz","content":"Selected Answer: D\nI think the correct answer might be D","timestamp":"1661942400.0","comment_id":"654994","upvote_count":"1"},{"content":"D is the correct answer","timestamp":"1661938500.0","poster":"JorgeGarrido","comment_id":"654937","upvote_count":"1"}],"topic":"1","answer_description":"","question_text":"Which of the following is a recommended design principle for AWS Cloud architecture?"},{"id":"UXhm9A26rNUUhJkyJuhU","isMC":true,"question_id":935,"choices":{"C":"Security","A":"Scalability","B":"Resilience","D":"Agility"},"url":"https://www.examtopics.com/discussions/amazon/view/111369-exam-aws-certified-cloud-practitioner-topic-1-question-940/","discussion":[{"timestamp":"1686116760.0","upvote_count":"8","poster":"Zonci","content":"Selected Answer: A\nScalability in the AWS Cloud allows you to easily adjust the capacity of your resources based on the demand. In this scenario, you can leverage auto scaling capabilities provided by AWS to automatically add or remove EC2 instances based on traffic patterns. This ensures that your application can handle increases in traffic without manual intervention and provides a seamless experience to your users.","comment_id":"916914"},{"timestamp":"1686759540.0","poster":"VanDacker","content":"Selected Answer: A\nA. Its correct:\n\nScalability refers to the ability to dynamically adjust resources as needed to handle varying levels of workload. In this scenario, the company can leverage AWS's scalability features to automatically scale the number of EC2 instances based on the traffic demand. If there is a sudden increase in traffic, the company can horizontally scale by adding more EC2 instances to balance the load and ensure optimal performance. Conversely, if the demand decreases, the company can scale down the number of instances to save costs.","upvote_count":"5","comment_id":"923383"},{"timestamp":"1694648700.0","upvote_count":"1","comment_id":"1007030","poster":"JJCH0087","content":"Selected Answer: A\nPlease refer the correct answer A of question #946: Scaling the number of Amazon EC2 instances based on traffic. So A is correct answer for this question."},{"poster":"Pranava_GCP","upvote_count":"2","timestamp":"1690746660.0","comment_id":"967466","content":"Selected Answer: A\nA. Scalability\n\n\"Amazon EC2 Auto Scaling helps you ensure that you have the correct number of Amazon EC2 instances available to handle the load for your application.\"\n\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html"},{"timestamp":"1688065440.0","upvote_count":"3","poster":"[Removed]","comment_id":"938478","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-predictive-scaling.html"},{"comment_id":"931962","timestamp":"1687556520.0","poster":"zz77zz77zz","upvote_count":"5","content":"should be b \nResilience refers to the ability of a system to withstand and recover from failures and disruptions. In this case, by distributing traffic evenly among a fleet of Amazon EC2 instances, the system is designed to handle increases in traffic without being overwhelmed."}],"answer_ET":"A","exam_id":18,"answer_images":[],"timestamp":"2023-06-07 07:46:00","question_text":"A company distributes traffic evenly among a fleet of Amazon EC2 instances. The EC2 instances must accommodate unpredictable increases in traffic.\n\nWhich benefit does the AWS Cloud provide to meet this requirement?","question_images":[],"unix_timestamp":1686116760,"answer":"A","topic":"1","answers_community":["A (100%)"],"answer_description":""}],"exam":{"name":"AWS Certified Cloud Practitioner","isImplemented":true,"id":18,"isBeta":false,"numberOfQuestions":988,"isMCOnly":true,"provider":"Amazon","lastUpdated":"11 Apr 2025"},"currentPage":187},"__N_SSP":true}