{"pageProps":{"questions":[{"id":"yjGg8lvThcKF6107aJnb","answer_description":"","unix_timestamp":1690943220,"isMC":true,"answer_ET":"C","discussion":[{"poster":"Bmaster","upvote_count":"10","content":"C is correct.\n\n\"ACM provides managed renewal for your Amazon-issued SSL/TLS certificates. This means that ACM will either renew your certificates automatically (if you are using DNS validation), or it will send you email notices when expiration is approaching. These services are provided for both public and private ACM certificates.\"\n\nhttps://docs.aws.amazon.com/acm/latest/userguide/managed-renewal.html","timestamp":"1706848020.0","comment_id":"969579"},{"content":"Selected Answer: C\nThe key reasons are:\n\nAWS Certificate Manager (ACM) provides free public TLS/SSL certificates and handles certificate renewals automatically.\nUsing DNS validation with ACM is operationally efficient since it automatically makes changes to Route 53 rather than requiring manual validation steps.\nACM integrates natively with CloudFront distributions for delivering HTTPS content.\nCloudFront security policies and origin access controls do not issue TLS certificates.\nEmail validation requires manual steps to approve the domain validation emails for each renewal.","timestamp":"1708527000.0","poster":"Guru4Cloud","comment_id":"986508","upvote_count":"6"},{"comment_id":"1120241","upvote_count":"2","poster":"awsgeek75","timestamp":"1720729020.0","content":"Selected Answer: C\nFor me, C is the only realistic option as I don't think you can do AB without a lot of complexity. D just makes no sense."},{"comment_id":"997735","upvote_count":"4","timestamp":"1709487120.0","content":"Selected Answer: C\nUse AWS Certificate Manager (ACM) to create a certificate. Use DNS validation for the domain","poster":"ibu007"},{"poster":"chen0305_099","timestamp":"1708765140.0","comment_id":"988927","content":"Selected Answer: C\nC 似乎是正確的","upvote_count":"4"},{"timestamp":"1707134820.0","upvote_count":"3","poster":"Kiki_Pass","comment_id":"972883","content":"Selected Answer: C\n\"DNS Validation is preferred for automation purposes\" -- Stephane's course on Udemy"},{"content":"Selected Answer: C\nC seems to be correct","poster":"mrsoa","comment_id":"971366","upvote_count":"2","timestamp":"1706990760.0"},{"upvote_count":"1","poster":"nananashi","comment_id":"969601","content":"I think the general product uses DNS rather than email to automate, is the given answer correct?","timestamp":"1706851680.0"}],"answers_community":["C (100%)"],"choices":{"D":"Use AWS Certificate Manager (ACM) to create a certificate. Use email validation for the domain.","B":"Use a CloudFront origin access control (OAC) to create a certificate.","C":"Use AWS Certificate Manager (ACM) to create a certificate. Use DNS validation for the domain.","A":"Use a CloudFront security policy to create a certificate."},"answer":"C","question_text":"A company uses an Amazon CloudFront distribution to serve content pages for its website. The company needs to ensure that clients use a TLS certificate when accessing the company's website. The company wants to automate the creation and renewal of the TLS certificates.\n\nWhich solution will meet these requirements with the MOST operational efficiency?","url":"https://www.examtopics.com/discussions/amazon/view/117037-exam-aws-certified-solutions-architect-associate-saa-c03/","exam_id":31,"topic":"1","question_images":[],"answer_images":[],"question_id":551,"timestamp":"2023-08-02 04:27:00"},{"id":"opJoQhVzsa0pcWLyI1SS","url":"https://www.examtopics.com/discussions/amazon/view/117038-exam-aws-certified-solutions-architect-associate-saa-c03/","timestamp":"2023-08-02 04:31:00","isMC":true,"topic":"1","answer":"A","choices":{"A":"Use DynamoDB Accelerator (DAX).","D":"Use Amazon ElastiCache for Redis.","B":"Migrate the database to Amazon Redshift.","C":"Migrate the database to Amazon RDS."},"question_text":"A company deployed a serverless application that uses Amazon DynamoDB as a database layer. The application has experienced a large increase in users. The company wants to improve database response time from milliseconds to microseconds and to cache requests to the database.\n\nWhich solution will meet these requirements with the LEAST operational overhead?","exam_id":31,"discussion":[{"comment_id":"973208","timestamp":"1691254920.0","upvote_count":"11","content":"Selected Answer: A\nAmazon DynamoDB Accelerator (DAX) is a fully managed, highly available, in-memory cache for Amazon DynamoDB that delivers up to a 10 times performance improvement—from milliseconds to microseconds—even at millions of requests per second.\n\nhttps://aws.amazon.com/dynamodb/dax/#:~:text=Amazon%20DynamoDB%20Accelerator%20(DAX)%20is,millions%20of%20requests%20per%20second.","poster":"h8er"},{"upvote_count":"2","timestamp":"1726466460.0","comment_id":"1284501","content":"Amazon ElastiCache for Redis would help with \"caching requests\", but not \" improve database response\" itself.","poster":"MatAlves"},{"poster":"awsgeek75","upvote_count":"3","comment_id":"1120246","timestamp":"1705011600.0","content":"Selected Answer: A\nDAX is least operations overhead.\nB: Redshift, although powerful, but is for analytics \nC: Downgrading to RDS won't help\nD: EC for Redis is more for persistent caching so would be good but lot of operational overhead"},{"upvote_count":"3","content":"Selected Answer: A\nimprove DynamoDB response time from milliseconds to microseconds and to cache requests to the database = DynamoDB Accelerator (DAX)","timestamp":"1700650440.0","comment_id":"1077274","poster":"TariqKipkemei"},{"content":"Selected Answer: C\nUse DynamoDB Accelerator (DAX).","comment_id":"986501","upvote_count":"2","poster":"Guru4Cloud","timestamp":"1692621780.0","comments":[{"content":"Which is A, not C.","timestamp":"1704179700.0","comment_id":"1111673","poster":"pentium75","upvote_count":"3"},{"comment_id":"1120247","timestamp":"1705011660.0","poster":"awsgeek75","upvote_count":"5","content":"Quote A but mark C. You need more coffee mate :)"}]},{"content":"Selected Answer: A\nA is the right answer","poster":"mrsoa","upvote_count":"3","timestamp":"1691086080.0","comment_id":"971368"},{"poster":"Bmaster","timestamp":"1690943460.0","comment_id":"969580","content":"Correct A.","upvote_count":"2"}],"answer_description":"","question_id":552,"answer_images":[],"unix_timestamp":1690943460,"answer_ET":"A","question_images":[],"answers_community":["A (91%)","9%"]},{"id":"PINCL1EVo96Mu9zJfpj7","answer_description":"","question_images":[],"choices":{"B":"Turn off automatic backups. Create weekly manual snapshots of the database.","D":"Purchase All Upfront reserved DB instances.","A":"Use the Instance Scheduler on AWS to configure start and stop schedules.","C":"Create a custom AWS Lambda function to start and stop the database based on minimum CPU utilization."},"isMC":true,"answer_ET":"A","discussion":[{"comment_id":"1064069","content":"Selected Answer: A\nThe Instance Scheduler on AWS solution automates the starting and stopping of Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Relational Database Service (Amazon RDS) instances.\n\nThis solution helps reduce operational costs by stopping resources that are not in use and starting them when they are needed. The cost savings can be significant if you leave all of your instances running at full utilization continuously.\nhttps://aws.amazon.com/solutions/implementations/instance-scheduler-on-aws/","timestamp":"1715007180.0","poster":"potomac","upvote_count":"6"},{"upvote_count":"4","comment_id":"1111674","poster":"pentium75","content":"Selected Answer: A\nB increases operational overhead\nC Lambda functions could work but NOT \"based on minimum CPU utilization\"\nD might save cost but not as much as A","timestamp":"1719897480.0"},{"comments":[{"poster":"baba365","timestamp":"1711678260.0","comment_id":"1020312","upvote_count":"3","comments":[{"comment_id":"1088759","poster":"AndreiWebNet","upvote_count":"3","comments":[{"comment_id":"1101370","content":"When you buy Reserved Instances, the larger the upfront payment, the greater the discount. To maximize your savings, you can pay all up-front and receive the largest discount. Partial up-front RI's offer lower discounts but give you the option to spend less up front. Lastly, you can choose to spend nothing up front and receive a smaller discount, but allowing you to free up capital to spend in other projects.\n\nBut you need some mechanism to stop on weekend and in night to save cost.","upvote_count":"2","timestamp":"1718864100.0","poster":"master9"}],"timestamp":"1717608540.0","content":"How do you actually reduce costs enough to buy upfront instances that you pay for them if you use them 1 h or 24 and it is payed to run 24h. It says that you use this instances 8 hours a day 5 days a week, totaling 40h a week.... so is it the difference from 40h to 168 h?"}],"content":"Why not D?"}],"content":"Selected Answer: A\nA. Use the Instance Scheduler on AWS to configure start and stop schedules","poster":"ibu007","timestamp":"1709487000.0","comment_id":"997730","upvote_count":"4"},{"poster":"ErnShm","content":"A\nhttps://docs.aws.amazon.com/solutions/latest/instance-scheduler-on-aws/solution-overview.html","comment_id":"996979","timestamp":"1709401200.0","upvote_count":"3"},{"upvote_count":"4","timestamp":"1708526340.0","poster":"Guru4Cloud","comment_id":"986495","content":"Selected Answer: A\nPurpose-built scheduling minimizes operational overhead.\nAligns instance running time precisely with business hour demands.\nMaintains backups unlike disabling auto backups.\nMore cost effective and flexible than reserved instances.\nSimpler to implement than a custom Lambda function."},{"upvote_count":"1","comments":[{"content":"Sorry I wanted to select A.","timestamp":"1708446900.0","poster":"anikety123","upvote_count":"5","comment_id":"985864"}],"comment_id":"985863","timestamp":"1708446840.0","content":"Selected Answer: B\nIts B. Check the AWS link\n\nhttps://aws.amazon.com/solutions/implementations/instance-scheduler-on-aws/?nc1=h_ls","poster":"anikety123"},{"upvote_count":"2","timestamp":"1706990940.0","poster":"mrsoa","comment_id":"971370","content":"Selected Answer: A\nA \n\n\nhttps://aws.amazon.com/solutions/implementations/instance-scheduler-on-aws/"},{"content":"Selected Answer: A\nScheduler do the job","upvote_count":"4","timestamp":"1706726400.0","poster":"luiscc","comment_id":"968317"}],"topic":"1","answers_community":["A (96%)","4%"],"answer_images":[],"timestamp":"2023-07-31 18:40:00","question_text":"A company runs an application that uses Amazon RDS for PostgreSQL. The application receives traffic only on weekdays during business hours. The company wants to optimize costs and reduce operational overhead based on this usage.\n\nWhich solution will meet these requirements?","question_id":553,"url":"https://www.examtopics.com/discussions/amazon/view/116924-exam-aws-certified-solutions-architect-associate-saa-c03/","exam_id":31,"unix_timestamp":1690821600,"answer":"A"},{"id":"9PMydtDN1aS1RdNk4gkP","url":"https://www.examtopics.com/discussions/amazon/view/85453-exam-aws-certified-solutions-architect-associate-saa-c03/","choices":{"C":"Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate.","A":"Use Amazon EC2 instances, and install Docker on the instances.","D":"Use Amazon EC2 instances from an Amazon Elastic Container Service (Amazon ECS)-optimized Amazon Machine Image (AMI).","B":"Use Amazon Elastic Container Service (Amazon ECS) on Amazon EC2 worker nodes."},"answer_description":"","answer":"C","topic":"1","exam_id":31,"timestamp":"2022-10-14 08:53:00","answer_ET":"C","answers_community":["C (100%)"],"question_images":[],"discussion":[{"upvote_count":"28","comment_id":"694556","content":"Selected Answer: C\nGood answer is C:\nAWS Fargate is a serverless, pay-as-you-go compute engine that lets you focus on building applications without having to manage servers. AWS Fargate is compatible with Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS).\n\nhttps://aws.amazon.com/fr/fargate/","poster":"masetromain","timestamp":"1665730380.0"},{"comment_id":"929408","upvote_count":"8","content":"Selected Answer: C\nUsing ECS on Fargate allows you to run containers without the need to manage the underlying infrastructure. Fargate abstracts away the underlying EC2 and provides serverless compute for containers.\n\nA. This option would require manual provisioning and management of EC2, as well as installing and configuring Docker on those instances. It would introduce additional overhead and responsibilities for maintaining the underlying infrastructure.\n\nB. While this option leverages ECS to manage containers, it still requires provisioning and managing EC2 to serve as worker nodes. It adds complexity and maintenance overhead compared to the serverless nature of Fargate.\n\nD. This option still involves managing and provisioning EC2, even though an ECS-optimized AMI simplifies the process of setting up EC2 for running ECS. It does not provide the level of serverless abstraction and ease of management offered by Fargate.","timestamp":"1687346640.0","poster":"cookieMr"},{"comment_id":"1282088","content":"Selected Answer: C\nAns C - use Fargate to do all the management / deployment (which the company doesn't want to do)","upvote_count":"2","timestamp":"1726057380.0","poster":"PaulGa"},{"comment_id":"1200218","timestamp":"1713796320.0","poster":"Hkayne","upvote_count":"2","content":"Selected Answer: C\nECS FARGATE"},{"content":"Selected Answer: C\nManaged containers = Fargate","poster":"awsgeek75","comment_id":"1122624","upvote_count":"4","timestamp":"1705245420.0"},{"upvote_count":"2","timestamp":"1698382500.0","content":"AWS Fargate is a serverless, pay-as-you-go compute engine that lets you focus on building applications without having to manage servers. AWS Fargate is compatible with Amazon Elastic Container Service (ECS) and Amazon Elastic Kubernetes Service (EKS).","poster":"Ruffyit","comment_id":"1055116"},{"timestamp":"1697810940.0","content":"Selected Answer: C\nIn order to execute containerized apps without having to manage servers, AWS Fargate is a serverless compute engine for Amazon ECS. Amazon Elastic Compute Cloud (Amazon EC2) instance clusters no longer require provisioning, configuring, or scaling thanks to AWS Fargate. So that you can concentrate on developing and maintaining your applications, AWS Fargate handles the monotonous, repetitive labor of managing servers.","poster":"AWSStudyBuddy","comment_id":"1048851","upvote_count":"2"},{"upvote_count":"1","content":"Option C is the correct answer.","timestamp":"1694406300.0","comment_id":"1004441","poster":"Teruteru"},{"comment_id":"982553","upvote_count":"1","timestamp":"1692189720.0","content":"Selected Answer: C\nC for Fargate","poster":"Syruis"},{"upvote_count":"2","comment_id":"975202","content":"Selected Answer: C\nThe company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload = Serverless compute for containers = AWS Fargate","poster":"TariqKipkemei","timestamp":"1691470320.0"},{"timestamp":"1689780720.0","content":"Option C is the correct answer","poster":"miki111","upvote_count":"1","comment_id":"956767"},{"content":"Selected Answer: C\nAWS Fargate is a technology that you can use with Amazon ECS to run containers without having to manage servers or clusters of Amazon EC2 instances. \n\nhttps://docs.aws.amazon.com/AmazonECS/latest/userguide/what-is-fargate.html","comment_id":"870863","timestamp":"1681557300.0","poster":"cheese929","upvote_count":"2"},{"comment_id":"768201","content":"Selected Answer: C\nECS + Fargate","poster":"SilentMilli","timestamp":"1673057040.0","upvote_count":"3"},{"timestamp":"1672596780.0","comment_id":"763294","upvote_count":"1","poster":"gustavtd","content":"Selected Answer: C\nAWS Fargate will hide all the complexity for you"},{"timestamp":"1671554880.0","upvote_count":"3","comment_id":"751230","poster":"Buruguduystunstugudunstuy","content":"Selected Answer: C\nC. Use Amazon Elastic Container Service (Amazon ECS) on AWS Fargate.\n\nAWS Fargate is a fully managed container execution environment that runs containers without the need to provision and manage underlying infrastructure. This makes it a good choice for companies that want to focus on maintaining their critical applications and do not want to be responsible for provisioning and managing the underlying infrastructure.\n\nOption A involves installing Docker on Amazon EC2 instances, which would still require the company to manage the underlying infrastructure. Option B involves using Amazon ECS on Amazon EC2 worker nodes, which would also require the company to manage the underlying infrastructure. Option D involves using Amazon EC2 instances from an Amazon ECS-optimized Amazon Machine Image (AMI), which would also require the company to manage the underlying infrastructure."},{"content":"Selected Answer: C\nOption C","timestamp":"1671421560.0","comment_id":"749423","upvote_count":"1","poster":"career360guru"},{"content":"Selected Answer: C\nObviously anything with EC2 in the answer is wrong...","upvote_count":"1","timestamp":"1670751180.0","comment_id":"741567","poster":"benaws"},{"poster":"ashish_t","comment_id":"726980","content":"Selected Answer: C\nThe company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload.\nFargate is serverless and no need to manage.\nAnswer: C","timestamp":"1669397040.0","upvote_count":"3"},{"comment_id":"723576","content":"C is correct","timestamp":"1669039380.0","upvote_count":"1","poster":"Wpcorgan"},{"content":"Selected Answer: C\nAgree Serverless Containerization Think Fargate","timestamp":"1667751300.0","poster":"PS_R","comment_id":"712457","upvote_count":"3"},{"upvote_count":"5","poster":"ArielSchivo","comment_id":"698164","content":"Selected Answer: C\nOption C. Fargate is serverless, no need to manage the underlying infrastructure.","timestamp":"1666092060.0"}],"unix_timestamp":1665730380,"answer_images":[],"question_text":"A company wants to run its critical applications in containers to meet requirements for scalability and availability. The company prefers to focus on maintenance of the critical applications. The company does not want to be responsible for provisioning and managing the underlying infrastructure that runs the containerized workload.\nWhat should a solutions architect do to meet these requirements?","isMC":true,"question_id":554},{"id":"vTpx82p3weoQ594eJlg4","answer_ET":"D","topic":"1","unix_timestamp":1691582100,"answer_description":"","question_text":"A company uses locally attached storage to run a latency-sensitive application on premises. The company is using a lift and shift method to move the application to the AWS Cloud. The company does not want to change the application architecture.\n\nWhich solution will meet these requirements MOST cost-effectively?","question_images":[],"answer":"D","answers_community":["D (100%)"],"timestamp":"2023-08-09 13:55:00","isMC":true,"exam_id":31,"question_id":555,"url":"https://www.examtopics.com/discussions/amazon/view/117663-exam-aws-certified-solutions-architect-associate-saa-c03/","answer_images":[],"choices":{"C":"Configure an Auto Scaling group with an Amazon EC2 instance. Use an Amazon FSx for OpenZFS file system to run the application.","A":"Configure an Auto Scaling group with an Amazon EC2 instance. Use an Amazon FSx for Lustre file system to run the application.","B":"Host the application on an Amazon EC2 instance. Use an Amazon Elastic Block Store (Amazon EBS) GP2 volume to run the application.","D":"Host the application on an Amazon EC2 instance. Use an Amazon Elastic Block Store (Amazon EBS) GP3 volume to run the application."},"discussion":[{"comment_id":"1077280","timestamp":"1732273140.0","poster":"TariqKipkemei","content":"Selected Answer: D\nMOST cost-effectively =GP3","upvote_count":"5"},{"poster":"potomac","timestamp":"1730912220.0","upvote_count":"3","content":"Selected Answer: D\ngp3 offers SSD-performance at a 20% lower cost per GB than gp2 volumes.","comment_id":"1064074"},{"content":"GP3 is the lastest version","timestamp":"1725215340.0","upvote_count":"3","poster":"bojila","comment_id":"996344"},{"comment_id":"993659","upvote_count":"3","poster":"Hades2231","timestamp":"1724985180.0","content":"Selected Answer: D\nGP3 is the lastest version, and it is cost effective"},{"comment_id":"986485","timestamp":"1724243040.0","content":"Selected Answer: D\nGP3 is preferable over GP2, FSx for Lustre, and FSx for OpenZFS is clear and convincing:\n\nGP3 offers identical latency performance to GP2 at a lower price point.\nFSx options are higher performance but more expensive and require application changes.\nGP3 aligns better with lift and shift needs as a directly attached block storage volume.","poster":"Guru4Cloud","upvote_count":"4"},{"timestamp":"1723580940.0","comment_id":"980285","poster":"taustin2","content":"Selected Answer: D\nMigrate your Amazon EBS volumes from gp2 to gp3 and save up to 20% on costs.","upvote_count":"3"},{"timestamp":"1723535340.0","content":"Y not gp2","comment_id":"979845","upvote_count":"1","poster":"Vadbro7"},{"poster":"Ale1973","upvote_count":"4","content":"Selected Answer: D\nMy rational: \nOptions A y C are based on autoscaling-group and no make sense for me on this scenary.\nThen, use Amazon EBS is the solution and GP2 or GP3 is the question. \nRequirement requires the most COST effective solution, then, I choose GP3","comment_id":"976607","timestamp":"1723204500.0"}]}],"exam":{"isMCOnly":true,"id":31,"numberOfQuestions":1019,"name":"AWS Certified Solutions Architect - Associate SAA-C03","provider":"Amazon","isImplemented":true,"lastUpdated":"11 Apr 2025","isBeta":false},"currentPage":111},"__N_SSP":true}