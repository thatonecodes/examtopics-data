{"pageProps":{"questions":[{"id":"AyYGaYeoeNOLOqBxBQ1f","question_text":"A company has a web application that is hosted on an Amazon Elastic Kubernetes Service (Amazon EKS) cluster. The EKS cluster runs on AWS Fargate that is available through an internet-facing Application Load Balancer.\n\nThe application is experiencing stability issues that lead to longer response times. A DevOps engineer needs to configure observability in Amazon CloudWatch to troubleshoot the issue. The solution must provide only the minimum necessary permissions.\n\nWhich combination of steps will meet these requirements? (Choose three.)","choices":{"F":"Enable EKS control plane logging for the EKS cluster.","E":"Configure an IAM OpenID Connect (OIDC) provider for the EKS cluster.","B":"Deploy the AWS Distro for OpenTelemetry Collector as a Kubernetes DaemonSet to the EKS cluster.","A":"Deploy the CloudWatch agent as a Kubernetes StatefulSet to the EKS cluster.","D":"Associate a Kubernetes service account with an IAM role by using IAM roles for service accounts in Amazon EKS. Use the CloudWatchAgentAdminPolicy AWS managed policy.","C":"Associate a Kubernetes service account with an IAM role by using IAM roles for service accounts in Amazon EKS. Use the CloudWatchAgentServerPolicy AWS managed policy."},"answers_community":["ACF (54%)","BCE (38%)","8%"],"url":"https://www.examtopics.com/discussions/amazon/view/153427-exam-aws-certified-devops-engineer-professional-dop-c02/","isMC":true,"question_id":221,"answer_description":"","exam_id":23,"unix_timestamp":1735104420,"timestamp":"2024-12-25 06:27:00","answer_images":[],"answer":"ACF","topic":"1","discussion":[{"upvote_count":"5","poster":"CHRIS12722222","timestamp":"1735169460.0","content":"Selected Answer: ACF\nhttps://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/deploy-container-insights-EKS.html\n\n- No daemonsets for fargate\n- CloudWatchAgentServerPolicy is correct\n- controlplane logging","comment_id":"1331726"},{"comment_id":"1363257","timestamp":"1740778680.0","poster":"SysOps","content":"Selected Answer: ACE\nA instead of B only because Daemonsets arenâ€™t supported on Fargate","upvote_count":"1"},{"content":"Selected Answer: ACF\nChanged mind to ACF. Daemonsets arent supported on Fargate, B is not possible. https://docs.aws.amazon.com/eks/latest/userguide/fargate.html","timestamp":"1739728680.0","comment_id":"1357323","upvote_count":"2","poster":"jojewi8143"},{"upvote_count":"1","content":"Selected Answer: BCE\nim for bce","poster":"jojewi8143","timestamp":"1738497780.0","comment_id":"1350396"},{"comment_id":"1333983","poster":"matt200","upvote_count":"4","content":"Selected Answer: BCE\nB: AWS Distro for OpenTelemetry (ADOT) is the recommended solution for collecting metrics and traces from EKS clusters\nE: OIDC provider is required to use IRSA\n\nA: Incorrect because For EKS on Fargate, ADOT is the recommended solution\nF: Incorrect because this alone won't provide the application-level observability needed","timestamp":"1735546200.0"}],"question_images":[],"answer_ET":"ACF"},{"id":"rZOkA6oCfA9tekTN4dWu","unix_timestamp":1735104480,"answer_images":[],"isMC":true,"exam_id":23,"topic":"1","question_id":222,"timestamp":"2024-12-25 06:28:00","answer":"A","answer_description":"","question_text":"A company stores its Python-based application code in AWS CodeCommit. The company uses AWS CodePipeline to deploy the application. The CodeCommit repository and the CodePipeline pipeline are deployed to the same AWS account.\n\nThe company's security team requires all code to be scanned for vulnerabilities before the code is deployed to production. If any vulnerabilities are found, the deployment must stop.\n\nWhich solution will meet these requirements?","choices":{"A":"Create a new CodeBuild project. Configure the project to run a security scan on the code by using Amazon CodeGuru Security. Configure the CodeBuild project to raise an error if CodeGuru Security finds vulnerabilities. Create a new IAM role that has sufficient permissions to run CodeGuru Security scans. Assign the role to the CodeBuild project. In the CodePipeline pipeline, add a new stage before the deployment stage. Select AWS CodeBuild as the action provider for the new stage. Use the source artifact from the CodeCommit repository. Configure the action to use the CodeBuild project.","C":"Update the IAM role that is attached to CodePipeline to include sufficient permissions to invoke Amazon DevOps Guru. In the CodePipeline pipeline, add a new stage before the deployment stage. Select DevOps Guru as the action provider for the new stage. Use the source artifact from the CodeCommit repository.","D":"Update the IAM role that is attached to CodePipeline to include sufficient permissions to invoke Amazon DevOps Guru. In the CodePipeline pipeline, add a new stage before the deployment stage. Select CodeGuru Security as the action provider for the new stage. Use the source artifact from the CodeCommit repository.","B":"Create a new CodeBuild project. Configure the project to run a security scan on the code by using Amazon Inspector. Configure the CodeBuild project to raise an error if Amazon Inspector finds vulnerabilities. Create a new IAM role that has sufficient permissions to run Amazon Inspector scans. Assign the role to the CodeBuild project. In the CodePipeline pipeline, add a new stage before the deployment stage. Select AWS CodeBuild as the action provider for the new stage. Use the source artifact from the CodeCommit repository. Configure the action to use the CodeBuild project."},"answers_community":["A (100%)"],"discussion":[{"content":"Selected Answer: A\nAmazon CodeGuru Security detects, tracks, and fixes code security vulnerabilities anywhere in the development cycle using ML and automated reasoning","comment_id":"1355502","upvote_count":"2","timestamp":"1739344200.0","poster":"teo2157"},{"poster":"CHRIS12722222","comment_id":"1331728","content":"Selected Answer: A\nit is codeguru for static code analysis\n\nNOT devops guru\nNo need for inspector","upvote_count":"4","timestamp":"1735169820.0"}],"question_images":[],"answer_ET":"A","url":"https://www.examtopics.com/discussions/amazon/view/153428-exam-aws-certified-devops-engineer-professional-dop-c02/"},{"id":"ehGlCyabNfmZE9HpkzQR","url":"https://www.examtopics.com/discussions/amazon/view/105490-exam-aws-certified-devops-engineer-professional-dop-c02/","answers_community":["B (73%)","D (27%)"],"answer_ET":"B","isMC":true,"discussion":[{"timestamp":"1681798680.0","upvote_count":"17","content":"B. In the docs: https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html you'll find a Note: \"The Start, Install, TestTraffic, AllowTraffic, and End events in the deployment cannot be scripted, which is why they appear in gray in this diagram.\" Thats why its not D.","comment_id":"873325","poster":"Schubibubi"},{"poster":"y0eri","upvote_count":"12","comment_id":"1078707","content":"Answer: B\nRead this blog. \nhttps://aws.amazon.com/blogs/devops/using-codedeploy-environment-variables/\n\nif [ \"$DEPLOYMENT_GROUP_NAME\" == \"Staging\" ]\nthen\n sed -i -e 's/LogLevel warn/LogLevel debug/g' /etc/httpd/conf/httpd.conf\nfi","timestamp":"1727165340.0"},{"upvote_count":"1","poster":"steli0","comment_id":"1316824","timestamp":"1732400280.0","content":"Selected Answer: B\nOn top of what others wrote the other difference between B and D is the BeforeInstall, since you need to configure log level before deploying the code/serivce."},{"content":"Selected Answer: B\nB is correct.\nDEPLOYMENT_ID : This variables contains the deployment ID of the current deployment.\n\nDEPLOYMENT_GROUP_NAME : This variable contains the name of the deployment group. A deployment group is a set of instances associated with an application that you target for a deployment.","comment_id":"1064231","timestamp":"1727165340.0","upvote_count":"2","poster":"Sazeka"},{"timestamp":"1727165340.0","comment_id":"1082863","poster":"zijo","upvote_count":"3","content":"Answer B. You only need to consider options B and D which are the least complex ones. The option B gives the CodeDeploy environment variable DEPLOYMENT_GROUP_ NAME that points to different instances and gives the option to set different log-level configurations in the same script depending on the deployment group without having a different application revision for each group. Also, The BeforeInstall lifecycle hook in the appspec.yml file refers to a script that will run on the instance before the application revision files are installed."},{"content":"Selected Answer: B\nversion: 0.0\nos: linux\nfiles:\n - source: /\n destination: /var/www/html/\nhooks:\n BeforeInstall:\n - location: scripts/update_log_level.sh\n timeout: 300\n runas: root","comment_id":"1209009","upvote_count":"1","poster":"c3518fc","timestamp":"1727165340.0"},{"timestamp":"1727165340.0","comment_id":"1214653","poster":"Gomer","upvote_count":"1","content":"Selected Answer: B\nThis reference specifies the exact scenario described in \"B\", so I have to go with that\n\"Set the log level according to the deployment group.\"\nhttps://aws.amazon.com/blogs/devops/using-codedeploy-environment-variables/\n\ncat install_dependencies.sh\n [...]\n if [ \"$DEPLOYMENT_GROUP_NAME\" == \"Staging\" ]\n [...]\n\ncat appspec.yml\nhooks:\n BeforeInstall:\n - location: scripts/install_dependencies"},{"upvote_count":"2","content":"B is correct","poster":"thanhnv142","comment_id":"1133273","comments":[{"content":"B is correct: <without having a different application revision for each group> means A and C is incorrect. \nA and C: <place a script into the application revision> both mention this, indicating a revision of the app, which is contradicted to the question\nD: there is no Install lifecycle hook","timestamp":"1707458460.0","poster":"thanhnv142","comment_id":"1145263","upvote_count":"1"}],"timestamp":"1706354100.0"},{"timestamp":"1704079680.0","content":"Selected Answer: D\nAnswer D. \nYou only need to consider options B and D which are the least complex ones. The option B gives the CodeDeploy environment variable DEPLOYMENT_GROUP_ NAME, but DEPLOYMENT_GROUP_ID is recommended because it's more reliable and less prone to changes or inconsistencies. Answer D with settings DEPLOYMENT_GROUP_ID environment variable, which contains the unique identifier for the deployment group. This allows you to identify the deployment group without relying on custom scripts or metadata services.","comment_id":"1110952","poster":"hoakhanh281","upvote_count":"3"},{"poster":"wem","timestamp":"1700329920.0","comment_id":"1074196","upvote_count":"1","content":"Based on the analysis, Option B is the most efficient and straightforward approach. It uses the built-in DEPLOYMENT_GROUP_NAME environment variable provided by CodeDeploy and involves minimal management overhead. The script can easily read this variable to determine the deployment group and set the log level accordingly, eliminating the need for different script versions for each group. This method aligns well with the requirement of least management overhead and simplicity."},{"comment_id":"921046","content":"B is the most straightforward and efficient solution to meet the requirements with the least management overhead and without requiring different script versions for each deployment group.","comments":[{"content":"https://aws.amazon.com/blogs/devops/using-codedeploy-environment-variables/","poster":"Aja1","timestamp":"1691304840.0","upvote_count":"1","comment_id":"973594"}],"upvote_count":"2","timestamp":"1686529560.0","poster":"SanChan"},{"upvote_count":"1","content":"Answer is B practical use case","comment_id":"919848","timestamp":"1686378180.0","poster":"mywogunleye"},{"upvote_count":"2","timestamp":"1686213300.0","comment_id":"918017","content":"Selected Answer: B\nRunning the hook during the Install or AfterInstall would make more sense but hooks for Install are not available (like in answer D) and AfterInstall is not included in answers so the best answer is B.","poster":"madperro"},{"comment_id":"888276","timestamp":"1683100440.0","content":"Selected Answer: B\nB is the only correct answer","poster":"vherman","upvote_count":"4"},{"timestamp":"1681501680.0","upvote_count":"3","comment_id":"870439","poster":"alce2020","content":"B. Create a script that uses the CodeDeploy environment variable DEPLOYMENT_GROUP_NAME to identify which deployment group the instance is part of, and use this information to configure the log level settings. Reference this script as part of the BeforeInstall lifecycle hook in the appspec.yml file, would be the option with the least management overhead and without requiring different script versions for each deployment group"},{"timestamp":"1681492200.0","comment_id":"870351","poster":"jqso234","content":"Option B is the best solution for this use case. By using the CodeDeploy environment variable DEPLOYMENT_GROUP_NAME, the script can identify the deployment group that the instance is part of, without requiring any additional configuration or management overhead. The script can then dynamically configure the log level settings based on the identified deployment group.","upvote_count":"1"},{"content":"B See: https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html","comment_id":"868884","timestamp":"1681340760.0","poster":"henryyvr","upvote_count":"1"},{"upvote_count":"1","comments":[{"content":"typo, B is the right: BeforeInstall lifecycle hook","upvote_count":"2","comment_id":"877106","timestamp":"1682147700.0","poster":"ele"}],"poster":"ele","comment_id":"863659","content":"Selected Answer: D\nD is valid and LEAST management overhead","timestamp":"1680856860.0"}],"answer_description":"","exam_id":23,"topic":"1","choices":{"D":"Create a script that uses the CodeDeploy environment variable DEPLOYMENT_GROUP_ID to identify which deployment group the instance is part of to configure the log level settings. Reference this script as part of the Install lifecycle hook in the appspec.yml file.","B":"Create a script that uses the CodeDeploy environment variable DEPLOYMENT_GROUP_ NAME to identify which deployment group the instance is part of. Use this information to configure the log level settings. Reference this script as part of the BeforeInstall lifecycle hook in the appspec.yml file.","C":"Create a CodeDeploy custom environment variable for each environment. Then place a script into the application revision that checks this environment variable to identify which deployment group the instance is part of. Use this information to configure the log level settings. Reference this script as part of the ValidateService lifecycle hook in the appspec.yml file.","A":"Tag the Amazon EC2 instances depending on the deployment group. Then place a script into the application revision that calls the metadata service and the EC2 API to identify which deployment group the instance is part of. Use this information to configure the log level settings. Reference the script as part of the AfterInstall lifecycle hook in the appspec.yml file."},"unix_timestamp":1680856860,"answer":"B","answer_images":[],"timestamp":"2023-04-07 10:41:00","question_id":223,"question_text":"A company is adopting AWS CodeDeploy to automate its application deployments for a Java-Apache Tomcat application with an Apache Webserver. The development team started with a proof of concept, created a deployment group for a developer environment, and performed functional tests within the application. After completion, the team will create additional deployment groups for staging and production.\nThe current log level is configured within the Apache settings, but the team wants to change this configuration dynamically when the deployment occurs, so that they can set different log level configurations depending on the deployment group without having a different application revision for each group.\nHow can these requirements be met with the LEAST management overhead and without requiring different script versions for each deployment group?","question_images":[]},{"id":"oMZXYpT3ckwSf2OeeHnd","question_text":"A company has multiple accounts in an organization in AWS Organizations. The company's SecOps team needs to receive an Amazon Simple Notification Service (Amazon SNS) notification if any account in the organization turns off the Block Public Access feature on an Amazon S3 bucket. A DevOps engineer must implement this change without affecting the operation of any AWS accounts. The implementation must ensure that individual member accounts in the organization cannot turn off the notification.\nWhich solution will meet these requirements?","answer_ET":"C","discussion":[{"upvote_count":"11","poster":"rlf","comments":[{"comment_id":"1267308","comments":[{"content":"Just to go more into detail, as the answer C seems correct indeed. But I'd like to point out some extra details on why B is wrong.\nThe questions asks that a user cannot turn off the notification. They should be able to turn off the block public access feature. So B is not wrong because it doesn't implement the latter.\nB is wrong because it's PutPublicAccessBlock (does not contain \"Bucket\" in it). And additionally, you should add a condition to the eventbridge rule that checks the content of the action: that BlockPublicPolicy is set to False. Without the condition you will get notification on all PutPublicAccessBlock events, so also those that are considered to be valid.","poster":"Impromptu","comments":[{"upvote_count":"1","content":"To bad I can't edit, so to correct myself: PutBucketPublicAccessBlock is indeed the IAM permission and what you should filter on.\nAnd the cloudformation solution in option B also lacks the safeguard to prevent users from disabling the eventbridge rule (and therefore disabling the notification)","timestamp":"1732108500.0","poster":"Impromptu","comment_id":"1315254"}],"timestamp":"1732108200.0","comment_id":"1315247","upvote_count":"1"}],"upvote_count":"2","content":"With option B, you will get notifications when user accounts turn off the block public access feature but it doesn't stop them from doing it. The question requires that the implementation stops users from being able to carry out that operation successfully altogether.","poster":"flaacko","timestamp":"1723834440.0"}],"content":"Answer is C.\n* AWS AWS Systems Manager Automation provides predefined runbooks(ex. AWS-PublishSNSNotification ) for Amazon Simple Notification Service - https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-aws-publishsnsnotification.html\n* Running automations in multiple AWS Regions and accounts (https://docs.aws.amazon.com/systems-manager/latest/userguide/running-automations-multiple-accounts-regions.html )\n\nB seems to be old approach. With cloudformation stackset, each account can still change resource config (ex. SNS) that causes drift.... so I choose C because it utilize AWS organization fully with aws systems manager automation in multiple regions and multiple accounts with delegated administrator account( or management account )","timestamp":"1698502020.0","comment_id":"1056245"},{"poster":"Gomer","comment_id":"1279181","timestamp":"1725570780.0","upvote_count":"1","content":"Selected Answer: A\nGuardDuty Policy\nPolicy:S3/BucketBlockPublicAccessDisabled\n\"An IAM entity invoked an API used to disable S3 Block Public Access on a bucket.\"\n\"Data source: CloudTrail management events\"\n\"This finding informs you that Block Public Access was disabled for the listed S3 bucket. When enabled, S3 Block Public Access settings are used to filter the policies or access control lists (ACLs) applied to buckets as a security measure to prevent inadvertent public exposure of data.\"\nhttps://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html#policy-s3-bucketblockpublicaccessdisabled"},{"upvote_count":"1","timestamp":"1721896740.0","poster":"jamesf","content":"Selected Answer: C\nC\n\n\"A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a Region or across an organization in AWS Organizations.\"\nhttps://docs.aws.amazon.com/config/latest/developerguide/conformance-packs.html\nhttps://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html","comment_id":"1254866"},{"upvote_count":"1","poster":"aefuen1","content":"Selected Answer: A\nIt's A. GuardDuty echieves this with no effort.","timestamp":"1719806820.0","comment_id":"1239956"},{"upvote_count":"2","poster":"xdkonorek2","content":"Selected Answer: A\nA DevOps engineer must implement this change without affecting the operation of any AWS accounts.","timestamp":"1719638160.0","comment_id":"1239045"},{"upvote_count":"1","content":"I was sure the answer was \"C\" until I started reading through some of the requirements and comments. The words \"implementation must ensure that individual member accounts in the organization cannot turn off the notification\" incline me to lean towards \"A\", because with \"C\", someone with admin privileges on a single account could turn off the notification in that account. As pointed out by others, there are a number of GuardDuty findings associates with S3 public access. Having GuardDuty and EventBridge pattern trigger SNS for some key words such as \"s3\" and \"Public\" seems to make sense in enforcing this across an organization. I don't have enough experience with GuardDuty in an Organization to be 100% confident, but the emphasis on SNS requirement makes me think this could be a trick question.","comments":[{"poster":"Gomer","comment_id":"1279180","content":"GuardDuty Policy\nPolicy:S3/BucketBlockPublicAccessDisabled\n\"An IAM entity invoked an API used to disable S3 Block Public Access on a bucket.\"\n\"Data source: CloudTrail management events\"\n\"This finding informs you that Block Public Access was disabled for the listed S3 bucket. When enabled, S3 Block Public Access settings are used to filter the policies or access control lists (ACLs) applied to buckets as a security measure to prevent inadvertent public exposure of data.\" \nhttps://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html#policy-s3-bucketblockpublicaccessdisabled","timestamp":"1725570720.0","upvote_count":"1"}],"timestamp":"1717093860.0","comment_id":"1221764","poster":"Gomer"},{"comment_id":"1205163","content":"Selected Answer: C\nC is only correct option.","poster":"seetpt","upvote_count":"1","timestamp":"1714579140.0"},{"content":"Technically A would be sufficient here.\n\nThe question is only asking to be NOTIFIED when block public access gets disabled.\n\nSee the following GuardDuty finding: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-s3.html#policy-s3-bucketblockpublicaccessdisabled\n\nManaging multiple GuardDuty accounts is simplified using the AWS Organizations delegated administrator feature. With this feature, the AWS Organizations management account can designate a member account to be the GuardDuty administrator for the entire organization. The delegated GuardDuty administrator is then granted permission to enable and manage GuardDuty for all existing and future accounts in the organization.","upvote_count":"3","timestamp":"1713703980.0","comment_id":"1199655","poster":"that1guy"},{"content":"Selected Answer: A\nWe can leverage AWS Organizations to enable Guarduty in all accounts. \nThere is an S3 finding called Policy:S3/AccountBlockPublicAccessDisabled\nThen we setup a single EventBrdige rule in the delegated account that publish the event to the SNS topic in the same account.\n\nThis is the easisest solution to be implemented and monitoring the public access seamlessly across all Organization's accounts\n\nThis is a common multi-account strategy for GuardDuty with AWS organizations, to collect such finding from hundred of accounts","upvote_count":"4","timestamp":"1710327060.0","poster":"Cervus18","comment_id":"1172455"},{"poster":"4555894","comment_id":"1168808","content":"Selected Answer: C\nAmazon GuardDuty is primarily on threat detection and response, not configuration monitoring. A conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a Region or across an organization in AWS Organizations. https://docs.aws.amazon.com/config/latest/developerguide/conformance-\npacks.htmlhttps://docs.aws.","upvote_count":"4","timestamp":"1709903460.0"},{"content":"Answer is C\nA conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a Region or across an organization in AWS Organizations. You can also use AWS Systems Manager documents (SSM documents) to store your conformance pack templates on AWS and directly deploy conformance packs using SSM document names.","upvote_count":"3","comment_id":"1166665","timestamp":"1709662620.0","poster":"zijo"},{"comment_id":"1155947","content":"Hi can somebody with contributors access, would please forward all the questions pdf to me on telegram @rater250 , I'm willing to pay","poster":"Rocky007","timestamp":"1708559940.0","upvote_count":"1"},{"poster":"thanhnv142","content":"C is correct: AWS config can only be modify by admin, not member accounts","comments":[{"content":"Let me clarify: B cannot be correct because of this reason: \"Deploy the stack to every account in the organization by using CloudFormation StackSets\" means in every accounts of this AWS org (canbe up to hundreds of account), we will deploy a SNS topic and an EventBridge rule. This would be an extremely expensive deployment","poster":"thanhnv142","upvote_count":"2","timestamp":"1706799180.0","comment_id":"1137708"}],"comment_id":"1135030","timestamp":"1706537400.0","upvote_count":"1"},{"timestamp":"1706354160.0","upvote_count":"2","poster":"hotblooded","content":"Option B is also not a valid case because we can direct use config with eventbrige why to go for clod trail we can use aws config rule s3-bucket-public-read-prohibited if rule changes eventbridge will trigger sns","comment_id":"1133274"},{"timestamp":"1706353920.0","comment_id":"1133267","upvote_count":"1","poster":"hotblooded","content":"I got confused with option B and C , but Lets think in C option when I will use system manager to trigger SNS I can simply use eventbridge run that checks for config rule compliance change , IF compliance changes then as a target we will specify SNS.\nYes , We can also specify system manager automation document to trigger sns but why I will use it I will directly use SNS.\n\nSo from above I still by looking words B is correct option. Main reason is you do not need system manager here to trigger SNS.\n\nPlus there is no mention for eventbridge rule that will trigger system manager , from config we cannot directly trigger it."},{"content":"I got confused with option B and C , but Lets think in C option when I will use system manager to trigger SNS I can simply use eventbridge run that checks for config rule compliance change , IF compliance changes then as a target we will specify SNS.\nYes , We can also specify system manager automation document to trigger sns but why I will use it I will directly use SNS.\n\nSo from above I still by looking words B is correct option. Main reason is you do not need system manager here to trigger SNS.","comment_id":"1133265","upvote_count":"1","timestamp":"1706353800.0","poster":"hotblooded"},{"content":"Selected Answer: C\nThis is the type of thing that AWS Config is used for.","poster":"Jay_2pt0_1","comment_id":"1110500","timestamp":"1704023340.0","upvote_count":"2"},{"comment_id":"1106440","timestamp":"1703632200.0","upvote_count":"3","content":"Selected Answer: C\nItâ€™s not B because other users can turn it off. With AWS config in organisations only the admin in the root can do it.","poster":"csG13"},{"comment_id":"1102563","upvote_count":"2","poster":"zolthar_z","content":"Selected Answer: C\nAnswer is C:\n\nWith B you can deploy fix the problem, but it is installed in every account, so a user with admin rights in that account can delete/modify the configuration","timestamp":"1703165940.0"},{"upvote_count":"3","timestamp":"1703134200.0","content":"Selected Answer: C\nC is right using Config Rules and Conformational Packs with SSM .","comment_id":"1102187","poster":"z_inderjot"},{"poster":"zolthar_z","timestamp":"1700418000.0","comment_id":"1074829","upvote_count":"1","content":"Selected Answer: B\nI don't have a technical reason but others dumps shows B as the Answer"},{"poster":"DZ_Ben","timestamp":"1698794460.0","upvote_count":"2","comments":[{"content":"it cannot be A, this has nothing to do with remediating the issue. I think it is C, aws config can be used to monitor changes at the Org level and corrective actions can be taken using lambda. C is correct for sure","poster":"Jaguaroooo","timestamp":"1704279960.0","upvote_count":"1","comment_id":"1112693"},{"content":"This solution does not address the requirement of notifying the SecOps team if a bucket's Block Public Access feature is turned off. GuardDuty focuses on detecting security threats and vulnerabilities, not specifically monitoring S3 bucket configurations.","poster":"harithzainudin","comment_id":"1092357","upvote_count":"1","timestamp":"1702198020.0"}],"content":"Should be A. The finding type should be \"Policy:S3/AccountBlockPublicAccessDisabled\". C is incorrect because to my knowledge you will also need to at least create an EventBridge rule and Lambda to make this work.","comment_id":"1059246"},{"poster":"examok","content":"C SHOULD BE FINE","upvote_count":"1","timestamp":"1695391860.0","comment_id":"1014191"},{"poster":"RVivek","timestamp":"1695034380.0","content":"Selected Answer: C\nA will send email to secops team for all Gaurdduty findigs. We want email for S3 Public access enabled event only","comment_id":"1010488","upvote_count":"1"},{"comment_id":"1009180","comments":[{"comment_id":"1009181","upvote_count":"1","poster":"daburahjail","content":"And I say this because they are more focused on monitoring and alerting, and not PREVENTION","timestamp":"1694879880.0"},{"poster":"robertohyena","content":"Yup agree with you. SCP is missing from all answers.","comment_id":"1071395","upvote_count":"1","timestamp":"1700049300.0"}],"upvote_count":"2","content":"Selected Answer: C\nAll answers fail the requirement \"The implementation must ensure that individual member accounts in the organization cannot turn off the notification.\". The correct approach here would be to use SCP to prevent users from changing this option.\nSince we have to chose one, C is the best alternative.","timestamp":"1694879820.0","poster":"daburahjail"},{"content":"C\nAWS Config allows you to manage AWS Config rules across all AWS accounts within an organization. You can:\nCentrally create, update, and delete AWS Config rules across all accounts in your organization.\nDeploy a common set of AWS Config rules across all accounts and specify accounts where AWS Config rules should not be created.\nUse the APIs from the management account in AWS Organizations to enforce governance by ensuring that the underlying AWS Config rules are not modifiable by your organizationâ€™s member accounts.","timestamp":"1691914260.0","poster":"ixdb","comment_id":"979857","upvote_count":"3"},{"timestamp":"1690879980.0","upvote_count":"2","poster":"vherman","comment_id":"968898","content":"Selected Answer: A\nA - 100%\nC - you can deploy Config Rules centrally via Config Service. Aggregation only works that way."},{"timestamp":"1690574160.0","poster":"lunt","upvote_count":"3","comment_id":"965788","content":"Selected Answer: C\nPlease the questions.\nA. Nope I don't want all GD findings.\nB. No actual protection - nope.\nD. Nope.\nC. Only viable option."},{"timestamp":"1687973940.0","upvote_count":"3","poster":"pepecastr0","comment_id":"936967","content":"Selected Answer: C\ncompliance and governance"},{"timestamp":"1687686540.0","poster":"FunkyFresco","upvote_count":"3","comment_id":"933435","content":"Selected Answer: C\nAnswer is C."},{"poster":"tartarus23","upvote_count":"3","timestamp":"1687207260.0","content":"Selected Answer: B\nAnswer is B.\nThis solution uses Amazon CloudTrail, a service that enables governance, compliance, operational auditing, and risk auditing of your AWS account. CloudTrail allows you to log, continuously monitor, and retain account activity related to actions across your AWS infrastructure, including actions taken in Amazon S3.\n\nAWS CloudFormation StackSets extends the functionality of stacks by enabling you to create, update, or delete stacks across multiple accounts and regions with a single operation. The CloudFormation template will create the necessary SNS topic and subscription, and the EventBridge rule to monitor for the s3:PutBucketPublicAccessBlock CloudTrail event. This event is generated when the Block Public Access feature is modified for an S3 bucket.","comments":[{"content":"Agree, B is correct.","timestamp":"1692607620.0","comment_id":"986333","poster":"fanq10","upvote_count":"1"}],"comment_id":"927909"},{"timestamp":"1686993660.0","upvote_count":"1","comments":[{"upvote_count":"1","timestamp":"1698502560.0","poster":"rlf","content":"We can use aws systems manager automation in mutiple aws regions and accounts with a delegated administrator account ( or management account) \nhttps://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-aws-publishsnsnotification.html","comment_id":"1056248"}],"content":"Both A and C support monitoring the change of bucket block public access setting but I didn't see how to use system manager to push event to sns. There isn't event thing mentioned in the option c and how it integrates with system manager, sns and aws config. So I go for option A","poster":"allen_devops","comment_id":"925878"},{"upvote_count":"3","content":"Selected Answer: C\nABC may be technically feasible but Config is the AWS recommended solution for configuration changes tracking and alerting.","timestamp":"1686830700.0","comment_id":"924155","poster":"madperro"},{"comment_id":"911226","poster":"rdoty","upvote_count":"2","timestamp":"1685535360.0","content":"Selected Answer: C\nconfig always for these, guard duty is not suitable for tracking configuration changes over time. it is meant for threat detection"},{"poster":"bcx","timestamp":"1685461560.0","comment_id":"910393","upvote_count":"1","content":"One problem with B is that the SNS topic must be in the same region as the EventBridge rule. So you need as many SNS topics as regions. It does not seems feasible.\n\nOn the other hand centrailzed AWS Config is a much better solution IMHO"},{"content":"A and D are incorrect.\nAWS GuardDuty focuses on threat detection and monitoring for malicious activity within your AWS environment. It analyzes various data sources such as VPC flow logs, CloudTrail logs, and DNS logs, but it does not specifically examine S3 bucket policies.\n\nAWS Inspector is a security assessment service that helps in assessing the security and compliance of your EC2 instances. It performs security assessments against common vulnerabilities and provides recommendations for remediation. \n\nC is incorrect, because the aggregator should be setup, but not to create rule in each account. https://docs.aws.amazon.com/organizations/latest/userguide/services-that-can-integrate-config.html\n\nB is correct. The unmanaged changes can be detected by dirft detection if the rule was deleted by individual account.\nhttps://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html","poster":"qan1257","timestamp":"1685090040.0","comment_id":"907211","upvote_count":"1"},{"content":"Selected Answer: C\nIt's C. Follow the link of Zoe","timestamp":"1684904640.0","comment_id":"905486","upvote_count":"2","poster":"Akaza"},{"content":"Selected Answer: A\nA for sure. To be honest there are many wrong answers in this dump, previous was better. Requirement was disable turnoff in the accounts, using config you could delete rules, but with guarduty you couldnâ€™t do this","upvote_count":"2","poster":"Dimidrol","comments":[{"timestamp":"1683995280.0","upvote_count":"1","comments":[{"content":"You can't deploy a config rule in multiple accounts via Config Service. Config aggregator does not work that way. A is correct","timestamp":"1690879860.0","poster":"vherman","comment_id":"968896","upvote_count":"1"}],"content":"When Config is centrally managed/delegated then rules can't be deleted by individual accounts.","poster":"ipsingh","comment_id":"896881"}],"timestamp":"1683914400.0","comment_id":"896120"},{"upvote_count":"1","comment_id":"888328","timestamp":"1683104880.0","poster":"Zoe_zoe","content":"C \nhttps://docs.aws.amazon.com/config/latest/developerguide/s3-account-level-public-access-blocks.html"},{"comment_id":"884079","upvote_count":"4","content":"Selected Answer: C\nC is most nearest answer to the question","poster":"ParagSanyashiv","timestamp":"1682749260.0"},{"timestamp":"1682483820.0","upvote_count":"3","poster":"5aga","comment_id":"881103","content":"Selected Answer: C\nAmazon GuardDuty is primarily on threat detection and response, not configuration monitoring\n\nA conformance pack is a collection of AWS Config rules and remediation actions that can be easily deployed as a single entity in an account and a Region or across an organization in AWS Organizations.\n\nhttps://docs.aws.amazon.com/config/latest/developerguide/conformance-packs.html"},{"poster":"henryyvr","upvote_count":"2","content":"Selected Answer: C\nC ... aws config","comment_id":"878895","timestamp":"1682296980.0"},{"comment_id":"870379","poster":"jqso234","timestamp":"1681494600.0","content":"Selected Answer: A\nOption A allows for a centralized management approach unlike B. A leverages Amazon GuardDuty, which is already integrated with Amazon SNS and provides the ability to detect threats in the AWS environment. On the other hand, option B requires using CloudFormation to deploy a custom rule for CloudTrail, which can be more complex to manage and monitor.","upvote_count":"1"},{"content":"Selected Answer: A\nA for me. We did such solution","upvote_count":"4","poster":"Dimidrol","timestamp":"1680726240.0","comment_id":"862453"},{"upvote_count":"1","comment_id":"861754","timestamp":"1680669000.0","poster":"lqpO_Oqpl","content":"Why not C?"}],"answers_community":["C (68%)","A (26%)","6%"],"exam_id":23,"isMC":true,"answer":"C","choices":{"C":"Turn on AWS Config across the organization. In the delegated administrator account, create an SNS topic. Subscribe the SecOps team's email address to the SNS topic. Deploy a conformance pack that uses the s3-bucket-level-public-access-prohibited AWS Config managed rule in each account and uses an AWS Systems Manager document to publish an event to the SNS topic to notify the SecOps team.","B":"Create an AWS CloudFormation template that creates an SNS topic and subscribes the SecOps teamâ€™s email address to the SNS topic. In the template, include an Amazon EventBridge rule that uses an event pattern of CloudTrail activity for s3:PutBucketPublicAccessBlock and a target of the SNS topic. Deploy the stack to every account in the organization by using CloudFormation StackSets.","A":"Designate an account to be the delegated Amazon GuardDuty administrator account. Turn on GuardDuty for all accounts across the organization. In the GuardDuty administrator account, create an SNS topic. Subscribe the SecOps team's email address to the SNS topic. In the same account, create an Amazon EventBridge rule that uses an event pattern for GuardDuty findings and a target of the SNS topic.","D":"Turn on Amazon Inspector across the organization. In the Amazon Inspector delegated administrator account, create an SNS topic. Subscribe the SecOps teamâ€™s email address to the SNS topic. In the same account, create an Amazon EventBridge rule that uses an event pattern for public network exposure of the S3 bucket and publishes an event to the SNS topic to notify the SecOps team."},"url":"https://www.examtopics.com/discussions/amazon/view/105252-exam-aws-certified-devops-engineer-professional-dop-c02/","answer_description":"","question_id":224,"answer_images":[],"timestamp":"2023-04-05 06:30:00","unix_timestamp":1680669000,"question_images":[],"topic":"1"},{"id":"uCIdxDuBVhocgK6y7IoX","unix_timestamp":1731878100,"answer_ET":"C","question_images":[],"timestamp":"2024-11-17 22:15:00","answer":"C","url":"https://www.examtopics.com/discussions/amazon/view/151517-exam-aws-certified-devops-engineer-professional-dop-c02/","exam_id":23,"answer_images":[],"question_text":"A DevOps engineer deploys an application to a fleet of Amazon Linux EC2 instances. The DevOps engineer needs to monitor system metrics across the fleet. The DevOps engineer wants to monitor the relationship between network traffic and memory utilization for the application code. The DevOps engineer wants to track the data on a 60 second interval.\n\nWhich solution will meet these requirements?","answers_community":["C (100%)"],"topic":"1","choices":{"B":"Use Amazon CloudWatch detailed monitoring to collect the NetworkIn metric and the MemoryBytesUsed metric. Graph the metrics in CloudWatch.","C":"Use Amazon CloudWatch detailed monitoring to collect the NetworkIn metric. Install the CloudWatch agent on the EC2 instances to collect the mem_used metric. Graph the metrics in CloudWatch.","D":"Use Amazon CloudWatch basic monitoring to collect the built-in NetworkIn metric. Install the CloudWatch agent on the EC2 instances to collect the mem_used metric. Graph the metrics in CloudWatch.","A":"Use Amazon CloudWatch basic monitoring to collect the NetworkIn metric and the MemoryBytesUsed metric. Graph the metrics in CloudWatch."},"answer_description":"","isMC":true,"discussion":[{"upvote_count":"5","content":"Answer: C\nDetailed Monitoring for High Resolution: Detailed monitoring provides metrics at a 1-minute frequency, which meets the requirement of tracking data on a 60-second interval. Basic monitoring only provides 5-minute data.\nNetworkIn Metric: The NetworkIn metric is a standard metric available through detailed monitoring, providing insights into incoming network traffic.\nCloudWatch Agent for Memory Utilization: While MemoryBytesUsed is available with basic monitoring, the CloudWatch agent allows you to collect more specific memory metrics like mem_used, which might be more relevant for analyzing application code memory usage. This provides greater flexibility and granularity in monitoring memory.\nCorrelating Metrics: By collecting both NetworkIn and mem_used in CloudWatch, you can graph and analyze them together to understand the relationship between network traffic and memory utilization for your application.","comment_id":"1313740","timestamp":"1731878100.0","poster":"f4b18ba"},{"comment_id":"1331729","poster":"CHRIS12722222","content":"Selected Answer: C\nUse Amazon CloudWatch detailed monitoring to collect the NetworkIn metric. Install the CloudWatch agent on the EC2 instances to collect the mem_used metric. Graph the metrics in CloudWatch.","upvote_count":"2","timestamp":"1735169940.0"}],"question_id":225}],"exam":{"numberOfQuestions":355,"lastUpdated":"11 Apr 2025","isMCOnly":true,"id":23,"name":"AWS Certified DevOps Engineer - Professional DOP-C02","provider":"Amazon","isImplemented":true,"isBeta":false},"currentPage":45},"__N_SSP":true}