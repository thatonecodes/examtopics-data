{"pageProps":{"questions":[{"id":"Enkog1lG5gbtSDaGeKyC","unix_timestamp":1730982720,"choices":{"B":"Increase the amount of memory that is allocated to the Lambda function.","D":"Increase the timeout value of the Lambda function.","A":"Increase the virtual CPU (vCPU) cores quota of the Lambda function.","C":"Increase the ephemeral storage size of the Lambda function."},"timestamp":"2024-11-07 13:32:00","question_id":386,"question_images":[],"answers_community":["B (100%)"],"answer":"B","question_text":"A developer is building an application on AWS. The application has an Amazon API Gateway API that sends requests to an AWS Lambda function. The API is experiencing increased latency because the Lambda function has limited available CPU to fulfill the requests.\n\nBefore the developer deploys the API into production, the developer must configure the Lambda function to have more CPU.\n\nWhich solution will meet this requirement?","answer_description":"","answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/150940-exam-aws-certified-developer-associate-dva-c02-topic-1/","topic":"1","discussion":[{"poster":"Saudis","comment_id":"1308355","content":"Selected Answer: B\nIn lambda The more memory, the more CPU available.","upvote_count":"1","timestamp":"1730982720.0"}],"exam_id":24,"isMC":true,"answer_ET":"B"},{"id":"0Tnl0GBPuVxSpXEq9gZM","exam_id":24,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/103708-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer":"A","question_id":387,"topic":"1","answer_description":"","question_images":["https://img.examtopics.com/aws-certified-developer-associate-dva-c02/image2.png"],"answer_images":[],"answer_ET":"A","question_text":"A developer is writing an AWS Lambda function. The developer wants to log key events that occur while the Lambda function runs. The developer wants to include a unique identifier to associate the events with a specific function invocation. The developer adds the following code to the Lambda function:\n//IMG//\n\nWhich solution will meet this requirement?","answers_community":["A (94%)","6%"],"discussion":[{"comment_id":"985063","poster":"ninomfr64","upvote_count":"15","timestamp":"1708338000.0","content":"Selected Answer: A\nBoth A and D could work here, as both rely on the context object to get access to execution ID https://docs.aws.amazon.com/us_en/lambda/latest/dg/python-context.html \nWhile A uses stoud to send log to CloudWatch Log, D writes to a file. D is less specific (where is the file stored? A single file for each execution?) and looks more comples (manage file(s), manage concurrency access to the file ...), thus I'll go for A"},{"timestamp":"1695686820.0","content":"Selected Answer: A\nA\nhttps://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html\nhttps://docs.aws.amazon.com/lambda/latest/dg/nodejs-logging.html\nThere is no explicit information for the runtime, the code is written in Node.js.","poster":"Untamables","comment_id":"850603","comments":[{"content":"• https://docs.aws.amazon.com/prescriptive-guidance/latest/implementing-logging-monitoring-cloudwatch/lambda-logging-metrics.html\n• Lambda automatically streams standard output and standard error messages from a Lambda function to CloudWatch Logs, without requiring logging drivers.","comment_id":"948367","timestamp":"1704924420.0","upvote_count":"2","poster":"Pupina"}],"upvote_count":"8"},{"timestamp":"1742105100.0","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/lambda/latest/dg/getting-started.html","comment_id":"1399147","poster":"ProcureSense","upvote_count":"1"},{"upvote_count":"2","comment_id":"1330871","poster":"sumanshu","timestamp":"1734970200.0","content":"Selected Answer: A\nA) Correct - The context object contains the AWS request ID, which uniquely identifies each function invocation. Writing logs to standard output ensures they are automatically captured by CloudWatch Logs.\n\n\nB) Eliminated - The event object contains input data passed to the Lambda function but does not include the AWS request ID. Writing logs to a file is not practical in Lambda because the filesystem is ephemeral, and logs stored in files would not persist beyond the function invocation."},{"poster":"65703c1","content":"Selected Answer: A\nA is the correct answer.","upvote_count":"1","timestamp":"1732214340.0","comment_id":"1215098"},{"timestamp":"1728562320.0","comment_id":"1192956","content":"Selected Answer: A\nA should work","upvote_count":"1","poster":"badsati"},{"content":"Selected Answer: A\nSee getAwsRequestId() at https://docs.aws.amazon.com/lambda/latest/dg/java-context.html","comment_id":"1155099","upvote_count":"1","timestamp":"1724193120.0","poster":"james2033"},{"content":"Tricky question. Sure A and D both can do, but... The question is: why we need to get the request identifier if we will write logs to CloudWatch?\nSo, I will go with answer A.","poster":"rimaSamir","timestamp":"1723781160.0","comment_id":"1151768","upvote_count":"1"},{"timestamp":"1722579060.0","upvote_count":"2","poster":"SD_CS","comment_id":"1138289","content":"I think it should be A. Also can anyone advise why the two answers are different ? \nhttps://www.examtopics.com/discussions/amazon/view/29007-exam-aws-certified-developer-associate-topic-1-question-26/"},{"upvote_count":"1","comment_id":"1098688","content":"The Option A is correct because:\nThe second argument is the context object. A context object is passed to your function by Lambda at runtime. This object provides methods and properties that provide information about the invocation, function, and runtime environment.\nhttps://docs.aws.amazon.com/lambda/latest/dg/python-handler.html","timestamp":"1718596980.0","poster":"KarBiswa"},{"timestamp":"1710034020.0","poster":"hsinchang","upvote_count":"1","comment_id":"1003548","content":"invocation is in the Context object, and loggging into Standard output, which goes into CloudWatch(more durable, more scalable, etc.), is generally better than using temporary Files"},{"timestamp":"1704924240.0","content":"Selected Answer A: \nHandler function https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html\nContext object awsRequestId – The identifier of the invocation request. https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html","poster":"Pupina","comment_id":"948366","upvote_count":"1"},{"timestamp":"1703022780.0","upvote_count":"1","poster":"rlnd2000","content":"Selected Answer: A\nIn my opinion both options A and D can fulfill the requirement, since there is no requirement about any specific logging and monitoring tool I will go with defaults (A) because, simple is better than complex :)","comment_id":"927873"},{"content":"Selected Answer: A\nThe application can write logs to standard output or to a file. Standard output is the default destination for logs. Logs that are written to standard output are sent to Amazon CloudWatch Logs. Logs that are written to a file are stored on the Lambda function's execution environment.","upvote_count":"5","timestamp":"1700446380.0","comment_id":"902280","poster":"Prem28"},{"upvote_count":"1","poster":"Nagendhar","content":"Ans: D\n\nThe code snippet provided in the question is obtaining the request identifier from the context.awsRequestId property, which is available in the context object provided to the Lambda function handler. Therefore, the correct option is:\n\nD. Obtain the request identifier from the AWS request ID field in the context object. Configure the application to write logs to a file.\n\nThis option meets the requirement of logging key events and including a unique identifier to associate the events with a specific function invocation.","timestamp":"1699794120.0","comment_id":"895857"},{"upvote_count":"3","content":"Selected Answer: D\nWhy not D ? Writing logs to a file seems more appropriate than stdout","comment_id":"876508","timestamp":"1697891040.0","poster":"Rpod"},{"poster":"Watascript","content":"Selected Answer: A\nhttps://docs.aws.amazon.com/us_en/lambda/latest/dg/python-context.html\nhttps://docs.aws.amazon.com/us_en/lambda/latest/dg/python-logging.html","comment_id":"850158","timestamp":"1695641400.0","upvote_count":"4"},{"comment_id":"849250","content":"Selected Answer: A\nA it is","upvote_count":"3","poster":"Dun6","timestamp":"1695547440.0"},{"poster":"March2023","comment_id":"848722","content":"Selected Answer: A\nI think the answer is A","upvote_count":"3","timestamp":"1695501240.0"}],"timestamp":"2023-03-23 23:34:00","unix_timestamp":1679610840,"choices":{"D":"Obtain the request identifier from the AWS request ID field in the context object. Configure the application to write logs to a file.","A":"Obtain the request identifier from the AWS request ID field in the context object. Configure the application to write logs to standard output.","C":"Obtain the request identifier from the AWS request ID field in the event object. Configure the application to write logs to standard output.","B":"Obtain the request identifier from the AWS request ID field in the event object. Configure the application to write logs to a file."}},{"id":"QLB30AtbPqHfKQd1oixd","answers_community":["D (100%)"],"exam_id":24,"choices":{"A":"Configure the Lambda functions to use reserved concurrency that is equal to the last month’s average number of concurrent invocations.","D":"Add an SSM dynamic reference as an environment variable to the Lambda functions resource in the CloudFormation templates.","C":"Request a service quota increase for Parameter Store GetParameter API operations to match the expected usage of the Lambda functions.","B":"Add a retry mechanism with exponential backoff to the call to Parameter Store."},"unix_timestamp":1730804880,"discussion":[{"poster":"bp07","timestamp":"1736724360.0","content":"Selected Answer: D\nD is answer","upvote_count":"1","comment_id":"1339720"},{"upvote_count":"3","poster":"Saudis","timestamp":"1730804880.0","content":"Selected Answer: D\nD is correct The application experiences rate limiting because Lambda calls the Parameter Store every time the function is run. This means that as the number of Lambda calls increases, each call also triggers a request from the Parameter Store, which increases the number of requests and leads to exceeding the limit.\n\nUsing an SSM dynamic reference as an environmental variable in CloudFormation will allow Lambda to load the value only once on startup, and there will be no need to request the value of the variable from the Parameter Store on each call. This way, the value is obtained directly from the pre-loaded environmental variable instead of sending additional requests.","comment_id":"1307323"}],"url":"https://www.examtopics.com/discussions/amazon/view/150773-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_images":[],"question_text":"A developer has an application that uses AWS Lambda functions and AWS CloudFormation templates. Usage of the application has increased. As a result, the Lambda functions are encountering rate limit errors when they retrieve data.\n\nThe Lambda functions retrieve an advanced parameter from AWS Systems Manager Parameter Store on every call. The parameter changes only during new deployments. Because the application’s usage is unpredictable, the developer needs a way to avoid the rate limiting.\n\nWhich solution will meet these requirements MOST cost-effectively?","answer":"D","answer_description":"","question_images":[],"timestamp":"2024-11-05 12:08:00","answer_ET":"D","question_id":388,"topic":"1","isMC":true},{"id":"RrIZIfITYJ4C0QZGUEZA","question_images":[],"timestamp":"2024-11-05 12:25:00","discussion":[{"timestamp":"1736862360.0","upvote_count":"1","poster":"tullio85","comment_id":"1340374","content":"Selected Answer: C\nCloudWatch Logs Insights: CloudWatch Logs Insights allows you to interactively search and analyze log data from various AWS services, including AWS Lambda. You can use Logs Insights to query the Lambda logs and extract custom metrics, such as processing times, based on specific patterns or conditions in the log data."},{"content":"Selected Answer: B\nB is more direct to real-time data due to automatic integration of indicators into CloudWatch, and is best if the data in the logs is static and needs constant monitoring. C gives you more flexibility but not necessarily as fast as B because it relies on queries that are run separately","upvote_count":"3","timestamp":"1730805900.0","comment_id":"1307336","poster":"Saudis"}],"answer_description":"","question_text":"A developer is using an AWS Lambda function to process data. The developer needs to extract custom metrics about processing times from the Lambda logs. The developer needs to analyze the metrics, set alarms, and detect issues in real time.\n\nWhich solution will meet these requirements?","unix_timestamp":1730805900,"answer":"B","exam_id":24,"question_id":389,"isMC":true,"url":"https://www.examtopics.com/discussions/amazon/view/150775-exam-aws-certified-developer-associate-dva-c02-topic-1/","answer_ET":"B","answers_community":["B (75%)","C (25%)"],"choices":{"C":"Use Amazon CloudWatch Logs Insights to create custom metrics by querying the logs that come from the Lambda function. Use CloudWatch to create the required graphs and alarms for the custom metrics.","B":"Use the open source client libraries provided by Amazon to generate the logs in the Amazon CloudWatch embedded metric format. Use CloudWatch to create the required graphs and alarms for the custom metrics.","D":"Create an Amazon Kinesis data stream to stream log events in real time from Lambda. Specify an Amazon S3 bucket as the destination for the Kinesis data stream. Use Amazon CloudWatch to visualize the log data and to set alarms.","A":"Publish custom metric data to AWS CloudTrail by using the PutMetricData API operation. Classify and collect the metrics. Create graphs and alarms in CloudTrail for the custom metrics."},"answer_images":[],"topic":"1"},{"id":"VMdLg7vsUXYWcFUnbt6z","choices":{"D":"CodeDeploy was trying to deploy to instances that were attached to an IAM instance profile that did not have the required permissions.","E":"CodeDeploy was trying to deploy to instances that were not set up with correct CodeDeploy health checks.","A":"The CodeDeploy agent was not running on the instances that CodeDeploy was trying to deploy to.","C":"The developer’s IAM role did not have the necessary permissions to perform code deployment to the instances.","B":"The unified Amazon CloudWatch agent was not running on the instances that CodeDeploy was trying to deploy to."},"discussion":[{"upvote_count":"3","timestamp":"1730991780.0","comment_id":"1308416","poster":"aws_god","content":"Selected Answer: AE\nhttps://repost.aws/questions/QUz-BsaEMhT-qhDfrQyNz7fA/codedeploy-deployment-failed-after-ec2-changed-instance-type"}],"answers_community":["AE (100%)"],"question_images":[],"question_id":390,"url":"https://www.examtopics.com/discussions/amazon/view/150946-exam-aws-certified-developer-associate-dva-c02-topic-1/","topic":"1","answer":"AE","answer_description":"","answer_ET":"AE","isMC":true,"unix_timestamp":1730991780,"question_text":"A developer needs to fix an AWS CodeDeploy deployment that failed. During the failed deployment, the developer received the following error message:\n\n“The overall deployment failed because too many individual instances failed deployment, too few healthy instances are available for deployment, or some instances in your deployment group are experiencing problems. (Error code: HEALTH-CONSTRAINTS)”\n\nWhat are the possible causes of the failed deployment? (Choose two.)","answer_images":[],"exam_id":24,"timestamp":"2024-11-07 16:03:00"}],"exam":{"id":24,"isBeta":false,"provider":"Amazon","name":"AWS Certified Developer - Associate DVA-C02","isImplemented":true,"numberOfQuestions":551,"isMCOnly":true,"lastUpdated":"11 Apr 2025"},"currentPage":78},"__N_SSP":true}