{"pageProps":{"questions":[{"id":"zyUMnWkbbMvVFTQrtsrP","answer":"B","topic":"1","answer_ET":"B","isMC":true,"exam_id":25,"timestamp":"2022-11-24 17:27:00","question_text":"An application reads data from an Amazon DynamoDB table. Several times a day, for a period of 15 seconds, me application receives multiple ProvisionedThroughputExceeded errors.\n\nHow should this exception be handled?","unix_timestamp":1669307220,"answers_community":["B (100%)"],"answer_description":"","question_images":[],"question_id":131,"discussion":[{"upvote_count":"1","content":"Selected Answer: B\nRetry the failed read requests with exponential backoff is the correct one","comment_id":"938325","timestamp":"1688053380.0","poster":"rcaliandro"},{"comment_id":"884078","timestamp":"1682749200.0","content":"Why not A? It says \"multiple times in 15 seconds\".","upvote_count":"1","poster":"suru003"},{"poster":"pancman","content":"Selected Answer: B\nProvisionedThroughputExceeded --> Exponential backoff","upvote_count":"1","comment_id":"814770","timestamp":"1676863140.0"},{"content":"Pls, can anyone explain why D is not the best option???","poster":"braveheart22","timestamp":"1672729680.0","comment_id":"764280","comments":[{"comment_id":"791678","poster":"tinyfoot","timestamp":"1674999840.0","upvote_count":"1","content":"It would work but it will be full of wastage akin to using a sledgehammer to kill an ant as you will be over provisioning your WCU for that few spikes in write requests (read as constant higher cost). By using exponential backoff, you will be able to smoothen out your write request.\n\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-query-scan.html"}],"upvote_count":"1"},{"poster":"michaldavid","content":"Selected Answer: B\nB seems right to me","upvote_count":"3","comment_id":"726844","timestamp":"1669386480.0"},{"content":"Selected Answer: B\nAgreed","comments":[{"comment_id":"731713","content":"https://www.examtopics.com/discussions/amazon/view/5389-exam-aws-certified-developer-associate-topic-1-question-16/","timestamp":"1669824120.0","upvote_count":"1","poster":"k1kavi1"}],"comment_id":"726751","timestamp":"1669379820.0","upvote_count":"2","poster":"k1kavi1"},{"upvote_count":"1","content":"B\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html","comment_id":"726042","timestamp":"1669307220.0","poster":"kapil206001"}],"url":"https://www.examtopics.com/discussions/amazon/view/88557-exam-aws-certified-developer-associate-topic-1-question-216/","answer_images":[],"choices":{"D":"Use the DynamoDB \"UpdateItem\" API to increase the provisioned throughput capacity of the table.","C":"Immediately retry the failed read requests.","A":"Create a new global secondary index for the table to help with the additional requests.","B":"Retry the failed read requests with exponential backoff."}},{"id":"lVOMB2mi34QPdI0x0m7z","topic":"1","unix_timestamp":1669380000,"url":"https://www.examtopics.com/discussions/amazon/view/88693-exam-aws-certified-developer-associate-topic-1-question-217/","answers_community":["D (100%)"],"discussion":[{"timestamp":"1688053560.0","content":"Selected Answer: D\nBetween the options for sure we have to use CloudWatch, the other 2 answers can easily be excluded. Since there is no a metric on CloudWatch, we have to create one. D is correct.","upvote_count":"1","comment_id":"938326","poster":"rcaliandro"},{"comment_id":"814771","upvote_count":"1","content":"Selected Answer: D\nD is correct","timestamp":"1676863200.0","poster":"pancman"},{"poster":"michaldavid","content":"Selected Answer: D\nAgree with D","comment_id":"726846","timestamp":"1669386660.0","upvote_count":"2"},{"poster":"k1kavi1","comment_id":"726754","comments":[{"poster":"k1kavi1","comment_id":"731716","upvote_count":"1","content":"https://www.examtopics.com/discussions/amazon/view/4289-exam-aws-certified-developer-associate-topic-1-question-26/","timestamp":"1669824240.0"}],"upvote_count":"2","content":"Selected Answer: D\nAgreed","timestamp":"1669380000.0"}],"answer":"D","exam_id":25,"question_id":132,"question_images":[],"answer_images":[],"timestamp":"2022-11-25 13:40:00","answer_description":"","answer_ET":"D","question_text":"A company wants to migrate its web application to AWS and leverage auto scaling to handle peak workloads. The solutions architect determined that the best metric for an auto scaling event is the number of concurrent users.\n\nBased on this information, what should the developer use to auto scale based on concurrent users?","isMC":true,"choices":{"C":"Amazon CloudFront to leverage AWS edge locations","A":"An Amazon SNS topic to be invoked when a concurrent user threshold is met","B":"An Amazon Cloudwatch NetworkIn metric","D":"A custom Amazon CloudWatch metric for concurrent users"}},{"id":"TLusAx4uko6JCoZi4mPq","question_text":"A company is managing a NoSQL database on-premises to host a critical component of an application, which is starting to have scaling issues. The company wants to migrate the application to Amazon DynamoDB with the following considerations:\n\n• Optimize frequent queries\n• Reduce read latencies\n• Plan for frequent queries on certain key attributes of the table\n\nWhich solution would help achieve these objectives?","topic":"1","timestamp":"2022-11-25 13:47:00","answer_ET":"A","exam_id":25,"question_id":133,"question_images":[],"discussion":[{"poster":"k1kavi1","timestamp":"1669380420.0","upvote_count":"6","comment_id":"726757","content":"Selected Answer: A\nhttps://www.examtopics.com/discussions/amazon/view/29304-exam-aws-certified-developer-associate-topic-1-question-277/"},{"content":"A.\n\n\"Global secondary index—An index with a partition key and a sort key that can be different from those on the base table. A global secondary index is considered \"global\" because queries on the index can span all of the data in the base table, across all partitions. \n\nLocal secondary index—An index that has the same partition key as the base table, but a different sort key. A local secondary index is \"local\" in the sense that every partition of a local secondary index is scoped to a base table partition that has the same partition key value. \"\n\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes-general.html","upvote_count":"5","poster":"hamimelon","timestamp":"1670020380.0","comment_id":"734098"},{"poster":"rcaliandro","content":"Selected Answer: A\nAAAAAAAAAAA","upvote_count":"1","timestamp":"1688053740.0","comment_id":"938331"},{"poster":"MrTee","comment_id":"881578","content":"The solution that would help achieve the objectives of optimizing frequent queries, reducing read latencies and planning for frequent queries on certain key attributes of the table is A. Create global secondary indexes on keys that are frequently queried. Add the necessary attributes into the indexes. This will allow you to query the data using an alternate key and project only the attributes that are needed for the query, reducing read latencies and optimizing query performance. Option C, creating DynamoDB global tables, would not necessarily reduce read latencies and using a scan to fetch data from the table could result in slow query responses.","upvote_count":"1","timestamp":"1682510880.0"},{"poster":"sichilam","timestamp":"1674601020.0","upvote_count":"1","content":"A it is","comment_id":"787056"},{"timestamp":"1674534720.0","comment_id":"786157","poster":"vichy","upvote_count":"1","content":"It seems A is better\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes-general.html"},{"content":"Selected Answer: A\nA is the correct answer","upvote_count":"1","timestamp":"1670882700.0","comment_id":"743369","poster":"fabriciollf"},{"content":"Selected Answer: A\naaaaaa","upvote_count":"2","poster":"SoMaL69","timestamp":"1669820580.0","comment_id":"731642"}],"unix_timestamp":1669380420,"choices":{"D":"Create an AWS Auto Scaling policy for the DynamoDB table.","B":"Create local secondary indexes on keys that are frequently queried. DynamoDB will fetch needed attributes from the table.","A":"Create global secondary indexes on keys that are frequently queried. Add the necessary attributes into the indexes.","C":"Create DynamoDB global tables to speed up query responses. Use a scan to fetch data from the table"},"answer_description":"","answer":"A","url":"https://www.examtopics.com/discussions/amazon/view/88694-exam-aws-certified-developer-associate-topic-1-question-218/","answer_images":[],"answers_community":["A (100%)"],"isMC":true},{"id":"u5AVrpuNDyxRdUHGNYNt","answers_community":["B (100%)"],"answer":"B","question_text":"A developer is storing sensitive data generated by an application in Amazon S3. The developer wants to encrypt the data at rest A company policy requires an audit trail of when the AWS Key Management Service (AWS KMS) key was used and by whom.\n\nWhich encryption option will meet these requirements?","answer_description":"","discussion":[{"content":"Selected Answer: B\nInstead of SSE-S3 we have to use server side encryption at rest with KMS (SSE-KMS) in order to use a key managed by KMS with the possibility to monitor it. B is the correct one.","comment_id":"938336","upvote_count":"1","timestamp":"1688053860.0","poster":"rcaliandro"},{"content":"Selected Answer: B\nB is correct","poster":"ihta_2031","upvote_count":"1","comment_id":"857897","timestamp":"1680352620.0"},{"timestamp":"1669387020.0","poster":"michaldavid","upvote_count":"3","content":"Selected Answer: B\nB is correct as KMS allows auditing","comment_id":"726853"},{"content":"Selected Answer: B\nhttps://www.examtopics.com/discussions/amazon/view/28801-exam-aws-certified-developer-associate-topic-1-question-217/","comment_id":"726759","timestamp":"1669380600.0","poster":"k1kavi1","upvote_count":"2"}],"answer_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/88696-exam-aws-certified-developer-associate-topic-1-question-219/","exam_id":25,"answer_ET":"B","isMC":true,"choices":{"D":"Server-side encryption with self-managed keys","C":"Server-side encryption with customer-provided keys (SSE-C)","B":"Server-side encryption with AWS KMS managed keys (SSE-KMS)","A":"Server-side encryption with Amazon S3 managed keys (SSE-S3)"},"timestamp":"2022-11-25 13:50:00","topic":"1","question_images":[],"question_id":134,"unix_timestamp":1669380600},{"id":"tb0GJ9uEOTOq4QrTFvsj","answer_description":"","question_text":"A developer is working on a web application that runs on Amazon Elastic Container Service (Amazon ECS) and uses an Amazon DynamoDB table to store data.\nThe application performs a large number of read requests against a small set of the table data.\nHow can the developer improve the performance of these requests? (Choose two.)","question_id":135,"timestamp":"2022-08-31 22:36:00","topic":"1","exam_id":25,"question_images":[],"url":"https://www.examtopics.com/discussions/amazon/view/78784-exam-aws-certified-developer-associate-topic-1-question-22/","answer_images":[],"unix_timestamp":1661978160,"choices":{"D":"Increase the read capacity of the DynamoDB table.","A":"Create an Amazon ElastiCache cluster. Configure the application to cache data in the cluster.","B":"Create a DynamoDB Accelerator (DAX) cluster. Configure the application to use the DAX cluster for DynamoDB requests.","E":"Enable DynamoDB adaptive capacity.","C":"Configure the application to make strongly consistent read requests against the DynamoDB table."},"discussion":[{"comment_id":"656725","content":"A and B","timestamp":"1662075180.0","poster":"JAMG54","upvote_count":"18"},{"poster":"haazybanj","upvote_count":"14","timestamp":"1665249600.0","comment_id":"689537","content":"Selected Answer: B\nB and D"},{"poster":"sumanshu","upvote_count":"2","comment_id":"1327229","comments":[{"content":"B) Correct - DAX is a purpose-built caching service for DynamoDB. It provides microsecond-level response times for read-heavy workloads by caching the most frequently accessed data.","poster":"sumanshu","comment_id":"1327230","comments":[{"poster":"sumanshu","comment_id":"1327231","comments":[{"poster":"sumanshu","content":"A) Correct - ElastiCache is a fully managed in-memory caching service (supporting Redis and Memcached) that can reduce the load on DynamoDB by caching frequently accessed data.\n\nSo, Developer can go either with DAX or ElasticCache","comment_id":"1327232","upvote_count":"1","timestamp":"1734339240.0","comments":[{"comment_id":"1327233","content":"E) Eliminated - Adaptive capacity helps DynamoDB tables automatically adjust to uneven workloads by redistributing provisioned throughput. However, it does not address the performance issue","timestamp":"1734339240.0","poster":"sumanshu","upvote_count":"1"}]}],"content":"D) Eliminated - While increasing the read capacity ensures that the table can handle more read requests, it does not directly improve performance (latency). Additionally, this option can lead to higher costs","timestamp":"1734339180.0","upvote_count":"1"}],"upvote_count":"2","timestamp":"1734339120.0"}],"timestamp":"1734339060.0","content":"Selected Answer: B\nA & B\n\nC) - Eliminated - As Strongly Consistent Read may increase latency because DynamoDB needs to ensure the latest data is retrieved."},{"content":"AB for me, \"small set of the table data\" discard option D","upvote_count":"1","poster":"jeanpierregs21","timestamp":"1731346980.0","comment_id":"1310228"},{"content":"Selected Answer: C\nC & D is correct","timestamp":"1730106480.0","comment_id":"1303895","poster":"thucta96dn","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: A\nA and B is correct","comment_id":"1298614","timestamp":"1729067700.0","poster":"Berkan"},{"comment_id":"1200116","poster":"sohil_khattar","upvote_count":"1","content":"Selected Answer: A\nA is the correct answer","timestamp":"1713783000.0"},{"comment_id":"1188092","content":"For high read requests I would go for option (D)\nAnd for small set of table data, I would choose to cache them as long as they're the same every time, so I would go for (A).","timestamp":"1712067000.0","poster":"Yahya_Badawy","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nB & D:\nNot A because elasticache is good when you have aggregation query results, otherwise you can already use the DAX feature of dynamoDB and D because you can increase the number of Read Units to increase the performance","timestamp":"1707913800.0","poster":"Baalhammun","comment_id":"1150205"},{"comment_id":"1125214","content":"I will go For B and D, E is not good option according to me because its automatic in Dynamodb","upvote_count":"1","poster":"gilleep_17","timestamp":"1705516020.0"},{"content":"I am not sure with two options A and C . But B is for sure","comment_id":"1125203","timestamp":"1705515000.0","poster":"gilleep_17","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nB and D","comment_id":"1122955","poster":"AsmaZoheb","timestamp":"1705273860.0"},{"comment_id":"1115040","timestamp":"1704528300.0","content":"Selected Answer: A\nGo with A and B\nA. Create an Amazon ElastiCache cluster. Configure the application to cache data in the cluster.\nElastiCache Advantages: ElastiCache provides a managed in-memory cache service, often used with Redis or Memcached. It can store frequently accessed data, reducing the need to query DynamoDB directly and improving read performance.\nB. Create a DynamoDB Accelerator (DAX) cluster. Configure the application to use the DAX cluster for DynamoDB requests.\nDAX Benefits: DAX is an in-memory cache that sits between the application and DynamoDB. It can significantly reduce read latency and improve throughput for frequently accessed items, offering up to 10x performance improvement.","poster":"Quang_Nguyen","upvote_count":"2"},{"content":"Selected Answer: B\nB and D","comment_id":"1105145","upvote_count":"1","timestamp":"1703497620.0","poster":"a_win"},{"upvote_count":"3","comment_id":"957218","timestamp":"1689835260.0","content":"I would go with AB\n- Both Options provides caching for the small set of the data which is going to be frequently used\nFor Option D - If entire table is having a high read traffic, then this would have made sense, but keyword here is \"small set of table data\"","poster":"AWSdeveloper08"},{"timestamp":"1688213820.0","upvote_count":"1","comment_id":"939910","content":"Selected Answer: A\nA and B are the accurate.","poster":"Yasser001"},{"timestamp":"1687886040.0","poster":"rcaliandro","upvote_count":"1","comment_id":"935633","content":"Selected Answer: AB\nI would opt for A and B."},{"comment_id":"928000","upvote_count":"1","poster":"SindhujaGanji","timestamp":"1687214700.0","content":"B and D, As option A consists of Elasticache cluster. It should be Elasticache Redis cluster enabled/disabled or Memcached."},{"comment_id":"908852","upvote_count":"2","timestamp":"1685305080.0","content":"Selected Answer: B\nB and D, B. Create a DynamoDB Accelerator (DAX) cluster: DynamoDB Accelerator (DAX) is an in-memory cache for DynamoDB that can significantly improve the performance of read-intensive workloads. By creating a DAX cluster and configuring the application to use it, the frequently accessed data can be cached in memory, reducing the need to fetch it from the DynamoDB table directly. This can result in reduced latency and improved read performance.\n\nD. Increase the read capacity of the DynamoDB table: Scaling up the read capacity of the DynamoDB table can improve performance by allowing more read requests to be processed simultaneously. By increasing the provisioned read capacity units, the table can handle a higher number of concurrent read requests and serve the data more quickly. This approach is effective when the workload involves a large number of concurrent read requests.","poster":"ezredame"},{"content":"Selected Answer: B\nA and B","poster":"MrTee","upvote_count":"1","comment_id":"877862","timestamp":"1682223900.0"},{"comment_id":"876919","timestamp":"1682120160.0","upvote_count":"1","poster":"diegomart","comments":[{"content":"B & D btw","comment_id":"876920","timestamp":"1682120220.0","upvote_count":"1","poster":"diegomart"}],"content":"Selected Answer: B\nis my idea or dynamodb isn't works with elasticache ?"},{"comment_id":"867792","poster":"srikanth923","upvote_count":"1","content":"Selected Answer: B\nANSWER IS A AND B. IT CANNOT BE D\nIncreasing the read capacity is more suitable for situations where the entire table is experiencing high read demand, rather than focusing on a small set of frequently accessed data.","timestamp":"1681262760.0"},{"timestamp":"1681225320.0","content":"Selected Answer: B\nB and D","comment_id":"867430","upvote_count":"1","poster":"Syre"},{"timestamp":"1680898800.0","upvote_count":"1","poster":"piavik","comment_id":"864211","content":"Selected Answer: B\nThe main problem is in \"choose two\"\nFirst is B, but which one is second - A or D ?\nC and E are definitely incorrect"},{"timestamp":"1679259840.0","upvote_count":"1","poster":"iamunstopable","comment_id":"844250","content":"A&B for sure"},{"content":"A and B","poster":"sweetheatmn","upvote_count":"1","timestamp":"1677008460.0","comment_id":"817081"},{"comment_id":"804766","content":"Selected Answer: A\nA and B","timestamp":"1676061060.0","poster":"Krt5894","upvote_count":"1"},{"upvote_count":"1","comment_id":"750543","timestamp":"1671515520.0","content":"Selected Answer: A\nAnswer A & B","poster":"mithunkundu1983"},{"upvote_count":"1","poster":"dark_cherrymon","comment_id":"720122","timestamp":"1668648960.0","content":"Selected Answer: A\nAB because the others don't make sense. E is by default so that does nothing. C and D don't seem relevant"},{"content":"The term is \"on-demand\" capacity, and not \"adaptive\" capacity... Hmm...","upvote_count":"1","poster":"promartyr","timestamp":"1667955900.0","comment_id":"714185"},{"timestamp":"1666893480.0","upvote_count":"1","comment_id":"705804","content":"Selected Answer: A\nC is the only wrong one.","poster":"iis"},{"content":"A&B. \n\nStrongly consistent is only useful for race conditions - if not mission critical then eventual consitent will do\nAlthough increasing Read Capacity units (RCUs) is fastest way to increase performance, but it’s more for large amount of resultset than for quicker retrieval.\nAdaptive capacity? Unless you meant autoscaling. DynamoDB have provisioned RCU/WCU auto-scaling (same as previous issue on read capacity)","comment_id":"682685","poster":"habros","upvote_count":"1","timestamp":"1664455020.0"},{"timestamp":"1663854900.0","content":"Selected Answer: B\nA is a cache, B is an in memory acceleration (cache), there seems little point using both at the same time. Either would be an improvement. But B is the one to choose.\nC - Strongly consistent reads will halve the read capacity, so this is stupid.\nD - Increase the read capacity makes some sense, but if we are using DAX is it needed ?\nE - Adaptive capacity is on by default, so unless it had been disabled then it can't be enabled.\n\nA&B or B&D, probably A&B","upvote_count":"4","comment_id":"676221","poster":"GenePoole","comments":[{"upvote_count":"1","timestamp":"1667956020.0","comment_id":"714188","poster":"promartyr","content":"The question is not asking for \"a combination of things to do\". I think it wants us to choose two things we can do, but not necessarily at the same time. So, B and D make sense to me..."}]},{"poster":"vrushanya","upvote_count":"1","content":"B and C","timestamp":"1663140180.0","comment_id":"668706"},{"poster":"PVR","upvote_count":"4","content":"A and B","comment_id":"660018","timestamp":"1662372000.0"},{"upvote_count":"3","comments":[{"content":"that's not correct, Adaptive Capacity is enabled by default so you don't need and CAN\"T enable or disable it\nhttps://aws.amazon.com/it/blogs/database/how-amazon-dynamodb-adaptive-capacity-accommodates-uneven-data-access-patterns-or-why-what-you-know-about-dynamodb-might-be-outdated/#:~:text=Adaptive%20capacity%20is%20available%20by,any%20new%20Amazon%20CloudWatch%20metrics.","comment_id":"665173","poster":"LaXuanLinh","upvote_count":"7","timestamp":"1662792780.0"}],"timestamp":"1662174420.0","comment_id":"658013","content":"Selected Answer: B\nB and E \nreference for E: https://aws.amazon.com/about-aws/whats-new/2019/05/amazon-dynamodb-adaptive-capacity-is-now-instant/\n\nKeyword imbalanced workload","poster":"sindra"},{"timestamp":"1662165540.0","comment_id":"657931","content":"B and E","poster":"szhang2004","upvote_count":"1"},{"content":"Selected Answer: B\nB an E","comment_id":"655473","timestamp":"1661978160.0","comments":[{"timestamp":"1662102660.0","content":"E. Adaptive capacity is available by default for every DynamoDB table, so you don't need to explicitly enable or disable it\nhttps://aws.amazon.com/it/blogs/database/how-amazon-dynamodb-adaptive-capacity-accommodates-uneven-data-access-patterns-or-why-what-you-know-about-dynamodb-might-be-outdated/#:~:text=Adaptive%20capacity%20is%20available%20by,any%20new%20Amazon%20CloudWatch%20metrics.","upvote_count":"3","comment_id":"657092","poster":"[Removed]"}],"poster":"Danbraga","upvote_count":"3"}],"answer":"B","answer_ET":"B","isMC":true,"answers_community":["B (77%)","A (19%)","2%"]}],"exam":{"isBeta":false,"id":25,"isMCOnly":true,"isImplemented":true,"name":"AWS Certified Developer Associate","provider":"Amazon","lastUpdated":"11 Apr 2025","numberOfQuestions":443},"currentPage":27},"__N_SSP":true}