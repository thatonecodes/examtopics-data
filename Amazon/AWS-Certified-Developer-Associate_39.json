{"pageProps":{"questions":[{"id":"vKTmeuJv8ZOvLxojkowX","exam_id":25,"answer_description":"","answer_ET":"D","url":"https://www.examtopics.com/discussions/amazon/view/88814-exam-aws-certified-developer-associate-topic-1-question-270/","choices":{"B":"Use an AWS Systems Manager Parameter Store resource with the SecureString data type to generate and rotate the password.","C":"Use a cron daemon on the applicationâ€™s host to generate and relate the password.","A":"Use an AWS Lambda function as a CloudFormation custom resource to generate and rotate the password.","D":"Use an AWS Secrets Manager resource to generate and rotate the password."},"question_id":191,"isMC":true,"question_text":"A company is using AWS CloudFormation to deploy a two-tier application. The application will use Amazon RDS as its backend database. The company wants a solution that will randomly generate the database password during deployment. The solution also must automatically rotate the database password without requiring changes to the application.\n\nWhat is the MOST operationally efficient solution that meets these requirements?","timestamp":"2022-11-26 06:19:00","answer":"D","topic":"1","answer_images":[],"answers_community":["D (100%)"],"unix_timestamp":1669439940,"discussion":[{"comment_id":"938498","timestamp":"1688066760.0","poster":"rcaliandro","content":"Selected Answer: D\nD is correct: \"Use an AWS Secrets Manager resource to generate and rotate the password.\"","upvote_count":"1"},{"comment_id":"811199","content":"Selected Answer: D\nWhenever you see \"rotation\" of keys is needed --> Secrets Manager","timestamp":"1676590200.0","upvote_count":"3","poster":"pancman"},{"timestamp":"1670119440.0","poster":"DrCloud","comment_id":"734794","upvote_count":"1","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/cfn-example_RDSsecret.html"},{"poster":"Rag_Lk","upvote_count":"1","comment_id":"731447","content":"Selected Answer: D\nD is good","timestamp":"1669810980.0"},{"timestamp":"1669448160.0","poster":"michaldavid","upvote_count":"2","comment_id":"727372","content":"Selected Answer: D\nEasy D"},{"poster":"k1kavi1","upvote_count":"2","timestamp":"1669439940.0","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/secretsmanager/latest/userguide/cloudformation.html","comment_id":"727274"}],"question_images":[]},{"id":"pGSmiNCl9pcYnD4ogdr6","answer_description":"","isMC":true,"choices":{"C":"Use an API Gateway REST API to invoke the Lambda functions. Configure the JSON Web Token (JWT) issuer to link to the on-premises IdP over the public internet.","B":"Use an API Gateway HTTP API to invoke the Lambda functions. Create an Amazon Cognito identity pool. Create a federation between the identity pool and the on-premises IdP. Set the identity pool as the JSON Web Token (JWT) issuer.","A":"Use an API Gateway HTTP API to invoke the Lambda functions. Set the JSON Web Token (JWT) issuer as the public OIDC endpoint of the on-premises IdP.","D":"Use an API Gateway REST API to invoke the Lambda functions. Create an Amazon Cognito identity pool. Create a federation between the identity pool and the on-premises IdP. Set Amazon Cognito as the authorizer."},"question_text":"A company is building a serverless microservice for an existing application that uses AWS Lambda functions and Amazon API Gateway. The microservice needs to automate an on-premises identity provider (IdP) that supports the OpenID Connect (OIDC) standard.\n\nWhat should the company do to implement the API authorization mechanism with the LEAST operational overhead?","timestamp":"2022-11-26 06:25:00","answer":"D","discussion":[{"content":"Selected Answer: B\nB, This approach minimizes operational overhead compered to D","comment_id":"1251185","poster":"9cb0c69","timestamp":"1721391720.0","upvote_count":"1"},{"upvote_count":"1","poster":"kyoharo","timestamp":"1699560300.0","content":"Selected Answer: B\nI'll go with B","comment_id":"1066690"},{"upvote_count":"2","poster":"rcaliandro","timestamp":"1688112240.0","content":"Selected Answer: B\nI will go with B. Why not HTTP API?","comment_id":"938909"},{"content":"Selected Answer: B\nThe answer is B, HTTP API is supported, not REST\nhttps://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-jwt-authorizer.html","comment_id":"819249","timestamp":"1677159180.0","poster":"ezeik","upvote_count":"4"},{"content":"Selected Answer: D\nD: https://docs.aws.amazon.com/cognito/latest/developerguide/open-id.html","poster":"ccna_imperathor","upvote_count":"4","comment_id":"788616","timestamp":"1674729240.0"},{"comment_id":"780177","content":"The answer should be A.\nOnly HTTP api support OpenID Connect. Also, API gateway does not integrated with Cognito Identity pool (in fact it is user pool)","upvote_count":"4","timestamp":"1674057480.0","poster":"KT_Yu"},{"content":"Selected Answer: D\nAgreed","comment_id":"727374","poster":"michaldavid","upvote_count":"3","timestamp":"1669448280.0"},{"poster":"k1kavi1","content":"Selected Answer: D\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html","upvote_count":"3","timestamp":"1669440300.0","comment_id":"727278"}],"answers_community":["D (56%)","B (44%)"],"topic":"1","answer_images":[],"question_id":192,"url":"https://www.examtopics.com/discussions/amazon/view/88816-exam-aws-certified-developer-associate-topic-1-question-271/","question_images":[],"unix_timestamp":1669440300,"exam_id":25,"answer_ET":"D"},{"id":"LRZ77kJtyiXQAOSDxuBU","unix_timestamp":1669872900,"exam_id":25,"timestamp":"2022-12-01 06:35:00","answer_images":[],"isMC":true,"question_text":"A website allows users to upload photos to Amazon S3. An S3 event invokes an AWS Lambda function that uses the Amazon Rekognition DetectLabels operation to detect real-world objects within a photo. The website needs to store this data in a search index to allow users to quickly locate all photos associated with a label.\n\nWhich solution will meet these requirements?","choices":{"A":"Store username and label values as S3 object tags. Retrieve and index the objects based on the tag by calling the describe-tags API with the username and label value.","D":"Insert an item for each S3 key, label, and user combination into an Amazon DynamoDB global secondary index. Define the username as the partition key. Define the label as the sort key. Call the QueryItem API on the index to find all the objects that share the username and label value.","B":"Store username and label values as S3 object metadata keys. Include the \"x-amz-meta-\" prefix for each key. Search by metadata to find all the objects that share the username and label value.","C":"Insert an item for each S3 key, label, and user combination into an Amazon DynamoDB table. Create a global secondary index with the username as the partition key and the label as the sort key. Call the QueryItem API on the index to find all the objects that share the username and label value"},"discussion":[{"timestamp":"1673281080.0","content":"Selected Answer: B\nOnly B makes sense because QueryItem API does not exist, it is just a distractor.\n\nWhen uploading an object, you can also assign metadata to the object. You provide this optional information as a name-value (key-value) pair when you send a PUT or POST request to create the object. When you upload objects using the REST API, the optional user-defined metadata names must begin with \"x-amz-meta-\" to distinguish them from other HTTP headers. \n\nhttps://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingMetadata.html","poster":"KT_Yu","comment_id":"770636","comments":[{"comment_id":"770641","content":"https://aws.amazon.com/blogs/architecture/swiftly-search-metadata-with-an-amazon-s3-serverless-architecture/","timestamp":"1673281260.0","upvote_count":"1","poster":"KT_Yu"}],"upvote_count":"6"},{"timestamp":"1710855960.0","comment_id":"1177370","upvote_count":"1","poster":"a15ce96","content":"Selected Answer: C\nC meets the requirements for the fast search. Even knowing there is no QueryItem API. I don't like B because looks like there's no way to search by metadata. Even if it was possible, it wouldn't be an optimal solution in terms of performance. DynamoDB is a winner here."},{"upvote_count":"1","comment_id":"1066694","poster":"kyoharo","timestamp":"1699560480.0","content":"Selected Answer: C\nc. insert an item for each s3 key, label, and user combination into an Amazon DynamoDB table. create a global secondary index with the username as the partition key and the label as the sort key. call the queryItem API on the index to find all the objects that share the username and label value."},{"poster":"rcaliandro","content":"Selected Answer: C\nI will go with C","timestamp":"1688112420.0","upvote_count":"2","comment_id":"938911"},{"content":"Selected Answer: C\neven knowing there is no QueryItem API","upvote_count":"1","poster":"captainpike","comment_id":"848513","timestamp":"1679593080.0"},{"content":"Selected Answer: C\nI think C is the best option. Can someone here explain how to search in S3 by metadata? :), you have to load the metadata to DynamoDB if you want to comply with the requirement ...\"The website needs to store this data in a search index to allow users to quickly locate\"...","timestamp":"1678735620.0","upvote_count":"1","comment_id":"838222","poster":"rlnd2000"},{"poster":"Ankit1010","upvote_count":"1","timestamp":"1676916900.0","comments":[{"comment_id":"815645","poster":"Ankit1010","timestamp":"1676916960.0","upvote_count":"1","content":"Option C meets the requirements by creating a DynamoDB table with the necessary attributes and a global secondary index with the username as the partition key and the label as the sort key. This will allow the website to easily and quickly locate all photos associated with a label for a given user by calling the QueryItem API on the index. This solution is scalable and can handle large amounts of data efficiently.\n\nOption D is similar to option C, but it defines the DynamoDB global secondary index on the label as the sort key, which will not meet the requirement of locating all photos associated with a particular label for a given user."}],"content":"Answer is C","comment_id":"815641"},{"content":"Selected Answer: C\nThe answer is C. I see that a lot of people get confused by B. However, you can't search for objects in S3 by metadata as S3 doesn't offer such a feature. You would need to build a serverless architecture for that: develop a Lambda function, or use a service like Athena. Therefore, B is wrong.\n\nFor reference: https://aws.amazon.com/blogs/architecture/swiftly-search-metadata-with-an-amazon-s3-serverless-architecture/","comment_id":"808010","timestamp":"1676342760.0","poster":"pancman","upvote_count":"3"},{"poster":"Rrow","timestamp":"1675030620.0","comment_id":"792119","upvote_count":"1","content":"Here is the official documentation for the Query operation in Amazon DynamoDB, which is also known as the QueryItem API:\nhttps://docs.aws.amazon.com/en_us/amazondynamodb/latest/APIReference/API_Query.htmlaccording to chatGPC"},{"comment_id":"783063","poster":"Phinx","timestamp":"1674283260.0","content":"Selected Answer: B\nI think it's B. QueryItem API does not exist.","upvote_count":"3"},{"content":"How can it be C if the QueryItem API does not exist.","timestamp":"1671067740.0","poster":"BelloMio","upvote_count":"2","comment_id":"745599"},{"content":"B.\nTechnically C seems correct, but if you search for QueryItem API for DynamoDB, you find nothing, only Query API, is found, so eventually going for B , by the process of elimination for C and D. Please correct me if you find something on QueryItem API documentation? \nhttps://awscli.amazonaws.com/v2/documentation/api/latest/reference/dynamodb/query.html","timestamp":"1670034060.0","comment_id":"734164","upvote_count":"2","comments":[{"upvote_count":"1","comment_id":"760400","content":"it is not possible to search S3 objects by their metadata. So, option B is not correct.","timestamp":"1672267620.0","poster":"fe2"},{"content":"\"\"\" With Amazon S3â€™s native search capabilities, users are limited only to searching the name of the object. Most people however, want to search by many things in addition to the name of the object. Specifically, they would like to be able to search against metadata they store with the object. Currently, this is not possible without some kind of outside system or custom code. In addition to search, many cloud customers are interested in the ability to use multiple storage providers.\"\"\" \n\nhttps://storageswiss.com/2017/07/18/search-an-amazon-s3-bucket-scality/","poster":"fe2","upvote_count":"2","comment_id":"760401","timestamp":"1672267680.0"}],"poster":"ubuntu1234"},{"poster":"k1kavi1","comment_id":"732285","upvote_count":"3","content":"Selected Answer: C\nAgreed","timestamp":"1669872900.0","comments":[{"poster":"hamimelon","comment_id":"735621","upvote_count":"2","content":"What's the diff between C and D?","timestamp":"1670209140.0","comments":[{"poster":"by116549","content":"With C it is creating the secondary global index with \"username\" as the partition key and the \"label\" as the the sort key.\n\nIn D it states \"D. Insert an item for each S3 key, label, and user combination into an Amazon DynamoDB global secondary index.\" I think you need to create the table first and then the GSI..... Please correct me if I am wrong.","comment_id":"764254","upvote_count":"3","timestamp":"1672726260.0"}]}]}],"url":"https://www.examtopics.com/discussions/amazon/view/89508-exam-aws-certified-developer-associate-topic-1-question-272/","topic":"1","answer_description":"","question_images":[],"answers_community":["C (57%)","B (43%)"],"answer":"C","answer_ET":"C","question_id":193},{"id":"FiwV9MlF8ihhRYczEEdJ","unix_timestamp":1669440600,"answer":"BD","choices":{"E":"Increase the provisioned write capacity of the DynamoDB tables that the operation accesses.","B":"Retry the batch operation with exponential backoff and randomized delay.","D":"Increase the provisioned read capacity of the DynamoDB tables that the operation accesses.","A":"Retry the batch operation immediately.","C":"Update the application to use an AWS software development kit (AWS SDK) to make the requests."},"question_id":194,"timestamp":"2022-11-26 06:30:00","answer_description":"","isMC":true,"discussion":[{"content":"Selected Answer: CD\nThe question says \"frequenty\". That means it is not something that you can solve by trying exponential backoff.\nOf course, if you use AWS SDK that would make your app mroe resilient. Since by default AWS SDK is using exponential backoff.\nBut, for addressing the main issue, you should increase the provisioned read capacity. (because you are getting this error frequently)\nI would say CD is correct.","poster":"fe2","upvote_count":"7","timestamp":"1672268640.0","comment_id":"760410"},{"comment_id":"745666","timestamp":"1671074460.0","upvote_count":"6","content":"Selected Answer: BC\nChoosing BC as they're more related to application resiliency. ProvisionedThroughputExceededException is just one of the possible reasons. Docs state that error will happen if the response size limit is exceeded, the table's provisioned throughput is exceeded, or an internal processing failure occurs. So in General, B & C will help for sure.","poster":"xicomynor"},{"timestamp":"1710856200.0","comments":[{"content":"On the other hand question says: \"to increase the resiliency of the application when the batch response includes values in UnprocessedKeys\". It mentions the app only. Like \"how to when *it already happened*\". Now, B and C make sense","comment_id":"1177374","timestamp":"1710856320.0","poster":"a15ce96","upvote_count":"1"}],"poster":"a15ce96","comment_id":"1177373","upvote_count":"1","content":"\"BatchGetItem returns a partial result if the response size limit is exceeded, the table's provisioned throughput is exceeded, more than 1MB\" (https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html). So D makes sense. Confused between B and C since they kinda the same. SDK should have functionality mentioned in B."},{"comment_id":"1163919","poster":"Teemo2023","timestamp":"1709353800.0","upvote_count":"1","content":"Selected Answer: BC\nagreed with xicomynor"},{"comment_id":"1156783","content":"Selected Answer: BC\nitâ€™s important to note that while increasing provisioned read capacity can reduce the frequency of UnprocessedKeys, it is not a complete solution by itself for handling them when they do occur.","upvote_count":"1","timestamp":"1708642740.0","poster":"CrescentShared"},{"timestamp":"1690124040.0","poster":"rushi0611","comment_id":"960543","upvote_count":"1","content":"Selected Answer: CD\nFrequently gonna make the issue, so will you keep on doing this retry in batches every now and then? \nNo right, so SDK will take care of the retry and just increase the read capacity."},{"upvote_count":"2","content":"The correct answers are B and C.\n\nWhen a BatchGetItem operation returns unprocessed keys, retrying the operation with exponential backoff and randomized delay would help increase the resiliency of the application by reducing the likelihood of overloading the DynamoDB service.\n\nUsing an AWS SDK to make requests to DynamoDB can also help increase the resiliency of the application because it provides built-in retry logic that can handle errors such as unprocessed keys.\n\nRetrying the batch operation immediately (option A) would not give the DynamoDB service enough time to recover, and it would likely lead to further errors and failures.\n\nIncreasing the provisioned read or write capacity of the DynamoDB tables (options D and E) may not be necessary if the application is only experiencing intermittent unprocessed keys errors. Increasing provisioned capacity can help improve performance, but it may not solve the underlying issue of unprocessed keys.","comment_id":"862402","poster":"CyberBaby803","timestamp":"1680721140.0"},{"timestamp":"1679594040.0","content":"Selected Answer: CD\nI think they want us to say SDK","comment_id":"848522","upvote_count":"1","poster":"captainpike"},{"comments":[{"content":"Options C, D, and E are not relevant to the issue of handling UnprocessedKeys in batch responses. Using an AWS SDK (option C) may provide additional features and benefits, but it will not address the problem of UnprocessedKeys. Increasing the provisioned read or write capacity of DynamoDB tables (options D and E) will not prevent UnprocessedKeys from being returned, nor will it help the application recover from errors when they occur.","upvote_count":"1","comment_id":"815648","poster":"Ankit1010","timestamp":"1676917020.0"}],"upvote_count":"1","comment_id":"815647","poster":"Ankit1010","content":"Answer should be AB\n\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html#Programming.Errors.BatchOperations\nCheck the last paragraph.\n\nOption A - Retry the batch operation immediately is a simple solution that can help the application recover quickly from errors. When UnprocessedKeys are returned, the application can immediately retry the batch operation, which can help reduce the number of failed requests.\n\nOption B - Retry the batch operation with exponential backoff and randomized delay is a more robust solution that can help the application handle high levels of traffic and prevent it from overloading the DynamoDB service. This approach involves retrying the batch operation with an increasingly longer delay between each attempt, using exponential backoff, and adding a randomized delay to prevent multiple instances of the application from retrying the request simultaneously.","timestamp":"1676917020.0"},{"comment_id":"791668","content":"Selected Answer: CD\nThe Exponential backoff in integrated in the SDK, so C is correct.\nTo increase the parallel reading increase RCU, so D is correct","timestamp":"1674999180.0","poster":"michele_scar","upvote_count":"1"},{"timestamp":"1673988180.0","content":"Selected Answer: BD\nFor B: \"If DynamoDB returns any unprocessed items, you should retry the batch operation on those items. However, we strongly recommend that you use an exponential backoff algorithm. If you retry the batch operation immediately, the underlying read or write requests can still fail due to throttling on the individual tables\"\nFor D: \"The most likely cause of a failed read or a failed write is throttling. For BatchGetItem, one or more of the tables in the batch request does not have enough provisioned read capacity to support the operation.\" \nExtracted from Error Handling Documentation: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html#BatchOperations","comment_id":"779320","upvote_count":"4","poster":"Mom305"},{"comment_id":"770648","content":"Selected Answer: BD\nB and D:\n\nFor B:\nhttps://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html\nFor D: \nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Programming.Errors.html#BatchOperations","upvote_count":"4","timestamp":"1673281860.0","poster":"KT_Yu"},{"poster":"braveheart22","comment_id":"765163","upvote_count":"1","content":"This question is a tricky one for sure, looking at the question again and deeply, I'm inclined towards B & C as the best answers.","timestamp":"1672798140.0"},{"poster":"braveheart22","content":"fe2 I like your explanation and I agree with you that C & D are the best options. Yes, B is correct as well but since by default AWS SDK automatically retries the batch operation with exponential backoff and randomized delay, so I think there would be no need to pick B.","timestamp":"1672797600.0","upvote_count":"1","comment_id":"765162"},{"poster":"fabriciollf","comment_id":"752892","timestamp":"1671668160.0","upvote_count":"3","content":"Selected Answer: BC\nB,C \nhttps://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html\nProvisionedThroughputExceededException\nYour request rate is too high. The AWS SDKs for DynamoDB automatically retry requests that receive this exception. Your request is eventually successful, unless your retry queue is too large to finish."},{"content":"BC.\nall three B, C & D options seems to be correct , as they address the problem, but question is asking to increase the \"application resiliency \" , so B & C affect the application resiliency more, whereas D do not increase the application resiliency directly( its kind of more related to DynamoDB and less related to application).","upvote_count":"5","comment_id":"737932","timestamp":"1670421300.0","poster":"ubuntu1234"},{"timestamp":"1670031300.0","content":"BD. https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchGetItem.html","comment_id":"734157","upvote_count":"1","poster":"hamimelon"},{"content":"Selected Answer: BD\nI think D is right but not sure about the second answer","comment_id":"727465","poster":"michaldavid","timestamp":"1669462380.0","upvote_count":"1"},{"comment_id":"727279","poster":"k1kavi1","timestamp":"1669440600.0","content":"Selected Answer: BD\nChoosing B & D","upvote_count":"3"}],"answer_ET":"BD","answers_community":["BD (36%)","BC (33%)","CD (30%)"],"url":"https://www.examtopics.com/discussions/amazon/view/88817-exam-aws-certified-developer-associate-topic-1-question-273/","exam_id":25,"question_images":[],"answer_images":[],"topic":"1","question_text":"A developer has an application that makes batch requests directly to Amazon DynamoDB by using the BatchGetltem low-level API operation. The responses frequently return values in the UnprocessedKeys element.\n\nWhich actions should the developer take to increase the resiliency of the application when the batch response includes values in UnprocessedKeys? (Choose two.)"},{"id":"MDVqBI4J9918Wasf92bS","answer_description":"","isMC":true,"question_text":"While developing an application that runs on Amazon EC2 in an Amazon VPC, a Developer identifies the need for centralized storage of application-level logs.\n\nWhich AWS service can be used to securely store these logs?","choices":{"D":"AWS CloudTrail","C":"Amazon CloudSearch","A":"Amazon EC2 VPC Flow Logs","B":"Amazon CloudWatch Logs"},"timestamp":"2022-11-26 06:32:00","discussion":[{"timestamp":"1705613940.0","upvote_count":"1","comment_id":"1126223","content":"Selected Answer: B\nGo with B because CloudWatch is secure store centralized log system, while VPC flow log capture network activity, IP address, port etc.","poster":"AsmaZoheb"},{"poster":"rcaliandro","content":"Selected Answer: A\nI will go with A","timestamp":"1688112840.0","comment_id":"938918","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: B\nI'm going with CW","timestamp":"1669462440.0","poster":"michaldavid","comment_id":"727467"},{"comment_id":"727280","upvote_count":"3","poster":"k1kavi1","content":"Selected Answer: B\nhttps://www.examtopics.com/discussions/amazon/view/10501-exam-aws-certified-developer-associate-topic-1-question-114/","timestamp":"1669440720.0"}],"answer":"B","answers_community":["B (86%)","14%"],"topic":"1","answer_images":[],"question_id":195,"url":"https://www.examtopics.com/discussions/amazon/view/88818-exam-aws-certified-developer-associate-topic-1-question-274/","question_images":[],"unix_timestamp":1669440720,"exam_id":25,"answer_ET":"B"}],"exam":{"lastUpdated":"11 Apr 2025","isBeta":false,"isImplemented":true,"numberOfQuestions":443,"id":25,"provider":"Amazon","name":"AWS Certified Developer Associate","isMCOnly":true},"currentPage":39},"__N_SSP":true}