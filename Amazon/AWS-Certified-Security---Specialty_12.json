{"pageProps":{"questions":[{"id":"t0kJUx7t5wJI3Jido014","answers_community":["C (76%)","D (24%)"],"timestamp":"2020-08-29 17:48:00","answer_ET":"C","unix_timestamp":1598716080,"answer_description":"","answer":"C","url":"https://www.examtopics.com/discussions/amazon/view/30024-exam-aws-certified-security-specialty-topic-1-question-149/","exam_id":29,"topic":"1","isMC":true,"question_id":56,"choices":{"C":"The maintainer role does not include the IAM user as a trusted entity.","D":"The security role does not include a statement in its policy to allow an sts:AssumeRole action.","A":"The security role and the maintainer role are not assigned to the IAM user that the Security Engineer used to sign in to the account.","B":"The Security Engineer should have logged in as the AWS account root user, which is allowed to assume any role directly."},"answer_images":[],"discussion":[{"poster":"nainakaexam","upvote_count":"33","comment_id":"386992","content":"C. The maintainer role does not include the IAM user as a trusted entity.\nBecause as per doc https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-console.html\nif you switch to RoleA, IAM uses your original user or federated role credentials to determine whether you are allowed to assume RoleA. If you then switch to RoleB while you are using RoleA, AWS still uses your original user or federated role credentials to authorize the switch, not the credentials for RoleA.\nSo by this logic the maintainer role can only be assumed if the IAM user itself is added as a trusted identity for the role.","comments":[{"upvote_count":"1","comment_id":"998502","timestamp":"1693828080.0","content":"one more point to overthink your decision - \"... which lists the security role as a trusted entity\".\nBut your explanation sounds very good","poster":"addy_prepare"},{"comment_id":"998501","content":"From what reason maintainer role must include trust relationship within the same account's security role?","poster":"addy_prepare","timestamp":"1693827960.0","upvote_count":"1"}],"timestamp":"1636008000.0"},{"comments":[{"upvote_count":"3","poster":"landsamboni","comment_id":"728636","content":"If the sts::assumerole is not present in the security role, then how was the user able to assume that role in the first place?","timestamp":"1669585800.0","comments":[{"timestamp":"1670808660.0","upvote_count":"2","comment_id":"742286","poster":"Mimikabs","content":"Because he will need/have it on his IAM user policy in order to switch to the security role."}]}],"comment_id":"169362","content":"I think D is the answer. You need sts::assumerole in the security role's policies","upvote_count":"27","timestamp":"1632149760.0","poster":"PeppaPig"},{"upvote_count":"1","content":"Selected Answer: D\nI think the answer is D.\nC is not correct because the question already mentioned that \"maintainer role lists security role as a trust entity\".","poster":"Arad","comment_id":"1222158","timestamp":"1717159800.0"},{"comment_id":"1160071","timestamp":"1708980720.0","content":"Selected Answer: C\nOption C is correct.\n\nSecond role must have the original IAM user in trusted policy to be able to switch to it, even from First role.","poster":"Raphaello","upvote_count":"1"},{"timestamp":"1701443280.0","comment_id":"1085301","poster":"anhtu133","content":"Selected Answer: D\nI think the ans is D","upvote_count":"1"},{"upvote_count":"1","comment_id":"1065213","timestamp":"1699398120.0","poster":"RosenYordanov","content":"Selected Answer: C\nThe likely cause of the failure is option C, \"The maintainer role does not include the IAM user as a trusted entity.\"\n\nWhen you assume an IAM role in AWS, the role must explicitly specify the trusted entities (in this case, the trusted IAM user or users) that are allowed to assume the role. This is done through a trust policy attached to the role. If the IAM user trying to assume the maintainer role is not listed in the trust policy of the maintainer role as a trusted entity, the operation will fail.\n\nOptions A and D are not the likely causes of the failure. Option B, which mentions logging in as the AWS account root user, is generally not recommended for day-to-day activities, and using roles with proper permissions is the best practice for access control and security in AWS."},{"content":"Selected Answer: C\nC is the correct answer.\nTrue that without sts:AssumeRole we can't assume the second role but the element that makes C the correct answer is that the question states \"... the maintainer IAM role, which lists the security role as a trusted entity...\" and this is key!\nThis statement makes an incorrect assumption that to assume role B (maintainer) from role A, it's role A's credentials (permissions, trust etc.) that are used and that's incorrect because it's the original user's credentials that are used (check do link in nainakaexam comment : https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-console.html).\nSo if in role B's trust policy we specify role A, it's not going to work, we'll have to specify the IAM user or root. And since nothing was said about the IAM user's permissions we'll asssume he has the right to assume both roles.\nAnd yes, we have to have a trust relationship for roles even if we're assuming them from the same account!","upvote_count":"1","comment_id":"1022359","timestamp":"1696170720.0","poster":"Salah21"},{"poster":"samCarson","upvote_count":"3","timestamp":"1687238880.0","content":"Selected Answer: C\nWhen switching roles in AWS, the target role (maintainer role in this case) must have a trust policy that specifies which entities are allowed to assume the role. This trust policy defines the trusted entities, such as IAM users, roles, or AWS services, that are permitted to assume the role.\n\nIn the given scenario, the Security Engineer has successfully switched to the security role, which indicates that the security role's trust policy includes the IAM user as a trusted entity. However, when attempting to switch to the maintainer role, the operation fails. This suggests that the maintainer role's trust policy does not list the IAM user as a trusted entity, thus preventing the Security Engineer from assuming the maintainer role.","comment_id":"928175"},{"timestamp":"1684972740.0","comment_id":"906207","upvote_count":"1","poster":"Tofu13","content":"Selected Answer: C\nRead explanation provided by nainakaexam"},{"content":"Selected Answer: C\nIt's C, because when you switch role (also if you are assuming other role), the permissions are evaluated starting from IAM User that is logged in. So, the problem is splitted in:\n1- Maintainer role doens't has a Trust policy with IAM User as Principal\n2- IAM User doesn't has the sts:AssumeRole with Maintainer role as Resource\n\nIn the Answer list is present the (1) problem.","timestamp":"1684844160.0","comment_id":"904876","poster":"michele_scar","upvote_count":"1"},{"content":"Selected Answer: D\nhttps://aws.plainenglish.io/aws-iam-role-chaining-df41b1101068","poster":"matrpro","comment_id":"901243","timestamp":"1684416420.0","upvote_count":"2"},{"timestamp":"1681906740.0","upvote_count":"1","content":"When you switch roles your original permissions determine what can be assumed, Therefore it is obvious that user was not specified as a trusted entity. C","poster":"ITGURU51","comment_id":"874618"},{"comment_id":"870253","content":"D\nWhen a user switches roles in AWS, they need to have permission to assume the role they are switching to. This permission is granted by including a statement in the policy of the role being assumed (in this case, the security role) that allows the sts:AssumeRole action for the maintainer role.\n\nTherefore, if the Security Engineer is unable to switch to the maintainer role, it is likely that the security role's policy does not include such a statement, and therefore the Security Engineer cannot assume the maintainer role.","poster":"Nikhil0222","timestamp":"1681482840.0","upvote_count":"1"},{"upvote_count":"1","timestamp":"1677112020.0","content":"Selected Answer: C\nC. The maintainer role does not include the IAM user as a trusted entity. \n\nAgreed with @Sowmyarajaram","comment_id":"818574","poster":"huyrk102"},{"content":"I am not sure why role chaining is brought in here as no where in the question its mentioned the role is switched via AWS console. It just says role is switch. just taking AWS docs page as reference, Lets assume we have two Accounts A and B. Account A has a role B which can be assumed to access the services in Account B. We need to attach a policy in Role A of account A with sts:AssumeRole mentioning the Principal Arn of Role B in Account B. This means Role A can assume the mentioned Role in account B. Similarly the Account B should also should have a trust relationship built with Role A from account A. Hence I go in for Option D","comment_id":"684245","timestamp":"1664632140.0","comments":[{"content":"https://aws.plainenglish.io/aws-iam-role-chaining-df41b1101068","timestamp":"1664632200.0","upvote_count":"1","comment_id":"684247","poster":"VijiTu"}],"upvote_count":"1","poster":"VijiTu"},{"poster":"sapien45","content":"Selected Answer: C\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-console.html","upvote_count":"2","comment_id":"651343","timestamp":"1661354940.0"},{"upvote_count":"7","timestamp":"1650718800.0","poster":"Sowmyarajaram","content":"It is C. We are using console, so the only authorization that is checked is the actual IAM user’s authorization. \n“When you switch roles in the AWS Management Console, the console always uses your original credentials to authorize the switch. This applies whether you sign in as an IAM user, as a SAML-federated role, or as a web-identity federated role. For example, if you switch to RoleA, IAM uses your original user or federated role credentials to determine whether you are allowed to assume RoleA. If you then switch to RoleB while you are using RoleA, AWS still uses your original user or federated role credentials to authorize the switch, not the credentials for RoleA.” https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-console.html \nSo it doesnt matter whether security role has sts assumerole or not. IAM user must have the authorization to assume this role.","comment_id":"590639","comments":[{"comment_id":"818572","upvote_count":"1","timestamp":"1677111960.0","content":"Thank you for clear explain","poster":"huyrk102"}]},{"poster":"f4bi4n","upvote_count":"2","comment_id":"585065","timestamp":"1649833560.0","content":"Selected Answer: C\nits C because he is using the AWS Management Console. So every assume role will be executed by his user and not the previous role."},{"timestamp":"1642796880.0","poster":"YouYouYou","content":"Short Answer D\n\n\nA. The security role and the maintainer role are not assigned to the IAM user that the Security Engineer used to sign in to the account.\n----no such technical thing----\n\nB. The Security Engineer should have logged in as the AWS account root user, which is allowed to assume any role directly.\n-----not necessarily IAM roles can assume roles as well with correct permissions----\n\nC. The maintainer role does not include the IAM user as a trusted entity.\n-------could have been right if it says the role does not include the IAM security role as a trusted entity but it didn't so 100% wrong------\n\nD. The security role does not include a statement in its policy to allow an sts:AssumeRole action.\n-----the only viable solution is that the security role doesn't have the assume role policy attached to him----","comment_id":"529361","upvote_count":"3"},{"timestamp":"1636246320.0","content":"this is kind of a tricky question, its obviously either C or D. I think its C. For those who said \"the question already mentions the security role is a trusted entity\" well yes it does, but note the use of the word \"USER\" in C, i.e. IAM user, not role. So it's different. It also says we're talking about aws management console, and some folks have linked something that shows that you can't do role chaining from the console, so I think that's it. D is made to look like an obvious answer but I think its not","poster":"skipbaylessfor3","comment_id":"402425","upvote_count":"7"},{"poster":"rhinozD","timestamp":"1635609480.0","content":"The answer is C\n \"The AWS Management Console doesn't support role chaining. You can use the switch role feature in the Console to get a role's temporary credentials. The Console uses the credentials of the IAM or federated user to switch to another role.\"\nhttps://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/\n\"When you switch roles in the AWS Management Console, the console always uses your original credentials to authorize the switch. This applies whether you sign in as an IAM user, as a SAML-federated role, or as a web-identity federated role. For example, if you switch to RoleA, IAM uses your original user or federated role credentials to determine whether you are allowed to assume RoleA. If you then switch to RoleB while you are using RoleA, AWS still uses your original user or federated role credentials to authorize the switch, not the credentials for RoleA.\"\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-console.html","upvote_count":"9","comment_id":"381933"},{"comment_id":"353123","timestamp":"1635302520.0","content":"D. C can´t be as it already says that the maintainer role lists the security role as a trusted entity and the reference in the correct answer indicates that assumerole can be a cause of the failure in the example error message B: https://aws.amazon.com/premiumsupport/knowledge-center/troubleshoot-iam-policy-issues/","poster":"eskimolander","upvote_count":"1"},{"comment_id":"353122","upvote_count":"1","content":"D. C can´t be as it already says that the maintainer role lists the security role as a trusted entity and the reference in the correct answer indicates that assumerole can be a cause of the failure in the example error message B: https://aws.amazon.com/premiumsupport/knowledge-center/troubleshoot-iam-policy-issues/","poster":"eskimolander","timestamp":"1635301020.0"},{"poster":"AwsSuperTrooper","comment_id":"352582","upvote_count":"2","timestamp":"1635139620.0","content":"I think answer D i the right answer.\nRole chaining seems to be limited to API's or CLI calls.\nSee https://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/ \n`You can use role chaining to assume a role with temporary security credentials using the AWS Command Line Interface (AWS CLI).`"},{"upvote_count":"2","comment_id":"352188","content":"100% D","poster":"sanjaym","timestamp":"1634684580.0"},{"poster":"pyro_mann","content":"C is correct, as role chaining isn't allowed with the console: https://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/","upvote_count":"4","timestamp":"1634523960.0","comment_id":"335663"},{"comments":[{"poster":"DerekKey","timestamp":"1635776340.0","upvote_count":"1","content":"This is not the case from this question. We are using a management console.","comment_id":"385320"},{"comment_id":"481536","poster":"NivNZ","upvote_count":"1","timestamp":"1637314980.0","content":"@elmoh - 'Role chaining occurs when you use a role to assume a second role through the AWS CLI or API.' Reference: Check Role chaining concept here https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html\nQuestion uses console so it's not D."}],"content":"D\n\n\nYou can assume one role and then use the temporary credentials to assume another role. You can continue from session to session. This is called role chaining. When you pass session tags while assuming a role, you can set the keys as transitive. This ensures that those session tags\n\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html\nRole chaining\nRole chaining occurs when you use a role to assume a second role through the AWS CLI or API. For example, assume that User1 has permission to assume RoleA and RoleB. Additionally, RoleA has permission to assume RoleB. You can assume RoleA by using User1's long-term user credentials in the AssumeRole API operation. This operation returns RoleA short-term credentials. To engage in role chaining, you can use RoleA's short-term credentials to assume RoleB.\nWhen you assume a role, you can pass a session tag and set the tag as transitive. Transitive session tags are","comment_id":"328801","poster":"[Removed]","timestamp":"1634014380.0","upvote_count":"1"},{"comment_id":"316828","poster":"cldy","timestamp":"1633836780.0","content":"C. It’s the IAM user.","upvote_count":"5"},{"timestamp":"1633536060.0","comment_id":"315946","upvote_count":"2","comments":[{"upvote_count":"1","comment_id":"316547","timestamp":"1633691040.0","comments":[{"timestamp":"1635972000.0","content":"Wrong. You need permission for the original user, not the security role.","poster":"DerekKey","comment_id":"385321","upvote_count":"2"},{"timestamp":"1634633700.0","content":"C is correct, as role chaining isn't allowed with the console: https://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/","upvote_count":"2","comment_id":"335667","poster":"pyro_mann"}],"poster":"ChinkSantana","content":"Should be D. There is trust in the setup already"}],"content":"Or sorru, please ignore my last comment. I meant to say the answer is C \"When you switch roles in the AWS Management Console, the console always uses your original credentials to authorize the switch. This applies whether you sign in as an IAM user, as a SAML-federated role, or as a web-identity federated role. For example, if you switch to RoleA, IAM uses your original user or federated role credentials to determine whether you are allowed to assume RoleA. If you then switch to RoleB while you are using RoleA, AWS still uses your original user or federated role credentials to authorize the switch, not the credentials for RoleA.\"","poster":"[Removed]"},{"poster":"[Removed]","content":"D 100%","upvote_count":"1","comment_id":"315945","timestamp":"1633427400.0"},{"upvote_count":"5","comment_id":"304531","content":"The answer is C. When switching roles, the originating principal that is authenticated against the IAM role's trust policy (in this case the security role) is the original IAM user.","timestamp":"1633266660.0","poster":"DayQuil"},{"upvote_count":"4","timestamp":"1633074720.0","content":"Is it C or D ?\nwhen logged in to the console, one switch role is allowed. If switching role again it uses the initial iam user, not the intermediate role?? If that's the case , shouldn't it be C ?","poster":"Naxi","comment_id":"295340"},{"content":"C - when logged in to the console, one switch role is allowed. If switching role again it uses the initial iam user, not the intermediate role","comment_id":"257903","upvote_count":"7","timestamp":"1632963720.0","poster":"Fgiroult"},{"comments":[{"upvote_count":"4","comment_id":"335665","timestamp":"1634602200.0","poster":"pyro_mann","content":"C is correct, as role chaining isn't allowed with the console: https://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/"}],"timestamp":"1632755760.0","poster":"farziuser","upvote_count":"9","comment_id":"197539","content":"A - Distraction \nB - Distraction \nC - cannot be true b'cos the question tells this already that this trust is setup \nD - Correct, if the security role does not allow sts:AssumeRole then it will be blocked at stage 1 itself."},{"comments":[{"comment_id":"335666","poster":"pyro_mann","timestamp":"1634632680.0","upvote_count":"2","content":"C is correct, as role chaining isn't allowed with the console: https://aws.amazon.com/premiumsupport/knowledge-center/iam-role-chaining-limit/"}],"content":"D Correct!","comment_id":"186891","poster":"deegadaze1","timestamp":"1632153420.0","upvote_count":"2"}],"question_text":"A Security Engineer signed in to the AWS Management Console as an IAM user and switched to the security role IAM role. To perform a maintenance operation, the Security Engineer needs to switch to the maintainer role IAM role, which lists the security role as a trusted entity. The Security Engineer attempts to switch to the maintainer role, but it fails.\nWhat is the likely cause of the failure?","question_images":[]},{"id":"394m26O5NoCnFFb3yo1C","answer_images":[],"unix_timestamp":1566746340,"topic":"1","answer":"A","question_text":"A Security Engineer must design a solution that enables the incident Response team to audit for changes to a user's IAM permissions in the case of a security incident.\nHow can this be accomplished?","discussion":[{"content":"Agreed. Answer is A. However, this will require the admin to first create an AWS config rule to record the IAM use changes. AWS config will not record those changes by default. https://aws.amazon.com/blogs/security/how-to-record-and-govern-your-iam-resource-configurations-using-aws-config/","comment_id":"10293","timestamp":"1632876720.0","comments":[{"poster":"JG8888","timestamp":"1651999620.0","content":"Answer A seems the right one, but Is that comment right? \nIn the link you passed and in the documentation says that Config records all configuration changes by default on IAM. \nSo I don't think it is needed to add a rule to get this data.","upvote_count":"2","comment_id":"598498"}],"poster":"josellama2000","upvote_count":"33"},{"upvote_count":"13","poster":"cloudguy365","content":"A is the right answer.","comment_id":"9900","timestamp":"1632553440.0"},{"content":"Answer is A","comment_id":"1290596","poster":"0x00infosec","upvote_count":"1","timestamp":"1727517300.0"},{"comment_id":"1005406","upvote_count":"1","timestamp":"1694495460.0","content":"A is correct\nUse AWS Config to review the IAM policy assigned to users before and after the incident.","poster":"Benah"},{"timestamp":"1683746820.0","comment_id":"894312","upvote_count":"1","content":"agreed A","poster":"Leem29"},{"comment_id":"884407","poster":"matrpro","upvote_count":"2","timestamp":"1682779920.0","content":"Selected Answer: A\nhere are 2 points that make B wrong: 1 GenerateCredentialReport , is related to passwords and not about roles and policies as requested https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html . 2. They want to check the incident only when there is a problem and in B you are taking action every week."},{"upvote_count":"1","comment_id":"864526","poster":"yd_h","content":"Selected Answer: A\ncouldn't find any field relating to the IAM permission changes in credentials reports (https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html#id_credentials_understanding_the_report_format)","timestamp":"1680940080.0"},{"upvote_count":"1","poster":"AWS_Noob","timestamp":"1675792140.0","content":"Selected Answer: A\nI'm going with A, because of the statement \"in case of a security event\". \n\nWhen using B, you'll end up filling storage with logs and only when something happens, will you need to review. It's not asking for continuous logging but rather a way to audit logs \"When\" something happens. \n\nB works , just not for the scenario they're painting","comment_id":"801213"},{"upvote_count":"1","poster":"IlMettics","timestamp":"1674728520.0","comment_id":"788608","comments":[{"content":"Hello. In my opinion, B is wrong. There are 2 points that make it wrong: 1 GenerateCredentialReport , is related to passwords and not about roles and policies as requested https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html . 2. They want to check the incident only when there is a problem and in B you are taking actions every week.","poster":"matrpro","timestamp":"1682779860.0","comment_id":"884404","upvote_count":"1"}],"content":"Selected Answer: B\nI think that A and B is correct, B is because running the GenerateCredentialReport via the AWS CLI, and copying the output to Amazon S3 daily for auditing purposes, allows the incident response team to view a user's IAM permissions over time. This can help identify changes that were made that could be related to the incident. Additionally, by copying the report to Amazon S3, the incident response team will have a secure and durable storage location for the audit logs and it's important to note that AWS Config and CloudTrail logs can also be used to view changes in IAM policies, but the Credential Report provides a more detailed and user-centric view of IAM permissions, which can be useful in incident investigations."},{"upvote_count":"1","content":"Selected Answer: A\nA is right","timestamp":"1663577100.0","poster":"Mr__","comment_id":"673086"},{"content":"A is correct","comment_id":"551374","upvote_count":"1","poster":"RaySmith","timestamp":"1645309800.0"},{"content":"Selected Answer: A\nA is correct","timestamp":"1642689840.0","upvote_count":"1","poster":"lotfi50","comment_id":"528488"},{"comment_id":"514655","content":"a is right","poster":"jj22222","upvote_count":"1","timestamp":"1641069540.0"},{"poster":"jj22222","comment_id":"511485","content":"A looks right","upvote_count":"1","timestamp":"1640716800.0"},{"comment_id":"353766","upvote_count":"2","timestamp":"1636124400.0","content":"Ans: A 100%","poster":"sanjaym"},{"content":"A is correct - AWS config","timestamp":"1635620040.0","poster":"nasreenazad57","upvote_count":"2","comment_id":"264604"},{"content":"Ans > A","upvote_count":"2","comment_id":"221785","timestamp":"1635488340.0","poster":"devjava"},{"content":"Ans (A)\nAWS Config\nhttps://aws.amazon.com/blogs/security/how-to-record-and-govern-your-iam-resource-configurations-using-aws-config/\n https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html","poster":"AfricanCloudGuru","upvote_count":"1","timestamp":"1635312960.0","comment_id":"207391"},{"content":"A is correct","timestamp":"1635275460.0","upvote_count":"2","poster":"enthuguys","comment_id":"154562"},{"content":"I had this question on my exam today. Correct answer is A","timestamp":"1634833320.0","upvote_count":"4","poster":"hozefa","comment_id":"97060"},{"content":"Yes, it's \"A\" - AWS Config","upvote_count":"2","poster":"tomtom2020","comment_id":"70740","timestamp":"1634207100.0"},{"comment_id":"68098","timestamp":"1634165280.0","poster":"RaySmith","upvote_count":"2","content":"A is correct"},{"poster":"ryanle","upvote_count":"3","comment_id":"63140","timestamp":"1633722120.0","content":"A: using AWS config for compliance"},{"timestamp":"1633347960.0","content":"AWS Cinfig is correct.","upvote_count":"2","comments":[{"content":"A is correct","poster":"pgcloud","comment_id":"39356","upvote_count":"1","timestamp":"1633587540.0"}],"comment_id":"14931","poster":"Smartphone"},{"upvote_count":"3","comment_id":"12989","content":"I'm having second thought for Cloudtrail and systems manager in the option doesn't make sense. so May be A is correct","poster":"exams","timestamp":"1632978180.0"},{"comment_id":"10793","content":"A is correct.","upvote_count":"3","timestamp":"1632883680.0","poster":"INASR"},{"timestamp":"1632696060.0","upvote_count":"2","content":"A is correct","poster":"ugreenhost","comment_id":"10181"},{"poster":"BillyC","timestamp":"1632232440.0","comment_id":"8208","upvote_count":"8","content":"AWS Config"}],"url":"https://www.examtopics.com/discussions/amazon/view/4040-exam-aws-certified-security-specialty-topic-1-question-15/","choices":{"D":"Use Amazon EC2 Systems Manager to deploy images, and review AWS CloudTrail logs for changes.","A":"Use AWS Config to review the IAM policy assigned to users before and after the incident.","C":"Copy AWS CloudFormation templates to S3, and audit for changes from the template.","B":"Run the GenerateCredentialReport via the AWS CLI, and copy the output to Amazon S3 daily for auditing purposes."},"question_id":57,"question_images":[],"isMC":true,"exam_id":29,"answer_ET":"A","answers_community":["A (86%)","14%"],"timestamp":"2019-08-25 17:19:00","answer_description":""},{"id":"pvaqPVCIrfJ5nYkPv1kW","answer_images":[],"question_text":"A company is configuring three Amazon EC2 instances with each instance in a separate Availability Zone. The EC2 instances will be used as transparent proxies for outbound internet traffic for ports 80 and 443 so the proxies can block traffic to certain internet destinations as required by the company's security policies. A\nSecurity Engineer completed the following:\nSet up the proxy software on the EC2 instances.\n//IMG//\n\n✑ Modified the route tables on the private subnets to use the proxy EC2 instances as the default route.\n✑ Created a security group rule opening inbound port 80 and 443 TCP protocols on the proxy EC2 instance security group.\nHowever, the proxy EC2 instances are not successfully forwarding traffic to the internet.\nWhat should the Security Engineer do to make the proxy EC2 instances route traffic to the internet?","timestamp":"2021-03-14 12:38:00","question_images":["https://www.examtopics.com/assets/media/exam-media/04239/0009600001.png"],"answers_community":["B (100%)"],"isMC":true,"answer_ET":"B","answer_description":"Reference:\nhttps://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html","url":"https://www.examtopics.com/discussions/amazon/view/47045-exam-aws-certified-security-specialty-topic-1-question-150/","answer":"B","unix_timestamp":1615721880,"exam_id":29,"discussion":[{"poster":"refuz","timestamp":"1636298460.0","upvote_count":"9","content":"B is correct","comment_id":"389227"},{"content":"B. Disable source and destination checks on the proxy EC2 instances.\n\nTo make the proxy EC2 instances route traffic to the internet, the Security Engineer should disable source and destination checks on the proxy EC2 instances. By default, all EC2 instances have source and destination checks enabled, which means that the instances will only accept traffic that is sent to or from the instance's elastic network interface (ENI). Since the proxy EC2 instances are being used as transparent proxies for outbound internet traffic, they need to be able to receive traffic from any source and forward it to the internet, regardless of the source or destination IP address. Disabling source and destination checks on the proxy EC2 instances will allow them to receive and forward traffic to the internet as expected. Other options, such as putting all the proxy EC2 instances in a cluster placement group or opening all inbound ports on the proxy EC2 instance security group, are not necessary for the proxy EC2 instances to route traffic to the internet.","poster":"[Removed]","comment_id":"740468","upvote_count":"7","timestamp":"1670622000.0"},{"timestamp":"1662333540.0","comment_id":"659620","content":"Selected Answer: B\nEach EC2 instance performs source/destination checks by default. This means that the instance must be the source or destination of any traffic it sends or receives. However, a NAT instance must be able to send and receive traffic when the source or destination is not itself. Therefore, you must disable source/destination checks on the NAT instance.\nhttps://docs.aws.amazon.com/vpc/latest/userguide/VPC_NAT_Instance.html#EIP_Disable_SrcDestCheck","poster":"Root_Access","upvote_count":"2"},{"comment_id":"316829","upvote_count":"3","content":"B. Basic 101","poster":"cldy","timestamp":"1634585220.0"},{"timestamp":"1633945560.0","comment_id":"316550","content":"Easiest question Here.. The ECs2 instance is a Nat Instance.","upvote_count":"2","poster":"ChinkSantana"},{"upvote_count":"5","timestamp":"1633270740.0","content":"Disabling source and destination checks on the proxy instance is also necessary to allow it to receive traffic not destined for the instance’s own IP address: https://www.nearform.com/blog/building-a-transparent-proxy-in-aws-vpc-with-terraform-and-squid/","poster":"[Removed]","comment_id":"315950"},{"comment_id":"310488","poster":"viestner","upvote_count":"1","timestamp":"1632265860.0","content":"b, sure"}],"choices":{"C":"Open all inbound ports on the proxy EC2 instance security group.","B":"Disable source and destination checks on the proxy EC2 instances.","D":"Change the VPC's DHCP domain-name-servers options set to the IP addresses of proxy EC2 instances.","A":"Put all the proxy EC2 instances in a cluster placement group."},"topic":"1","question_id":58},{"id":"ryZhMILtbOTrRiEVDv58","choices":{"D":"Update the AMIs with the latest approved patches, and redeploy each instance during the defined maintenance window.","B":"Configure Amazon EC2 Systems Manager to report on instance patch compliance, and enforce updates during the defined maintenance windows.","C":"Examine AWS CloudTrail logs to determine whether any instances have not restarted in the last 30 days, and redeploy those instances.","A":"Use Amazon Inspector to determine which systems do not have the latest patches applied, and after 30 days, redeploy those instances with the latest AMI version."},"url":"https://www.examtopics.com/discussions/amazon/view/29753-exam-aws-certified-security-specialty-topic-1-question-151/","answers_community":["B (100%)"],"timestamp":"2020-08-28 02:38:00","answer":"B","isMC":true,"answer_images":[],"unix_timestamp":1598575080,"question_id":59,"exam_id":29,"question_text":"For compliance reasons, a Security Engineer must produce a weekly report that lists any instance that does not have the latest approved patches applied. The\nEngineer must also ensure that no system goes more than 30 days without the latest approved updates being applied.\nWhat would be the MOST efficient way to achieve these goals?","topic":"1","discussion":[{"poster":"sunnybunny","comment_id":"167940","upvote_count":"22","content":"B is the correct answer","timestamp":"1632204360.0"},{"upvote_count":"1","content":"We can use Systems Manager to automatically patch systems based on a defined schedule.","poster":"ITGURU51","timestamp":"1681907460.0","comment_id":"874635"},{"content":"Already covered before. Ans - B","timestamp":"1670678040.0","upvote_count":"1","comment_id":"740993","poster":"Suhasj02"},{"comment_id":"684225","timestamp":"1664630220.0","poster":"Bosch123","content":"Selected Answer: B\nAWS SSM is the native and best solution for it.","upvote_count":"2"},{"content":"Selected Answer: B\nSystems Manager is your tool for the task.","upvote_count":"1","comment_id":"640577","poster":"Sarksa","timestamp":"1659351600.0"},{"upvote_count":"1","comment_id":"586377","timestamp":"1650031440.0","poster":"TigerInTheCloud","content":"Selected Answer: B\nSystems Manager is for this purpose."},{"comment_id":"556888","timestamp":"1645897560.0","poster":"lotfi50","content":"Selected Answer: B\nB is the correct answer","upvote_count":"1"},{"timestamp":"1643337420.0","upvote_count":"1","poster":"Radhaghosh","content":"B. Configure Amazon EC2 Systems Manager to report on instance patch compliance, and enforce updates during the defined maintenance windows.","comment_id":"534293"},{"comment_id":"437661","poster":"kiev","upvote_count":"3","timestamp":"1635972420.0","content":"System Manager and patching during the maintenance window are key here"},{"comment_id":"403391","poster":"hp_1980","content":"B - System Manager !!","timestamp":"1635672840.0","upvote_count":"3"},{"poster":"Ponzy","content":"B - is the only answer for sure because that's common practice.","comment_id":"373074","timestamp":"1635587820.0","upvote_count":"2"},{"content":"B - is the most effective\nSystem Manager quick setup to generate Compliance page.\nhttps://docs.aws.amazon.com/systems-manager/latest/userguide/quick-setup-host-management.html#quick-setup-patching\n\nIt can also integrates with EventBridge to remediating out-of-compliance instances\nhttps://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-compliance-fixing.html","upvote_count":"1","comment_id":"353255","timestamp":"1634891340.0","poster":"Daniel76"},{"content":"B for sure.","upvote_count":"1","comment_id":"352190","poster":"sanjaym","timestamp":"1634409480.0"},{"comment_id":"214099","content":"Is this Confirmed answer is B? it asks to run a report which for compliance patched instances as to be B","poster":"Copius","upvote_count":"1","timestamp":"1633142760.0"},{"upvote_count":"1","timestamp":"1633010160.0","content":"B, this is the core job of patch manager","poster":"freddyman","comment_id":"174228"},{"timestamp":"1632546180.0","poster":"Jack_London","upvote_count":"2","content":"B.\n\nThe question asks for \"the MOST efficient way\".\n\nA, C, and D have something in common: their solutions ALL are about re-deploying instances. B on the other hand doesn't re-deploy but patches them.","comment_id":"171873"},{"upvote_count":"1","comments":[{"comment_id":"256494","poster":"avland","upvote_count":"2","timestamp":"1633655040.0","content":"No report."},{"upvote_count":"1","comment_id":"339568","content":"Redeploying instances from the AMI is not efficient.","poster":"continent34","timestamp":"1634076960.0"}],"poster":"Awraith","timestamp":"1632495360.0","content":"Why is A not correct ?","comment_id":"171528"},{"comment_id":"169166","upvote_count":"3","timestamp":"1632314280.0","content":"B is the answer for sure","poster":"PeppaPig"}],"answer_description":"","answer_ET":"B","question_images":[]},{"id":"0JNFhIjKvclAJtTeFd9M","url":"https://www.examtopics.com/discussions/amazon/view/30026-exam-aws-certified-security-specialty-topic-1-question-152/","timestamp":"2020-08-29 18:04:00","answer_images":[],"question_id":60,"answer_description":"","choices":{"B":"Create an Amazon CloudFront distribution specifying one EC2 instance as an origin. Create an AWS WAF web ACL containing rules that protect the application from this attack, then apply it to the distribution. Test to ensure the vulnerability has been mitigated, then redirect the Route 53 records to point to CloudFront.","A":"Create an Application Load Balancer with the existing EC2 instances as a target group. Create an AWS WAF web ACL containing rules that protect the application from this attack, then apply it to the ALB. Test to ensure the vulnerability has been mitigated, then redirect the Route 53 records to point to the ALB. Update security groups on the EC2 instances to prevent direct access from the internet.","D":"Update the security group that is attached to the EC2 instances, removing access from the internet to the TCP port used by the SQL database. Create an AWS WAF web ACL containing rules that protect the application from this attack, then apply it to the EC2 instances. Test to ensure the vulnerability has been mitigated, then restore the security group to the original setting.","C":"Obtain the latest source code for the platform and make the necessary updates. Test the updated code to ensure that the vulnerability has been mitigated, then deploy the patched version of the platform to the EC2 instances."},"exam_id":29,"isMC":true,"topic":"1","discussion":[{"timestamp":"1633305240.0","content":"A is correct\nB: wrong. CDN is not needed here plus that attacker can continue the sql injection attack on the EC2 instances just bypassing CloudFront \nC. Might work, but requires much more efforts \nD. Wrong because WAF dose not apply to EC2 instances","poster":"PeppaPig","upvote_count":"19","comment_id":"169372"},{"poster":"Raphaello","upvote_count":"1","timestamp":"1709519820.0","content":"Selected Answer: A\nA is the correct answer","comment_id":"1165249"},{"upvote_count":"1","content":"A is the correct answer but at the end of the day, we have to do C if they want to use the platform.","timestamp":"1688555160.0","poster":"nisam12","comment_id":"943613"},{"timestamp":"1681908600.0","upvote_count":"1","comment_id":"874664","content":"Answer A is the best choice best of the overall network design. AWS recommends using security groups to limit the attack radius. The WAF is needed to prevent SQL injection. Also, it is considered a best practice to balance the http requests coming in from the internet. Therefore A.","poster":"ITGURU51"},{"comment_id":"818619","poster":"huyrk102","content":"Selected Answer: A\nA. Agreed with @Radhaghosh","upvote_count":"1","timestamp":"1677114900.0"},{"content":"Selected Answer: B\nELBs are intended to load balance across EC2 instances in a 'single' region. Whereas DNS load-balancing (Route 53) is intended to help balance traffic 'across' regions. So they are both load balancers.","poster":"Fyssy","upvote_count":"1","timestamp":"1672157280.0","comment_id":"758760"},{"content":"Selected Answer: A\nWording is weird : sends traffic to two Amazon EC2 instances connected to an Amazon RDS cluster through Amazon Route 53 weighted load balancing","comment_id":"633115","timestamp":"1658167260.0","upvote_count":"1","poster":"sapien45"},{"poster":"Radhaghosh","upvote_count":"4","timestamp":"1643248920.0","comment_id":"533415","content":"Selected Answer: A\nOption A. --> Perfect has everything required\nB. Create an Amazon CloudFront distribution specifying one EC2 instance as an origin. --> Not a good design\nC. Obtain the latest source code for the platform --> Not possible, mentioned in the question\nD. Create an AWS WAF web ACL containing rules that protect the application from this attack, then apply it to the EC2 instances. --> WAF can't be attached directly to EC2"},{"upvote_count":"2","content":"The question showns in my exam","comment_id":"531220","timestamp":"1643019960.0","poster":"szl0144"},{"comment_id":"437664","upvote_count":"3","poster":"kiev","content":"A. The key for me is updating security group","timestamp":"1636176480.0"},{"comment_id":"402303","poster":"Kdosec","content":"The question really make us confused with the requirement \"must involve the least amount of effort and maintain normal operations during implementation.\" If you select A with add all existing EC2 instances as target group to ALB, it is not sure maintain normal operations. It should move only one EC2 instance for testing first. That is why B answer is followed best practice in implementation but B is not mention about create security group. With me, A is reasonable but it is not 100% true.","upvote_count":"1","timestamp":"1635241380.0"},{"upvote_count":"2","timestamp":"1635208560.0","poster":"refuz","content":"A - because in B it doesn't update the security group to prevent internet traffic to access the EC2 instance \nC - it`s possible, but the time frame is short\nD - WAF works only with ELB and CF","comment_id":"389231"},{"comment_id":"186049","poster":"Dic","timestamp":"1633884840.0","upvote_count":"1","content":"A,\nit doesnt mention the platform is web service or not while CF only serve web"},{"comment_id":"179056","upvote_count":"1","content":"WAF applies to ELB and CF, but CF is not required in this scenario. \nAnswer: A","poster":"kj07","timestamp":"1633402560.0"},{"timestamp":"1633349640.0","content":"A for sure","upvote_count":"3","poster":"Tester3","comment_id":"169712"}],"answer":"A","question_text":"A company is operating an open-source software platform that is internet facing. The legacy software platform no longer receives security updates. The software platform operates using Amazon Route 53 weighted load balancing to send traffic to two Amazon EC2 instances that connect to an Amazon RDS cluster. A recent report suggests this software platform is vulnerable to SQL injection attacks, with samples of attacks provided. The company's Security Engineer must secure this system against SQL injection attacks within 24 hours. The Security Engineer's solution must involve the least amount of effort and maintain normal operations during implementation.\nWhat should the Security Engineer do to meet these requirements?","answers_community":["A (88%)","13%"],"question_images":[],"answer_ET":"A","unix_timestamp":1598717040}],"exam":{"isBeta":false,"provider":"Amazon","lastUpdated":"11 Apr 2025","isMCOnly":false,"isImplemented":true,"numberOfQuestions":509,"name":"AWS Certified Security - Specialty","id":29},"currentPage":12},"__N_SSP":true}