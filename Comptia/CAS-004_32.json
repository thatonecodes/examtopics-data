{"pageProps":{"questions":[{"id":"Q6nsytO7dak6wdYjndKs","discussion":[{"upvote_count":"9","timestamp":"1678324440.0","poster":"Cock","content":"Selected Answer: CDG\nForward secrecy is a feature that ensures that encrypted communications are secure even if the private keys are compromised in the future. Authenticated encryption with associated data (AEAD) is a mode of encryption that provides confidentiality, integrity, and authenticity.\n\nGCM (Galois/Counter Mode) is a block cipher mode that provides AEAD encryption, authenticity, and integrity. AES (Advanced Encryption Standard) is a symmetric block cipher algorithm used in GCM mode for providing encryption. ECDSA (Elliptic Curve Digital Signature Algorithm) is a public-key cryptographic algorithm used to provide authentication.","comment_id":"833500"},{"poster":"Bright07","content":"Selected Answer: CDH\nC. GCM Correct because GCM (Galois/Counter Mode) provides authenticated encryption.\nIt supports associated data integrity along with confidentiality.\nIt meets the requirement for authenticated encryption in the cipher suite.\nD. AES Correct because AES is a strong symmetric encryption algorithm.\nWhen used with an AEAD mode like GCM, it provides both confidentiality and data integrity.\nIt is commonly used in TLS cipher suites combined with key exchange mechanisms that offer forward secrecy.\nH. DH Correct because DH (Diffie-Hellman) can be employed in an ephemeral mode (DHE) to ensure forward secrecy.\nIt provides a key exchange mechanism that allows the establishment of secure session keys.\nIt complements the use of strong encryption algorithms like AES/GCM in TLS.","timestamp":"1741571460.0","upvote_count":"1","comment_id":"1375249"},{"poster":"3041b53","comment_id":"1337976","content":"Selected Answer: CDG\nDH on its own does not inherently have forward secrecy; to achieve forward secrecy, a system would need to utilize a key exchange mechanism like Diffie-Hellman, specifically in its \"ephemeral\" mode (DHE or ECDHE), which generates unique session keys for each connection, preventing past communication from being compromised even if a long-term private key is breached","timestamp":"1736347260.0","upvote_count":"1"},{"timestamp":"1733850660.0","upvote_count":"2","poster":"deeden","content":"Selected Answer: CDH\nECDSA (Elliptic Curve Digital Signature Algorithm): Used for digital signatures, not for encryption or key exchange.","comment_id":"1324681"},{"poster":"Bright07","upvote_count":"1","comment_id":"1319980","timestamp":"1732926960.0","content":"Selected Answer: CDH\nTo meet the requirements of forward secrecy and authenticated encryption with associated data, the following algorithms should be combined:\nC. GCM — Provides authenticated encryption with associated data (AEAD), ensuring both confidentiality and integrity.\nD. AES — A strong block cipher that, when used with GCM, provides the encryption layer.\nH. DH — Provides ephemeral key exchange for forward secrecy (use ECDHE for elliptic curve variant). And not G. ECDSA (Elliptic Curve Digital Signature Algorithm)\nExplanation: ECDSA is a public key signature algorithm, used for digital signatures rather than key exchange. While it can be used for authentication and integrity checking, it does not directly provide forward secrecy. However, ECDSA can be used as part of a cipher suite when paired with an appropriate key exchange mechanism (like ECDHE). It is not a key exchange algorithm on its own."},{"upvote_count":"2","timestamp":"1728433200.0","content":"ChatGPT goes with C, D and H.","poster":"IT_Master_Tech","comment_id":"1294904"},{"content":"Selected Answer: CDH\nWhile ECDSA (Elliptic Curve Digital Signature Algorithm) is important for digital signatures and ensuring data integrity and authenticity, it does not contribute to forward secrecy. Therefore, for the specific requirement of forward secrecy and AEAD, DH (or its elliptic curve variant ECDHE) is the appropriate choice.","poster":"23169fd","upvote_count":"3","comment_id":"1249869","timestamp":"1721239080.0"},{"timestamp":"1721045040.0","poster":"23169fd","comment_id":"1248312","upvote_count":"1","content":"Selected Answer: CDG\nECDSA (Elliptic Curve Digital Signature Algorithm): Provides efficient and secure digital signatures, which are crucial for server authentication.\nGCM (Galois/Counter Mode): Provides authenticated encryption with associated data (AEAD).\nAES (Advanced Encryption Standard): A widely used and strong encryption standard."},{"comment_id":"1247543","timestamp":"1720912800.0","content":"Sorry, ECDSA does not has DH.","poster":"EAlonso","upvote_count":"1"},{"poster":"EAlonso","upvote_count":"1","comment_id":"1247541","timestamp":"1720912620.0","content":"CDG, Diffie-Hellman is in ECDSA."},{"comment_id":"1226274","content":"Selected Answer: CDG\nTo achieve forward secrecy and authenticated encryption with associated data (AEAD), the security engineer should choose the following algorithms:\n\nC. GCM (Galois/Counter Mode): GCM provides authenticated encryption with associated data (AEAD) and is widely used for its efficiency and security.\n\nD. AES (Advanced Encryption Standard): AES is a symmetric encryption algorithm commonly used in conjunction with GCM for AEAD.\n\nG. ECDSA (Elliptic Curve Digital Signature Algorithm): ECDSA is commonly used for digital signatures in TLS, providing authentication and integrity.","timestamp":"1717777800.0","upvote_count":"1","comments":[{"content":"Explanation:\n\nA. EDE: EDE (Encrypt-Decrypt-Encrypt) is a mode of operation for block ciphers, not an encryption algorithm itself.\n\nB. CBC (Cipher Block Chaining): CBC is a mode of operation for block ciphers that does not provide authenticated encryption with associated data (AEAD).\n\nE. RSA: RSA is an asymmetric encryption algorithm commonly used for key exchange and digital signatures in TLS but does not directly provide authenticated encryption with associated data (AEAD).\n\nF. RC4: RC4 is a stream cipher and is not recommended for use in TLS due to security vulnerabilities.\n\nH. DH (Diffie-Hellman): Diffie-Hellman is a key exchange algorithm that can provide forward secrecy when used in conjunction with symmetric encryption, but it does not directly provide authenticated encryption with associated data (AEAD).","upvote_count":"1","comment_id":"1226275","poster":"ninjachuleta","timestamp":"1717777860.0"}],"poster":"ninjachuleta"},{"poster":"ThatGuyOverThere","timestamp":"1698497220.0","comments":[{"content":"Yea don't listen to this. Did not do enough research.","poster":"ThatGuyOverThere","comments":[{"poster":"ThatGuyOverThere","content":"Even though my comments about ECDSA are wrong. I still think CDH is the best answer, though I think the answers for the question are too confusing. They should have combined AES and GCM to one answer and they should have changed DH to ECDHE","upvote_count":"1","comment_id":"1064377","timestamp":"1699317420.0","comments":[{"content":"DH was developed specifically for \"key exchange\" and not for data encryption or digital signatures. It was designed to allow two users to exchange a secret key over an insecure channel without any prior communication.","timestamp":"1712163480.0","poster":"ddcnsd65","upvote_count":"1","comment_id":"1188780"}]}],"timestamp":"1699316340.0","comment_id":"1064362","upvote_count":"2"}],"content":"Selected Answer: CDH\nPretty confident on this one. You would not use ECDSA (Elliptic Curve Digital Signature Algorithm) in this situation. That is for digital signatures and not for sending data. DH when using its ephemeral form (EDH or DHE) would provide forward secrecy. RSA would not be used in conjunction with AES, it would be either or.","upvote_count":"4","comment_id":"1056205"},{"poster":"Ariel235788","comments":[{"poster":"Ariel235788","content":"why the others are incorrect: \nA. EDE (Encrypt-Decrypt-Encrypt): EDE is a mode of operation for block ciphers, and it's not commonly used in TLS cipher suites.\n\nB. CBC (Cipher Block Chaining): CBC is an older mode of operation with known security vulnerabilities, and it is not recommended for modern TLS cipher suites.\n\nF. RC4 (Rivest Cipher 4): RC4 is a stream cipher with significant security weaknesses and should not be used in modern TLS configurations.","comment_id":"1023368","upvote_count":"1","comments":[{"upvote_count":"1","comment_id":"1023374","poster":"Ariel235788","content":"Changing my answer; To achieve forward secrecy and authenticated encryption with associated data (AEAD) in a TLS configuration, you should use modern and secure cipher suites. Here are three algorithms that, when combined into a cipher suite, meet these requirements:\n\n GCM (Galois/Counter Mode): GCM provides both authenticated encryption and the ability to achieve forward secrecy when used with appropriate key exchange mechanisms like ECDHE or DHE.\n\n AES (Advanced Encryption Standard): AES is a symmetric encryption algorithm commonly used with AEAD cipher suites.\n\n ECDHE (Elliptic Curve Diffie-Hellman Ephemeral): ECDHE is a key exchange algorithm that provides forward secrecy when combined with GCM or AES for encryption.\nCDG is correct, i didnt upload all the answer choices in my ChatGPT query","timestamp":"1696270260.0"}],"timestamp":"1696269540.0"}],"upvote_count":"1","content":"Selected Answer: CDE\nTo achieve forward secrecy and authenticated encryption with associated data (AEAD), you should use modern and secure cipher suites. Here are three algorithms that, when combined into a cipher suite, meet these requirements:\n\nC. GCM (Galois/Counter Mode): GCM provides both authenticated encryption and the ability to achieve forward secrecy when used with appropriate key exchange mechanisms like ECDHE or DHE.\n\nD. AES (Advanced Encryption Standard): AES is a symmetric encryption algorithm commonly used with AEAD cipher suites.\n\nE. RSA (Rivest–Shamir–Adleman): While RSA is not typically used for forward secrecy, it can be used for authentication in conjunction with other algorithms that provide forward secrecy.","comment_id":"1023367","timestamp":"1696269540.0"},{"poster":"Alizadeh","comment_id":"981930","timestamp":"1692125760.0","upvote_count":"2","content":"Selected Answer: CDH\nThe correct answers are C, D, and H."},{"content":"Selected Answer: CDH\nThe three algorithms that, when combined into a cipher suite, provide forward secrecy and authenticated encryption with associated data are:\n\nC. GCM (Galois/Counter Mode)\nD. AES (Advanced Encryption Standard)\nH. DH (Diffie-Hellman)\n\nECDSA is an algorithm used for digital signatures and is not directly related to encryption, so it cannot be used for authenticated encryption with associated data. It is typically used in TLS for certificate signing and verification. Therefore, ECDSA cannot be used to meet the requirements of forward secrecy and authenticated encryption with associated data in the given scenario.","upvote_count":"2","poster":"javier051977","timestamp":"1681149540.0","comment_id":"866504","comments":[{"upvote_count":"2","comment_id":"882970","timestamp":"1682622900.0","poster":"BreakOff874","content":"This is from the book, page 216: DH by itself does not provide\nany authentication mechanism and\nso cannot adequately identify if the\nother party is really who they claim to\nbe without utilizing an authentication\nmechanism in parallel."}]},{"content":"Selected Answer: CDG\nAnswer is C,D,G","timestamp":"1676612580.0","poster":"WHODISNEWFONE","upvote_count":"3","comment_id":"811502"}],"timestamp":"2023-02-17 06:43:00","url":"https://www.examtopics.com/discussions/comptia/view/99545-exam-cas-004-topic-1-question-239-discussion/","answer_ET":"CDH","answer_description":"","answer":"CDG","unix_timestamp":1676612580,"exam_id":343,"topic":"1","isMC":true,"choices":{"G":"ECDSA","A":"EDE","F":"RC4","B":"CBC","C":"GCM","E":"RSA","H":"DH","D":"AES"},"question_images":[],"question_id":156,"answer_images":[],"answers_community":["CDG (48%)","CDH (48%)","3%"],"question_text":"A security engineer is implementing a server-side TLS configuration that provides forward secrecy and authenticated encryption with associated data. Which of the following algorithms, when combined into a cipher suite, will meet these requirements? (Choose three.)"},{"id":"AyfKaSdqKmu8pDRz3V0M","choices":{"C":"The default should be on port 80.","A":"Weak ciphers are being used.","D":"The server name should be test.com.","B":"The public key should be using ECDSA."},"answer_images":[],"answer_ET":"A","url":"https://www.examtopics.com/discussions/comptia/view/73969-exam-cas-004-topic-1-question-24-discussion/","question_images":["https://www.examtopics.com/assets/media/exam-media/04287/0001700001.png"],"question_id":157,"isMC":true,"timestamp":"2022-04-21 00:57:00","exam_id":343,"question_text":"A customer reports being unable to connect to a website at www.test.com to consume services. The customer notices the web application has the following published cipher suite:\n//IMG//\n\nWhich of the following is the MOST likely cause of the customer's inability to connect?","unix_timestamp":1650495420,"topic":"1","answer":"A","answer_description":"","discussion":[{"timestamp":"1650495420.0","upvote_count":"11","poster":"snilu","comment_id":"588999","content":"A)\n\"SHA-256 is not a secure password hashing algorithm\"\n\nECDSA is not mentioned."},{"comment_id":"955508","content":"Selected Answer: A\nhttps://ciphersuite.info/cs/TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384/\nhas quite a few weaknesses. \nwhen looking up ECDSA and connection issues, it says that the cipher suite of ECDSA is TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\nSo because the published application suite that the user is trying to connect to is stating RSA cipher, it's probable that it's because it is weak. RSA cipher suites don't work without a RSA Public key. https://serverfault.com/questions/1050808/tls-1-2-with-rsa-vs-ecdsa-ciphers","timestamp":"1689688560.0","poster":"BiteSize","comments":[{"content":"Also, due to \"The decision on which cipher suite will be used depends on the web server. The agreed cipher suite is a combination of:\n\nKey exchange algorithms, such as RSA, DH, ECDH, DHE, ECDHE, or PSK\nAuthentication/Digital Signature Algorithm, like RSA, ECDSA, or DSA\nBulk encryption algorithms, like AES, CHACHA20, Camellia, or ARIA\nMessage Authentication Code algorithms, such as SHA-256, and POLY1305\"\nhttps://www.keyfactor.com/blog/cipher-suites-explained/\n\nSource:\nVerifying each answer against Chat GPT, my experience, other test banks, a written book, and weighing in the discussion from all users to create a 100% accurate guide for myself before I take the exam. (It isn't easy because of the time needed, but it is doing my diligence)","upvote_count":"2","timestamp":"1689688560.0","comment_id":"955511","poster":"BiteSize"}],"upvote_count":"7"},{"poster":"blacksheep6r","timestamp":"1738778520.0","content":"Selected Answer: D\nKey Takeaway:\n💡 DNS configuration and ServerName mismatches are common causes of web connectivity issues. If the server is set to www.test.com only, users accessing test.com without www may fail to connect. D) The server name should be test.com. ✅ Correct!\nThe configuration specifies ServerName www.test.com, meaning it expects requests to come to www.test.com specifically.\nIf the customer is trying to access test.com without www, the server might not properly respond to the request.\nFix: The server should either support both test.com and www.test.com or set up a proper redirect.","comment_id":"1352014","upvote_count":"1"},{"timestamp":"1738778280.0","comment_id":"1352010","upvote_count":"1","poster":"blacksheep6r","content":"Selected Answer: D\nA) Weak ciphers are being used. ❌ Incorrect\nThe ciphers listed are strong and secure (AES-256-CBC, AES-128-CBC, and ECDHE for perfect forward secrecy).\nIf weak ciphers were an issue, the problem would be with security compliance, not connectivity. D) The server name should be test.com. ✅ Correct!\nThe configuration specifies ServerName www.test.com, meaning it expects requests to come to www.test.com specifically.\nIf the customer is trying to access test.com without www, the server might not properly respond to the request.\nFix: The server should either support both test.com and www.test.com or set up a proper redirect."},{"content":"Selected Answer: C\n• The <VirtualHost *:80> directive correctly listens on port 80 (HTTP) and redirects traffic to https://www.test.com.\n• Using <VirtualHost _default_:443> means that this virtual host will only catch HTTPS requests that don't match any other virtual host on port 443 . Since it's set as the default, Apache might not correctly match the ServerName www.test.com when handling SSL/TLS connections. The use of <VirtualHost _default_:443> can prevent Apache from correctly matching the ServerName for SSL/TLS connections, causing clients to be unable to connect to https://www.test.com.\nSOLUTION:\n- The <VirtualHost _default_:80> directive sets the default virtual host for all HTTP traffic that doesn't match any other virtual host on port 80.\n- The <VirtualHost *:443> tells Apache to listen on all IP addresses for port 443 and properly match the ServerName directive (which is www.test.com in your case).","comment_id":"1298486","timestamp":"1729039080.0","comments":[{"comment_id":"1298488","timestamp":"1729039440.0","poster":"grelaman","content":"EXAMPLE:\n1. The user enters http://www.test.com into their web browser and presses Enter.\n2. This initiates an HTTP request to www.test.com on port 80, which is the default port for HTTP traffic.\n3. Since the request is for http://www.test.com on port 80, Apache looks for a <VirtualHost> block that matches this configuration. The <VirtualHost _default_:80> block is configured to handle all HTTP requests that don't specifically match another <VirtualHost> on port 80. In this case, since there's only one VirtualHost for port 80, it matches the incoming request for www.test.com. the directive Redirect / https://www.test.com tells Apache to redirect any request it receives to the specified HTTPS URL.\n4. Upon receiving the redirect response, the user's browser automatically navigates to https://www.test.com. This means the user is seamlessly taken from the unsecured HTTP version of the site to the secured HTTPS version.","upvote_count":"2"}],"poster":"grelaman","upvote_count":"2"},{"poster":"23169fd","upvote_count":"2","content":"Selected Answer: B\nB is correct.\nA: These are are strong ciphers and are generally considered secure.\nC:The configuration correctly redirects HTTP traffic (port 80) to HTTPS (port 443), which is standard practice.\nD:The server name configuration www.test.com matches the standard expected URL format","comment_id":"1246123","timestamp":"1720701420.0"},{"upvote_count":"1","comment_id":"1119170","timestamp":"1704931920.0","content":"Selected Answer: B\nBased on the provided information, the MOST likely cause of the customer's inability to connect is:\n\nB. The public key should be using ECDSA.","poster":"Delab202"},{"content":"I'd guess A - read this: https://ciphersuite.info/cs/TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384/\nIt is clear, that CBC is not recommended for use for a long time...","poster":"llamaPaja","timestamp":"1689182220.0","upvote_count":"5","comment_id":"950038"},{"timestamp":"1674595080.0","comment_id":"786979","upvote_count":"4","content":"Selected Answer: A\nhttps://community.progress.com/s/article/unable-to-connect-to-site-externally-weak-cipher-or-http2-error","poster":"FOURDUE"},{"upvote_count":"6","timestamp":"1671495660.0","comment_id":"750348","poster":"angryelvis","content":"Selected Answer: B\nOK, we all agree that this is a weak cipher suite (see the link below). But, that's not the question. The question is about the \"inability to connect\". Look at the below link and you will see that ECDSA is used to authenticate. You can connect to a weak cipher suite but if you're missing the signature algorithm...\n\nhttps://ciphersuite.info/cs/TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384/"},{"content":"In practice, a RSA key will work everywhere. ECDSA support is newer, so some old client or server may have trouble with ECDSA keys.\n\nI will go for \"A\"\n\n\nreference: https://security.stackexchange.com/questions/23383/ssh-key-type-rsa-dsa-ecdsa-are-there-easy-answers-for-which-to-choose-when","poster":"kycugu","comment_id":"730394","timestamp":"1669726380.0","upvote_count":"3"},{"poster":"lordguck","comment_id":"727766","content":"I go for A: TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 is labled a weak on ciphersuite.info","timestamp":"1669489020.0","upvote_count":"3"},{"timestamp":"1668451380.0","upvote_count":"2","content":"The answer is A. https://ciphersuite.info/search/?q=TLS_RSA_WITH_AES_256_CBC_SHA256","poster":"Andre876","comment_id":"718181"},{"timestamp":"1663645380.0","comment_id":"673770","content":"Selected Answer: A\nA) \nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\nand TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 are both considered weak cipher suites. May be vuln to BEAST attack since they are 1.2 TLS","poster":"Sloananne","upvote_count":"2"},{"comment_id":"664235","content":"Selected Answer: A\nC and D are not valid answers. for why C is not a valid answer check this link on how to handle https redirect\nhttps://stackoverflow.com/questions/13376219/htaccess-redirect-http-to-https\nLeaning towards A since is similar behavior as cipher mismatch.\ncipher used is TLS 1.2 and client might be using TLS 1.3 connection. Again CompTIA doing its miss direction.","timestamp":"1662699900.0","poster":"dangerelchulo","upvote_count":"2","comments":[{"poster":"ito4862","comment_id":"746732","timestamp":"1671159660.0","comments":[{"timestamp":"1671160140.0","poster":"ito4862","upvote_count":"2","comment_id":"746740","content":"Nvm, I believe A is the answer. I remembered that I have used old government websites that needed to have TLS 1.0 enabled in order to connect. I specifically had to go into IE settings and enable them for the website to work."}],"content":"From the link you sent, I followed it to https://cwiki.apache.org/confluence/display/httpd/RedirectSSL. Wouldn't this prove that D is the answer?\n\nNameVirtualHost *:80\n<VirtualHost *:80>\n ServerName www.example.com\n Redirect / https://secure.example.com/\n</VirtualHost>\n\n<VirtualHost _default_:443>\n ServerName secure.example.com\n DocumentRoot /usr/local/apache2/htdocs\n SSLEngine On\n# etc...\n</VirtualHost>","upvote_count":"1"}]},{"upvote_count":"3","comment_id":"653350","poster":"dangerelchulo","content":"C can't be the answer since port 80 is plain text communication while 443 is the cipher communication. Website is set to default to port 443 so i can successfully communicate in the cipher stated above.","timestamp":"1661759160.0"},{"comments":[{"content":"Here is more information. https://community.progress.com/s/article/unable-to-connect-to-site-externally-weak-cipher-or-http2-error\n\nhttps://community.progress.com/s/article/unable-to-connect-to-site-externally-weak-cipher-or-http2-error","comment_id":"646292","poster":"Boats","timestamp":"1660390080.0","upvote_count":"1"}],"comment_id":"646290","poster":"Boats","timestamp":"1660389900.0","content":"Selected Answer: A\nI think it is A.\n\nRecently new vulnerabilities like Zombie POODLE, GOLDENDOODLE, 0-Length OpenSSL and Sleeping POODLE were published for websites that use CBC (Cipher Block Chaining) block cipher modes. These vulnerabilities are applicable only if the server uses TLS 1.2 or TLS 1.1 or TLS 1.0 with CBC cipher modes.","upvote_count":"3"},{"poster":"EZPASS","timestamp":"1658939340.0","upvote_count":"2","comment_id":"638214","content":"I agree, the correct answer is 'C'.\nrefer to the following link and scroll down to 'recommendation' section for explanation.\nhttps://technology.amis.nl/security-2/ssltls-choose-cipher-suite/"},{"comment_id":"638212","upvote_count":"2","poster":"EZPASS","timestamp":"1658939220.0","content":"I agree, the correct answer is 'C'. \nrefer to the following link and scroll down to 'recommendation' section for explanation."},{"poster":"dangerelchulo","content":"Selected Answer: B\nECDHE is the key exchange for ECDSA which is the authentication algorithm. Hopefully the link provided helps understand that. So B is the correct answer\nhttps://technology.amis.nl/security-2/ssltls-choose-cipher-suite/","comment_id":"633353","upvote_count":"4","timestamp":"1658206740.0"},{"content":"Selected Answer: C\nI think the *:80 and _default_:443 ought to agree","comments":[{"upvote_count":"3","comment_id":"627571","poster":"daanderud","timestamp":"1657045740.0","content":"But under the Port 80 Virtual Host, it has a redirect to https. So I think they do agree in this sense."}],"upvote_count":"2","timestamp":"1652461260.0","poster":"RevZig67","comment_id":"601267"}],"answers_community":["A (49%)","B (35%)","Other"]},{"id":"Iipke6xeHCRd9Fbusfqs","unix_timestamp":1676612520,"answers_community":["D (59%)","B (41%)"],"exam_id":343,"choices":{"C":"CSRF","D":"XSS","A":"XML injection","B":"LDAP injection"},"isMC":true,"timestamp":"2023-02-17 06:42:00","topic":"1","answer_description":"","answer":"D","question_text":"A security architect is advising the application team to implement the following controls in the application before it is released:\n\n• Least privilege\n• Blocklist input validation for the following characters: \\<>;, =\"#+\n\nBased on the requirements, which of the following attacks is the security architect trying to prevent?","url":"https://www.examtopics.com/discussions/comptia/view/99543-exam-cas-004-topic-1-question-240-discussion/","question_images":[],"discussion":[{"comment_id":"856027","comments":[{"content":"Thanks for the reference site. It convinced me without a doubt it's B - LDAP injection. I urge everyone to review Defense Option 1 and Defense Option 3 from the site as they address both requirements.","timestamp":"1693481820.0","comment_id":"995061","poster":"isaphiltrick","upvote_count":"2"}],"timestamp":"1680198960.0","upvote_count":"14","poster":"Geofab","content":"Selected Answer: B\nanswer is B according to OWAPS\nhttps://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html"},{"poster":"javier051977","comments":[{"comment_id":"1130775","content":"I know this was almost 10 months ago, but Geofab's link (scenarios 1 and 3) hit the exact points that the question is targeting. I really think the answer is B base on the link.\n\nhttps://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html","poster":"CraZee","upvote_count":"4","timestamp":"1706109120.0"}],"content":"Selected Answer: D\nBased on the controls advised by the security architect, the attacks being prevented are Cross-Site Scripting (XSS) attacks, where the <>;, =\"#+ characters can be used in input to inject malicious scripts that can be executed in the user's browser. \n\ncommonly used in LDAP injection attacks include:\n\n• Asterisk (*)\n• Left parenthesis (\n• Right parenthesis )\n• Backslash ()\n• Null byte (0x00)\nFor XML injection, some of the characters that are commonly used to exploit vulnerabilities are:\n\n< (less than)\n(greater than)\n\n& (ampersand)\n\" (double quote)\n' (single quote)","upvote_count":"11","comment_id":"866510","timestamp":"1681149900.0"},{"content":"Selected Answer: D\nXSS (Cross-Site Scripting) involves injecting malicious scripts (often JavaScript) into web pages that are then executed in the context of another user's browser. This can occur when input is not properly sanitized, allowing attackers to inject script tags or JavaScript code into a webpage.\nSpecial characters like <, >, \", ;, =, and + are commonly involved in XSS attacks, especially in HTML and JavaScript contexts.\nThe input blocklist of characters like <>, =, \", ;, and + seems designed to prevent XSS attacks, as these characters are often used in HTML or JavaScript injection.","timestamp":"1732928100.0","upvote_count":"2","poster":"Bright07","comment_id":"1319984"},{"comment_id":"1244468","poster":"isaphiltrick","upvote_count":"3","content":"Selected Answer: D\nIt's been over 10 months since I've gone through these questions and I'm finally taking the exam next week. I've reread the reference site and found something I've overlooked this entire time. The OWASP cheat sheet for LDAP injection shows the additional defenses are:\n- Least Privilege\n- Allow-List Input Validation.\n\nAn Allow-List and a Block-List are two completely different things so if the security architect is \"block-listing\" those special characters, he/she is actually trying to prevent XSS, not LDAP injections.\n\nTherefore, I'm changing my answer to D: XSS.","timestamp":"1720456980.0"},{"timestamp":"1712064900.0","content":"Selected Answer: D\nCompare out put from Gemini, Chat GPT, Copilot and common knowledge","comment_id":"1188073","poster":"e4af987","upvote_count":"2"},{"poster":"ElDirec","comment_id":"1139430","timestamp":"1706976420.0","upvote_count":"4","content":"Selected Answer: D\nThe security architect is trying to prevent D. XSS (Cross-Site Scripting) attacks.\n\nXSS attacks occur when an attacker injects malicious scripts into web pages viewed by other users. These scripts can steal information or perform actions on behalf of the user without their consent. The blocklist input validation for the characters <>;, =\"#+ is a common method to prevent XSS, as these characters are often used in scripting.\n\nThe principle of least privilege, which involves giving a user account or process the bare minimum privileges it needs to perform its function, is a general security practice that can help mitigate the impact of any security vulnerability, not just XSS."},{"comment_id":"1105568","content":"Selected Answer: B\nGiven the special characteristics, they align with LDAP more than XSS","timestamp":"1703543100.0","poster":"Anarckii","upvote_count":"2"},{"content":"Selected Answer: B\nIt's B","upvote_count":"1","poster":"ThatGuyOverThere","timestamp":"1698497760.0","comment_id":"1056213"},{"upvote_count":"3","comment_id":"1047163","poster":"Brianny93","timestamp":"1697656020.0","content":"Selected Answer: D\nXSS is the answer."},{"comment_id":"1026823","poster":"joinedatthehop","content":"Selected Answer: B\nAs Geofab mentions, the answer is B according to OWAPS\nhttps://cheatsheetseries.owasp.org/cheatsheets/LDAP_Injection_Prevention_Cheat_Sheet.html","upvote_count":"1","timestamp":"1696610760.0"},{"timestamp":"1693329180.0","content":"Selected Answer: D\nUse chatGPT and ask the question below:\ncommonly used in XSS attacks include which keyboard characters\nand commonly used in LDAP injection attacks include whicc keyboard characters\n\nonly XSS has & and #. XSS all the way!","poster":"Uncle_Lucifer","comment_id":"993332","upvote_count":"4","comments":[{"upvote_count":"1","comment_id":"997722","content":"In regards to COmptia material the answer should be LDAP. B.\nWill change my answer based on that, but it could be XSS as well","comments":[{"timestamp":"1693754820.0","poster":"Uncle_Lucifer","upvote_count":"1","content":"To hell with it. Will stick to XSS -> final answer in D","comment_id":"997726"}],"poster":"Uncle_Lucifer","timestamp":"1693754580.0"}]},{"upvote_count":"4","content":"Selected Answer: D\nLDAP injections typically use brackets, asterisks, ampersands, or quotes, but the input validation more closely aligns with XSS per the OWASP XSS cheat sheet.","comment_id":"965345","timestamp":"1690528140.0","poster":"imather"},{"content":"Selected Answer: B\nLDAP injection. Not only are those common characters used according to OWASP, implementing lease privilege is another suggested prevention mechanism.","comment_id":"868780","timestamp":"1681331100.0","poster":"last_resort","upvote_count":"3"},{"comment_id":"858549","content":"Selected Answer: D\nxss is ok","timestamp":"1680413700.0","upvote_count":"4","poster":"Amin4799"},{"content":"i go D","poster":"Amin4799","timestamp":"1679799840.0","upvote_count":"3","comment_id":"850695"},{"poster":"YOOOO","upvote_count":"3","comment_id":"849779","content":"Selected Answer: B\nThis is B","timestamp":"1679715540.0"},{"poster":"Daekim","timestamp":"1676655420.0","content":"Selected Answer: B\nhttps://brightsec.com/blog/ldap-injection","upvote_count":"4","comment_id":"812172"},{"poster":"WHODISNEWFONE","timestamp":"1676612520.0","content":"Selected Answer: D\nXSS. Answer is D","comment_id":"811500","upvote_count":"4"}],"answer_images":[],"answer_ET":"D","question_id":158},{"id":"aWLVTZd2KO8NfweBxFgk","answers_community":["A (63%)","C (38%)"],"discussion":[{"timestamp":"1679204040.0","poster":"Cock","upvote_count":"7","content":"Selected Answer: A\nA. Steganography would be the best choice in this scenario. Steganography is the practice of hiding information within other information, such as embedding a message inside an image or other file format. This would allow the company to embed a sign of ownership within the document without adding any visible or identifiable attributes. It would also make it more difficult for someone to remove or alter the sign of ownership.","comment_id":"843460"},{"poster":"Serliop378","content":"Selected Answer: A\nCovertly...","upvote_count":"7","timestamp":"1679261640.0","comment_id":"844268"},{"content":"Selected Answer: A\nWatermarking is a particular kind of Steganography, this is the only reason i can say that A is the right answer.","comment_id":"1349516","poster":"Chiaretta","timestamp":"1738327800.0","upvote_count":"1"},{"upvote_count":"1","timestamp":"1733208900.0","poster":"Rob69420","comment_id":"1321270","content":"Selected Answer: C\nPer Google AI: Yes, you can \"hide\" a watermark by using an invisible watermark, which embeds copyright information within an image's pixel data, making it undetectable to the naked eye but still retrievable with specialized software; however, removing a visible watermark from an image without permission is generally considered copyright infringement."},{"timestamp":"1726252200.0","comment_id":"1283313","upvote_count":"2","poster":"HereToStudy","content":"Selected Answer: C\nInvisible watermarking for copyright protections. Hate the question but have to go C"},{"comment_id":"1194102","upvote_count":"3","poster":"jermmoe","content":"Selected Answer: C\nWatermarking is used for copyright protection and it can be made visible or invisible (covert) to the human eye. Steganography is used to hide messages in some type of medium and usually not for identifying copyright material because it's hard to identify after being applied. C. just seems the more logical answer to take","timestamp":"1712890140.0"},{"comment_id":"1122481","poster":"talosDevbot","timestamp":"1705231080.0","upvote_count":"2","content":"Selected Answer: C\nSome are saying A because the question states it has to be covert.\nBut digital watermarking can also be covert. This also the typical use case of watermarking.\nIt is used in DRM and DLP"},{"poster":"WOM127","comment_id":"843480","timestamp":"1679207160.0","upvote_count":"1","comments":[{"poster":"earro015","upvote_count":"1","timestamp":"1679890080.0","comment_id":"851670","content":"Wouldn't be C; \"without adding any identifying attributes.\""}],"content":"Selected Answer: C\nI want to say watermarking because you can put anything on it without identifying someone. But I could be wrong..."}],"choices":{"C":"Watermarking","D":"Cryptography","A":"Steganography","B":"E-signature"},"answer":"A","answer_images":[],"question_images":[],"topic":"1","unix_timestamp":1679204040,"isMC":true,"timestamp":"2023-03-19 06:34:00","exam_id":343,"answer_ET":"A","question_text":"A company wants to use a process to embed a sign of ownership covertly inside a proprietary document without adding any identifying attributes. Which of the following would be BEST to use as part of the process to support copyright protections of the document?","question_id":159,"answer_description":"","url":"https://www.examtopics.com/discussions/comptia/view/103175-exam-cas-004-topic-1-question-241-discussion/"},{"id":"bkgplNlFCS6MdoT60bWg","isMC":true,"choices":{"C":"Accept the risk, as compensating controls have been implemented to manage the risk.","B":"Transfer the risk to the SaaS CRM vendor, as the organization is using a cloud service.","D":"Avoid the risk by accepting the shared responsibility model with the SaaS CRM provider.","A":"Apply for a security exemption, as the risk is too high to accept."},"unix_timestamp":1680555900,"question_images":[],"exam_id":343,"question_id":160,"answer_images":[],"timestamp":"2023-04-03 23:05:00","answers_community":["C (92%)","8%"],"discussion":[{"timestamp":"1720950300.0","poster":"talosDevbot","content":"Selected Answer: C\n3.The residual risk is now low\nResidual risk is the amount of risk after a control has been implemented. Since it is now considered low, it would be reasonable to accept the risk","upvote_count":"1","comment_id":"1122499"},{"timestamp":"1705631400.0","upvote_count":"4","content":"Selected Answer: C\nControls have been applied, residual risk is low.\nSource:\nVerifying each answer against Chat GPT, my experience, other test banks, a written book, and weighing in the discussion from all users to create a 100% accurate guide for myself before I take the exam. (It isn't easy because of the time needed, but it is doing my diligence)","comment_id":"956059","poster":"BiteSize"},{"timestamp":"1699447740.0","content":"Selected Answer: C\nBased on the given information, the BEST risk-handling technique would be to ACCEPT the risk, as compensating controls have been implemented to manage the risk. The fact that there will be a significant revenue loss for each day the system is delayed going into production indicates that the system is critical to the organization's operations. Additionally, the inherent risk being high suggests that there are significant threats to the system that need to be mitigated. However, since the residual risk is now low, it means that the implemented compensating controls are effective in reducing the risk to an acceptable level. The staged deployment of the solution rollout to the contact center indicates that the organization is taking a cautious approach to minimize disruption and allow for further testing and refinement as needed. Therefore, accepting the risk with compensating controls is the best option to meet the organization's requirements post-remediation.","upvote_count":"4","poster":"p1s3c","comment_id":"892031"},{"poster":"BreakOff874","content":"Selected Answer: C\nC. Accept the risk, as compensating controls have been implemented to manage the risk.\nThe residual risk is low which it can accept the risk, as compensating controls have been implemented to manage the risk.\n\nOption B is wrong because the organization is responsible for protecting the sensitive PII and identity information that is stored and processed by the system, regardless of whether it is hosted on-premises or in the cloud.","comment_id":"873211","upvote_count":"3","timestamp":"1697590020.0"},{"upvote_count":"1","content":"Selected Answer: B\nI wonder why I would accept the risk when SaaS CRM has faults. The risk needs to be transferred to them.","comment_id":"860344","poster":"sadamishspic","timestamp":"1696367100.0"}],"answer_description":"","question_text":"An organization is assessing the security posture of a new SaaS CRM system that handles sensitive PII and identity information, such as passport numbers. The SaaS CRM system does not meet the organization's current security standards. Post remediation work, the assessment recorded the following:\n\n1. There will be a $20.000 per day revenue loss for each day the system is delayed going into production.\n2. The inherent risk was high.\n3. The residual risk is now low.\n4. The solution rollout to the contact center will be a staged deployment.\n\nWhich of the following risk-handling techniques will BEST meet the organization’s requirements post remediation?","topic":"1","answer":"C","url":"https://www.examtopics.com/discussions/comptia/view/105011-exam-cas-004-topic-1-question-242-discussion/","answer_ET":"C"}],"exam":{"name":"CAS-004","id":343,"isBeta":false,"isImplemented":true,"lastUpdated":"12 Apr 2025","provider":"Comptia","isMCOnly":false,"numberOfQuestions":642},"currentPage":32},"__N_SSP":true}