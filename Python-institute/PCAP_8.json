{"pageProps":{"questions":[{"id":"kCqaNbOcISjfIlfgwbeS","question_text":"Which of the following lines of code will work flawlessly when out independently inside the inc() method in order to make the snippet's output equal to 3?\n(Choose two.)\n//IMG//","timestamp":"2022-05-04 14:55:00","discussion":[{"timestamp":"1689207060.0","poster":"CC_DC","comment_id":"950249","content":"Missing the dot between MyClass and Var. Yuckity, yuck, yuck!","upvote_count":"1"},{"poster":"macxsz","content":"Selected Answer: CD\nC. self.put(self.get() + val)\nD. self.put(self.prop + val)","upvote_count":"3","timestamp":"1651668900.0","comment_id":"596815"}],"answer_description":"","question_id":36,"exam_id":192,"url":"https://www.examtopics.com/discussions/python-institute/view/75160-exam-pcap-topic-1-question-130-discussion/","unix_timestamp":1651668900,"topic":"1","question_images":["https://www.examtopics.com/assets/media/exam-media/04235/0010200001.png"],"answers_community":["CD (100%)"],"choices":{"C":"self.put(self.get() + val)","B":"self.put(get() + val)","D":"self.put(self.prop + val)","A":"put(self.prop + val)"},"answer_ET":"CD","answer":"CD","isMC":true,"answer_images":[]},{"id":"yNgrKw2jIK2DIJmchHUv","choices":{"C":"None","A":"False","D":"True","B":"0"},"exam_id":192,"timestamp":"2022-05-04 14:56:00","question_id":37,"answers_community":["A (100%)"],"topic":"1","question_text":"What is the expected output of the following code?\n//IMG//","answer_ET":"A","url":"https://www.examtopics.com/discussions/python-institute/view/75161-exam-pcap-topic-1-question-131-discussion/","answer_description":"","answer":"A","answer_images":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04235/0010400001.png"],"discussion":[{"comment_id":"1065868","timestamp":"1699470180.0","upvote_count":"2","content":"Selected Answer: A\nb1 is a list\nb2 is string\nimport sys\n\nb1 = type (dir(sys)) is str\nb2 = type (sys.path[-1]) is str\nprint (b1 and b2)\n\nprint (b1)\nprint (b2)\nprint (dir(sys))\nprint (sys.path[-1])","poster":"Jos015"},{"timestamp":"1680635760.0","poster":"swatiphadtare","upvote_count":"3","comment_id":"861439","content":"type(dir(Sys)) would be a list"},{"comment_id":"596816","content":"Selected Answer: A\nA. False","upvote_count":"3","poster":"macxsz","timestamp":"1651668960.0"}],"unix_timestamp":1651668960,"isMC":true},{"id":"ZHR5Vj3xlo6VYKedCIbw","answer_ET":"AC","answer_images":[],"choices":{"D":"the constructor's first parameter must always be named self","B":"the constructor cannot be invoked directly under any circumstances","C":"the constructor cannot return a result other than None","A":"there can be only one constructor in a Python class"},"answer_description":"","url":"https://www.examtopics.com/discussions/python-institute/view/76021-exam-pcap-topic-1-question-132-discussion/","discussion":[{"comment_id":"823028","poster":"lkn2993","content":"Selected Answer: AC\nA & C are correct.\nTechnically speaking you can try to assign more than one constructor. However, other constructors will be removed at runtime and you will always end up with the last one. Python does not support overloading.\nYou CAN invoke the constructor directly. Nothing stops you in python from calling any available functions/methods directly:\nclass C:\n Var = data = 1\n def __init__(self):\n pass\n def __init__(self, carat):\n pass\n\nc = object()\nC.__init__(c, 2)","upvote_count":"5","timestamp":"1677452400.0"},{"content":"C.D. https://www.shiksha.com/online-courses/articles/constructors-in-python-definition-types-and-rules/#Rules-of-Python-Constructor","upvote_count":"1","timestamp":"1711293720.0","poster":"CoinUmbrella","comment_id":"1181773"},{"timestamp":"1708031040.0","comments":[{"timestamp":"1708236540.0","comment_id":"1153062","content":"Have you taken the exam yet","upvote_count":"2","poster":"moteruky"}],"upvote_count":"1","poster":"kstr","content":"AD. Explanation:\nA. In Python, a class can have only one constructor method, which is typically denoted by __init__() method.\nD. The first parameter of the constructor method in Python is conventionally named self, which refers to the instance of the class.\n\nThe other options are incorrect:\nB. The constructor can be invoked directly using the class name (ClassName()) to create an instance of the class.\nC. The constructor in Python can return values other than None if explicitly specified, although it's not common practice. However, the conventional use of constructors is to initialize instance variables and no explicit return statement is necessary.","comment_id":"1151293"},{"content":"A. False. In Python, there can be multiple constructors using the method overloading technique with default arguments, although only one is typically used.","timestamp":"1707485100.0","poster":"Damon54","upvote_count":"1","comment_id":"1145499"},{"timestamp":"1703011860.0","upvote_count":"1","poster":"Sarppp","comment_id":"1100908","content":"B and C"},{"timestamp":"1693662600.0","comment_id":"996924","upvote_count":"1","poster":"Mickey321","content":"Selected Answer: CD\nCD is the most suitable answer"},{"poster":"andr3","content":"Selected Answer: CD\nC is true because the constructor in Python is a special method named __init__() that is called when an object is created \n\nD is true because the first parameter of a constructor in Python must always be named self.","comments":[{"timestamp":"1680169440.0","content":"I think CD is the most suitable answers.","comment_id":"855564","upvote_count":"2","poster":"tanhuynh10"}],"comment_id":"846241","upvote_count":"4","timestamp":"1679423640.0"},{"timestamp":"1677757980.0","upvote_count":"2","comment_id":"826800","poster":"ivanbicalho","content":"Selected Answer: AC\nIt should be AC. Like the user lkn2993 said, nothing stops you in python from calling any available functions/methods directly. And the constructor's first parameter don't necessarily always be named self, can be named anything you want."},{"comments":[{"timestamp":"1677757740.0","poster":"ivanbicalho","content":"haha, it's funny, everyone has a different opinion here. But it's AC in my opinion.","comment_id":"826796","upvote_count":"1"}],"content":"Anyone know what the true answer is? Everyone has their own answer..","upvote_count":"1","comment_id":"825941","timestamp":"1677679740.0","poster":"Rizos"},{"comment_id":"798621","timestamp":"1675573440.0","poster":"9prayer","content":"Selected Answer: BC\nB & C are TRUE","upvote_count":"1"},{"upvote_count":"2","comment_id":"776626","content":"c. the constructor cannot return a result other than None","poster":"Mover","timestamp":"1673790540.0"},{"comment_id":"773359","upvote_count":"3","timestamp":"1673520420.0","content":"Selected Answer: BC\nB & C are TRUE\n\nA: FALSE - the second ctor overrides the first and does not cause an error\nB: TRUE - but you can call a super class \nC: TRUE - can only return 'None'\nD: FALSE - first parameter is only called 'self' by convention - it is not mandatory","poster":"Mallie"},{"comment_id":"717953","timestamp":"1668430440.0","content":"Selected Answer: CD\nC: Constructors cannot return anything else than None. Otherwise it raises TypeError\nD: Constructors must include at least one argument named 'self' as the first argument","poster":"rotimislaw","upvote_count":"1"},{"comment_id":"605127","poster":"rbishun","timestamp":"1653191580.0","content":"- Only 1 ctor allowed (if more than 1, the last 1 overrides all)\n- You can invoke the base’s ctor (from within a class)\nclass Car(Vehicle):\n    def __init__(self, make):\n        self.make = make\n        super().__init__('car')\n        Vehicle.__init__(self, \"and another way to invoke the base’s ctor)\n- ctors can only return None, (and they do by default)\n- ctors must include the self parameter","upvote_count":"4"}],"answer":"AC","answers_community":["AC (41%)","CD (35%)","BC (24%)"],"question_images":[],"unix_timestamp":1653191580,"question_id":38,"question_text":"What is true about Python class constructors? (Choose two.)","isMC":true,"timestamp":"2022-05-22 05:53:00","exam_id":192,"topic":"1"},{"id":"83GbA8BHJAg3DDIjSpCJ","topic":"1","timestamp":"2022-05-04 14:58:00","isMC":true,"answers_community":["D (100%)"],"unix_timestamp":1651669080,"answer_description":"","exam_id":192,"question_images":["https://www.examtopics.com/assets/media/exam-media/04235/0010500001.png"],"answer":"D","choices":{"A":"4","B":"3","C":"an exception is raised","D":"5"},"question_text":"What is the expected behavior of the following code?\n//IMG//","url":"https://www.examtopics.com/discussions/python-institute/view/75162-exam-pcap-topic-1-question-133-discussion/","question_id":39,"answer_images":[],"discussion":[{"upvote_count":"7","timestamp":"1651669080.0","content":"Selected Answer: D\nanswer:\nD. 5","comment_id":"596817","poster":"macxsz"},{"comment_id":"850780","upvote_count":"5","comments":[{"poster":"swatiphadtare","timestamp":"1680636420.0","upvote_count":"1","content":"Thank you for explaining really well","comment_id":"861442"}],"timestamp":"1679813580.0","poster":"andr3","content":"The function foo takes two arguments, x and y. x is just a regular variable, while y is a function that takes one argument.\n\nIn the body of the function, y(x) is the first function call. This calls the function y with x as its argument. In the example code, y is a lambda function that squares its argument, so y(x) computes the square of x.\n\nThe second function call is y(x+1). This calls the same y function, but with x+1 as its argument. In the example code, this computes the square of x+1.\n\nFinally, the two results from the function calls are added together, and the sum is returned by foo.\n\nIn the example code, foo(1, lambda x: x*x) is called. This passes 1 as the value of x and a lambda function that squares its argument as the value of y. Therefore, y(x) evaluates to 1 squared, which is 1, and y(x+1) evaluates to 2 squared, which is 4. The sum of these two values is 5, which is the value returned by foo."},{"poster":"temor","content":"Selected Answer: D\nLet's analyze the function `foo` with the provided arguments:\n\n1. `x` is `1`, and `y` is a lambda function defined as `lambda x: x*x`, which squares its input.\n\nHere's how `foo` works in this case:\n\n- `y(x)` with `x` being `1`, evaluates to `1*1`, which is `1`.\n- `y(x+1)` with `x+1` being `2` (since `x` is `1`), evaluates to `2*2`, which is `4`.\n\nAdding these results together gives `1 + 4`, which equals `5`.\n\nThus, `print(foo(1, lambda x: x*x))` will output `5`.","timestamp":"1705871220.0","upvote_count":"1","comment_id":"1128139"},{"poster":"kontra","comments":[],"content":"Can someone please walk me though how we get the answer 5 from this?\n\ndef foo(x,y):\n return (y(x) + y(x+1))\nprint(foo(1, lambda x: x*x))","upvote_count":"1","timestamp":"1679443920.0","comment_id":"846487"}],"answer_ET":"D"},{"id":"hNroKRemJeEbYdKHKhIH","question_text":"Assuming that the following inheritance set is in force, which of the following classes are declared properly? (Choose two.)\n//IMG//","timestamp":"2022-04-30 08:00:00","unix_timestamp":1651298400,"discussion":[{"comment_id":"594873","poster":"macxsz","timestamp":"1651298400.0","content":"Correct answers:\nB. class Class_4(C,B): pass\nC. class Class_1(D): pass","upvote_count":"10"},{"comment_id":"1151298","comments":[{"comment_id":"1159743","poster":"Damon54","content":"Sure ?!?","upvote_count":"1","timestamp":"1708953120.0"}],"timestamp":"1708031400.0","poster":"kstr","upvote_count":"1","content":"A. class Class_3(A,C): pass\n\nThis class declaration is proper based on the assumed inheritance set.\nIt correctly inherits from classes A and C.\nB. class Class_4(C,B): pass\n\nThis class declaration is also proper based on the assumed inheritance set.\nIt correctly inherits from classes C and B.\nC. class Class_1(D): pass\n\nThis class declaration is not proper based on the assumed inheritance set.\nIt tries to inherit from class D, but D doesn't exist in the assumed inheritance set.\nD. class Class_2(A,B): pass\n\nThis class declaration is not proper based on the assumed inheritance set.\nIt tries to inherit from classes A and B, which is fine, but it doesn't cover all the necessary classes in the inheritance set (specifically, class C and its descendants).\nSo, the proper class declarations are:\n\nA. class Class_3(A,C): pass\nB. class Class_4(C,B): pass"},{"poster":"Damon54","comment_id":"1145544","timestamp":"1707488340.0","content":"A. class Class_3(A,C): pass, it does not work because if the variable or method is not found in A it will not even be found in C as C inherits from A\n\nD. class Class_2(A,B): pass, the same thing doesn't work because if the variable or method is not found in A it won't even be found in B as B inherits from A","upvote_count":"1"},{"timestamp":"1706367840.0","poster":"seaverick","content":"Selected Answer: BC\nclass A:\n pass\nclass B(A):\n pass\nclass C(A):\n pass\nclass D(B,C):\n pass\n\n#class Class_3(A,C): pass #TypeError: Cannot create a consistent method resolution order (MRO) for bases A, C\nclass Class_4(C,B): pass\nclass Class_1(D): pass\n#class Class_2(A,B): pass #TypeError: Cannot create a consistent method resolution order (MRO) for bases A, B\n\nAns is B,C","comment_id":"1133427","upvote_count":"2"},{"content":"Selected Answer: BC\nA and D will have MRO error, it should be\nA. class Class_3(C,A): pass\nD. class Class_2(B,A): pass","upvote_count":"3","comment_id":"741718","timestamp":"1670764140.0","poster":"Nenggg"},{"upvote_count":"1","comment_id":"689153","poster":"haly","timestamp":"1665219780.0","content":"Selected Answer: BC\nB and C are correct because you cant invoke a parent class first"},{"poster":"alfonsocav1982","timestamp":"1661698620.0","comment_id":"652995","content":"Selected Answer: BC\nB and C are correct","upvote_count":"1"},{"comment_id":"650342","content":"Correct answer should be B and C.","poster":"Jnanada","timestamp":"1661181660.0","upvote_count":"1"},{"content":"I also agree, B and C are correct.\nSwitch to voting comment, so that Community vote distribution is displayed after Reveal Solution.","comment_id":"643657","poster":"dsirak","timestamp":"1659864840.0","upvote_count":"1"}],"choices":{"C":"class Class_1(D): pass","B":"class Class_4(C,B): pass","D":"class Class_2(A,B): pass","A":"class Class_3(A,C): pass"},"question_images":["https://www.examtopics.com/assets/media/exam-media/04235/0010600002.png"],"answer_description":"","isMC":true,"answer_ET":"BC","topic":"1","url":"https://www.examtopics.com/discussions/python-institute/view/74954-exam-pcap-topic-1-question-134-discussion/","answers_community":["BC (100%)"],"answer":"BC","answer_images":[],"exam_id":192,"question_id":40}],"exam":{"lastUpdated":"12 Apr 2025","id":192,"numberOfQuestions":141,"name":"PCAP","isImplemented":true,"provider":"Python-institute","isMCOnly":false,"isBeta":false},"currentPage":8},"__N_SSP":true}