{"pageProps":{"questions":[{"id":"rlK0305GfPiIRfCabxiE","question_text":"Which of these statements about Terraform Enterprise workspaces is false?","url":"https://www.examtopics.com/discussions/hashicorp/view/96142-exam-terraform-associate-topic-1-question-216-discussion/","answers_community":["B (100%)"],"timestamp":"2023-01-20 14:28:00","choices":{"A":"They can securely store cloud credentials","B":"You must use the CLI to switch between workspaces","D":"They have role-based access controls","C":"Plans and applies can be triggered via version control system integrations"},"exam_id":169,"isMC":true,"answer_ET":"B","discussion":[{"timestamp":"1691256120.0","comment_id":"799110","poster":"lezgino","upvote_count":"9","content":"B. You must use the CLI to switch between workspaces is false.\n\nTerraform Enterprise provides a web-based UI that allows you to switch between workspaces, view the state of your infrastructure, and run Terraform commands without having to use the command line interface.\n\nA. They can securely store cloud credentials is true.\nC. Plans and applies can be triggered via version control system integrations is true.\nD. They have role-based access controls is true."},{"comment_id":"1209006","timestamp":"1731180240.0","content":"Selected Answer: B\nIt's B for sure","upvote_count":"1","poster":"wirkmood"},{"timestamp":"1696146480.0","upvote_count":"1","comment_id":"857701","content":"Selected Answer: B\nB. You must use the CLI to switch between workspaces\n\nThis statement is false. In Terraform Enterprise, workspaces are designed to be managed through the web UI, API, or version control system (VCS) integrations, rather than using the Terraform CLI to switch between them. Each workspace in Terraform Enterprise corresponds to a specific environment or configuration, and you can manage them using the available integrations, allowing for better collaboration and automation.","poster":"camps"},{"upvote_count":"2","timestamp":"1694278020.0","content":"Selected Answer: B\nCorrect answer: B\n\nThe statement that is false is that \"You must use the CLI to switch between workspaces\" in Terraform Enterprise.\n\nTerraform Enterprise provides a web-based UI that allows you to switch between workspaces, view the state of your infrastructure, and run Terraform commands without having to use the command line interface.","poster":"gekkehenk","comment_id":"834275"},{"content":"Selected Answer: B\nAs lezgino says, it's B","timestamp":"1692882960.0","comment_id":"820657","poster":"rotimislaw","upvote_count":"1"},{"content":"Selected Answer: B\nB is correct","comment_id":"803959","upvote_count":"1","timestamp":"1691634180.0","poster":"Arrash"},{"upvote_count":"1","poster":"pyro7","content":"The correct answer is B","timestamp":"1691286540.0","comment_id":"799381"},{"content":"Selected Answer: B\nB you can switch workspaces from UI","comment_id":"789769","timestamp":"1690467780.0","poster":"PavelTech","upvote_count":"1"},{"poster":"Zeppoonstream","timestamp":"1689852480.0","comment_id":"782281","upvote_count":"1","content":"Selected Answer: B\nB. You must use the CLI to switch between workspaces\n\nThe statement that is false is that \"You must use the CLI to switch between workspaces\" in Terraform Enterprise.\n\nTerraform Enterprise provides a web-based UI that allows you to switch between workspaces, view the state of your infrastructure, and run Terraform commands without having to use the command line interface.\n\nA. They can securely store cloud credentials is true.\nC. Plans and applies can be triggered via version control system integrations is true.\nD. They have role-based access controls is true."}],"answer":"B","question_images":[],"answer_description":"","question_id":131,"topic":"1","unix_timestamp":1674221280,"answer_images":[]},{"id":"LpdCboYPuSaHUyDDrbsZ","choices":{"C":"State is used to enforce resource configurations that relate to compliance policies","D":"State is used to store variables and quickly reuse existing code","A":"State is used to map real world resources to your configuration and keep track of metadata","B":"State is a method of codifying the dependencies of related resources"},"discussion":[{"upvote_count":"4","timestamp":"1719316260.0","comment_id":"933530","content":"Selected Answer: A\nTextbook Ans:\nTerraform must store state about your managed infrastructure and configuration. This state is used by Terraform to map real world resources to your configuration, keep track of metadata, and to improve performance for large infrastructures.\nhttps://developer.hashicorp.com/terraform/language/state","poster":"[Removed]"},{"timestamp":"1719082620.0","poster":"March2023","content":"Selected Answer: A\nmetadata","comment_id":"930936","upvote_count":"1"},{"upvote_count":"1","comment_id":"876802","timestamp":"1713732660.0","poster":"FarziWaliMarzi","content":"Selected Answer: A\ndefinitely A"},{"upvote_count":"1","timestamp":"1712926020.0","content":"Selected Answer: A\nSelected Answer: A","poster":"bugalter","comment_id":"868370"},{"content":"Selected Answer: A\nThe purpose of state in Terraform is to map real-world resources to your configuration and keep track of metadata. Terraform state plays a crucial role in tracking the relationships between your configuration and the actual resources provisioned in your infrastructure. This allows Terraform to understand the current state of your infrastructure, manage changes over time, and perform operations such as updating, destroying, or importing resources.","timestamp":"1712104080.0","poster":"Nunyabiznes","comment_id":"859428","upvote_count":"1"},{"comment_id":"857703","content":"Selected Answer: A\nA. State is used to map real world resources to your configuration and keep track of metadata\n\nIn Terraform, state serves the purpose of mapping real-world resources to your configuration and maintaining metadata about those resources. The state file records the current state of the infrastructure that Terraform manages, allowing Terraform to detect any differences between the actual infrastructure and the desired state defined in the configuration files. This information is crucial for planning and applying changes to the infrastructure in a consistent and reliable manner.","poster":"camps","timestamp":"1711957680.0","upvote_count":"1"},{"content":"A. State is used to map real world resources to your configuration and keep track of metadata.\n\nThe purpose of state in Terraform is to keep track of the current state of your infrastructure as defined by your configuration files. When you apply your configuration, Terraform creates a plan that describes the changes needed to move from the current state to the desired state. Once you apply the plan, Terraform updates the state file to reflect the new state of your infrastructure. The state file maps the resources you have created in the real world to the configuration in your Terraform code, and it also stores metadata such as resource IDs and IP addresses that may be needed for future updates or maintenance. This allows Terraform to manage and modify your infrastructure in a consistent and reliable way, and to ensure that your resources are always in the desired state.","comment_id":"857651","timestamp":"1711954980.0","poster":"tbhtp","upvote_count":"1"},{"upvote_count":"1","timestamp":"1711660500.0","content":"A is not correct, State try to matches the resources managed by Terraform config files, but not the real world resources/infra. So B is correct","comment_id":"853603","poster":"Ravi528"},{"poster":"SilentMilli","comment_id":"852604","content":"Selected Answer: A\nThe primary purpose of state is to map the desired state of your infrastructure as defined in your configuration to the actual state of your infrastructure in the real world. Terraform uses the state to determine what changes need to be made to bring the actual state of your infrastructure into line with the desired state specified in your configuration.","timestamp":"1711592220.0","upvote_count":"1"}],"url":"https://www.examtopics.com/discussions/hashicorp/view/104149-exam-terraform-associate-topic-1-question-217-discussion/","unix_timestamp":1679962620,"question_images":[],"answer_description":"","answer":"A","answers_community":["A (100%)"],"question_id":132,"isMC":true,"exam_id":169,"answer_images":[],"timestamp":"2023-03-28 02:17:00","answer_ET":"A","topic":"1","question_text":"Define the purpose of state in Terraform."},{"id":"psMbll89up9cMlMnNd4u","question_images":[],"question_id":133,"url":"https://www.examtopics.com/discussions/hashicorp/view/104150-exam-terraform-associate-topic-1-question-218-discussion/","isMC":true,"answer_images":[],"answer_description":"","choices":{"B":"Remote","A":"API","C":"Terraform Cloud","D":"Local","E":"HTTP"},"discussion":[{"comment_id":"1100503","content":"Selected Answer: D\nD. Local","poster":"awsexams","timestamp":"1718784180.0","upvote_count":"1"},{"content":"Selected Answer: D\nThe Terraform CLI uses the local backend by default, which stores the state file on the local disk of the machine running Terraform.","comment_id":"896741","timestamp":"1699892640.0","poster":"Jhaggar","upvote_count":"2"},{"timestamp":"1697921520.0","content":"Selected Answer: D\nLocal for sure","upvote_count":"1","poster":"FarziWaliMarzi","comment_id":"876803"},{"comment_id":"857705","poster":"camps","timestamp":"1696146540.0","content":"Selected Answer: D\nD. Local\n\nBy default, the Terraform CLI uses the local backend to store the state file. The local backend stores the state as a file on your local filesystem. If you want to use a different backend, such as a remote backend (e.g., Terraform Cloud) or other options like S3 or Consul, you need to configure the backend explicitly in your Terraform configuration files.","upvote_count":"3"},{"content":"Selected Answer: D\nThe Terraform CLI uses a local backend by default, which stores the state of your infrastructure in a local file named terraform.tfstate. This backend is simple to use and requires no additional setup, making it a good option for getting started with Terraform.","poster":"SilentMilli","comment_id":"852607","timestamp":"1695860340.0","upvote_count":"1"}],"answers_community":["D (100%)"],"answer_ET":"D","topic":"1","exam_id":169,"timestamp":"2023-03-28 02:19:00","unix_timestamp":1679962740,"answer":"D","question_text":"Which backend does the Terraform CLI use by default?"},{"id":"ITx7EACJqyjboIGseTFK","unix_timestamp":1679962800,"answer_ET":"B","answers_community":["B (100%)"],"timestamp":"2023-03-28 02:20:00","answer_description":"","url":"https://www.examtopics.com/discussions/hashicorp/view/104151-exam-terraform-associate-topic-1-question-219-discussion/","topic":"1","discussion":[{"upvote_count":"5","timestamp":"1680335400.0","poster":"camps","content":"Selected Answer: B\nB. False\n\nUsing the terraform state rm command does not destroy the actual resource. Instead, it removes the resource's entry from the Terraform state file. As a result, Terraform will no longer manage or track the resource. However, the resource itself will still exist in your infrastructure. If you want to destroy the resource, you should use the terraform destroy command or modify your configuration to remove the resource and run terraform apply.","comment_id":"857709"},{"poster":"333e1ab","timestamp":"1719184620.0","comment_id":"1236041","content":"Selected Answer: B\nHow does examTopics evaluate correct answers?","upvote_count":"2"},{"content":"Selected Answer: B\nit will update state file only","upvote_count":"2","timestamp":"1692259980.0","poster":"Tlakmini","comment_id":"983365"},{"upvote_count":"1","content":"Selected Answer: B\nwill update state file only","poster":"FarziWaliMarzi","comment_id":"877369","timestamp":"1682176080.0"},{"timestamp":"1681890900.0","comment_id":"874368","upvote_count":"1","poster":"AlenKumar","content":"Answer: B"},{"poster":"bugalter","comment_id":"867343","content":"Selected Answer: B\nB. False","timestamp":"1681219440.0","upvote_count":"1"},{"poster":"micropbl4","upvote_count":"1","timestamp":"1680117420.0","comment_id":"854863","content":"Selected Answer: B\nCommand just remove it from the state file, but didn't touch existing resources"},{"upvote_count":"1","comment_id":"852608","timestamp":"1679962800.0","content":"Selected Answer: B\nThe terraform state rm command removes a resource from the Terraform state file without destroying the actual resource in your infrastructure. This command is typically used when you want to delete a resource that was not created using Terraform, or when you want to remove a resource from the Terraform state file for some other reason, such as to re-create the resource using a different configuration.","poster":"SilentMilli"}],"choices":{"B":"False","A":"True"},"question_text":"Using the terraform state rm command against a resource will destroy it.","exam_id":169,"answer":"B","answer_images":[],"isMC":true,"question_id":134,"question_images":[]},{"id":"BrbpMiZE0GrcAVma47W1","answer":"B","question_images":[],"question_text":"terraform init initializes a sample main.tf file in the current directory.","answer_images":[],"unix_timestamp":1662042660,"timestamp":"2022-09-01 16:31:00","isMC":true,"answers_community":["B (73%)","A (27%)"],"answer_description":"","choices":{"B":"False","A":"True"},"exam_id":169,"topic":"1","url":"https://www.examtopics.com/discussions/hashicorp/view/79070-exam-terraform-associate-topic-1-question-22-discussion/","answer_ET":"B","discussion":[{"poster":"Jlee7","timestamp":"1703529300.0","comments":[{"content":"init will not create a state file. Only apply does.","poster":"tbhtp","timestamp":"1736495580.0","upvote_count":"1","comment_id":"1338745"},{"upvote_count":"3","poster":"vibzr2023","content":"The answer is False but terraform init will not create a empty main.tf file but will still initialize the directory for use with Terraform, setting up the necessary internal data structures and downloading providers specified in any Terraform configuration files that are present. If you run terraform init in an empty directory or a directory without any .tf files, Terraform will complete the initialization process but will indicate that no configuration files were found. You'll need to create main.tf or other .tf files manually. I ran a test\n------\nPS C:\\Users\\rajna\\OneDrive\\Documents\\TerraformCI> terraform init \nTerraform initialized in an empty directory!\n\nThe directory has no Terraform configuration files. You may begin working\nwith Terraform immediately by creating Terraform configuration files.\nPS C:\\Users\\rajna\\OneDrive\\Documents\\TerraformCI>","timestamp":"1727384700.0","comment_id":"1183689"}],"content":"The answer is False. The terraform init command does not initialize a sample main.tf file in the current directory. It initializes the working directory by downloading and installing provider plugins, downloading modules, and creating a Terraform state file.\n\nIf you do not have a main.tf file in your working directory, Terraform will create one for you. However, the file will be empty. You will need to add your Terraform configuration to the main.tf file.\n\nYou can find more information about the terraform init command in the Terraform documentation: https://www.terraform.io/docs/cli/commands/init.html","comment_id":"933761","upvote_count":"18"},{"timestamp":"1709563740.0","comment_id":"998542","comments":[{"poster":"Tyler2023","content":"The answer is B\nThe question says terraform init initializes a sample main.tf file, \nthink about the word \"sample\" meaning it creates the file which is terraform will not create that for you\nBy default, terraform init assumes that the working directory already contains a configuration and will attempt to initialize that configuration. It will never try to create a sample file with sample configuration for you. But the question says it creates that sample file, meaning the direction is empty.","timestamp":"1713698880.0","upvote_count":"2","comment_id":"1049435"},{"comment_id":"998551","content":"Those who are thinking its about creating main.tf. Question should have been \"terrafom init creates sample init file\" not initializes.","poster":"aanataliya","timestamp":"1709563920.0","upvote_count":"2"}],"upvote_count":"7","poster":"aanataliya","content":"Selected Answer: A\nAnswer is A. See below points.\n1. Question does not ask if it creates main.tf or not. it asks wheather main.tf initializes or not.\n2. Ran terraform init in empty directory and it warns \"The directory has no Terraform configuration files.\" it means it tries to find configuration file to initialize.\n3. configuration file can be of any name with .tf extension.\n4. ran command with main.tf in directory with extra curly braces and initialization fails. because it try to initialize main.tf\n5. rename main.tf with sample.tf with extra curly braces and it still gives same error.\n6. Official documentation says \"command initializes a working directory containing Terraform configuration files\". main.tf is a configuration file. Again, question never says it creates it. question clearly asks if main.tf is initialized. it means main.tf is already exists w.r.t. this question\nReference: https://developer.hashicorp.com/terraform/cli/commands/init\n\nPlease vote for this correct answer"},{"comment_id":"1351822","content":"Selected Answer: B\nTerraform works based on the file extensions (except *override.tf) and read all the files and then work on the entire code base. The logical separation of files (e.g. variables.tf, output.tf) is only for better readability but does impact the execution if written in a single file. terraform inti is only for initializing the providers and remote backend, if configured.","timestamp":"1738753980.0","upvote_count":"1","poster":"sumaju"},{"content":"main.tf is an option file. it might not exist. terraform init means to download all basic infrastructures from the configuration file. B false.","upvote_count":"2","comment_id":"1224684","timestamp":"1733405700.0","poster":"Molly1994"},{"poster":"SilentH","timestamp":"1728510960.0","comment_id":"1192520","content":"Selected Answer: B\nEven if the answer is somehow A, I'm voting B on principle.","upvote_count":"2"},{"timestamp":"1719517560.0","content":"The correct answer is B. False.\nThe terraform init command in Terraform is used to initialize a Terraform configuration in the current directory. It downloads the necessary provider plugins and sets up the backend configuration.\nHowever, terraform init does not create a sample main.tf file in the current directory. The main.tf file is the main configuration file in Terraform where you define your infrastructure resources and their configurations. It is typically created manually by the user and contains the desired state of the infrastructure.\nWhen you run terraform init, it looks for an existing main.tf file in the current directory to load the configuration. If the main.tf file does not exist, Terraform will not create it automatically.","upvote_count":"1","comment_id":"1107229","poster":"DianaPopal"},{"timestamp":"1709214960.0","comment_id":"995078","upvote_count":"4","poster":"Hp45","content":"A lot of people are taking this question as init command is creating a main.tf. The context in the question is - if there was a sample main.tf in current folder then init would initialize the file. I vote for A."},{"timestamp":"1704364920.0","comment_id":"942537","upvote_count":"2","poster":"Shane_C","content":"It absolutely does not generate a main.tf; B is the correct answer"},{"timestamp":"1703570460.0","upvote_count":"2","content":"A\nBecause terraform initialize *a sample main.tf* it means that we can have a multiple types of files like *.tf\nSo A is a good answer","poster":"DuboisNicolasDuclair","comment_id":"934020","comments":[]},{"poster":"karendavtyan","content":"Selected Answer: B\nB. False","timestamp":"1699198260.0","upvote_count":"1","comment_id":"890063"},{"comment_id":"885665","upvote_count":"2","timestamp":"1698798840.0","poster":"Ni33","content":"Selected Answer: B\nB is correct. It initializes versions and providers irrespective of name of the tf files."},{"comment_id":"869171","timestamp":"1697180460.0","poster":"Rezi","upvote_count":"2","content":"A is correct 100%\n\nterraform init initializes any file with the extension \".tf\" in the pwd. it says \"a\" sample main.tf, it didn't say \"the\" sample main.tf. Please note the difference."},{"comment_id":"863411","upvote_count":"2","timestamp":"1696641600.0","content":"B. False.\n\nThe terraform init command initializes a new or existing Terraform working directory by downloading and installing any necessary plugins and modules specified in the configuration. It does not create a main.tf file or any other configuration file in the current directory.\n\nYou will need to create a main.tf file (or another configuration file with a different name) manually and write the necessary configuration code for your infrastructure. Once you have done so, you can run terraform init to prepare the working directory for use with Terraform.","poster":"AzRNoob"},{"timestamp":"1696421040.0","comment_id":"860985","poster":"Faaizz","upvote_count":"1","content":"Selected Answer: B\nBBBBBBBB"},{"timestamp":"1696095360.0","comment_id":"856007","upvote_count":"1","content":"B for sure","poster":"Power123"},{"timestamp":"1695716580.0","upvote_count":"2","comment_id":"850830","content":"By default, terraform init assumes that the working directory already contains a configuration and will attempt to initialize that configuration.","poster":"sagunala5"},{"content":"Selected Answer: B\nThe terraform init command initializes a new or existing Terraform working directory by downloading and installing any required providers and modules, as well as setting up the backend. It does not create a sample main.tf file in the current directory. The main.tf file is a configuration file where you define the resources that you want to create using Terraform. It needs to be created manually by the user.","comments":[{"poster":"Shane_C","upvote_count":"1","content":"Not correct, init does not generate a main.tf for you; B is the correct answer","comment_id":"942539","timestamp":"1704364980.0"}],"poster":"Nunyabiznes","timestamp":"1695081060.0","comment_id":"843342","upvote_count":"2"},{"upvote_count":"1","comment_id":"843341","poster":"Nunyabiznes","content":"The terraform init command initializes a new or existing Terraform working directory by downloading and installing any required providers and modules, as well as setting up the backend. It does not create a sample main.tf file in the current directory. The main.tf file is a configuration file where you define the resources that you want to create using Terraform. It needs to be created manually by the user.","timestamp":"1695081000.0"},{"content":"Selected Answer: B\nIt's not a must for the file name to be \"main.tf\". It checks all .tf files in the current directory and does the needful.","poster":"Mal_8","comment_id":"812636","timestamp":"1692325080.0","upvote_count":"1"},{"upvote_count":"1","content":"The correct answer is B.\nCan you update the answer accordingly ?","timestamp":"1691321580.0","poster":"sprakashexamtopics","comment_id":"799766"},{"poster":"kartikjena31","upvote_count":"2","timestamp":"1689567180.0","content":"No init did not create that","comment_id":"778621"},{"poster":"fedeX","timestamp":"1688864520.0","content":"No, terraform init does not create a main.tf file. terraform init is used to initialize a Terraform working directory. It is typically run after you have written your Terraform configuration files and are ready to deploy a new infrastructure. terraform init performs several tasks, including:\n\nDownloading and installing any necessary plugins for the providers you are using\nInitializing the local backend for storing the state of your infrastructure\nVerifying that the configuration files in the working directory are syntactically correct\nYou will need to create a main.tf file yourself, or any other configuration files you want to use, before running terraform init. These configuration files should define the infrastructure you want to deploy using the HashiCorp Configuration Language (HCL).","comment_id":"770001","upvote_count":"2"},{"comment_id":"667768","content":"Should not be A? This is from official documentation https://www.terraform.io/cli/commands/init - \nThe terraform init command is used to initialize a working directory containing Terraform configuration files.\nAs per qstn, the configuration file is sample main.tf","comments":[{"comment_id":"942540","upvote_count":"1","timestamp":"1704365040.0","poster":"Shane_C","content":"Nowhere in the documentation does it say that init will generate a main.tf\n\nFrom the quote you put in your comment \"The terraform init command is used to initialize a working directory containing Terraform configuration files.\"\n\nEmphasis on \"containing Terraform configuration files\", you must create these configuration files yourself"}],"timestamp":"1678701840.0","upvote_count":"2","poster":"AmitRoy"},{"poster":"alex_cloud","upvote_count":"2","comment_id":"664646","timestamp":"1678377240.0","content":"Selected Answer: B\nTested. no main/sample file after init"},{"upvote_count":"2","timestamp":"1678351560.0","poster":"dinesh198728","comment_id":"664312","content":"Selected Answer: B\nNot require"},{"comment_id":"657998","timestamp":"1677818700.0","upvote_count":"3","poster":"empperador","content":"Selected Answer: B\nTerrform Init prepare the state storage, retrieves modules and retrieves plugins. B is the answer"},{"poster":"Burakko","timestamp":"1677688320.0","comment_id":"656363","upvote_count":"2","content":"Selected Answer: B\nterraform init does not initialize any sample tf file.\nThe correct answer is B."},{"content":"terraform init does not initialize any sample tf file. \nThe correct answer is B.","poster":"Burakko","comment_id":"656362","upvote_count":"2","timestamp":"1677688260.0"}],"question_id":135}],"exam":{"isMCOnly":false,"name":"Terraform Associate","id":169,"isBeta":false,"numberOfQuestions":347,"isImplemented":true,"provider":"Hashicorp","lastUpdated":"12 Apr 2025"},"currentPage":27},"__N_SSP":true}