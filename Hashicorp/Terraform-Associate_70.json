{"pageProps":{"questions":[{"id":"UBBS9mOU3piReV9pDkii","timestamp":"2022-04-30 19:56:00","discussion":[{"upvote_count":"25","comment_id":"615232","timestamp":"1655024100.0","comments":[{"content":"Option B's wording is too fuzzy.","comment_id":"734851","poster":"alirasouli","timestamp":"1670130120.0","upvote_count":"1"},{"comments":[{"content":"I don't think so, terraform will not generate the configuration changes you've maid manually, terraform apply will remove the configuration you've made that is not included in your tf files","comment_id":"1060500","poster":"Tyler2023","timestamp":"1698923700.0","upvote_count":"1"}],"content":"Terraform plan / apply runs a terraform refresh to update the state with infrastructure so B makes sense.","timestamp":"1690997700.0","upvote_count":"2","comment_id":"970420","poster":"msingh20"}],"poster":"AzureGurl","content":"IT should be B and C, however the wording is incorrect, Terraform Refresh will only update the state file for new changes via Az Console\n\nTerraform Plan does not change the State file, It will however say the diff in the state.\n\nThe Terraform apply will make the changes to the state file to keep it consistent. \n\nSo the wording of Option B is bit ambiguous."},{"upvote_count":"12","timestamp":"1664654400.0","content":"Selected Answer: C\nOnly C","comment_id":"684456","poster":"Nikita74"},{"upvote_count":"1","content":"Selected Answer: C\nthat state file needs to be updated as per the changes made in the console or terraform refresh to update","poster":"chessmaster5000","timestamp":"1741929720.0","comment_id":"1395522"},{"timestamp":"1738351380.0","comment_id":"1349651","upvote_count":"1","poster":"YesPlease","content":"Selected Answer: B\nAnswer: B and C\n\nif you make a change outside of Terraform, then the state file will not get updated until you run apply/plan in terraform to pull the latest infrastructure info and then save it to the state file."},{"upvote_count":"1","poster":"090200f","content":"B, C are correct answers","timestamp":"1720921680.0","comment_id":"1247578"},{"content":"I believe only option C is correct. I tested this by spinning up an EC2 instance in AWS using Terraform and then manually updating the \"Name\" tag in the AWS console. Immediately after that, when I ran terraform plan, it indicated that the tag would be changed from the Terraform-assigned value (\"TerraformCI\") to the manually applied value (\"Rajesh\"). This demonstrates that Terraform detects changes made outside of its management and plans to update the infrastructure accordingly.","timestamp":"1711745460.0","poster":"vibzr2023","comments":[{"timestamp":"1711745460.0","content":"terraform plan output\n# aws_instance.ec2_example will be updated in-place\n ~ resource \"aws_instance\" \"ec2_example\" {\n    id                  = \"i-037feb3cac6a58f05\"\n   ~ tags                 = {\n     ~ \"Name\" = \"TerraformCI\" -> \"Rajesh\"\n    }\n   ~ tags_all               = {\n     ~ \"Name\" = \"TerraformCI\" -> \"Rajesh\"\n    }\nterraform apply output\nupdate tag from TerraformCI to Rajesh","comments":[{"poster":"vibzr2023","content":"While prevailing sentiment leans towards options B and C, as evidenced by the popularity of ChatGPT's response, I posit that only option C is accurate. Definitive proof of option B's validity hinges on the demonstration of program output reflecting a successful state drift reconciliation.\nHere is the chatgpt answer when i demonstrated only C is correct.\n\nThank you for providing detailed information about your test and findings. Based on your description, it seems there was a misunderstanding regarding how Terraform interacts with external changes. \ncontinued.......","upvote_count":"1","comment_id":"1185669","comments":[{"upvote_count":"1","timestamp":"1711746180.0","comment_id":"1185671","poster":"vibzr2023","content":"When you manually changed the \"Name\" tag in the AWS console and then ran terraform plan, Terraform compared the actual infrastructure state (with the \"Name\" tag set to \"Rajesh\") against what's defined in your Terraform configuration (where the tag might be set to \"TerraformCI\"). Seeing the discrepancy, Terraform planned to update the resource to match the configurationâ€”changing the tag back to \"TerraformCI\". This behavior is expected and demonstrates Terraform's goal to ensure the infrastructure matches the configuration specified in your .tf files.\ncontinued...."}],"timestamp":"1711746120.0"}],"poster":"vibzr2023","comment_id":"1185664","upvote_count":"2"}],"comment_id":"1185663","upvote_count":"2"},{"content":"Selected Answer: BC\nB and C","upvote_count":"2","timestamp":"1709632080.0","poster":"Absence379","comment_id":"1166338"},{"poster":"mattuyghur","content":"Selected Answer: BC\nshould be B and C","timestamp":"1707013320.0","comment_id":"1139725","upvote_count":"1"},{"timestamp":"1698923520.0","poster":"Tyler2023","content":"I don't think B is an answer here\nWhen you change any configuration manually outside your terraform configuration\nThe next time your run terraform apply, terraform will revert your manual changes\nand follow what is defined in your configuration files\n\nSo answer i C","comment_id":"1060499","upvote_count":"1"},{"comment_id":"1046187","content":"Selected Answer: BC\nB. This is true, but with an important distinction. Terraform doesn't automatically detect changes made outside of it. If you modify resources directly in Azure (outside of Terraform), during the next terraform plan or terraform apply, there might be a discrepancy between the state file and the actual infrastructure. Terraform will then propose to reconcile this difference, which could involve changing or recreating the affected resources.\n\nC. This is true. The Terraform state file isn't automatically updated when changes are made outside of Terraform, such as directly in the Azure Cloud Console.","upvote_count":"2","poster":"brax404","timestamp":"1697559180.0"},{"upvote_count":"1","poster":"Pikopo","timestamp":"1696243440.0","content":"the correct answer are B and C","comment_id":"1023014"},{"upvote_count":"1","timestamp":"1695962040.0","poster":"gofavad926","content":"Selected Answer: BC\nBC\nWhen a change is made to the resources via the Azure Cloud Console, the current state file will not be updated.\nTerraform will update the state file to reflect the changes made to the resources via the Azure Cloud Console during the next plan or apply.","comment_id":"1020449"},{"content":"Selected Answer: BC\nThe correct answer is B&C","timestamp":"1693096740.0","upvote_count":"1","comment_id":"991147","poster":"debabrata6983"},{"upvote_count":"1","comment_id":"974488","poster":"Rajmane","content":"Selected Answer: BC\nThe right answer is B & C","timestamp":"1691393760.0"},{"poster":"modarov","content":"B. When a change is made to the resources via the Azure Cloud Console, Terraform will update the state file to reflect them during the next plan or apply\nC. When a change is made to the resources via the Azure Cloud Console, the current state file will not be updated","comment_id":"972838","upvote_count":"1","timestamp":"1691227380.0"},{"upvote_count":"1","content":"Selected Answer: BC\nb and c","poster":"March2023","comment_id":"924639","timestamp":"1686870420.0"},{"content":"Selected Answer: BC\nB & C are the correct answer.","timestamp":"1686807600.0","comment_id":"923741","poster":"milan92stankovic","upvote_count":"1"},{"upvote_count":"1","poster":"Taalai","comment_id":"905159","timestamp":"1684868160.0","content":"according to Chat GPT is B and D"},{"content":"Selected Answer: BC\nBC for sure","comment_id":"900599","timestamp":"1684369200.0","upvote_count":"2","poster":"sdm13168"},{"comment_id":"893133","upvote_count":"2","poster":"Ni33","content":"Selected Answer: BC\nB and C are the correct answers","timestamp":"1683639480.0"},{"poster":"kiran15789","upvote_count":"2","content":"Selected Answer: BC\nB and C are the correct scenarios when using Terraform to deploy resources into Azure.","comment_id":"891592","timestamp":"1683480120.0"},{"timestamp":"1680272280.0","upvote_count":"2","content":"Selected Answer: BC\nB and C are the correct scenarios when using Terraform to deploy resources into Azure.\n\nB is true because Terraform tracks the desired state of the resources defined in the configuration file in the state file. When a change is made to the resources via the Azure Cloud Console, Terraform will detect the difference between the desired state and the actual state of the resources during the next plan or apply, and will update the state file to reflect the changes.\n\nC is also true because the current state file will not be updated if changes are made outside of Terraform, and Terraform will not be aware of those changes until the next plan or apply is run. Therefore, it is important to avoid making changes directly in the Azure Cloud Console if Terraform is being used to manage those resources.\n\nA and D are not true scenarios because changes made outside of Terraform will not be recorded in the current state file until the next plan or apply is run, and the changes made in the Azure Cloud Console will not be automatically recorded in the state file.","poster":"camps","comment_id":"857168"},{"timestamp":"1680224700.0","comment_id":"856503","upvote_count":"1","content":"B and C","poster":"Power123"},{"upvote_count":"1","poster":"Nunyabiznes","timestamp":"1679682180.0","comment_id":"849531","comments":[{"comment_id":"849532","content":"Option B is correct because Terraform is designed to be idempotent, meaning that it will always attempt to bring the current infrastructure state into the desired state defined in the configuration file. Therefore, it will update the state file to reflect any changes made outside of Terraform.\n\nOption D is correct because any changes made through the Azure Cloud Console will be recorded in the current state file, as the state file is used to keep track of the current state of the infrastructure.\n\nOption A is incorrect because changes made through the Azure Cloud Console will not create a new state file. The state file is specific to the Terraform configuration and is used to keep track of the current state of the infrastructure.\n\nOption C is incorrect because changes made through the Azure Cloud Console will be reflected in the state file during the next plan or apply. The state file is used to keep track of the current state of the infrastructure, regardless of how changes are made.","upvote_count":"1","timestamp":"1679682180.0","poster":"Nunyabiznes"}],"content":"Selected Answer: BD\nThe correct answers are:\n\nB. When a change is made to the resources via the Azure Cloud Console, Terraform will update the state file to reflect them during the next plan or apply.\n\nD. When a change is made to the resources via the Azure Cloud Console, the changes are recorded in the current state file."},{"upvote_count":"2","content":"I think is B and D","comment_id":"810588","timestamp":"1676546820.0","poster":"ealdui"},{"timestamp":"1675716720.0","poster":"agmesas","content":"Selected Answer: BC\nIn answer B, spanish languague should have a ',' between them and during stopping the reading, so no changes in state file until the next apply or plan that produces a auto-refresh marking changes for being updated","upvote_count":"1","comment_id":"800262"},{"content":"Selected Answer: BC\nB and C are both correct. Terraform plan DOES refresh the state file. extract from documentation . You don't need the (deprecated) refresh command to update state file. \n\nNewer option terraform plan -refresh lets you review changes to state file before modifying it. \n\nterraform refresh (deprecated) \nhttps://developer.hashicorp.com/terraform/cli/commands/refresh\n\nYou shouldn't typically need to use this command, because Terraform automatically performs the same refreshing actions as a part of creating a plan in both the terraform plan and terraform apply commands. This command is here primarily for backward compatibility, but we don't recommend using it because it provides no opportunity to review the effects of the operation before updating the state.","comment_id":"787926","timestamp":"1674666480.0","poster":"Kurp","upvote_count":"2"},{"upvote_count":"1","timestamp":"1670533200.0","content":"Selected Answer: BC\nB and C","comment_id":"739467","poster":"wanrltw"},{"upvote_count":"1","comment_id":"686452","timestamp":"1664920980.0","content":"B and C","poster":"Bobby1977"},{"timestamp":"1664638740.0","upvote_count":"3","comment_id":"684313","poster":"asudhin","content":"Selected Answer: C\none of the option is C for sure"},{"poster":"RVivek","timestamp":"1663998780.0","comment_id":"677634","content":"Selected Answer: BC\nA & D are wrong.\nA -- new state file is absudr\nD - After manaula resource upadte , outside Terraform, the sate file will be upadted only in next plan/refresh/apply","upvote_count":"2"},{"comment_id":"677216","timestamp":"1663941180.0","upvote_count":"3","poster":"sudaraka","content":"Selected Answer: C\nOnly C is correct. Terraform plan doesn't make any changes in state file."},{"poster":"PBSH56","timestamp":"1663417020.0","upvote_count":"2","content":"Option B and C are correct. When I make cahnges in console then nothing is happen in state file and after next plan or apply state file will update So option B and C correct.","comment_id":"671493"},{"poster":"dinesh198728","timestamp":"1662786180.0","upvote_count":"2","content":"Selected Answer: C\nonly C","comment_id":"665085"},{"comment_id":"660911","poster":"keiffo2","upvote_count":"2","content":"When making changes via the GUI - the console - the state file dosn't get updated. The Console is ignorant of the state file. So C is the only answer. When a change is made to the resources via the Azure Cloud Console, the current state file will not be updated","timestamp":"1662447660.0"},{"content":"if only one answer is accepted C is correct and the only one","upvote_count":"3","poster":"kopper2019","timestamp":"1661304540.0","comment_id":"651048"},{"timestamp":"1660896780.0","upvote_count":"1","poster":"bukake","content":"Selected Answer: C\nWell C seems correct, am doubting B but when you look that A is 100% not correct along with D then we are left with BC","comment_id":"648808"},{"content":"Selected Answer: B\nB is correct in terms of \"Does tf offer any functionality to update state, and if so, how do you achieve it?\"\nC can be interpreted as \"tf will never update state, no matter what\"","comment_id":"647610","poster":"tbhtp","timestamp":"1660647660.0","upvote_count":"1"},{"timestamp":"1660534140.0","poster":"donathon","comment_id":"647004","content":"Selected Answer: B\nBC is the correct answer","upvote_count":"3"},{"comments":[{"content":"If you think about C like \"tf will NEVER update state\" it is easy to pick B instead. \nStill both are correct depending what precisely was asked. B still is a little more true than C as if you want tf to update state it can.","timestamp":"1660647600.0","poster":"tbhtp","comment_id":"647608","upvote_count":"1"}],"timestamp":"1657260900.0","comment_id":"628638","content":"Selected Answer: C\nB and C are correct answers. \nCould not select more than one answer.","upvote_count":"3","poster":"Eltooth"},{"timestamp":"1656529740.0","upvote_count":"1","content":"B is wrong cause terraform plan doesn't reflect the state file at all. a, d are wrong. choose two looks like wrong.","poster":"Oskar_Madin","comment_id":"624857"},{"upvote_count":"1","timestamp":"1656476160.0","comment_id":"624410","content":"Selected Answer: B\nB and C are correct answers.","poster":"Eltooth"},{"content":"Selected Answer: B\nYes B & C","comment_id":"603081","timestamp":"1652830740.0","upvote_count":"1","poster":"bigboi23"},{"content":"Selected Answer: B\nYes Band C","timestamp":"1651650000.0","poster":"vitasac","comment_id":"596584","upvote_count":"3"},{"comment_id":"595187","upvote_count":"2","timestamp":"1651341360.0","content":"correct answers are B & C","poster":"Ipergorta"}],"url":"https://www.examtopics.com/discussions/hashicorp/view/74985-exam-terraform-associate-topic-1-question-98-discussion/","choices":{"C":"When a change is made to the resources via the Azure Cloud Console, the current state file will not be updated","B":"When a change is made to the resources via the Azure Cloud Console, Terraform will update the state file to reflect them during the next plan or apply","A":"When a change is made to the resources via the Azure Cloud Console, the changes are recorded in a new state file","D":"When a change is made to the resources via the Azure Cloud Console, the changes are recorded in the current state file"},"answer_description":"","question_id":346,"exam_id":169,"question_images":[],"answer":"C","question_text":"When using Terraform to deploy resources into Azure, which scenarios are true regarding state files? (Choose two.)","isMC":true,"answer_ET":"C","unix_timestamp":1651341360,"topic":"1","answers_community":["C (42%)","BC (40%)","Other"],"answer_images":[]},{"id":"19rmqoqkDqOEJGpqVOCi","question_text":"You need to deploy resources into two different cloud regions in the same Terraform configuration. To do that, you declare multiple provider configurations as follows:\n//IMG//\n\nWhat meta-argument do you need to configure in a resource block to deploy the resource to the `us-west-2` AWS region?","answer_description":"","discussion":[{"poster":"bp339","upvote_count":"14","timestamp":"1685835720.0","comment_id":"611275","content":"Selected Answer: C\nhttps://www.terraform.io/language/providers/configuration"},{"poster":"Bere","timestamp":"1730541840.0","comment_id":"1060451","upvote_count":"2","content":"Selected Answer: C\nFor us-east-1:\nresource \"aws_instance\" \"example_east\" {\n ami = \"ami-abc12345\"\n instance_type = \"t2.micro\"\n\n // No provider meta-argument specified, so it uses the default (us-east-1)\n}\n\nFor us-west-2:\nresource \"aws_instance\" \"example_west\" {\n ami = \"ami-xyz67890\"\n instance_type = \"t2.micro\"\n\n provider = aws.west // This directs Terraform to use the 'us-west-2' region provider configuration\n}\n\nWith this setup, Terraform will deploy the example_east instance in the us-east-1 region and the example_west instance in the us-west-2 region."},{"poster":"Ni33","timestamp":"1715262120.0","comment_id":"893134","upvote_count":"2","content":"Selected Answer: C\nCCCCCCCCCCC"},{"content":"Answer is C","timestamp":"1711847520.0","comment_id":"856508","upvote_count":"1","poster":"Power123"},{"content":"Selected Answer: C\nDefinitely, C is the correct answer.\nhttps://www.terraform.io/language/providers/configuration","upvote_count":"2","timestamp":"1711727280.0","poster":"thor7","comment_id":"854484"},{"timestamp":"1709272740.0","upvote_count":"1","comment_id":"825555","poster":"Nzudin","content":"https://developer.hashicorp.com/terraform/language/providers/configuration#selecting-alternate-provider-configurations"},{"upvote_count":"1","poster":"Eltooth","timestamp":"1688013660.0","content":"Selected Answer: C\nC is correct answer.","comment_id":"624418"},{"content":"alias is not meta-argument\nc is correct","timestamp":"1687187880.0","poster":"Zam88","comment_id":"618735","upvote_count":"2"},{"comment_id":"611167","content":"Selected Answer: C\nC is Correct","timestamp":"1685810520.0","upvote_count":"2","poster":"elvancedonzy"},{"comment_id":"604207","comments":[{"timestamp":"1687171260.0","upvote_count":"2","poster":"CHRIS12722222","comment_id":"618639","content":"No, C is correct"}],"upvote_count":"3","content":"I think the right answer is D alias is used in the argument and AWS.WEST is the \nright way to write the argument","poster":"concepts015","timestamp":"1684546080.0"},{"comment_id":"603818","upvote_count":"3","timestamp":"1684494120.0","content":"Selected Answer: C\nC is correct","poster":"Roro_Brother"},{"timestamp":"1684366920.0","poster":"bigboi23","comment_id":"603084","content":"Selected Answer: C\nConfirmed. C is correct.","upvote_count":"2"},{"comment_id":"600556","timestamp":"1683885900.0","poster":"Orpheus123","upvote_count":"4","content":"C - is the correct answer"},{"comment_id":"599886","timestamp":"1683779760.0","content":"answer is C","upvote_count":"1","poster":"traceme"}],"choices":{"A":"alias = west","D":"alias = aws.west","B":"provider = west","C":"provider = aws.west"},"exam_id":169,"answers_community":["C (100%)"],"answer":"C","unix_timestamp":1652243760,"url":"https://www.examtopics.com/discussions/hashicorp/view/75456-exam-terraform-associate-topic-1-question-99-discussion/","answer_images":[],"answer_ET":"C","topic":"1","timestamp":"2022-05-11 06:36:00","isMC":true,"question_images":["https://www.examtopics.com/assets/media/exam-media/04279/0005900001.png"],"question_id":347}],"exam":{"provider":"Hashicorp","isMCOnly":false,"id":169,"lastUpdated":"12 Apr 2025","isBeta":false,"numberOfQuestions":347,"name":"Terraform Associate","isImplemented":true},"currentPage":70},"__N_SSP":true}