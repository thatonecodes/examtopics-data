{"pageProps":{"questions":[{"id":"gVLmCHwURxg6q8sDSNuq","question_id":111,"choices":{"B":"False","A":"True"},"unix_timestamp":1673633520,"question_text":"Terraform destroy is the only way to remove infrastructure.","topic":"1","answers_community":["B (100%)"],"answer_ET":"B","answer_description":"","answer":"B","url":"https://www.examtopics.com/discussions/hashicorp/view/95076-exam-terraform-associate-topic-1-question-199-discussion/","isMC":true,"discussion":[{"comment_id":"833989","content":"B. by commenting the resource block in the configuration file will also destroy the resources","timestamp":"1709990280.0","upvote_count":"6","poster":"Basavaraju_V"},{"comment_id":"1053985","timestamp":"1729885680.0","upvote_count":"3","content":"Selected Answer: B\nFalse: the primary way to delete infrastructure managed by Terraform is to remove the corresponding declarations from your configuration and run terraform apply.\n\nterraform destroy (or, equivalently, terraform apply -destroy) is for the less common situation where you want to destroy everything managed by a particular configuration, which is not an everyday operation for long-lived infrastructure but can be useful for short-lived infrastructure such as one-time testing environments.\n\nhttps://discuss.hashicorp.com/t/is-terraform-destroy-the-only-way/36619/4","poster":"ramzez4815"},{"upvote_count":"4","poster":"Pietjeplukgeluk","content":"\"terraform apply -destroy\" would be an alias for \"terraform destroy\" B for sure","timestamp":"1707887460.0","comment_id":"808089"},{"content":"B for Sure","upvote_count":"1","poster":"ArizonaClassics","timestamp":"1705182420.0","comment_id":"774888"},{"comment_id":"774766","timestamp":"1705169520.0","upvote_count":"1","content":"correct, you can also remove the resource definition in the state file if you previously stated it, it will detect the resource definition is absent and will delete the resource\n\nUnless you state the resource, but someone delete it manually, it will recreate it","comments":[{"timestamp":"1721885640.0","content":"if you remove just from state, terrafrom will forgot about resource and just create new one on next apply, so first instance will not be deleted","comment_id":"962371","upvote_count":"1","poster":"JohnGasp"}],"poster":"nakikoo"}],"question_images":[],"exam_id":169,"answer_images":[],"timestamp":"2023-01-13 19:12:00"},{"id":"F7rP9gqUN1mJOKZRRj2z","url":"https://www.examtopics.com/discussions/hashicorp/view/75671-exam-terraform-associate-topic-1-question-2-discussion/","answer_images":[],"unix_timestamp":1652674020,"timestamp":"2022-05-16 06:07:00","question_id":112,"answer_description":"","question_text":"One remote backend configuration always maps to a single remote workspace.","answer_ET":"B","isMC":true,"topic":"1","answers_community":["B (88%)","13%"],"question_images":[],"exam_id":169,"discussion":[{"content":"Selected Answer: B\n1 workspace -> 1 backend\n1 backend -> multiple workspaces","comment_id":"1098113","poster":"Spandrop","upvote_count":"12","timestamp":"1702726560.0"},{"content":"Selected Answer: B\ncorrect B","upvote_count":"9","poster":"Zam88","comment_id":"618807","timestamp":"1655665080.0"},{"timestamp":"1740952500.0","comment_id":"1364138","content":"Selected Answer: B\nThe remote backend can work with either a single remote HCP Terraform workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\nTo use a single remote HCP Terraform workspace, set workspaces.name to the remote workspace's full name (like networking-prod).","upvote_count":"1","poster":"eLJoudi"},{"content":"Selected Answer: B\nA single remote backend configuration can support multiple remote workspaces. In Terraform, remote backends like Terraform Cloud or remote state storage solutions can manage multiple workspaces, each representing a different environment or set of infrastructure, all within the same backend configuration.","poster":"erif","upvote_count":"1","comment_id":"1294291","timestamp":"1728307500.0"},{"poster":"SIAMIANJI","comment_id":"912437","upvote_count":"2","content":"Selected Answer: B\nThe remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\n\nTo use a single remote Terraform Cloud workspace, set workspaces.name to the remote workspace's full name (like networking-prod).\n\nTo use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use Terraform cloud workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple Terraform Cloud workspaces.\nhttps://developer.hashicorp.com/terraform/language/settings/backends/remote","timestamp":"1727168820.0"},{"comment_id":"1252744","poster":"purvakdevops91","timestamp":"1721602500.0","content":"Answer should be B False.\n\nWorkspaces (offical documentation --> https://developer.hashicorp.com/terraform/language/settings/backends/remote#workspaces)\nThe remote backend can work with either a single remote HCP Terraform workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\n\nTo use a single remote HCP Terraform workspace, set workspaces.name to the remote workspace's full name (like networking-prod).\n\nTo use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use HCP Terraform workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple HCP Terraform workspaces.","upvote_count":"1"},{"comment_id":"1246390","timestamp":"1720745220.0","poster":"hrajkuma","upvote_count":"1","content":"vote for B. False"},{"upvote_count":"2","poster":"090200f","content":"The remote backend can work with either a single remote HCP Terraform workspace, or with multiple similarly-named remote workspaces, so B is correct answer","comment_id":"1244047","timestamp":"1720402560.0"},{"poster":"liuyomz","upvote_count":"1","content":"Selected Answer: B\nB. prefix switching","timestamp":"1713888840.0","comment_id":"1200813"},{"poster":"6957dbd","comment_id":"1170315","upvote_count":"5","content":"Selected Answer: B\nThe prefix switch is key here:\n\nprefix - (Optional) A prefix used in the names of one or more remote workspaces, all of which can be used with this configuration. The full workspace names are used in Terraform Cloud, and the short names (minus the prefix) are used on the command line for Terraform CLI workspaces. If omitted, only the default workspace can be used. This option conflicts with name.\n\nTo use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use Terraform cloud workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple Terraform Cloud workspaces.\n\nThe backend configuration requires either name or prefix. Omitting both or setting both results in a configuration error.","timestamp":"1710074100.0"},{"comment_id":"1100923","upvote_count":"4","content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/language/settings/backends/remote\n\"To use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use Terraform cloud workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple Terraform Cloud workspaces.\"","timestamp":"1703012820.0","poster":"TigerInTheCloud"},{"poster":"luxdolorosa","upvote_count":"3","content":"Selected Answer: B\nI am working with GitLab, and I can create multiple instances within a single backend space","timestamp":"1700054040.0","comment_id":"1071465"},{"upvote_count":"1","content":"Correct B","poster":"NKSINGH","timestamp":"1699524300.0","comment_id":"1066324"},{"poster":"esuarve","timestamp":"1695967020.0","upvote_count":"2","comment_id":"1020510","content":"Selected Answer: B\nYour explanation actually states that a remote backend can work with multiple similarly-named remote workspaces (like networking-dev and networking-prod)\n\nThe answer A would not allow this"},{"timestamp":"1695039480.0","poster":"arnabsinha4u","upvote_count":"1","content":"Selected Answer: B\ncorrect B\nhttps://developer.hashicorp.com/terraform/language/settings/backends/remote#workspaces","comment_id":"1010567"},{"upvote_count":"2","content":"B.\nA remote backend configuration is used to define where the Terraform state is stored, and it can be shared by multiple workspaces, each of which maintains its own separate state.","timestamp":"1693322940.0","poster":"ledjo","comment_id":"993212"},{"upvote_count":"1","timestamp":"1692229380.0","poster":"paromanu007","content":"The remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\n\nCorrect B","comment_id":"983109"},{"content":"B. False","comment_id":"965382","upvote_count":"1","timestamp":"1690532460.0","poster":"Jayanth"},{"upvote_count":"2","content":"Selected Answer: B\n1) Example using workspaces.name\nThis example demonstrates the use of a single remote Terraform Cloud workspace by specifying the workspace name.\nterraform {\n...\n workspaces {\n name = \"networking-prod\"\n }\n }\n}\nIn this configuration, all the Terraform commands will be applied to the networking-prod workspace in Terraform Cloud.\n\n2) Example using workspaces.prefix\nThis example demonstrates the use of multiple remote Terraform Cloud workspaces that share a common prefix.\nterraform {\n...\n workspaces {\n prefix = \"networking-\"\n }\n }\n}\nIn this configuration, Terraform commands will apply to any workspace that starts with networking-, such as networking-dev, networking-prod, networking-test, etc. The specific workspace that the commands apply to is determined by the currently selected Terraform CLI workspace. You can switch between workspaces using the terraform workspace select command.","comment_id":"964645","timestamp":"1690457100.0","poster":"Bere"},{"comment_id":"960501","upvote_count":"1","content":"Selected Answer: B\nthe correct answer B","poster":"Busi57","timestamp":"1690122300.0"},{"timestamp":"1686648780.0","poster":"ska_torrent_430","comment_id":"922110","upvote_count":"1","content":"Selected Answer: B\nCorrect B"},{"timestamp":"1686103020.0","poster":"abhi6199","upvote_count":"1","comment_id":"916782","content":"Selected Answer: B\nThe correct Answer is B.\nhttps://developer.hashicorp.com/terraform/language/settings/backends/remote#workspaces"},{"comment_id":"896270","upvote_count":"1","poster":"wsyh","content":"Selected Answer: A\nCorrect A","timestamp":"1683933360.0"},{"poster":"FarziWaliMarzi","timestamp":"1682159820.0","comment_id":"877201","upvote_count":"1","content":"Selected Answer: A\nI think that we need to think of configuration here, not backend. So Backend Configuration will always work with one workspace. It cannot point to Dev, PreProd and Prod workspaces at the same time. Hence answer will be TRUE."},{"content":"Selected Answer: B\nWorkspaces\nThe remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:","poster":"Musti35","timestamp":"1681643220.0","upvote_count":"1","comment_id":"871679"},{"poster":"acheiron","timestamp":"1678826760.0","comment_id":"839265","upvote_count":"2","content":"\"A\" is correct, but the wording of the question is subtle. The keyword is \"configuration.\" A remote backend may have multiple configurations, but each configuration always corresponds to one workspace."},{"content":"B : https://developer.hashicorp.com/terraform/language/settings/backends/remote","timestamp":"1677328320.0","comment_id":"821472","upvote_count":"1","poster":"r1ck"},{"upvote_count":"4","content":"Selected Answer: A\nAccording to the official Terraform documentation:\n\nEach backend configuration is associated with exactly one workspace. When configuring the backend, you must specify the name of the workspace to use, and Terraform will store the state data in that workspace. When you run Terraform commands, the state data for the associated workspace is loaded from the remote backend and compared against the configuration to detect drift.\n\nSource: Terraform Backends https://www.terraform.io/docs/backends/index.html","poster":"princajen","comment_id":"811039","timestamp":"1676575620.0"},{"upvote_count":"1","poster":"Sanchitdevops","content":"Selected Answer: B\nB is correct","timestamp":"1671018960.0","comment_id":"745020"},{"timestamp":"1670558760.0","content":"Selected Answer: B\nThe remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\n\nTo use a single remote Terraform Cloud workspace, set workspaces.name to the remote workspace's full name (like networking-prod).\n\nTo use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use Terraform cloud workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple Terraform Cloud workspaces.\nhttps://developer.hashicorp.com/terraform/language/settings/backends/remote","comment_id":"739742","upvote_count":"3","poster":"adouban"},{"poster":"resnef","comment_id":"726633","timestamp":"1669370940.0","content":"Selected Answer: B\nBere's comment describes it perfectly","upvote_count":"1"},{"comment_id":"726451","upvote_count":"1","poster":"stalos","timestamp":"1669359600.0","content":"Selected Answer: B\nNot always"},{"content":"Selected Answer: B\nAs described here:\nhttps://www.terraform.io/language/settings/backends/remote\nThe remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod).","upvote_count":"3","comments":[{"content":"but it mentions \"remote configuration\"","upvote_count":"1","comment_id":"861577","timestamp":"1680649320.0","poster":"Nunyabiznes"}],"comment_id":"693322","timestamp":"1665599520.0","poster":"Bere"},{"poster":"geekneek","timestamp":"1660595100.0","comment_id":"647354","content":"Selected Answer: B\nThe remote backend can work with either a single remote Terraform Cloud workspace, or with multiple similarly-named remote workspaces (like networking-dev and networking-prod). The workspaces block of the backend configuration determines which mode it uses:\n\nTo use a single remote Terraform Cloud workspace, set workspaces.name to the remote workspace's full name (like networking-prod).\n\nTo use multiple remote workspaces, set workspaces.prefix to a prefix used in all of the desired remote workspace names. For example, set prefix = \"networking-\" to use Terraform cloud workspaces with names like networking-dev and networking-prod. This is helpful when mapping multiple Terraform CLI workspaces used in a single Terraform configuration to multiple Terraform Cloud workspaces.","upvote_count":"3"},{"content":"Selected Answer: A\nPoorly worded question and open to interpretation. \n\"The persistent data stored in the backend belongs to a workspace. Initially the backend has only one workspace, called \"default\", and thus there is only one Terraform state associated with that configuration.\n\nCertain backends support multiple named workspaces, allowing multiple states to be associated with a single configuration. The configuration still has only one backend, but multiple distinct instances of that configuration to be deployed without configuring a new backend or changing authentication credentials.\n\nNamed workspaces allow conveniently switching between multiple instances of a single configuration within its single backend. They are convenient in a number of situations, but cannot solve all problems.\n\nNamed workspaces allow conveniently switching between multiple instances of a single configuration within its single backend. They are convenient in a number of situations, but cannot solve all problems.\"\n\nhttps://www.terraform.io/language/state/workspaces","comment_id":"625068","upvote_count":"3","poster":"Eltooth","timestamp":"1656570420.0"},{"poster":"BigSteveO","timestamp":"1654793940.0","content":"B has to be correct, It says in the notes that it works with both a single remote workspace and multiple remote workspaces. lol So NO it doesn't only map to a single workspace.","upvote_count":"2","comment_id":"614114"},{"upvote_count":"3","content":"B is the correct answer","poster":"doumx","comment_id":"609892","timestamp":"1654027860.0"},{"comment_id":"604489","timestamp":"1653057480.0","poster":"bp339","content":"It is B","upvote_count":"3"},{"timestamp":"1652851200.0","upvote_count":"4","poster":"Parthasarathi","comment_id":"603162","content":"Selected Answer: B\nIt should be B"},{"content":"I take B","upvote_count":"3","poster":"softarts","comment_id":"602372","timestamp":"1652674020.0"}],"choices":{"B":"False","A":"True"},"answer":"B"},{"id":"hZXJWd7RUVp5i7iZIpZI","question_id":113,"answer":"BC","question_text":"You have provisioned some virtual machines (VMs) on Google Cloud Platform (GCP) using the gcloud command line tool. However, you are standardizing with\nTerraform and want to manage these VMs using Terraform instead.\nWhat are the two things you must do to achieve this? (Choose two.)","url":"https://www.examtopics.com/discussions/hashicorp/view/74316-exam-terraform-associate-topic-1-question-20-discussion/","isMC":true,"question_images":[],"topic":"1","unix_timestamp":1650804540,"exam_id":169,"answer_ET":"BC","timestamp":"2022-04-24 14:49:00","answers_community":["BC (100%)"],"choices":{"A":"Provision new VMs using Terraform with the same VM names","C":"Write Terraform configuration for the existing VMs","B":"Use the terraform import command for the existing VMs","D":"Run the terraform import-gcp command"},"discussion":[{"upvote_count":"33","timestamp":"1650804540.0","comment_id":"591055","content":"BC for sure","poster":"tipzzz"},{"comment_id":"618174","content":"Selected Answer: BC\nYou should create the equivalent configuration first, and then run import to load it on the state file.","poster":"fabiomlop","comments":[{"upvote_count":"1","poster":"prabdarq","content":"@fabiomlop... Is it so or either one of the process is sufficient? Kindly clarify","comments":[{"content":"Terraform is yet to find a solution to import the configuration of the existing resources. So you need to write the configuration and terraform import will update the state file only. BC is correct.","comment_id":"1351815","poster":"sumaju","upvote_count":"1","timestamp":"1738753440.0"}],"comment_id":"1318170","timestamp":"1732637940.0"}],"upvote_count":"18","timestamp":"1655546100.0"},{"comment_id":"805501","timestamp":"1727169780.0","upvote_count":"1","poster":"SilentMilli","content":"Selected Answer: BC\nTo manage the VMs that were provisioned using the gcloud command line tool using Terraform, you must first use the \"terraform import\" command to import the existing VMs into Terraform's state file. This allows Terraform to recognize the VMs and manage them as part of your infrastructure.\n\nAfter importing the VMs, you must then write Terraform configuration for the existing VMs. This includes defining the resources for the VMs and specifying the necessary configuration options, such as the instance type and image, as well as any other desired settings. By doing this, you can manage the VMs using Terraform, which provides a single, unified tool for provisioning, configuring, and managing your infrastructure."},{"upvote_count":"1","poster":"doodlearmy","content":"Selected Answer: BC\nthere is no 'import-gcp' in terraform official doc","timestamp":"1720148100.0","comment_id":"1242439"},{"content":"there is no 'import-gcp' in terraform official doc","comment_id":"1187491","timestamp":"1711982760.0","poster":"kingfighers","upvote_count":"2"},{"upvote_count":"2","comment_id":"1112468","timestamp":"1704253620.0","poster":"enook","content":"Selected Answer: BC\nBCBCBCBCBCBC"},{"content":"There are two ways to manage existing resource using Terraform\nYou can use 'terraform import' or you can use the import block\n\nSo answers are:\nB. Use the terraform import command for the existing VMs Most Voted\nC. Write Terraform configuration for the existing VMs\n\nhttps://developer.hashicorp.com/terraform/cli/import/usage\nhttps://developer.hashicorp.com/terraform/language/import","timestamp":"1697886300.0","comment_id":"1049422","poster":"Tyler2023","upvote_count":"3"},{"timestamp":"1690533480.0","upvote_count":"2","poster":"Jayanth","content":"B. Use the terraform import command for the existing VMs\nC. Write Terraform configuration for the existing VMs","comment_id":"965412"},{"poster":"Busi57","timestamp":"1690124340.0","comment_id":"960549","content":"Selected Answer: BC\ni choose BC","upvote_count":"1"},{"timestamp":"1688460000.0","content":"Selected Answer: BC\nBC are the correct answers here","poster":"Shane_C","comment_id":"942535","upvote_count":"1"},{"content":"Selected Answer: BC\nWrite configuration and import.","poster":"milan92stankovic","comment_id":"922962","upvote_count":"1","timestamp":"1686737640.0"},{"timestamp":"1683556980.0","poster":"Ni33","content":"Selected Answer: BC\nB&C are correct","comment_id":"892260","upvote_count":"2"},{"upvote_count":"1","poster":"karendavtyan","comment_id":"890060","timestamp":"1683293340.0","content":"Selected Answer: BC\nB.True\nC. True"},{"timestamp":"1680830160.0","comment_id":"863407","content":"BC are the correct options:\n\nB. Use the terraform import command for the existing VMs. This command allows you to import existing infrastructure into your Terraform state file so that Terraform can manage it. You will need to provide the resource type and name, along with any required attributes, for each VM you want to import.\n\nC. Write Terraform configuration for the existing VMs. Once the VMs have been imported into the Terraform state file, you will need to write configuration code that describes the desired state of the VMs. This will typically involve creating a new Terraform module or modifying an existing one to include the imported resources.\n\nOption A is incorrect because provisioning new VMs with the same names would create duplicate resources and could cause conflicts with the existing VMs.\n\nOption D is also incorrect because there is no terraform import-gcp command in Terraform. The correct command for importing GCP resources is simply terraform import.","poster":"AzRNoob","upvote_count":"10"},{"timestamp":"1680510300.0","upvote_count":"1","content":"BC is correct\nhttps://developer.hashicorp.com/terraform/tutorials/state/state-import","poster":"connecttozee","comment_id":"859685"},{"upvote_count":"1","comment_id":"856003","poster":"Power123","timestamp":"1680197520.0","content":"B,C - first write the configuration and then import"},{"content":"Selected Answer: BC\nWrite configuration then import the existing infrastructure.","upvote_count":"1","timestamp":"1678998600.0","comment_id":"841335","poster":"acheiron"},{"poster":"gargaditya","timestamp":"1678987620.0","comments":[{"poster":"gargaditya","timestamp":"1678987620.0","comment_id":"841226","upvote_count":"1","content":"=====\nDetailed procedure/approach:\n\nI. Manually write actual configuration(.tf) files to reflect how the .tfstate(infra) would be achieved\n\nresource “aws_instance” “web”{\n}\n \nYou can leave the body of the resource block blank for now and return to fill it in once the instance is imported.\n\nII. Use terraform import command to import the existing config INTO TFSTATE(and link to above resource)\nterraform import aws_instance.web <actual instance id in AWS> \n\nIII. Now compare the imported tfstate file with config file(.tf) and fill relevant sections with information.\n\nIV. Run terraform plan to make sure no changes indicated(which means config file accurately reflects state file)."}],"comment_id":"841225","content":"Selected Answer: BC\nTerraform is able to import existing infrastructure.\nThis allows you take resources you've created by some other means and bring it under\nTerraform management.\nThe 2 main logical steps are as shown in diagram:\nhttps://drive.google.com/file/d/1tgbhHr1vHJMbsWJjOtearL-iCus064Ya/view?usp=sharing\n\nI. Use terraform import command to import the existing config INTO TFSTATE\nII. Manually write actual configuration(.tf) files to reflect how the .tfstate(infra) would be achieved","upvote_count":"1"},{"poster":"Tanacet","content":"Selected Answer: BC\nCreate configuration and import the state","timestamp":"1674921180.0","upvote_count":"1","comment_id":"790768"},{"upvote_count":"1","poster":"Bere","content":"Selected Answer: BC\nhttps://developer.hashicorp.com/terraform/cli/import\nTerraform import can only import resources into the state. Importing does not generate configuration.\nBefore you run terraform import you must manually write a resource configuration block for the resource. The resource block describes where Terraform should map the imported object.","timestamp":"1671471780.0","comment_id":"750090"},{"poster":"FarziWaliMarzi","timestamp":"1671223380.0","content":"Selected Answer: BC\nB&C are correct answers. You will first create equivialent blank config first, and then import them.","comment_id":"747578","upvote_count":"1"},{"content":"Selected Answer: BC\nBC is the correct answers","upvote_count":"1","poster":"adouban","timestamp":"1670563140.0","comment_id":"739814"},{"poster":"Pinky0289","timestamp":"1663347660.0","comment_id":"670989","content":"For resources created outside terraform, you first write the configuration and then import it inside terraform, so the answer is B and C.","upvote_count":"1"},{"comment_id":"669896","upvote_count":"5","content":"Selected Answer: BC\nTo manage a resource that was created manually using Terraform you have to import the resource steps\n1 Create a configuration file\n2. run import","poster":"RVivek","timestamp":"1663244220.0"},{"comment_id":"661469","poster":"Chokies","timestamp":"1662483000.0","content":"Selected Answer: BC\nBC is the answer","upvote_count":"1"},{"timestamp":"1660925100.0","content":"BC for sure","upvote_count":"1","comment_id":"649028","poster":"Burakko"},{"comment_id":"647016","poster":"Dinya_jui","upvote_count":"1","content":"BC for sure","timestamp":"1660536480.0"},{"comment_id":"635876","content":"Selected Answer: BC\nAnswer is BC","upvote_count":"1","poster":"cjig","timestamp":"1658638440.0"},{"poster":"yuvifose","timestamp":"1658127180.0","comment_id":"632888","content":"B and C are the correct ones","upvote_count":"1"},{"poster":"svsilence","content":"BC ofc","upvote_count":"1","comment_id":"629615","timestamp":"1657468320.0"},{"poster":"Eltooth","comment_id":"625612","content":"Selected Answer: BC\nB and C are correct answers.","timestamp":"1656658380.0","upvote_count":"1"},{"comment_id":"605983","upvote_count":"1","poster":"Valerioly98","timestamp":"1653301620.0","content":"Selected Answer: BC\nBC I THINK"},{"poster":"Haigk","timestamp":"1652706660.0","upvote_count":"2","content":"Selected Answer: BC\nThe command in D (terraform import-gcp) doesn't even exist.","comment_id":"602593"},{"comment_id":"601035","upvote_count":"3","poster":"ItaloVinodi","content":"Selected Answer: BC\nWhy Exam topics always have this wrong answers, from where did they take ? Answer is BC, first import and then declare them in configuration files","timestamp":"1652430060.0"},{"timestamp":"1651956240.0","comment_id":"598322","content":"Yup, BC","poster":"318touring","upvote_count":"1"},{"poster":"vitasac","timestamp":"1651561620.0","upvote_count":"2","content":"Selected Answer: BC\nOf course BC","comment_id":"596302"}],"answer_description":"","answer_images":[]},{"id":"sPl6iesdsVheBZ9dElyN","answer_ET":"A","timestamp":"2023-01-13 19:14:00","answer_description":"","question_images":[],"isMC":true,"unix_timestamp":1673633640,"question_id":114,"topic":"1","answer":"A","choices":{"A":"servers - var.num_servers","C":"servers - var(num_servers)","D":"$(var.num_servers)","B":"servers - num_servers"},"exam_id":169,"discussion":[{"upvote_count":"11","comment_id":"793993","content":"Answer is A but is should be servers = var.num_servers","timestamp":"1722414540.0","poster":"LeyLey"},{"poster":"Nunyabiznes","upvote_count":"5","timestamp":"1727914380.0","comment_id":"859422","content":"Selected Answer: A\nmodule \"example\" {\n source = \"path/to/module\"\n servers = var.num_servers\n}"},{"comment_id":"833984","poster":"Basavaraju_V","content":"by commenting the resource block in configuration file will also destroy the resources","timestamp":"1725880380.0","upvote_count":"1"},{"poster":"princajen","upvote_count":"2","timestamp":"1723827540.0","comment_id":"811025","content":"Selected Answer: A\nThe correct way to pass the value in the variable num_servers into a module with the input servers in HCL2 is as follows:\nmodule \"example\" {\n source = \"./modules/example\"\n servers = var.num_servers\n}"},{"comment_id":"789720","poster":"Daro_","content":"Selected Answer: A\nservers = var.num_servers","timestamp":"1722085800.0","upvote_count":"3"},{"poster":"Zeppoonstream","timestamp":"1721474400.0","upvote_count":"1","comment_id":"782271","content":"Selected Answer: A\nA. servers - var.num_servers\n\nIn HCL2, the correct way to pass the value in the variable num_servers into a module with the input servers is by using the following syntax:\n\nservers = var.num_servers\n\nThis tells Terraform to use the value of the variable num_servers as the value of the input servers in the module."},{"poster":"InformationOverload","content":"Selected Answer: A\ncorrect way to pass the value of the variable num_servers into a module with the input servers is to use the var syntax in the module block: \n\nmodule \"module_example\" {\n source = \"path/to/module\"\n servers = var.num_servers\n}","timestamp":"1721111520.0","upvote_count":"2","comment_id":"777455"},{"upvote_count":"1","comment_id":"775229","timestamp":"1720943460.0","poster":"resnef","content":"going with A : servers = var.num_servers"},{"poster":"gekkehenk","content":"Selected Answer: A\nVariables are always referenced with a var. prefix.","timestamp":"1720930740.0","upvote_count":"1","comment_id":"775140"},{"content":"should be A ?","poster":"Edileimig","upvote_count":"1","comment_id":"774951","timestamp":"1720907760.0"},{"comment_id":"774767","content":"not sure if A or B, hope someone may clarify this","upvote_count":"2","poster":"nakikoo","timestamp":"1720887240.0"}],"answer_images":[],"answers_community":["A (100%)"],"question_text":"Which of the following is the correct way to pass the value in the variable num_servers into a module with the input servers in HCL2?","url":"https://www.examtopics.com/discussions/hashicorp/view/95077-exam-terraform-associate-topic-1-question-200-discussion/"},{"id":"JwWXceLCK0MAH4ws0JZ7","answers_community":["B (100%)"],"question_images":[],"answer_images":[],"discussion":[{"poster":"090200f","comment_id":"1256520","upvote_count":"1","content":"Selected Answer: B\nterraform state show [options] address is correct so B is correct answer\nhttps://developer.hashicorp.com/terraform/cli/commands/state/show","timestamp":"1722125460.0"},{"poster":"Albion","comment_id":"1089360","upvote_count":"4","content":"Selected Answer: B\nterraform state list : is used to list all resources that are currently being tracked in the Terraform state. It provides a list of resource addresses, which can be helpful to identify the names or identifiers of resources managed by Terraform.\n\nterraform state show : command is used to show details and attributes of a resource managed by Terraform. It provides a human-readable representation of the current state of a specific resource, including all its attributes and configuration.\n\nCorrect answer : B","timestamp":"1701868560.0"},{"upvote_count":"1","timestamp":"1680262980.0","poster":"camps","content":"Selected Answer: B\nB. terraform state show","comment_id":"856990"},{"timestamp":"1679768700.0","upvote_count":"1","poster":"sagunala5","content":"B\nhttps://developer.hashicorp.com/terraform/cli/commands/state/show","comment_id":"850355"},{"timestamp":"1675267920.0","poster":"mhinojosarubia","comment_id":"795281","upvote_count":"1","content":"Selected Answer: B\nIt's b"},{"upvote_count":"1","content":"B definintely","timestamp":"1674517260.0","poster":"Abuu","comment_id":"785971"},{"comment_id":"777461","timestamp":"1673858160.0","poster":"InformationOverload","upvote_count":"2","content":"Selected Answer: B\nThe terraform state show command is used to show the attributes of a single resource in the Terraform state.\n\nhttps://developer.hashicorp.com/terraform/cli/commands/state/show"},{"upvote_count":"1","timestamp":"1673674680.0","comment_id":"775110","content":"Selected Answer: B\nAs they're are asking about \"details\" it should be B.","poster":"gekkehenk"},{"upvote_count":"2","content":"Selected Answer: B\nThe terraform state list command shows the resource addresses for every resource Terraform knows about in a configuration, optionally filtered by partial resource address. The terraform state show command displays detailed state data about one resource.","timestamp":"1673632380.0","poster":"srcntpc","comment_id":"774752"},{"comment_id":"774734","poster":"ssanjayt","timestamp":"1673631480.0","upvote_count":"1","content":"Selected Answer: B\nB is correct"},{"comment_id":"774584","upvote_count":"2","poster":"nakikoo","content":"first!, joking we'ere intellectuals, its A","timestamp":"1673620800.0"}],"question_text":"Which of the fallowing commands would you use to access all of the attributes and details of a resource managed by Terraform?","exam_id":169,"timestamp":"2023-01-13 15:40:00","isMC":true,"answer_description":"","question_id":115,"answer_ET":"B","url":"https://www.examtopics.com/discussions/hashicorp/view/95053-exam-terraform-associate-topic-1-question-201-discussion/","answer":"B","unix_timestamp":1673620800,"topic":"1","choices":{"C":"terraform get","B":"terraform state show","D":"terraform state list","A":"terraform state list"}}],"exam":{"provider":"Hashicorp","lastUpdated":"12 Apr 2025","numberOfQuestions":347,"isImplemented":true,"isBeta":false,"isMCOnly":false,"name":"Terraform Associate","id":169},"currentPage":23},"__N_SSP":true}