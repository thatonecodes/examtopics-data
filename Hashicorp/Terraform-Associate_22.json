{"pageProps":{"questions":[{"id":"06IMo5eO4qgpMQjyCNcc","choices":{"B":"False","A":"True"},"url":"https://www.examtopics.com/discussions/hashicorp/view/95150-exam-terraform-associate-topic-1-question-194-discussion/","answer_images":[],"answer_ET":"A","discussion":[{"comment_id":"866255","content":"Selected Answer: A\nThe terraform_remote_state data source allows you to retrieve outputs from the state of another Terraform configuration, which can be stored in a local or remote backend. To use the terraform_remote_state data source with a local backend, you would define the path to the state file in the backend configuration block of your Terraform configuration, and then use that path in the data \"terraform_remote_state\" block to retrieve the desired output values.","upvote_count":"12","poster":"Stanislav4907","timestamp":"1681129920.0"},{"content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/language/state/remote-state-data\n\ndata \"terraform_remote_state\" \"vpc\" {\n backend = \"local\"\n\n config = {\n path = \"...\"\n }\n}\n\n# Terraform >= 0.12\nresource \"aws_instance\" \"foo\" {\n # ...\n subnet_id = data.terraform_remote_state.vpc.outputs.subnet_id\n}\n\n# Terraform <= 0.11\nresource \"aws_instance\" \"foo\" {\n # ...\n subnet_id = \"${data.terraform_remote_state.vpc.subnet_id}\"\n}","upvote_count":"8","comment_id":"871265","poster":"FarziWaliMarzi","timestamp":"1681589940.0"},{"comment_id":"1282509","timestamp":"1726125000.0","poster":"lavendran93","content":"Selected Answer: B\nThe terraform_remote_state data source is used to access state from a remote backend, such as S3, Azure Blob Storage, or Terraform Cloud. It does not work with the local backend. The local backend stores the state file on your local filesystem, and to access it, you need to handle it directly, not through terraform_remote_state.","upvote_count":"2"},{"poster":"master9","content":"Selected Answer: B\nAs asking for Local not remote state file","comment_id":"1248637","timestamp":"1721099880.0","upvote_count":"2"},{"timestamp":"1689877620.0","poster":"VSMu","upvote_count":"2","comment_id":"957841","content":"Selected Answer: A\nExample https://developer.hashicorp.com/terraform/language/state/remote-state-data#example-usage-local-backend"},{"poster":"Nunyabiznes","upvote_count":"2","content":"Selected Answer: B\nThe terraform_remote_state data source is used to access state data stored in a remote backend (such as S3, GCS, or Terraform Cloud). It is not designed to access local backend state files directly. However, if you want to access data from another Terraform configuration's local state, you can use output variables and pass the values between configurations using input variables or other methods.","timestamp":"1680480240.0","comment_id":"859420"},{"content":"Selected Answer: B\nThe terraform_remote_state data source is used to access the state data from another Terraform configuration that is stored in a remote backend, not a local backend. This data source enables you to fetch the outputs of another Terraform project and use them as input variables in your current Terraform project.\n\nWhen using the local backend, the Terraform state is stored in a local file (usually named terraform.tfstate). This means the state is not accessible through the terraform_remote_state data source, as it is not stored remotely.","comments":[{"timestamp":"1681412640.0","upvote_count":"3","comment_id":"869689","content":"It is possible to use it to access local backend.\nhttps://developer.hashicorp.com/terraform/language/state/remote-state-data#example-usage-local-backend\n\ndata \"terraform_remote_state\" \"vpc\" {\n backend = \"local\"\n\n config = {\n path = \"...\"\n }\n}","poster":"SaadKhamis"}],"timestamp":"1680263520.0","poster":"camps","comment_id":"857005","upvote_count":"2"},{"timestamp":"1679256120.0","poster":"Strib","content":"Selected Answer: A\nExample Usage (local Backend)\nhttps://developer.hashicorp.com/terraform/language/state/remote-state-data#example-usage-local-backend","upvote_count":"3","comment_id":"844177"},{"timestamp":"1678805340.0","upvote_count":"2","comment_id":"838947","poster":"David_C_90","content":"Selected Answer: A\nI tested this and I believe this is correct. Check the link https://developer.hashicorp.com/terraform/language/state/remote-state-data#example-usage-local-backend\n\nNote that the state file must already exist and the data you will obtain is the data present on the file: if you change the terraform configuration corresponding to the state you are trying to read, you will obtain the \"old\" data."},{"poster":"khaled_razouk","comment_id":"835132","upvote_count":"1","content":"Selected Answer: B\nI'll go with B","timestamp":"1678460220.0"},{"timestamp":"1677241080.0","upvote_count":"1","comment_id":"820452","poster":"rotimislaw","content":"Selected Answer: B\nSeems B to me"},{"poster":"shahin_am2","comment_id":"820343","content":"B. False.\n\nAccording to the Terraform documentation, the terraform_remote_state data source can be used to access state data stored in a remote backend. This allows you to use output values from one Terraform configuration as input values for another configuration.\n\nHowever, the local backend is not considered a remote backend, because it stores state data locally on disk. Therefore, you cannot use the terraform_remote_state data source to access state stored with the local backend.","upvote_count":"2","timestamp":"1677234060.0"},{"content":"Selected Answer: B\nB. False.\n\nThe terraform_remote_state data source is used to fetch outputs from the state of a different Terraform configuration, which is stored remotely, and use them as input for the current configuration. It is used with remote backends, not local ones.","poster":"princajen","upvote_count":"2","comment_id":"811014","timestamp":"1676573400.0"},{"content":"False. The local backend stores state locally on the same machine as the Terraform configuration files, and it is not accessible over a network connection. To access state stored in a remote backend, you need to use the terraform_remote_state data source.","upvote_count":"1","comment_id":"796751","poster":"pyro7","timestamp":"1675400940.0"},{"upvote_count":"2","timestamp":"1674866400.0","comment_id":"790124","poster":"Abuu","content":"Selected Answer: A\nthis is correct. The terraform_remote_state data source allows you to access state stored with the local backend, enabling you to share and reference state between different configurations. This is especially useful when using multiple configurations to manage different parts of the same infrastructure."},{"poster":"Daro_","comment_id":"789685","content":"Selected Answer: A\nAs per below documentation\nhttps://developer.hashicorp.com/terraform/language/state/remote-state-data\n\nand example of configuration\ndata \"terraform_remote_state\" \"vpc\" {\n backend = \"local\"\n\n config = {\n path = \"...\"\n }\n}\n\nAnswer is: [ A ]","timestamp":"1674830100.0","comments":[{"comment_id":"799030","upvote_count":"1","poster":"lezgino","timestamp":"1675617960.0","content":"The terraform_remote_state data source is used to access state stored with a remote backend, such as S3 or Consul. You cannot access state stored with the local backend using the terraform_remote_state data source."}],"upvote_count":"4"},{"poster":"Daro_","comment_id":"789683","upvote_count":"2","timestamp":"1674829860.0","content":"As per below documentation\nhttps://developer.hashicorp.com/terraform/language/state/remote-state-data\n\nand example of configuration\ndata \"terraform_remote_state\" \"vpc\" {\n backend = \"local\"\n\n config = {\n path = \"...\"\n }\n}\n\nAnswer is: [ A ]"},{"poster":"kounilasco","comment_id":"779160","content":"Selected Answer: B\nit is false","timestamp":"1673977740.0","upvote_count":"2"},{"comment_id":"775136","upvote_count":"2","content":"Selected Answer: B\nterraform state is the right command. That can be used with \"list\" or \"show\".","poster":"gekkehenk","timestamp":"1673676840.0"}],"answer_description":"","question_images":[],"timestamp":"2023-01-14 07:14:00","answers_community":["A (67%)","B (33%)"],"isMC":true,"question_text":"You can access state stored with the local backend by using the terraform_remote_state data source.","exam_id":169,"question_id":106,"unix_timestamp":1673676840,"answer":"A","topic":"1"},{"id":"8s1uxYXTXzVDzJvj3rDq","answer_ET":"C","choices":{"C":"Terraform will not make any changes to the Load Balancer and will update the state file to reflect any changes made.","B":"Terraform will change the load balancer port to 80, and then change it back to 443.","A":"Terraform will fail with an error because the state file is no longer accurate.","D":"Terraform will change the port back to 80 in your code."},"answer":"C","answer_images":[],"exam_id":169,"unix_timestamp":1673676960,"isMC":true,"answers_community":["C (100%)"],"timestamp":"2023-01-14 07:16:00","answer_description":"","question_text":"You have been working in a Cloud provider account that is shared with other team members. You previously used Terraform to create a load balancer that is listening on port 80. After some application changes, you updated the Terraform code to change the port to 443.\n\nYou run terraform plan and see that the execution plan shows the port changing from 80 to 443 like you intended, and step away to grab some coffee.\n\nIn the meantime, another team member manually changes the load balancer port to 443 through the Cloud provider console before you get back to your desk.\n\nWhat will happen when you terraform apply upon returning to your desk?","url":"https://www.examtopics.com/discussions/hashicorp/view/95151-exam-terraform-associate-topic-1-question-195-discussion/","topic":"1","question_id":107,"question_images":[],"discussion":[{"comment_id":"775137","comments":[{"poster":"Daro_","timestamp":"1706366520.0","upvote_count":"1","content":"terraform apply command is not refreshing state, to detect drift without changing state file you need to type:\nterraform plan -refresh-only\n\nterraform apply, will change state file according to configuration file\nterraform","comments":[{"comment_id":"838950","poster":"David_C_90","timestamp":"1710428160.0","upvote_count":"2","content":"When you run terraform apply without passing a saved plan file, Terraform automatically creates a new execution plan as if you had run terraform plan, prompts you to approve that plan, and takes the indicated actions.\n\nhttps://developer.hashicorp.com/terraform/cli/commands/apply#automatic-plan-mode"},{"comment_id":"999997","upvote_count":"1","poster":"Misiek","content":"The terraform apply command executes the actions proposed in a Terraform plan.\nSince the plan hasn't been save the plan will run again with apply. \nCommand: plan\nThe terraform plan command creates an execution plan, which lets you preview the changes that Terraform plans to make to your infrastructure. By default, when Terraform creates a plan it:\n\nReads the current state of any already-existing remote objects to make sure that the Terraform state is up-to-date.\nCompares the current configuration to the prior state and noting any differences.\nProposes a set of change actions that should, if applied, make the remote objects match the configuration.","timestamp":"1725579480.0"}],"comment_id":"789695"}],"timestamp":"1705212960.0","upvote_count":"5","poster":"gekkehenk","content":"Selected Answer: C\nAs the state is refreshed during the \"apply\" no changes will be made on the cloud. Terraform will rather update it state file."},{"poster":"shanker_sumit","content":"option A. \n\nTerraform will fail with an error because the state file is no longer accurate.\nAs person has made the changes via the console not through terraform .\n\nHence , it give an error as changes are made outside of terraform.","comment_id":"1024076","upvote_count":"1","timestamp":"1727973300.0"},{"timestamp":"1711885980.0","comment_id":"857009","content":"Selected Answer: C\nIt's C","upvote_count":"1","poster":"camps"},{"poster":"sribalaje","comment_id":"779544","timestamp":"1705546440.0","upvote_count":"1","content":"Selected Answer: C\nC is correct answer"}]},{"id":"G4muRePr2eUiauNQvOqS","answer_images":[],"discussion":[{"poster":"thure","comment_id":"1413063","timestamp":"1743346740.0","upvote_count":"1","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/cloud-docs/run/modes-and-options \nVCS: When a workspace is connected to a VCS repository, HCP Terraform automatically starts a speculative plan when someone opens a pull request (or merge request) against the selected branch of that repository. The pull/merge request view in your VCS links to the speculative plan, and you can also find it in the workspace's run list."},{"upvote_count":"1","content":"Selected Answer: B\nSpeculative plan runs in Terraform Cloud workspaces do not automatically start when you merge or commit changes to version control. They are triggered under specific circumstances:\n\n When a Pull Request (PR) is created or updated in the linked version control repository:\n Terraform Cloud automatically runs a speculative plan to show the impact of proposed changes before merging the PR.\n\n When a branch is pushed to the repository:\n Speculative plans are run for changes that are not yet applied (e.g., draft changes or PRs).","poster":"Igein","comment_id":"1349696","timestamp":"1738363380.0"},{"timestamp":"1731974880.0","poster":"nickylake","comment_id":"1314299","content":"B;speculative plan runs are automatically triggered when a pull request (PR) is opened or updated, allowing you to preview the potential impact of proposed changes before merging. However, when changes are merged or committed directly to the specified branch, Terraform Cloud initiates a standard plan and apply workflow, not a speculative plan","comments":[{"content":"online research says TRUE\nIn a Terraform Cloud workspace linked to a version control repository, speculative plan runs do start automatically when you merge or commit changes to the repository. This is designed to give users an early preview of the potential changes to infrastructure, allowing them to review the plan before it is finalized or applied. This automatic behavior helps ensure that changes are validated in the context of the current state of the infrastructure, even before they are manually applied.","poster":"Arjun2024USA","upvote_count":"1","timestamp":"1732210440.0","comment_id":"1315933"}],"upvote_count":"3"},{"poster":"vortegon","timestamp":"1701469800.0","comment_id":"1085530","content":"Selected Answer: B\npull requests start speculative plans, this occurs before a commit or merge.\nhttps://developer.hashicorp.com/terraform/cloud-docs/run/remote-operations#speculative-plans","upvote_count":"3"},{"timestamp":"1682175360.0","poster":"FarziWaliMarzi","comment_id":"877355","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/cloud-docs/run/ui#automatically-starting-runs","upvote_count":"2"},{"timestamp":"1676573700.0","poster":"princajen","content":"Selected Answer: A\nIt is true because Terraform Cloud can monitor the linked version control repository for changes and automatically trigger a speculative plan run in response to each commit or merge. This allows users to quickly see the expected changes that would result from the proposed change, without actually applying those changes. Speculative plan runs can be a useful tool for catching errors early in the development process and avoiding potentially costly mistakes.","upvote_count":"2","comment_id":"811020"},{"timestamp":"1673856120.0","content":"Selected Answer: A\nWhether to perform speculative plans on pull requests to the connected repository, to assist in reviewing proposed changes. Automatic speculative plans are enabled by default, but you can disable them for any workspace.\n\nhttps://developer.hashicorp.com/terraform/cloud-docs/workspaces/settings/vcs","poster":"InformationOverload","comment_id":"777434","upvote_count":"1"}],"answer":"A","answers_community":["A (60%)","B (40%)"],"answer_description":"","exam_id":169,"unix_timestamp":1673856120,"question_id":108,"url":"https://www.examtopics.com/discussions/hashicorp/view/95512-exam-terraform-associate-topic-1-question-196-discussion/","isMC":true,"topic":"1","question_images":[],"question_text":"In a Terraform Cloud workspace linked to a version control repository, speculative plan runs start automatically when you merge or commit changes to version control.","timestamp":"2023-01-16 09:02:00","choices":{"B":"False","A":"True"},"answer_ET":"A"},{"id":"PdO55ouxQqlXkzBAdtMz","isMC":true,"discussion":[{"timestamp":"1718607840.0","content":"B. Terraform core\nTerraform core is responsible for reading the configuration, generating the execution plan, and applying the changes by interacting with the providers.","upvote_count":"1","comment_id":"1231800","poster":"7b5b962"},{"comment_id":"1084076","content":"merci .","poster":"starksolutions","upvote_count":"1","timestamp":"1701331440.0"},{"timestamp":"1691926440.0","content":"Selected Answer: BC\nwith a separate variable definition file :- Write a new staging.auto.tfvars variable definition file and run Terraform with the var-file=”staging.auto.tfvars” flag\nWant to deploy the same code in the staging environment with a separate state file :- Create a new Terraform workspace for staging. Workspaces isolate Terraform state.","comment_id":"979982","upvote_count":"2","poster":"akm_1010"},{"comment_id":"893855","content":"Selected Answer: BC\nB and C are correct answers. same tfstate file can be used in multiple workspaces to provision infrastructure and each workspace has its own tfvar file matching workspace prefix.","upvote_count":"4","timestamp":"1683717660.0","poster":"Ni33"},{"upvote_count":"1","poster":"camps","content":"Selected Answer: BC\nB. Write a new staging.auto.tfvars variable definition file and run Terraform with the var-file=\"staging.auto.tfvars\" flag\nC. Create a new Terraform workspace for staging","comment_id":"856998","timestamp":"1680263220.0"},{"comment_id":"803978","poster":"ozbeyucel","timestamp":"1676005200.0","upvote_count":"2","content":"Selected Answer: BC\n......"},{"timestamp":"1673633340.0","upvote_count":"1","poster":"nakikoo","comment_id":"774764","content":"Correct, workspace to use same .tf configuration with a different environment such as dev, prod, test, \n\nwrite new stage then refer the existing .tf config"}],"answer":"BC","choices":{"B":"Write a new staging.auto.tfvars variable definition file and run Terraform with the var-file=”staging.auto.tfvars” flag","E":"Add new Terraform code (*.tf files) for staging in the same directory","A":"Copy the existing terraform.tfstate file and save it as staging.terraform.tfstate","C":"Create a new Terraform workspace for staging","D":"Create a new Terraform provider for staging"},"question_text":"You have some Terraform code and a variable definitions file named dev.auto.tfvars that you tested successfully in the dev environment. You want to deploy the same code in the staging environment with a separate variable definition file and a separate state file.\n\nWhich two actions should you perform? (Choose two.)","exam_id":169,"answer_ET":"BC","timestamp":"2023-01-13 19:09:00","unix_timestamp":1673633340,"answer_images":[],"topic":"1","url":"https://www.examtopics.com/discussions/hashicorp/view/95074-exam-terraform-associate-topic-1-question-197-discussion/","question_id":109,"answer_description":"","question_images":[],"answers_community":["BC (100%)"]},{"id":"eE9VUEXOI3QdZMlhzRAv","answer_images":[],"discussion":[{"content":"Selected Answer: C\n\"What\" = config\n\"How\" = provider","timestamp":"1679504100.0","poster":"Manguu","upvote_count":"21","comment_id":"847307"},{"content":"Selected Answer: C\nThe question specifically states \"how\". The provider is the only component of Terraform that know HOW to create, update, delete a resource, as it knows all the specifics.","poster":"gekkehenk","comment_id":"775139","timestamp":"1673677080.0","upvote_count":"20"},{"poster":"7b5b962","comment_id":"1231802","content":"B. Terraform core\nTerraform core is responsible for reading the configuration, generating the execution plan, and applying the changes by interacting with the providers.","timestamp":"1718608020.0","upvote_count":"2"},{"comment_id":"866266","upvote_count":"1","timestamp":"1681130520.0","poster":"Stanislav4907","content":"Selected Answer: C\nThe Terraform provider determines how Terraform creates, updates, or deletes resources.\n\nProviders are responsible for translating Terraform configurations into API requests that manipulate resources in the target environment. Each provider implements the necessary operations for a specific type of infrastructure, such as AWS, Azure, or Google Cloud Platform.\n\nWhen Terraform applies a configuration, it reads the provider information from the configuration and uses it to interact with the target environment. The provider then manages the lifecycle of the resources by creating, updating, or deleting them as needed.\n\nNote that while the Terraform configuration defines the desired state of the resources, and the Terraform core is responsible for managing the planning and execution of changes, it is ultimately the provider that determines how those changes are implemented in the target environment."},{"content":"Selected Answer: C\nC. Terraform provider","poster":"camps","upvote_count":"2","comment_id":"856999","timestamp":"1680263220.0"},{"timestamp":"1678742520.0","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/language/resources/behavior","upvote_count":"2","comments":[{"comment_id":"838959","poster":"David_C_90","upvote_count":"3","timestamp":"1678806120.0","content":"Terraform configuration determines the \"what\" i.e. what infrastructure to build. Not the \"how\"; that's the whole point behind IaC"}],"comment_id":"838327","poster":"Atila50"},{"upvote_count":"2","comment_id":"820469","timestamp":"1677242280.0","content":"Selected Answer: C\nas gekkehenk wrote, it's C","poster":"rotimislaw"},{"poster":"princajen","upvote_count":"1","timestamp":"1676573820.0","comment_id":"811024","content":"Selected Answer: C\nThe Terraform provider determines how Terraform interacts with a specific API or service provider to create, update, or delete resources. The provider translates Terraform configuration files into API requests, and then interacts with the API to manage resources on the service provider."},{"timestamp":"1676559900.0","poster":"crickmeister","comment_id":"810803","content":"C. Terraform provider determines how Terraform creates, updates, or deletes resources.\n\nA provider is responsible for understanding API interactions and exposing resources. Providers can represent physical resources like compute instances, or abstract resources like DNS records. A provider is responsible for translating the Terraform configuration into API calls to the underlying service, and for handling the response from the service.\n\nThe Terraform configuration specifies which provider to use for each resource block. The provider block itself specifies the configuration necessary to connect to the API of a particular service, such as credentials or endpoint information.","upvote_count":"1"},{"upvote_count":"1","timestamp":"1675794180.0","content":"Selected Answer: C\nC, provider = how, .tf = what","comment_id":"801261","poster":"agmesas"},{"timestamp":"1675696200.0","comment_id":"799883","upvote_count":"1","poster":"Abuu","content":"Selected Answer: A\nThe Terraform configuration is the main input for Terraform, defining the desired state of the resources in the infrastructure. It is the definition of how Terraform should create, update, or delete resources in order to reach the desired state."},{"comment_id":"796267","upvote_count":"3","content":"Terraform config determines what , Provider determines how. Answer should be provider.","timestamp":"1675358160.0","poster":"dkd123"},{"timestamp":"1675154040.0","content":"Selected Answer: A\ncorrect is A","poster":"ozbeyucel","comment_id":"793854","upvote_count":"2"},{"poster":"Abuu","content":"Selected Answer: A\nState file should be included; because The State File determines how Terraform creates, updates, or deletes resources. The state file is a JSON file that is used to persistently store all the resources created by Terraform. It stores the state of the resources, as well as their properties, so that Terraform knows what actions to take on the next run.","timestamp":"1674866760.0","upvote_count":"1","comment_id":"790126"},{"timestamp":"1674517140.0","poster":"Abuu","comment_id":"785966","content":"Applying a Terraform configuration is the process of creating, updating, and destroying real infrastructure objects in order to make their settings match the configuration.\nhttps://developer.hashicorp.com/terraform/language/resources/behavior","upvote_count":"1"},{"poster":"Agil09","timestamp":"1674490440.0","comment_id":"785582","content":"Selected Answer: A\ncorrect is A","upvote_count":"2"},{"timestamp":"1674220740.0","poster":"Zeppoonstream","comment_id":"782270","upvote_count":"1","content":"Selected Answer: A\nA. Terraform configuration\n\nThe Terraform configuration determines how Terraform creates, updates, or deletes resources. It is written in HashiCorp Configuration Language (HCL) and it includes the resources that will be managed by Terraform, their properties, and the dependencies between them. The configuration is read by the Terraform core and used to generate an execution plan that is then passed to the Terraform provider to make the necessary changes to the infrastructure."},{"upvote_count":"1","content":"Selected Answer: A\nterraform config file","timestamp":"1673901420.0","poster":"resnef","comment_id":"778228"},{"timestamp":"1673633460.0","poster":"nakikoo","comment_id":"774765","upvote_count":"1","content":"correct .tf configuration file determine whether to take action, delete/apply/ etc"}],"answer":"C","answers_community":["C (83%)","A (17%)"],"answer_description":"","exam_id":169,"unix_timestamp":1673633460,"question_id":110,"url":"https://www.examtopics.com/discussions/hashicorp/view/95075-exam-terraform-associate-topic-1-question-198-discussion/","isMC":true,"topic":"1","question_text":"The ________ determines how Terraform creates, updates, or deletes resources.","question_images":[],"timestamp":"2023-01-13 19:11:00","choices":{"A":"Terraform configuration","B":"Terraform core","C":"Terraform provider","D":"Terraform provisioner"},"answer_ET":"C"}],"exam":{"numberOfQuestions":347,"provider":"Hashicorp","isMCOnly":false,"isBeta":false,"id":169,"lastUpdated":"12 Apr 2025","name":"Terraform Associate","isImplemented":true},"currentPage":22},"__N_SSP":true}