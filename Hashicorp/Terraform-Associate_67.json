{"pageProps":{"questions":[{"id":"VIEjYdg3nRbhRU98xGzY","unix_timestamp":1662091980,"discussion":[{"poster":"alejandro_torres","comment_id":"971252","content":"deprecated question https://www.hashicorp.com/blog/terraform-1-5-brings-config-driven-import-and-checks","timestamp":"1691076960.0","upvote_count":"7"},{"poster":"SureNot","timestamp":"1718162460.0","upvote_count":"1","comment_id":"1228797","content":"Terraform v1.5.0 and later supports import blocks...\nA bit old question..."},{"poster":"LunarPhobia","timestamp":"1690320900.0","content":"Selected Answer: D\nD as importing requires a separate command from Apply","upvote_count":"4","comment_id":"963139"},{"comment_id":"926332","poster":"iDiddy","content":"import is an explicit command","upvote_count":"3","comments":[{"content":"Not any more, you can have an import {} clause so I guess this question is no longer valid.\nhttps://www.hashicorp.com/blog/terraform-1-5-brings-config-driven-import-and-checks","timestamp":"1699609200.0","comment_id":"1067125","poster":"Clapton79","upvote_count":"2"}],"timestamp":"1687045140.0"},{"poster":"Power123","upvote_count":"1","timestamp":"1680217920.0","comment_id":"856408","content":"Answer is D"},{"content":"Answer D. terraform import command","upvote_count":"1","timestamp":"1671728100.0","poster":"vadeemkaa","comment_id":"753498"},{"comment_id":"682962","timestamp":"1664475780.0","upvote_count":"3","poster":"root_i_am","content":"Selected Answer: D\nThe answer is D.\n\nWhile terraform allows you import existing infrastructure, it is not through the apply command."},{"comment_id":"677934","content":"Not sure --> Terraform can import existing infrastructure resources. This functionality allows you take resources you created by some other means and bring them under Terraform management.","poster":"dnscloud02","comments":[{"timestamp":"1664962860.0","content":"The question is about the command \"terraform apply\" and not terraform","comment_id":"686751","poster":"antivrillee","upvote_count":"1"}],"upvote_count":"1","timestamp":"1664033220.0"},{"timestamp":"1662091980.0","comment_id":"656939","upvote_count":"3","content":"Selected Answer: D\nhttps://www.educative.io/answers/what-is-the-command-to-destroy-infrastructure-in-terraform","poster":"antivrillee"}],"choices":{"A":"change","D":"import","B":"destroy","C":"provision"},"exam_id":169,"answer":"D","topic":"1","question_id":331,"question_text":"A terraform apply can not _________ infrastructure.","timestamp":"2022-09-02 06:13:00","answer_ET":"D","answers_community":["D (100%)"],"question_images":[],"answer_description":"","answer_images":[],"url":"https://www.examtopics.com/discussions/hashicorp/view/79263-exam-terraform-associate-topic-1-question-84-discussion/","isMC":true},{"id":"OKlbVvkYQxOWvAZZS8TA","answer_description":"","answers_community":["D (93%)","7%"],"choices":{"D":"version = ג€>= 2.1ג€","B":"version ~> 2.1","A":"version >= 2.1","C":"version = ג€<= 2.1ג€"},"question_images":[],"discussion":[{"timestamp":"1657722420.0","poster":"19kilo","upvote_count":"65","comment_id":"630941","content":"Selected Answer: D\nI found cleaner version of the multiple choices.\n\nA- version >= 2.1\nB- version ~> 2.1\nC- version = \"<= 2.1\"\nD- version = \">= 2.1\"\n\nThe answer is D \">= 2.1\". Requires quotes I believe."},{"poster":"Chrisler","comment_id":"1001239","upvote_count":"8","content":"A- version >= 2.1\n\nThis option is not valid in Terraform's provider block. Terraform uses a specific version string format to specify provider versions, and this format is not compatible with the >= operator.\n\nB- version ~> 2.1\n\nThis option uses a version constraint that allows Terraform to use any version that is compatible with version 2.1, but it does not enforce using version 2.1 or greater. The ~> operator specifies that it should use a version greater than or equal to 2.1 but less than the next major version.\n\nC- version = \"<= 2.1\"\n\nThis option constrains the provider to versions less than or equal to 2.1, which is the opposite of what you want. It limits Terraform to use versions up to and including 2.1 but not greater.\n\nD- version = \">= 2.1\"\n\nThis option correctly specifies that Terraform should use the GitHub provider version 2.1 or any version greater than 2.1, which matches your requirement of constraining it to version 2.1 or greater.","timestamp":"1694068920.0"},{"comment_id":"1247522","content":"version = ג€>= 2.1ג€ \nwhy option D showing like this? not version = \">=2.1\" ? any idea.\neven in exam they will give like this lambda exp?","timestamp":"1720909200.0","poster":"090200f","upvote_count":"2"},{"content":"in 0.12 terraform version\n>=2.1, <3.0.0\n\nin 0.13 or later terraform version\n~> 2.1","poster":"smitttt","comment_id":"1185408","timestamp":"1711714860.0","upvote_count":"1"},{"poster":"gofavad926","upvote_count":"2","timestamp":"1695960060.0","content":"Selected Answer: D\nD- version = \">= 2.1\"","comment_id":"1020430"},{"poster":"Hp45","upvote_count":"2","timestamp":"1693988220.0","content":"The votes seem incorrect. Correct answer should be the ~ sign. See the provider block on registry page:-\naws = {\n source = \"hashicorp/aws\"\n version = \"~> 5.0\"","comment_id":"1000379"},{"content":"Selected Answer: D\nA- version >= 2.1\nB- version ~> 2.1\nC- version = \"<= 2.1\"\nD- version = \">= 2.1\"\n\nExample:\n\nprovider \"github\" {\n version = \">= 2.1\"\n # Other configurations for the provider\n}","poster":"Bere","timestamp":"1693226520.0","comment_id":"992171","upvote_count":"4"},{"comment_id":"981367","timestamp":"1692081960.0","content":"For 0.12 version (1.1.x and earlier), exactly, refer https://developer.hashicorp.com/terraform/language/v1.1.x/expressions/version-constraints.\n\n= (or no operator): Allows only one exact version number. Cannot be combined with other conditions.\n\n!=: Excludes an exact version number.\n\n>, >=, <, <=: Comparisons against a specified version, allowing versions for which the comparison is true. \"Greater-than\" requests newer versions, and \"less-than\" requests older versions.\n\n~>: Allows only the rightmost version component to increment. For example, to allow new patch releases within a specific minor release, use the full version number: ~> 1.0.4 will allow installation of 1.0.5 and 1.0.10 but not 1.1.0. This is usually called the pessimistic constraint operator.","poster":"Mikhael1984","upvote_count":"2"},{"comment_id":"893004","upvote_count":"1","poster":"Ni33","content":"Selected Answer: D\nD is the correct option","timestamp":"1683629160.0"},{"comment_id":"891574","content":"Selected Answer: D\nbased on 19kilo cleaner version","upvote_count":"2","timestamp":"1683478740.0","poster":"kiran15789"},{"poster":"camps","comment_id":"857184","content":"Selected Answer: D\n. version = \">= 2.1\"\n\nIn Terraform, the provider block is used to configure a provider plugin that Terraform uses to interact with a specific cloud or service. The version argument in the provider block is used to constrain the version of the provider plugin that Terraform should use.","upvote_count":"2","timestamp":"1680272760.0"},{"poster":"Power123","upvote_count":"1","content":"D is correct .version = \">= 2.1\"","comment_id":"856412","timestamp":"1680218100.0"},{"comment_id":"849504","timestamp":"1679679600.0","content":"Selected Answer: D\nTo constrain the GitHub provider to version 2.1 or greater in a Terraform 0.12 configuration, you should use the following constraint in the provider block:\n\nD. version = \">= 2.1\"\n\nThis constraint indicates that the provider version must be greater than or equal to 2.1. Here's an example of how to configure this in the provider block:\n```\nprovider \"github\" {\n version = \">= 2.1\"\n ...\n}\n```\nThis ensures that the GitHub provider used will be at least version 2.1, allowing for any version greater than or equal to 2.1.","upvote_count":"3","poster":"Nunyabiznes"},{"content":"Selected Answer: D\n= \">= \"","comment_id":"841018","timestamp":"1678975380.0","upvote_count":"1","poster":"Ahmed_Elmelegy"},{"content":"Selected Answer: D\nD. version = \">= 2.1\" (must be a literal string)","poster":"agmesas","timestamp":"1675706040.0","upvote_count":"2","comment_id":"800028"},{"poster":"InformationOverload","timestamp":"1672643280.0","content":"Selected Answer: D\nversion = \">= 2.1\"","comment_id":"763564","upvote_count":"3"},{"content":"A is false you should have version = ....","upvote_count":"2","poster":"yaza","comment_id":"684163","timestamp":"1664623260.0"},{"content":"Selected Answer: D\nhttps://developer.hashicorp.com/terraform/language/expressions/version-constraints","timestamp":"1664298120.0","upvote_count":"3","comment_id":"680970","poster":"eduvar4"},{"upvote_count":"3","content":"Selected Answer: D\nI vote D.\n\nversion = \">= 1.2.0, < 2.0.0\"\n\nA version constraint is a string literal containing one or more conditions, which are separated by commas.\n\nEach condition consists of an operator and a version number.\n\nVersion numbers should be a series of numbers separated by periods (like 1.2.0), optionally with a suffix to indicate a beta release.\n\nThe following operators are valid:\n\n= (or no operator): Allows only one exact version number. Cannot be combined with other conditions.\n\n!=: Excludes an exact version number.\n\n>, >=, <, <=: Comparisons against a specified version, allowing versions for which the comparison is true. \"Greater-than\" requests newer versions, and \"less-than\" requests older versions.\n\n~>: Allows only the rightmost version component to increment. For example, to allow new patch releases within a specific minor release, use the full version number: ~> 1.0.4 will allow installation of 1.0.5 and 1.0.10 but not 1.1.0. This is usually called the pessimistic constraint operator.\n\n\n\n\nhttps://www.terraform.io/language/expressions/version-constraints","timestamp":"1660624140.0","poster":"geekneek","comment_id":"647446"},{"upvote_count":"2","poster":"Nani0107","timestamp":"1660175880.0","content":"Selected Answer: D\nAnswer is D version = \">= 2.1\"","comment_id":"645198"},{"content":"Dm since it needs quotes\nA- version >= 2.1\nB- version ~> 2.1\nC- version = \"<= 2.1\"\nD- version = \">= 2.1\"","poster":"kopper2019","upvote_count":"1","comment_id":"645011","timestamp":"1660139520.0"},{"content":"Answer is D version = \">= 2.1\"\nView the \"Terraform 0.12 and earlier:\" example section in the link. https://registry.terraform.io/providers/integrations/github/latest/docs\n\nIt fails if the = sign is missing, the same is true if the quotes are missing.","poster":"19kilo","upvote_count":"3","comment_id":"631441","timestamp":"1657814220.0"},{"upvote_count":"2","content":"Selected Answer: A\nA is correct answer. \n\nhttps://www.terraform.io/language/expressions/version-constraints","poster":"Eltooth","comment_id":"624138","comments":[{"content":"version ~>2.1 would only allow versions greater than 2.1 but less than 3.0","comment_id":"628058","timestamp":"1657131360.0","poster":"Eltooth","upvote_count":"2"}],"timestamp":"1656438720.0"},{"poster":"stalk98","timestamp":"1654498560.0","content":"A is the answer","comment_id":"612229","upvote_count":"1"},{"upvote_count":"1","timestamp":"1654363920.0","content":"Selected Answer: A\nA is right","comment_id":"611515","poster":"bp339"},{"poster":"elvancedonzy","content":"Selected Answer: A\nA is the answer","timestamp":"1654248660.0","comment_id":"611007","upvote_count":"1"},{"content":"The answer is A","upvote_count":"2","poster":"habbypat123","timestamp":"1652995680.0","comment_id":"604146"},{"poster":"Roro_Brother","content":"Selected Answer: A\nhttps://www.terraform.io/language/expressions/version-constraints","upvote_count":"1","comment_id":"603803","timestamp":"1652956740.0"},{"poster":"bigboi23","content":"Selected Answer: A\n>, >=, <, <=: Comparisons against a specified version, allowing versions for which the comparison is true. \"Greater-than\" requests newer versions, and \"less-than\" requests older versions.","upvote_count":"2","comment_id":"603075","timestamp":"1652829780.0"}],"url":"https://www.examtopics.com/discussions/hashicorp/view/75724-exam-terraform-associate-topic-1-question-85-discussion/","unix_timestamp":1652829780,"answer":"D","answer_images":[],"timestamp":"2022-05-18 01:23:00","topic":"1","isMC":true,"question_text":"You need to constrain the GitHub provider to version 2.1 or greater.\nWhich of the following should you put into the Terraform 0.12 configuration's provider block?","answer_ET":"D","question_id":332,"exam_id":169},{"id":"M38CsbdzN1VCOfFvmKpP","question_text":"You just scaled your VM infrastructure and realized you set the count variable to the wrong value. You correct the value and save your change.\nWhat do you do next to make your infrastructure match your configuration?","choices":{"D":"Inspect all Terraform outputs to make sure they are correct","C":"Reinitialize because your configuration has changed","B":"Inspect your Terraform state because you want to change it","A":"Run an apply and confirm the planned changes"},"answer":"A","answer_images":[],"answers_community":["A (92%)","8%"],"url":"https://www.examtopics.com/discussions/hashicorp/view/74898-exam-terraform-associate-topic-1-question-86-discussion/","timestamp":"2022-04-29 14:26:00","isMC":true,"topic":"1","exam_id":169,"answer_description":"","discussion":[{"poster":"vitasac","upvote_count":"12","comment_id":"596577","timestamp":"1651649100.0","content":"Selected Answer: A\nI'm aggree it's A"},{"timestamp":"1720909500.0","content":"A: run an apply is correct ans","comment_id":"1247523","upvote_count":"1","poster":"090200f"},{"content":"A is correct","poster":"Power123","upvote_count":"1","timestamp":"1680218220.0","comment_id":"856416"},{"upvote_count":"4","timestamp":"1664148840.0","content":"Selected Answer: A\nA-- is required to deploy the the changed count\nB- Not required\nC-- checked in my Lab for the count change it worked with out init\nD Not required","poster":"RVivek","comment_id":"679276"},{"upvote_count":"4","timestamp":"1656438900.0","poster":"Eltooth","comment_id":"624139","content":"Selected Answer: A\nA is correct answer : apply\n\nYou need your deployment to match your config, so only way to implement changes is through terraform apply."},{"comment_id":"619958","poster":"leonelferrari","content":"A is correct","timestamp":"1655829900.0","upvote_count":"2"},{"poster":"stalk98","comment_id":"612230","content":"A is the answer","upvote_count":"1","timestamp":"1654498620.0"},{"poster":"wangchung","timestamp":"1653247140.0","comment_id":"605694","content":"D? Its like throughout all these questions for this exam the answers are often not just wrong, but the obvious wrong one.\n\nA","upvote_count":"1"},{"comments":[{"comments":[{"content":"initialize is used to refer the plug-ins","comment_id":"744758","poster":"vikramvlr","upvote_count":"1","timestamp":"1670997180.0"}],"timestamp":"1652317680.0","comment_id":"600405","poster":"Sunrayk","content":"Actually no, it should be C as the config has changed. \nhttps://www.terraform.io/cli/commands/init","upvote_count":"1"}],"content":"It should be A as the plan will show you what will change and then you can confirm the apply","timestamp":"1652317560.0","poster":"Sunrayk","comment_id":"600403","upvote_count":"3"},{"comment_id":"599245","poster":"Parthasarathi","content":"Selected Answer: C\nIt should be C as the configuration file is changed","comments":[{"comment_id":"604442","content":"Configuration change don't require init","upvote_count":"3","timestamp":"1653052680.0","poster":"Maaran07"}],"upvote_count":"2","timestamp":"1652124000.0"},{"poster":"nez15","upvote_count":"4","content":"Selected Answer: A\nNot sure why D. Should be A","timestamp":"1651235160.0","comment_id":"594446"}],"question_images":[],"unix_timestamp":1651235160,"answer_ET":"A","question_id":333},{"id":"1PIcbfneb25ic2UR7JYN","answer_ET":"A","discussion":[{"content":"Selected Answer: A\nThe answer is A. connection.\n\nThe connection block is used to configure the authentication settings for a Terraform provisioner. This includes the username, password, and SSH key that will be used to connect to the remote resource.\n\nThe credentials and secrets blocks are used to store sensitive information, such as passwords and SSH keys. These blocks are not directly used by provisioners, but they can be referenced by the connection block.\n\nThe ssh block is used to configure the SSH client that Terraform will use to connect to the remote resource. This block is not typically used by provisioners, as the connection block can be used to configure the SSH client for all provisioners.\n\nHere is an example of a connection block for a provisioner that requires SSH authentication:\n\nconnection {\n host = \"example.com\"\n user = \"root\"\n password = \"my-password\"\n}","upvote_count":"10","poster":"BaburTurk","comment_id":"990247","timestamp":"1708887360.0"},{"content":"resource \"aws_instance\" \"example\" {\n ami = \"ami-0c55b159cbfafe1f0\"\n instance_type = \"t2.micro\"\n\n connection {\n type = \"ssh\"\n user = \"ec2-user\"\n private_key = file(\"~/.ssh/private_key.pem\")\n }\n\n provisioner \"remote-exec\" {\n inline = [\n \"echo 'Hello, World!' > hello.txt\",\n ]\n }\n}\nA connection","poster":"NashP","upvote_count":"3","timestamp":"1722603660.0","comment_id":"1138657"},{"comment_id":"977516","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/cli/config/config-file","poster":"Tlakmini","timestamp":"1707567840.0","upvote_count":"1"},{"content":"A is correct. Connection block","timestamp":"1696029540.0","poster":"Power123","comment_id":"856418","upvote_count":"2"},{"upvote_count":"4","poster":"tgaos","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/language/resources/provisioners/connection \nMost provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.","comment_id":"838531","timestamp":"1694655900.0"},{"timestamp":"1688976000.0","upvote_count":"1","comment_id":"771272","content":"Selected Answer: A\nconnection block: https://developer.hashicorp.com/terraform/language/resources/provisioners/connection#connection-block","poster":"resnef"},{"upvote_count":"1","poster":"adouban","content":"Selected Answer: A\nA is correct","timestamp":"1686552420.0","comment_id":"742561"},{"comment_id":"685206","timestamp":"1680497040.0","poster":"asudhin","upvote_count":"1","content":"Selected Answer: A\nIt is A"},{"upvote_count":"1","comment_id":"656506","poster":"Burakko","content":"Selected Answer: A\nMust be the connection block.","timestamp":"1677699300.0"},{"timestamp":"1674456060.0","comment_id":"635427","content":"Selected Answer: A\nhttps://www.terraform.io/language/resources/provisioners/connection","upvote_count":"3","poster":"aadi1121"},{"comment_id":"624141","upvote_count":"3","timestamp":"1672257480.0","content":"Selected Answer: A\nA is correct answer : connection.\n\n\"Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.\"\n\n\"Connection blocks don't take a block label and can be nested within either a resource or a provisioner.\"\n\nhttps://www.terraform.io/language/resources/provisioners/connection","poster":"Eltooth"},{"poster":"Zam88","upvote_count":"2","comment_id":"618700","content":"Most provisioners require access to the remote resource via SSH or WinRM and expect a nested connection block with details about how to connect.\n\nA","timestamp":"1671462180.0"}],"unix_timestamp":1655643780,"isMC":true,"question_images":[],"question_text":"Terraform provisioners that require authentication can use the ______ block.","answer_description":"","timestamp":"2022-06-19 15:03:00","question_id":334,"answer_images":[],"answer":"A","topic":"1","answers_community":["A (100%)"],"exam_id":169,"url":"https://www.examtopics.com/discussions/hashicorp/view/76923-exam-terraform-associate-topic-1-question-87-discussion/","choices":{"C":"secrets","D":"ssh","B":"credentials","A":"connection"}},{"id":"yavcG2h6YJx4PV7wKPML","answers_community":["D (59%)","B (39%)","2%"],"question_images":[],"url":"https://www.examtopics.com/discussions/hashicorp/view/76924-exam-terraform-associate-topic-1-question-88-discussion/","question_id":335,"topic":"1","unix_timestamp":1655644140,"answer":"D","timestamp":"2022-06-19 15:09:00","exam_id":169,"answer_ET":"D","answer_description":"","choices":{"B":"There is missing value for a variable","C":"The state files does not match the current infrastructure","A":"Code contains tabs indentation instead of spaces","D":"None of the above"},"discussion":[{"content":"Selected Answer: B\nB is correct answer. \n\nThe terraform validate command is used to validate the syntax of the terraform files. Terraform performs a syntax check on all the terraform files in the directory, and will display an error if any of the files doesn't validate.\n\nThis command does not check formatting (e.g. tabs vs spaces, newlines, comments etc.).\n\nThe following can be reported:\ninvalid HCL syntax (e.g. missing trailing quote or equal sign)\ninvalid HCL references (e.g. variable name or attribute which doesn't exist)\nsame provider declared multiple times\nsame module declared multiple times\nsame resource declared multiple times\ninvalid module name\ninterpolation used in places where it's unsupported (e.g. variable, depends_on, module.source, provider)\nmissing value for a variable (none of -var foo=... flag, -var-file=foo.vars flag, TF_VAR_foo environment variable, terraform.tfvars, or default value in the configuration)\n\nhttps://www.typeerror.org/docs/terraform/commands/validate\nhttps://learning-ocean.com/tutorials/terraform/terraform-validate","poster":"Eltooth","comment_id":"628229","upvote_count":"29","comments":[{"poster":"Pietjeplukgeluk","timestamp":"1691681100.0","comment_id":"804605","content":"Just tested this in lab, and \"missing value for a variable (none of -var foo=... flag, -var-file=foo.vars flag, TF_VAR_foo environment variable, terraform.tfvars, or default value in the configuration)\" is untrue, it is required to declare the variable type (but a value is not required to pass the \"terraform validate\")e.g. validates if referred somewhere else :\n\nvariable \"ami_type\" {\n type = string\n}","comments":[{"upvote_count":"3","poster":"Tyler2023","timestamp":"1714637100.0","content":"Agree on this, D is the correct answer\nTerraform Validate runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state.\n\nTo verify configuration in the context of a particular run (a particular target workspace, input variable values, etc), use the terraform plan command instead, which includes an implied validation check.\n\nhttps://developer.hashicorp.com/terraform/cli/commands/validate","comment_id":"1060453"},{"comment_id":"934550","upvote_count":"5","content":"Agree. D is the correct answer. I tested in Lab. Missing variable value will not be reported in terraform valid, because it can be passed while running code (hence not invalid code).","poster":"deepeshukla","timestamp":"1703607780.0"},{"timestamp":"1704512760.0","content":"I tested the same too. VSCode is detecting it but not terraform validate.From exam point of view, I wonder which one is the correct answer","comment_id":"944222","upvote_count":"1","poster":"joyboy23"}],"upvote_count":"5"}],"timestamp":"1673080560.0"},{"content":"Selected Answer: D\nConfusion between B and D.\nB was correct in older version of terraform. it was correct until v0.12.9 but then it was removed in later version. see below documentation links.\nAs per latest documentation B is incorrect when we have option D available.\nhttps://github.com/hashicorp/terraform/blob/v0.12.9/website/docs/commands/validate.html.markdown\nhttps://github.com/hashicorp/terraform/blob/v0.12.10/website/docs/commands/validate.html.markdown\nplease vote for correct answer to help others.","comment_id":"1004840","poster":"aanataliya","timestamp":"1710170400.0","upvote_count":"17"},{"comment_id":"1164866","content":"Selected Answer: D\nD is the correct answer. Without value for variable, if we run terraform apply, it will ask for value via CLI.","timestamp":"1725368340.0","poster":"AntonyPeter7","upvote_count":"4"},{"poster":"erhard","upvote_count":"1","comment_id":"1160046","timestamp":"1724696160.0","content":"Selected Answer: D\nhttps://developer.hashicorp.com/terraform/cli/commands/validate\n... regardless of any provided variables or existing state"},{"timestamp":"1721651040.0","poster":"Alandt","upvote_count":"2","comment_id":"1128739","content":"Selected Answer: D\nNewer version of Terraform does not require you to give up values."},{"poster":"TigerInTheCloud","upvote_count":"2","comment_id":"1100065","timestamp":"1718740560.0","content":"Selected Answer: D\n$ cat main.tf\nvariable \"cmd\" {}\nresource \"null_resource\" \"cmd\" {\n provisioner \"local-exec\" {\n command = \"${var.cmd}\"\n }\n}\n$ terraform validate\nSuccess! The configuration is valid."},{"poster":"Ramdi1","comment_id":"1080173","timestamp":"1716648360.0","upvote_count":"1","content":"Selected Answer: B\nI think it is B"},{"content":"Selected Answer: B\nB is the answer","comment_id":"1060409","upvote_count":"1","timestamp":"1714632600.0","poster":"ghostGuiggs"},{"upvote_count":"1","content":"D - \nThe terraform validate command is used to validate the syntax of the terraform files. Terraform performs a syntax check on all the terraform files in the directory, and will display an error if any of the files doesn't validate.\n\nThis command does not check formatting (e.g. tabs vs spaces, newlines, comments etc.)","poster":"MisterR0B0T","comment_id":"1059668","timestamp":"1714556940.0"},{"comment_id":"1059656","upvote_count":"1","content":"A\nterraform validate is a command that validates the configuration files in a directory, referring only to the configuration and not accessing any remote services such as remote state, provider APIs, etc1. It runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state 1. Therefore, it reports syntax check errors if there are any syntax errors in the code 1.\n\nTherefore, the correct answer is A. Code contains tabs indentation instead of spaces.","timestamp":"1714556280.0","poster":"MisterR0B0T"},{"poster":"MauroSoli","content":"Also input variable of a root module is a variable.\nSo if a variable of an used module haven't a default value terraform validate return error.\nAnswer is B","timestamp":"1714030800.0","upvote_count":"1","comment_id":"1053554"},{"comment_id":"1043663","content":"Selected Answer: D\nD is correct","poster":"Aman726","upvote_count":"1","timestamp":"1713119880.0"},{"content":"Selected Answer: D\nYou can have missing value on variable, so D is the answer","upvote_count":"2","timestamp":"1712733180.0","comment_id":"1039247","poster":"Alex1atd"},{"comment_id":"1027723","content":"i have checked practiacally with none variable value output say its valid so option D","upvote_count":"1","poster":"adityanarayan","timestamp":"1712552220.0"},{"comment_id":"1020445","upvote_count":"1","content":"Selected Answer: B\nB. There is missing value for a variable\n\nTerraform validate will check for syntax errors in your Terraform configuration, including the following:\n\nMissing or invalid variable values\nInvalid resource references\nInvalid attribute values\nInvalid data source references\nInvalid module references\nTerraform validate will not check for the following:\n\nCode indentation\nState file consistency\nOther configuration errors, such as logical errors or errors in the desired state of your infrastructure","poster":"gofavad926","timestamp":"1711693620.0"},{"timestamp":"1709554260.0","poster":"Halimb","content":"Selected Answer: D\nD. None of the above.\n\nRef: https://developer.hashicorp.com/terraform/cli/commands/validate","upvote_count":"1","comment_id":"998454"},{"timestamp":"1709241000.0","comment_id":"995433","upvote_count":"2","poster":"Spandrop","content":"D is the correct answer\n\n\"Validate runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state. It is thus primarily useful for general verification of reusable modules, including correctness of attribute names and value types.\"\n\nhttps://developer.hashicorp.com/terraform/cli/commands/validate"},{"comment_id":"991145","content":"Selected Answer: D\nCorrect Answer is D","upvote_count":"1","timestamp":"1709001240.0","poster":"debabrata6983"},{"poster":"vvkgp","comment_id":"985953","timestamp":"1708458060.0","upvote_count":"1","content":"B is correct: terraform validate not only checks for syntax and structural correctness but also ensures that required variable values are provided before proceeding with other Terraform operations."},{"content":"Selected Answer: D\nhttps://github.com/hashicorp/terraform/issues/21986\nValidation is not meant to ensure variables have values assigned, but rather it is used to determine if the structure, syntax, and types used in the configuration are valid, regardless of the values of the variables.","poster":"kudakk","upvote_count":"2","timestamp":"1708311660.0","comment_id":"984864"},{"timestamp":"1707971220.0","comment_id":"981225","poster":"SairamObili","content":"you can define an completely an empty variables like\n\nvariable \"temp'{}. this is syntactically right and there is on error in it.\nD is the correct Answer","upvote_count":"1"},{"content":"Selected Answer: B\nHave tried and confirmed B is correct","upvote_count":"1","timestamp":"1707368700.0","comment_id":"975129","poster":"ReiB"},{"upvote_count":"1","timestamp":"1707297900.0","comment_id":"974478","poster":"Rajmane","content":"Selected Answer: B\nB is right."},{"comment_id":"944777","upvote_count":"1","poster":"foreverlearner","timestamp":"1704560520.0","content":"Selected Answer: B\nI agree with B.\nIf you run tf validate without specifying the value of an input variable, you get an error: \ntf validate\nError: Missing required argument\nThe argument \"input_var\" is required, but no definition was found."},{"timestamp":"1702721520.0","poster":"milan92stankovic","upvote_count":"1","comment_id":"924979","content":"Selected Answer: B\nIt's B."},{"poster":"milan92stankovic","comment_id":"923738","content":"Selected Answer: B\nTerraform validate reports on missing variables.","upvote_count":"1","timestamp":"1702625580.0"},{"upvote_count":"2","comment_id":"900704","timestamp":"1700279640.0","poster":"Jayapriya","content":"It's D\n\"To verify configuration in the context of a particular run (a particular target workspace, input variable values, etc), use the terraform plan command instead, which includes an implied validation check.\""},{"content":"Selected Answer: D\nA,B,C are all wrong.","comment_id":"900592","poster":"sdm13168","timestamp":"1700273760.0","upvote_count":"1"},{"poster":"KJ_Rollings","timestamp":"1700246280.0","upvote_count":"1","content":"Selected Answer: D\nIt's D. Try declaring an empty variable and using it in a resource block. terraform validate won't show any errors. You can declare an empty variable like this and Terraform won't mind.\n\nvariable \"test\" { }","comment_id":"900369"},{"poster":"Ni33","upvote_count":"1","comment_id":"893013","timestamp":"1699534260.0","content":"Selected Answer: B\nB is the correct answer."},{"comment_id":"891577","upvote_count":"1","poster":"kiran15789","content":"Selected Answer: A\nA is clear and makes sense, B says missing values for variable, but terraform only checks for missing values for \"required\" variables","timestamp":"1699383960.0"},{"upvote_count":"1","content":"Selected Answer: B\nYes, Terraform validates checks for missing values for a variable.\n\nWhen running Terraform, it checks for required variables that are not set and prompts the user to provide a value for them. If a required variable is not set and there is no default value provided in the variable definition, Terraform will throw an error and the deployment will fail.\n\nAdditionally, Terraform also performs type validation for variables, ensuring that the value provided for a variable is of the correct data type. For example, if a variable is defined as a string, Terraform will ensure that the value provided is a string and not an integer or boolean.\n\nIt's important to ensure that all required variables are set before deploying infrastructure with Terraform, as missing values can cause errors and unexpected behavior during deployment.","comment_id":"878825","timestamp":"1698097860.0","poster":"ProfXsamson"},{"upvote_count":"2","poster":"sylvergorilla","comment_id":"869845","content":"Selected Answer: B\nYes, the terraform validate command will check for missing values for a variable. It will return an error if a required variable is not defined or has no value assigned to it.\n\nI just tested this in a lab.","timestamp":"1697242020.0"},{"content":"D, \nB is wrong\njust tested with empty variables and validation is success","comments":[{"comment_id":"940804","content":"It never said \"empty\" variable, however, it says missing value for a variable. You specified a variable and after the equals sign, you missed the value, the validate command will flag this","timestamp":"1704201420.0","poster":"henro4niger","upvote_count":"1"}],"upvote_count":"2","timestamp":"1696657320.0","comment_id":"863514","poster":"Artemiy"},{"upvote_count":"3","comment_id":"859529","content":"Selected Answer: D\nhttps://developer.hashicorp.com/terraform/cli/commands/validate\n\nValidate runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state. It is thus primarily useful for general verification of reusable modules, including correctness of attribute names and value types.","poster":"dhez46","timestamp":"1696306320.0"},{"timestamp":"1696083780.0","content":"Selected Answer: D\nD. None of the above.\n\nTerraform validate is a command that checks the syntax and consistency of a Terraform configuration file, without launching the resources. It checks for errors such as syntax errors, invalid expressions, and incorrect values for argument types.","poster":"camps","comment_id":"857179","upvote_count":"2"},{"poster":"Power123","timestamp":"1696029780.0","upvote_count":"1","comment_id":"856419","content":"Correct answer is B."},{"upvote_count":"2","poster":"lordoftheringsnewavatar","comment_id":"854346","content":"main.tf \n\nvariable \"instance_type\" {\n type = string\n}\n\nresource \"aws_instance\" \"test-vm\" {\n ami = \"ami-00c39f71452c08778\"\n instance_type = var.instance_type \n=====\ncat terraform.tfvars \ninstance_type = \n=====\nterraform validate \nSuccess! The configuration is valid.","timestamp":"1695988620.0"},{"poster":"David_C_90","timestamp":"1694790660.0","upvote_count":"4","comment_id":"840102","content":"Selected Answer: D\nValidate runs checks that verify whether a configuration is syntactically valid and internally consistent, regardless of any provided variables or existing state. It is thus primarily useful for general verification of reusable modules, including correctness of attribute names and value types.\n\nhttps://developer.hashicorp.com/terraform/cli/commands/validate"},{"content":"Selected Answer: B\nAnswer should be B.\nhttp://man.hubwiz.com/docset/Terraform.docset/Contents/Resources/Documents/docs/commands/validate.html","comment_id":"823294","timestamp":"1693111500.0","poster":"Pranay6687","upvote_count":"2"},{"timestamp":"1692033780.0","upvote_count":"3","poster":"charleschouteau","comment_id":"808737","content":"Selected Answer: D\nD is correct"},{"poster":"agmesas","upvote_count":"8","content":"Selected Answer: D\nD, definitely. Validate runs checks that verify whether a configuration is syntactically valid and internally consisten, regardless of any provide variables or existing state (B and C discarded). ...referring only to the configuration and not accessing any remote service such as remote state... For A, you must use \"fmt\". Validate, validates the type of variables, missing brackets, etc...","comment_id":"800086","timestamp":"1691338560.0"},{"comment_id":"799512","poster":"Abhijeet2904","upvote_count":"1","timestamp":"1691301960.0","content":"Selected Answer: A\nA. Code contains tabs indentation instead of spaces\n\nThe \"terraform validate\" command is used to check the syntax and structure of a Terraform configuration, but does not verify the correctness of the configuration or ensure that it is in sync with the current infrastructure. The \"terraform validate\" command will report syntax errors in the Terraform code, such as using tabs instead of spaces for indentation. To verify that the configuration is in sync with the current infrastructure, you can run \"terraform plan\" or \"terraform apply\". To check for missing values for variables, you can set the TF_WARN_VAR_NAME environment variable to \"1\"."},{"comment_id":"797347","poster":"Shankpra","timestamp":"1691086860.0","upvote_count":"3","content":"It's D\n\nterraform plan\nvar.access_key2\n Enter a value:\n\n\nterraform validate\nSuccess! The configuration is valid."},{"content":"terraform validate DOES NOT checks for variables \n\n\"terraform validate checks if the module implementation itself is valid, not whether a particular plan for it is valid. Variables are part of a plan rather than part of the module itself, so terraform validate does not do any checks of their values. (it does, however, detect if they are being used consistently in the module, such as producing an error if a string variable is used where a list is expected.)\"\n\n\nhttps://github.com/hashicorp/terraform/issues/21790","upvote_count":"1","timestamp":"1689838560.0","comment_id":"782057","poster":"lo_ol"},{"upvote_count":"2","comment_id":"776278","content":"Selected Answer: D\nDDDDDD","timestamp":"1689403260.0","poster":"CofkoCof"},{"poster":"minaeshak","comment_id":"775202","content":"Selected Answer: D\nD is correct","timestamp":"1689317400.0","upvote_count":"3"},{"content":"D is the correct answer. we can give the input value during the terraform apply.\nIt will not through the error if the value is not declared in the variable. varaible \"env_name\" {}\nIt will through the error if you are not declared the variable itself in variable.tf(undeclared variable error)\nbelow mentioned reference links are not official hashicorp links.","poster":"vikramvlr","timestamp":"1686715680.0","upvote_count":"2","comment_id":"744770"},{"content":"terraform validate\n╷\n│ Error: Reference to undeclared input variable\n│ \n│ on main.tf line 4, in provider \"aws\":\n│ 4: secret_key = var.secret_key\n│ \n│ An input variable with the name \"secret_key\" has not been declared. This variable can be declared with a\n│ variable \"secret_key\" {} block.","timestamp":"1686058260.0","comment_id":"736950","upvote_count":"1","poster":"secdaddy"},{"content":"D the right answer, \nValidate will not through error if there is missing variable value, because the user will be able to enter the var.value","poster":"Hossamjom","timestamp":"1683051780.0","comment_id":"710047","upvote_count":"1"},{"comment_id":"694675","content":"Selected Answer: D\nD is correct.\nvalidate does not check for uninitialized values of vars, only for undeclared vars!\n#terraform validate\nSuccess! The configuration is valid.\n\n#terraform plan\nvar.my_ip\n Enter a value:\n\n\nYou can specify a value for a var with -var in cli or terraform prompts you for a value.","comments":[{"poster":"Pietjeplukgeluk","comment_id":"804607","content":"Nice demo, you hit the nail on the head!","timestamp":"1691681160.0","upvote_count":"1"}],"timestamp":"1681469520.0","upvote_count":"4","poster":"alifie"},{"upvote_count":"3","timestamp":"1680349080.0","poster":"yaza","content":"B is false. Validate runs checks that verify whether a configuration is syntactically\n valid and internally consistent, regardless of any provided variables or\n existing state. It is thus primarily useful for general verification of\n reusable modules, including correctness of attribute names and value types.","comments":[{"content":"Selected Answer: D","comment_id":"687284","timestamp":"1680734100.0","poster":"yaza","upvote_count":"1"}],"comment_id":"684169"},{"comment_id":"618703","poster":"Zam88","upvote_count":"4","content":"The following can be reported:\n\ninvalid HCL syntax (e.g. missing trailing quote or equal sign)\ninvalid HCL references (e.g. variable name or attribute which doesn't exist)\nsame provider declared multiple times\nsame module declared multiple times\nsame resource declared multiple times\ninvalid module name\ninterpolation used in places where it's unsupported (e.g. variable, depends_on, module.source, provider)\nmissing value for a variable (none of -var foo=... flag, -var-file=foo.vars flag, TF_VAR_foo environment variable, terraform.tfvars, or default value in the configuration)\n\nB","timestamp":"1671462540.0"}],"isMC":true,"question_text":"Terraform validate reports syntax check errors from which of the following scenarios?","answer_images":[]}],"exam":{"name":"Terraform Associate","isBeta":false,"numberOfQuestions":347,"isMCOnly":false,"isImplemented":true,"id":169,"lastUpdated":"12 Apr 2025","provider":"Hashicorp"},"currentPage":67},"__N_SSP":true}