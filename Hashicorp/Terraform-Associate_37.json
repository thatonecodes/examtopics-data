{"pageProps":{"questions":[{"id":"2xTyXRQ94nzP7yBZgnRY","question_text":"The Terraform binary version and provider versions must match each other in a single configuration.","timestamp":"2023-06-17 21:12:00","answer_images":[],"isMC":true,"topic":"1","question_id":181,"answer_description":"","answers_community":["B (100%)"],"question_images":[],"exam_id":169,"unix_timestamp":1687029120,"discussion":[{"comment_id":"926203","upvote_count":"5","content":"Selected Answer: B\nIf the versions are incompatible or if a required provider is missing, Terraform will prompt you to update the provider versions or download the necessary provider plugins.","poster":"Fyssy","timestamp":"1718651520.0"},{"poster":"LemonadeSoftware","timestamp":"1731736080.0","upvote_count":"2","content":"B\n\nNot necessarily. In Terraform, the version of the Terraform binary itself doesn't have to match the versions of the providers being used within a configuration file.\n\nHowever, it's generally recommended to use compatible versions. Terraform typically manages provider versions independently from its core binary. Each Terraform provider (e.g., AWS, Azure, etc.) has its own versioning that may differ from the version of the Terraform core.\n\nUsing compatible versions helps ensure that the features and functionalities expected by your configuration are available and supported by both the Terraform binary and the specified providers. But it's not a strict requirement that they must match exactly.","comment_id":"1072170"}],"choices":{"A":"True","B":"False"},"answer":"B","url":"https://www.examtopics.com/discussions/hashicorp/view/112482-exam-terraform-associate-topic-1-question-261-discussion/","answer_ET":"B"},{"id":"CetCggvFXdcnTmet3MJ1","timestamp":"2023-06-17 21:10:00","answers_community":["B (90%)","10%"],"question_id":182,"answer":"B","answer_ET":"B","topic":"1","question_text":"The .terraform.lock.hcl file tracks module versions.","discussion":[{"comment_id":"926202","content":"Selected Answer: B\nThe .terraform.lock.hcl file is not used to track module versions; it is used to lock the versions of the provider dependencies used by your Terraform configuration.","upvote_count":"13","timestamp":"1702847400.0","poster":"Fyssy"},{"timestamp":"1711460760.0","content":"Selected Answer: B\nAt present, the dependency lock file tracks only provider dependencies. Terraform does not remember version selections for remote modules, and so Terraform will always select the newest available module version that meets the specified version constraints.\nFuente: https://developer.hashicorp.com/terraform/language/files/dependency-lock","comment_id":"1017694","upvote_count":"6","poster":"Mimi666"},{"poster":"Newuser95","content":"Selected Answer: B\nAt present, the dependency lock file tracks only provider dependencies. Terraform does not remember version selections for remote modules, and so Terraform will always select the newest available module version that meets the specified version constraints. You can use an exact version constraint to ensure that Terraform will always select the same module version.\n\nhttps://developer.hashicorp.com/terraform/language/files/dependency-lock","timestamp":"1724141100.0","comment_id":"1154619","upvote_count":"3"},{"poster":"gold4otas","content":"Selected Answer: B\nThe .terraform.lock.hcl file does not track module versions. Instead, it is used to lock the versions of the provider plugins used by Terraform. It helps ensure that the same provider versions are used consistently across different Terraform runs and by different team members.\n\nModule versions, on the other hand, are typically tracked in the versions.tf or required_version block in the main Terraform configuration file or in the root module. The versions of modules are controlled through the Terraform configuration itself, not the .terraform.lock.hcl file.","comment_id":"1110237","upvote_count":"2","timestamp":"1719710400.0"},{"comment_id":"1096765","upvote_count":"1","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/language/files/dependency-lock","poster":"Spandrop","timestamp":"1718387520.0"},{"upvote_count":"1","timestamp":"1718109120.0","poster":"enry99ita","comment_id":"1093573","content":"Selected Answer: B\nAt present, the dependency lock file tracks only provider dependencies. Terraform does not remember version selections for remote modules, and so Terraform will always select the newest available module version that meets the specified version constraints. You can use an exact version constraint to ensure that Terraform will always select the same module version."},{"upvote_count":"1","comment_id":"1085322","poster":"PolitoMex","content":"Selected Answer: A\nIn the newest documentation .terraform.lock.hcl tracks both modules and providers versions.","timestamp":"1717249620.0"},{"content":"A\n\nThe .terraform.lock.hcl file keeps track of the specific versions of modules used in your Terraform configuration. It records the exact versions of modules and their dependencies to ensure that subsequent runs of Terraform use the same versions consistently.\n\nThis file helps maintain consistency across different environments and team members working on the same Terraform project by locking the versions of modules, preventing unintentional upgrades or changes to the modules without explicit action.","comment_id":"1072172","poster":"LemonadeSoftware","upvote_count":"2","timestamp":"1715831340.0"},{"comment_id":"1017867","content":"Selected Answer: B\ntracks both providers and modules versions","comments":[{"upvote_count":"2","comment_id":"1056389","timestamp":"1714330740.0","poster":"uax","content":"\"At present, the dependency lock file tracks only provider dependencies. Terraform does not remember version selections for remote modules, and so Terraform will always select the newest available module version that meets the specified version constraints. \"\nhttps://developer.hashicorp.com/terraform/language/files/dependency-lock"}],"timestamp":"1711470600.0","poster":"dn_mohammed_data","upvote_count":"2"},{"poster":"BalaGCPArch","upvote_count":"1","timestamp":"1708940820.0","content":"Selected Answer: A\nThe question does not ask if itâ€™s used to track only module version.. the dependency lock is used to track both provider and module version.. Hence I go with Option A","comment_id":"990584"},{"poster":"akm_1010","content":"Selected Answer: B\nAt present, the dependency lock file tracks only provider dependencies. Terraform does not remember version selections for remote modules\nhttps://developer.hashicorp.com/terraform/language/files/dependency-lock","timestamp":"1708015200.0","upvote_count":"1","comment_id":"981770"}],"answer_images":[],"url":"https://www.examtopics.com/discussions/hashicorp/view/112481-exam-terraform-associate-topic-1-question-262-discussion/","exam_id":169,"isMC":true,"unix_timestamp":1687029000,"question_images":[],"choices":{"A":"True","B":"False"},"answer_description":""},{"id":"2CdZ8Nfnuc6uVImLmdDp","answer_ET":"A","unix_timestamp":1687784160,"question_images":[],"exam_id":169,"url":"https://www.examtopics.com/discussions/hashicorp/view/113324-exam-terraform-associate-topic-1-question-263-discussion/","answer_description":"","isMC":true,"question_text":"You can develop a custom provider to manage its resources using Terraform.","answer":"A","topic":"1","choices":{"B":"False","A":"True"},"discussion":[{"poster":"090200f","upvote_count":"2","content":"Selected Answer: A\nIn these tutorials, you will write a custom Terraform provider against the API of a fictional coffee-shop application called HashiCups using the Terraform Plugin Framework. You will learn how to create data sources, authenticate the provider to the HashiCups client, and how providers map target APIs to Terraform in order to create, read, update, and delete resources. You will also implement testing, documentation generation, and learn how to publish your providers to the Terraform Registry.\nhttps://developer.hashicorp.com/terraform/tutorials/providers-plugin-framework/providers-plugin-framework-provider","comment_id":"1259556","timestamp":"1722542340.0"},{"comment_id":"1154620","timestamp":"1708423680.0","content":"Selected Answer: A\nhttps://www.hashicorp.com/blog/writing-custom-terraform-providers","upvote_count":"1","poster":"Newuser95"},{"upvote_count":"1","content":"Selected Answer: B\nI would say false.\n\nYou can create the provider using Go language for instance, but not Terraform (HCL). \n\nThat is pretty clear in this tutorial:\nhttps://developer.hashicorp.com/terraform/tutorials/providers-plugin-framework/providers-plugin-framework-provider \n\nYou develop everything with Go and then test in Terraform","poster":"Spandrop","timestamp":"1702583760.0","comment_id":"1096770"},{"comment_id":"1045737","poster":"velmidos","content":"Selected Answer: A\nAnswer is A !","upvote_count":"4","timestamp":"1697533260.0"},{"poster":"Paul_white","upvote_count":"2","content":"ANSWER IS A","comment_id":"972586","timestamp":"1691194560.0"},{"poster":"Sam1101","upvote_count":"1","comment_id":"967911","timestamp":"1690794120.0","content":"Selected Answer: B\nAnswer is True"},{"content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/tutorials/providers-plugin-framework/providers-plugin-framework-provider","comments":[{"upvote_count":"1","poster":"Rajmane","comment_id":"978264","timestamp":"1691728260.0","content":"Right correct answer is A"}],"upvote_count":"3","timestamp":"1687784160.0","comment_id":"934468","poster":"DevoteamAnalytix"}],"question_id":183,"answer_images":[],"answers_community":["A (83%)","B (17%)"],"timestamp":"2023-06-26 14:56:00"},{"id":"m9oIEscdapYC9lV6sQEI","topic":"1","answer":"B","answer_ET":"B","answers_community":["B (63%)","D (26%)","11%"],"question_images":[],"discussion":[{"poster":"wh1t4k3r","comment_id":"955418","timestamp":"1705589340.0","upvote_count":"7","content":"I would appreciate comments on my thoughts: this would be a case of choose 2 right? A is also not a benefit, right?"},{"content":"Selected Answer: B\nRemote state wasn't made for sharing modules because that's module registry's job. :)","comment_id":"983645","poster":"RonZhong","timestamp":"1708182120.0","upvote_count":"6"},{"upvote_count":"1","poster":"YesPlease","timestamp":"1738685760.0","comment_id":"1351487","content":"Selected Answer: B\nAnswer: B\n\nTerraform remote state stores information about infrastructure resources and does not contain any of the configuration code used to create it."},{"content":"Selected Answer: B\nSaw this on another test engine,, worded slightly different.\n\n\"The Terraform State file does not contain the actual module code\"","poster":"alen995454","upvote_count":"2","comment_id":"1125291","timestamp":"1721241180.0"},{"comment_id":"1056392","content":"Selected Answer: B\nIt's B. Like another person mentioned, sharing reusable code modules is the module registry's job.\nhttps://developer.hashicorp.com/terraform/language/state/remote","poster":"uax","upvote_count":"3","timestamp":"1714331520.0"},{"upvote_count":"2","poster":"govind_yagyasaini","comment_id":"1054250","timestamp":"1714099680.0","content":"https://developer.hashicorp.com/terraform/language/state/remote"},{"upvote_count":"5","content":"Selected Answer: D\nThe answer is D. Delegate output to other teams.\n\nRemote state is a feature of Terraform that allows you to store the state of your infrastructure in a remote location. This can be beneficial for a number of reasons, including:\n\nKeeping unencrypted sensitive information off disk\nEasily sharing reusable code modules\nWorking in a team\nEnabling version control and auditing\nHowever, remote state does not allow you to delegate output to other teams. This is because the state file contains the full state of your infrastructure, including all of the resources that have been created. If you want to delegate output to other teams, you will need to use a different mechanism, such as a configuration management tool or a messaging system.","timestamp":"1709137200.0","poster":"BaburTurk","comment_id":"992280"},{"upvote_count":"2","timestamp":"1707692100.0","content":"itssss BBBBBBB!!!!!!","comment_id":"978981","poster":"Sima_01"},{"comment_id":"978267","upvote_count":"2","timestamp":"1707633180.0","content":"Selected Answer: A\nWhy not A","poster":"Rajmane"},{"poster":"AWS_cert2023","comments":[{"poster":"ShakDaddy","upvote_count":"2","timestamp":"1706665800.0","content":"The question states \"which is NOT a benefit\"","comment_id":"967597"}],"upvote_count":"4","content":"The answer B.\n\nhttps://developer.hashicorp.com/terraform/language/state/remote\nWith remote state, Terraform writes the state data to a remote data store, which can then be shared between all members of a team. \nRemote state allows you to share output values with other configurations.\nFor fully-featured remote backends, Terraform can also use state locking to prevent concurrent runs of Terraform against the same state.","comment_id":"930477","timestamp":"1703253720.0"}],"timestamp":"2023-06-22 14:02:00","choices":{"B":"Easily share reusable code modules","D":"Delegate output to other teams","A":"Keeping unencrypted sensitive information off disk","C":"Working in a team"},"answer_description":"","url":"https://www.examtopics.com/discussions/hashicorp/view/112926-exam-terraform-associate-topic-1-question-264-discussion/","question_id":184,"answer_images":[],"exam_id":169,"isMC":true,"question_text":"Which of these is not a benefit of remote state?","unix_timestamp":1687435320},{"id":"5TrDoee4ZR2oRRvrFx5X","topic":"1","answer":"B","answers_community":["B (100%)"],"answer_ET":"B","question_images":[],"discussion":[{"poster":"090200f","timestamp":"1722644520.0","comment_id":"1260097","content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/language/meta-arguments/resource-provider\nThe provider meta-argument specifies which provider configuration to use for a resource, overriding Terraform's default behavior of selecting one based on the resource type name. Its value should be an unquoted <PROVIDER>.<ALIAS> reference.\n# default configuration\nprovider \"google\" {\n region = \"us-central1\"\n}\n\n# alternate configuration, whose alias is \"europe\"\nprovider \"google\" {\n alias = \"europe\"\n region = \"europe-west1\"\n}","upvote_count":"1"},{"timestamp":"1690794120.0","upvote_count":"2","comment_id":"967910","poster":"Sam1101","content":"Selected Answer: B\nTo create multiple configurations for a given provider, include multiple provider blocks with the same provider name. For each additional non-default configuration, use the alias meta-argument to provide an extra name segment."},{"content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/language/providers/configuration#alias-multiple-provider-configurations","poster":"DevoteamAnalytix","comment_id":"934474","timestamp":"1687784520.0","upvote_count":"4"}],"timestamp":"2023-06-26 15:02:00","choices":{"A":"depends_on","D":"name","B":"alias","C":"id"},"url":"https://www.examtopics.com/discussions/hashicorp/view/113326-exam-terraform-associate-topic-1-question-265-discussion/","answer_description":"","question_id":185,"answer_images":[],"exam_id":169,"isMC":true,"question_text":"When using multiple configurations of the same Terraform provider, what meta-argument must be included in any non-default provider configurations?","unix_timestamp":1687784520}],"exam":{"isImplemented":true,"provider":"Hashicorp","isMCOnly":false,"lastUpdated":"12 Apr 2025","numberOfQuestions":347,"isBeta":false,"name":"Terraform Associate","id":169},"currentPage":37},"__N_SSP":true}