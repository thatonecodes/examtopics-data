{"pageProps":{"questions":[{"id":"kfrhhUxE08U0MucfGXxQ","question_images":[],"timestamp":"2022-09-06 13:09:00","answer":"B","question_text":"Terraform installs its providers during which phase?","answer_images":[],"answers_community":["B (100%)"],"unix_timestamp":1662462540,"exam_id":169,"isMC":true,"choices":{"B":"Init","A":"Plan","D":"All of the above","C":"Refresh"},"question_id":71,"answer_ET":"B","topic":"1","url":"https://www.examtopics.com/discussions/hashicorp/view/80584-exam-terraform-associate-topic-1-question-162-discussion/","discussion":[{"timestamp":"1721580720.0","poster":"090200f","upvote_count":"1","content":"Selected Answer: B\nterraform init is the correct answer","comment_id":"1252608"},{"comment_id":"760665","content":"Selected Answer: B\nTrivial. B is correct","upvote_count":"2","poster":"InformationOverload","timestamp":"1672295460.0"},{"comment_id":"709154","timestamp":"1667307840.0","upvote_count":"1","content":"Selected Answer: B\nInit for sure","poster":"G4Exams"},{"poster":"depal_dhir","comment_id":"661976","timestamp":"1662525120.0","upvote_count":"2","content":"Selected Answer: B\nTerraform installs providers at init phase"},{"upvote_count":"1","timestamp":"1662462540.0","content":"Providers are installed in the init phase - answer is correct","poster":"keiffo2","comment_id":"661135"}],"answer_description":""},{"id":"opI9i7T1srDQ3fhNQ5oy","answer_description":"","question_id":72,"exam_id":169,"answer_ET":"C","answer":"C","timestamp":"2022-09-02 17:52:00","discussion":[{"upvote_count":"8","timestamp":"1677779520.0","content":"Selected Answer: C\n\"Enforcing policy checks on runs - Policies are checked when a run is performed, after the terraform plan but before it can be confirmed or the terraform apply is executed.\"","comment_id":"657574","poster":"Burakko"},{"poster":"mohamed1999","content":"Selected Answer: C\nTerraform Enterprise enforces Sentinel policies between the plan and apply phases of a run, preventing out of policy infrastructure from being provisioned. Unless overridden by an authorized user, only plans that pass all Sentinel policies checked against them are allowed to proceed to the apply step.","upvote_count":"4","comment_id":"1109971","timestamp":"1719773700.0"},{"timestamp":"1699069860.0","poster":"zanhsieh","content":"Selected Answer: C\nC. See the official diagram here:\nhttps://developer.hashicorp.com/terraform/tutorials/policy/sentinel-install","comment_id":"889093","upvote_count":"3"},{"poster":"camps","comments":[],"content":"Selected Answer: B\nB. During the plan phase.\n\nSentinel is a policy-as-code framework integrated with Terraform Enterprise that allows organizations to define and enforce policies on infrastructure changes. Sentinel enforces policy logic during the plan phase of a Terraform Enterprise run, before any changes are applied to the infrastructure. During the plan phase, Terraform generates an execution plan that describes the changes that will be made to the infrastructure. Sentinel evaluates policy rules against this execution plan to determine whether the proposed changes comply with the defined policies. If any violations are detected, the plan is rejected, and the changes are not applied.\n\nSentinel does not enforce policy logic before the plan phase or after the apply phase. However, Sentinel policies can also be used to enforce compliance on policy requirements that are not directly related to infrastructure changes, such as resource tagging or naming conventions. In these cases, Sentinel policies may be evaluated at other points in the Terraform Enterprise workflow, such as during VCS (version control system) integration or during cost estimation.","timestamp":"1696075920.0","upvote_count":"2","comment_id":"857033"},{"upvote_count":"3","comment_id":"847376","poster":"phidelics","content":"Selected Answer: C\nterraform plan >>>>>>sentinel policy>>>>>>>>>terraform apply","timestamp":"1695399600.0"},{"upvote_count":"2","timestamp":"1678747380.0","comment_id":"668407","poster":"Pinky0289","content":"Policies are enforced after the plan and before the apply commands. so, the answer is option C."}],"answers_community":["C (90%)","10%"],"unix_timestamp":1662133920,"question_images":[],"question_text":"When does Sentinel enforce policy logic during a Terraform Enterprise run?","url":"https://www.examtopics.com/discussions/hashicorp/view/79468-exam-terraform-associate-topic-1-question-163-discussion/","answer_images":[],"isMC":true,"topic":"1","choices":{"B":"During the plan phase","A":"Before the plan phase","C":"Before the apply phase","D":"After the apply phase"}},{"id":"ZDXrGdo9QLeOUf7VN0qT","url":"https://www.examtopics.com/discussions/hashicorp/view/81871-exam-terraform-associate-topic-1-question-164-discussion/","question_text":"What is the purpose of a Terraform workspace in either open source or enterprise?","discussion":[{"timestamp":"1727698380.0","poster":"camps","comment_id":"857035","content":"Selected Answer: A\nA. Workspaces allow you to manage collections of infrastructure in state files.\n\nThe purpose of a Terraform workspace, both in open source and enterprise, is to allow users to manage multiple \"instances\" of infrastructure within the same configuration codebase. Each workspace is a separate instance of a Terraform state file that can be managed independently. This means that a single Terraform configuration can be used to manage multiple sets of resources, with each set of resources represented by a separate workspace.\n\nWorkspaces are useful when there is a need to manage multiple versions of the same infrastructure in the same configuration codebase, such as different environments (dev, staging, prod) or different regions. By creating a separate workspace for each instance of infrastructure, users can manage them independently without causing conflicts or overwriting state.\n\nOption B, C, and D are not correct. While workspaces may be used in conjunction with logical separation of business units, grouping multiple infrastructure security policies, or providing limited access to a cloud environment, they are not the primary purpose of workspaces in Terraform.","upvote_count":"4"},{"poster":"princajen","comment_id":"810986","timestamp":"1723824120.0","upvote_count":"3","content":"Selected Answer: A\nA. Workspaces allow you to manage collections of infrastructure in state files. The purpose of Terraform workspaces is to manage multiple state files for the same Terraform configuration. Workspaces provide a way to organize and isolate state files for different environments (e.g., development, staging, production) or different configurations (e.g., different regions, different sets of resources). Each workspace has its own copy of the state file, allowing changes to be made independently and preventing conflicts. Workspaces are available in both open source and Terraform Enterprise.\n\nOption B, C, and D are not accurate descriptions of the purpose of Terraform workspaces. Workspaces do not provide logical separation of business units, grouping of infrastructure security policies, or limited access to a cloud environment. These are functions of other Terraform Enterprise features, such as organizations, policy sets, and workspaces with role-based access controls."},{"timestamp":"1719635880.0","content":"Selected Answer: A\nA workspace is a logical separation of resources within the same configuration. Workspaces allow you to manage multiple environments, such as production, staging, and development, within the same configuration and state file. I will go for A here.","upvote_count":"1","poster":"InformationOverload","comment_id":"760675"},{"poster":"macross","content":"Workspaces in Terraform are simply independently managed state files. A workspace contains everything that Terraform needs to manage a given collection of infrastructure, and separate Workspaces function like completely separate working directories. We can manage multiple environments with Workspaces. Answer A","comment_id":"741406","upvote_count":"1","timestamp":"1718073060.0"},{"comment_id":"737756","content":"There is no discussion of business units in the documentation so (A) seems to make the most sense, based on these two sources both of which mention state :\n\nTerraform CLI workspaces are associated with a specific working directory and isolate multiple state files in the same working directory, letting you manage multiple groups of resources with a single configuration.\nhttps://developer.hashicorp.com/terraform/cloud-docs/workspaces\n\nThe persistent data stored in the backend belongs to a workspace. The backend initially has only one workspace containing one Terraform state associated with that configuration. Some backends support multiple named workspaces, allowing multiple states to be associated with a single configuration. The configuration still has only one backend, but you can deploy multiple distinct instances of that configuration without configuring a new backend or changing authentication credentials.\nhttps://developer.hashicorp.com/terraform/language/state/workspaces","poster":"secdaddy","timestamp":"1717750980.0","upvote_count":"2"},{"content":"Selected Answer: B\nhttps://www.hashicorp.com/resources/why-consider-terraform-enterprise-over-open-source\n\nTerraform Enterprise provides a logical unit to break down infrastructure as code into workspaces.","comment_id":"725044","poster":"BleHi","timestamp":"1716451800.0","upvote_count":"1"},{"comment_id":"689901","poster":"yogishrb2020","upvote_count":"3","content":"Selected Answer: A\nhttps://www.terraform.io/cloud-docs/workspaces","timestamp":"1712635500.0"},{"comment_id":"686496","poster":"yaza","comments":[{"upvote_count":"1","content":"becaue A is the correct of cli-workspace and not cloud workspace","comment_id":"686771","poster":"yaza","timestamp":"1712312340.0"}],"timestamp":"1712275440.0","upvote_count":"1","content":"Selected Answer: B"},{"timestamp":"1710275700.0","upvote_count":"2","poster":"Hizumi","content":"Answer is A\nWorking with Terraform involves managing collections of infrastructure resources, and most organizations manage many different collections.\nReference: https://www.terraform.io/cloud-docs/workspaces (Refer to workspace contents)","comment_id":"667355","comments":[{"timestamp":"1710441360.0","comment_id":"669173","comments":[{"timestamp":"1710701820.0","content":"I would like to know that as well please.","upvote_count":"1","comment_id":"671696","poster":"kashifhussain"}],"poster":"SanderIsTheBestCloudShaper","upvote_count":"2","content":"hello , is this dump valid ? i see u really active can u answer me."}]}],"answers_community":["A (92%)","8%"],"timestamp":"2022-09-12 20:35:00","answer_ET":"A","topic":"1","exam_id":169,"answer_description":"","question_id":73,"question_images":[],"unix_timestamp":1663007700,"choices":{"B":"A logical separation of business units","D":"Provides limited access to a cloud environment","A":"Workspaces allow you to manage collections of infrastructure in state files","C":"A method of grouping multiple infrastructure security policies"},"answer":"A","answer_images":[],"isMC":true},{"id":"Pgs3CRLIULUc5EieaGWV","answer_images":[],"topic":"1","answers_community":["A (88%)","12%"],"question_id":74,"answer_ET":"A","unix_timestamp":1662134100,"exam_id":169,"answer_description":"","question_text":"Which is the best way to specify a tag of v1.0.0 when referencing a module stored in Git (for example git::https://example.com/vpc.git)?","discussion":[{"comment_id":"680359","timestamp":"1711518780.0","poster":"RVivek","upvote_count":"8","content":"Selected Answer: A\nIf the source is from terrform registry then we can use version = \"1.0.0\"\nwhen using git as the source we have to use ?ref=1.0.0 the exact git path givin in the question is given in this terraform official documentation please check https://www.terraform.io/language/modules/sources#selecting-a-revision"},{"upvote_count":"6","poster":"BaburTurk","content":"Selected Answer: A\nexample \n source = \"git::https://example.com/vpc.git?ref=v1.2.0\"","comment_id":"753585","timestamp":"1719075240.0"},{"poster":"dinesh198728","comment_id":"665167","upvote_count":"3","timestamp":"1710060540.0","content":"Selected Answer: A\nA is correct"},{"timestamp":"1709960880.0","comments":[{"content":"There was exactly the same question earlier. This was the answer. however if you I ask me, both answers must be correct. Because they both work.","upvote_count":"1","poster":"Burakko","timestamp":"1710100200.0","comment_id":"665584"}],"upvote_count":"2","poster":"zyxphreez","content":"Selected Answer: A\nas Donathon said....\nhttps://www.terraform.io/language/modules/sources#selecting-a-revision\n\nplease check the module repository is GIT.... Burakko answer is incorrect","comment_id":"664169"},{"poster":"donathon","comment_id":"660751","timestamp":"1709702280.0","upvote_count":"3","content":"Selected Answer: A\nhttps://www.terraform.io/language/modules/sources#selecting-a-revision"},{"comments":[{"timestamp":"1712287560.0","poster":"Linus11","upvote_count":"2","comment_id":"686549","content":"This is about version stored in GIT, not in consul."}],"poster":"Burakko","timestamp":"1709402100.0","upvote_count":"3","comment_id":"657577","content":"Selected Answer: B\nUse the version argument in the module block to specify versions:\nExample:\nmodule \"consul\" {\n source = \"hashicorp/consul/aws\"\n version = \"0.0.5\"\n\n servers = 3\n}"}],"choices":{"B":"Add version = \"1.0.0\" parameter to module block","C":"Nothing ג€\" modules stored on GitHub always default to version 1.0.0","A":"Append ?ref=v1. 0. 0 argument to the source path","D":"Modules stored on GitHub do not support versioning"},"isMC":true,"question_images":[],"answer":"A","timestamp":"2022-09-02 17:55:00","url":"https://www.examtopics.com/discussions/hashicorp/view/79469-exam-terraform-associate-topic-1-question-165-discussion/"},{"id":"OTeQhcLekiYYIq22BeLO","answer_description":"","question_id":75,"exam_id":169,"answer_ET":"B","timestamp":"2022-09-06 13:16:00","answer":"B","discussion":[{"timestamp":"1710604440.0","poster":"szyszka","content":"I think most of you misread the question. It is not about requirement of running terraform apply it is about whether it is possible to change backend after first apply command.","upvote_count":"1","comments":[{"upvote_count":"1","poster":"Paul_white","timestamp":"1722701460.0","comment_id":"971293","content":"SO WHAT IS THE ANSWER ?"}],"comment_id":"841138"},{"content":"Selected Answer: B\nB. Optional , the mandatory using terraform init","timestamp":"1702454940.0","poster":"adouban","upvote_count":"1","comment_id":"743735"},{"timestamp":"1698844140.0","content":"Selected Answer: B\nYou can do it. Not a must. If it's useful epends on the usecase. So B.","poster":"G4Exams","comment_id":"709158","upvote_count":"4"},{"upvote_count":"1","timestamp":"1698412740.0","content":"its gotta be C as there will be an error.\nWhen you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.","comment_id":"705581","comments":[{"content":"This has nothing to do with the question. Can you change the backend after running your first `terraform apply`? Yes, you can. Sure you'll have to run the init again but that's another story - question doesn't mention anything about \"after\".","poster":"wanrltw","timestamp":"1702309860.0","upvote_count":"2","comment_id":"741860"}],"poster":"itsVespucci"},{"poster":"depal_dhir","comment_id":"661979","timestamp":"1694061240.0","content":"Selected Answer: B\nIt is optional","upvote_count":"2"},{"poster":"keiffo2","content":"It is Optional - so it's B","upvote_count":"1","timestamp":"1693998960.0","comment_id":"661143"}],"question_images":[],"answers_community":["B (100%)"],"unix_timestamp":1662462960,"question_text":"Changing the Terraform backend from the default \"local\" backend to a different one after doing your first terraform apply is:","url":"https://www.examtopics.com/discussions/hashicorp/view/80589-exam-terraform-associate-topic-1-question-166-discussion/","answer_images":[],"isMC":true,"topic":"1","choices":{"B":"Optional","C":"Impossible","A":"Mandatory","D":"Discouraged"}}],"exam":{"isImplemented":true,"lastUpdated":"12 Apr 2025","isMCOnly":false,"name":"Terraform Associate","isBeta":false,"provider":"Hashicorp","numberOfQuestions":347,"id":169},"currentPage":15},"__N_SSP":true}