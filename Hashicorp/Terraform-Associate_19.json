{"pageProps":{"questions":[{"id":"Y2TtTniPwut0XYaQ6LhC","choices":{"B":"The resource will be destroyed","A":"The resource will not be affected, but the provisioner will need to be applied again","D":"Nothing, provisioners will not show errors in the command line","C":"The resource will be marked as \"tainted\""},"question_id":91,"url":"https://www.examtopics.com/discussions/hashicorp/view/79480-exam-terraform-associate-topic-1-question-180-discussion/","discussion":[{"poster":"Burakko","timestamp":"1709404200.0","upvote_count":"9","comments":[{"poster":"jednorozec2022","upvote_count":"2","content":"C\nref\nhttps://www.terraform.io/language/resources/provisioners/syntax#creation-time-provisioners","comment_id":"675872","timestamp":"1711102200.0"}],"comment_id":"657601","content":"Selected Answer: C\nIf a creation-time provisioner fails, the resource is marked as tainted. A tainted resource will be planned for destruction and recreation upon the next terraform apply ."},{"upvote_count":"1","comment_id":"891161","content":"Selected Answer: C\n\"If a creation-time provisioner fails, the resource is marked as tainted.\" https://developer.hashicorp.com/terraform/language/resources/provisioners/syntax","poster":"tabkar","timestamp":"1730962860.0"},{"comment_id":"828984","upvote_count":"4","poster":"mamoon_malta2022","timestamp":"1725449340.0","content":"Answer C:\n\nIf a creation-time provisioner fails, the resource is marked as tainted. A tainted resource will be planned for destruction and recreation upon the next terraform apply. Terraform does this because a failed provisioner can leave a resource in a semi-configured state. Because Terraform cannot reason about what the provisioner does, the only way to ensure proper creation of a resource is to recreate it. This is tainting."}],"topic":"1","question_text":"If a Terraform creation-time provisioner fails, what will occur by default?","unix_timestamp":1662136200,"answer_ET":"C","isMC":true,"answer_description":"","answer_images":[],"answers_community":["C (100%)"],"answer":"C","question_images":[],"timestamp":"2022-09-02 18:30:00","exam_id":169},{"id":"a80YhmLD8L6IkzzKq0zr","exam_id":169,"timestamp":"2022-09-01 19:52:00","question_id":92,"answer":"D","answer_description":"","url":"https://www.examtopics.com/discussions/hashicorp/view/79119-exam-terraform-associate-topic-1-question-181-discussion/","answer_ET":"D","question_images":[],"unix_timestamp":1662054720,"question_text":"When should Terraform configuration files be written when running terraform import on existing infrastructure?","topic":"1","discussion":[{"timestamp":"1662106800.0","comment_id":"657171","poster":"Uma10","upvote_count":"19","content":"Selected Answer: D\nThe current implementation of Terraform import can only import resources into the state. It does not generate configuration. A future version of Terraform will also generate configuration.\n\nBecause of this, prior to running terraform import it is necessary to write manually a resource configuration block for the resource, to which the imported object will be mapped.\n\nSource: https://www.terraform.io/cli/import"},{"content":"Selected Answer: C\ni got confused..... check this url\n\nhttps://learn.hashicorp.com/tutorials/terraform/state-import\n\nthe steps are\n\n1. Identify the existing infrastructure you will import.\n2. Import infrastructure into your Terraform state.\n3. Write Terraform configuration that matches that infrastructure.\n4. Review the Terraform plan to ensure the configuration matches the expected state and infrastructure.\n5. Apply the configuration to update your Terraform state.\n\nbased on the learning path... i will choose C","comments":[{"upvote_count":"1","comment_id":"669862","timestamp":"1663241340.0","content":"this is true , its c","poster":"SanderIsTheBestCloudShaper"},{"content":"the question said import on existing infrastructure, so it should be answer C. based on https://learn.hashicorp.com/tutorials/terraform/state-import","poster":"AB7088","timestamp":"1671716340.0","upvote_count":"1","comment_id":"753330"},{"content":"2 second step mport infrastructure into your Terraform state requires confiuration to be written just an empty block with provider name and resource type and and resouce address for exapmple resource aws_instace \"my-webserver\" {\n}\nthen you have to run terraform import ws_instace .my-webserver <instance-id>\nwhere instance-id of the Ec2 instace to be ipmorted. Then the sate is imported . from the state you have to copy other importanat values like VPC-id, subnet-id, ebs volume id ...","comment_id":"680677","upvote_count":"3","timestamp":"1664277720.0","poster":"RVivek"},{"upvote_count":"1","timestamp":"1675615740.0","poster":"lezgino","content":"Selected answer: D\nThat is correct, Terraform configuration should be written before terraform import is executed. It's best to have the Terraform code reflect the current state of the infrastructure so that Terraform can manage it.","comment_id":"798997"}],"upvote_count":"14","timestamp":"1662693600.0","poster":"zyxphreez","comment_id":"664178"},{"content":"Selected Answer: C\nA. Infrastructure can be imported without corresponding Terraform code\nindeed but the question is saying should, so we should write the configurations sometime.\n\nB. Terraform will generate the corresponding configuration files for you\nthat is also correct but with the plan command not import \nterraform plan -generate-config-out=generated_resources.tf \nthat can be done after the importing, because you have the state file with the resources\nC. You should write Terraform configuration files after the next terraform import is executed\nthat is the most correct for me.\nD. Terraform configuration should be written before terraform import is executed\nnot sure why most people are choosing this one?!","comments":[{"timestamp":"1718351640.0","poster":"8876ca1","content":"Because of terraform import ADDR ID","comment_id":"1230302","upvote_count":"1"}],"timestamp":"1701200520.0","poster":"petersoliman","upvote_count":"1","comment_id":"1082889"},{"poster":"lukacs16","content":"Selected Answer: D\n\"To import a resource, first write a resource block for it in your configuration, establishing the name by which it will be known to Terraform\"\n\nAnswer is D.\n\nhttps://developer.hashicorp.com/terraform/cli/import/usage","comment_id":"948776","upvote_count":"2","timestamp":"1689059760.0"},{"timestamp":"1688025540.0","content":"Selected Answer: C\nWill pick D:\nUsing configuration to import resources involves the following steps:\n1. Identify the existing infrastructure you will import.\n2. Define an import block for the resources.\n3. Run terraform plan to review the import plan and optionally generate configuration for the resources.\n4. Prune generated configuration to only the required arguments.\n5. Apply the configuration to bring the resource into your Terraform state file.\n\nhttps://developer.hashicorp.com/terraform/tutorials/state/state-import","comment_id":"937785","poster":"[Removed]","upvote_count":"1"},{"comment_id":"896454","upvote_count":"1","timestamp":"1683962280.0","content":"Selected Answer: D\nThe correct statement is \"Terraform configuration should be written before terraform import is executed\". This is because Terraform import requires a corresponding resource block in the configuration file to identify and map the imported resource to the configuration. If the configuration file is not written before the import is executed, there will be no resource block available to map the imported resource to, which can result in an incomplete or incorrect state. After the import is executed, any necessary changes to the configuration file can be made to ensure that the configuration is up to date with the imported resources.","poster":"Jhaggar"},{"timestamp":"1683669780.0","poster":"FawadK","upvote_count":"2","content":"Selected Answer: C\nAnswer is C. \nsee https://developer.hashicorp.com/terraform/tutorials/state/state-import","comment_id":"893460"},{"comment_id":"892472","upvote_count":"2","poster":"kiran15789","content":"Selected Answer: C\nthe steps are\n\n1. Identify the existing infrastructure you will import.\n2. Import infrastructure into your Terraform state.\n3. Write Terraform configuration that matches that infrastructure.\n4. Review the Terraform plan to ensure the configuration matches the expected state and infrastructure.\n5. Apply the configuration to update your Terraform state.","timestamp":"1683574560.0"},{"upvote_count":"3","comment_id":"859958","content":"Selected Answer: C\nThe answer is clearly written here: \n\nhttps://developer.hashicorp.com/terraform/tutorials/state/state-import\n\nWhy debate? :)","timestamp":"1680529260.0","poster":"Chinensis"},{"timestamp":"1680336900.0","poster":"camps","upvote_count":"2","comment_id":"857735","content":"Selected Answer: D\nD. Terraform configuration should be written before terraform import is executed\n\nWhen running terraform import on existing infrastructure, you should write the corresponding Terraform configuration files before executing the import command. The terraform import command requires that the resource configuration already exists in your Terraform code, as it maps the existing infrastructure to the defined resource in your configuration. The command then adds the imported resource information to your Terraform state file."},{"comment_id":"857016","timestamp":"1680263820.0","upvote_count":"2","poster":"camps","content":"Selected Answer: D\nD. Terraform configuration should be written before terraform import is executed.\n\nTerraform import is used to import an existing infrastructure into a Terraform configuration. Before running terraform import, the configuration files must be written to describe the desired state of the imported resources. Once the configuration is written and the import command is executed, Terraform maps the existing resources to the configuration and updates its state accordingly. Therefore, Terraform configuration files should be written before running terraform import on existing infrastructure."},{"comment_id":"845962","content":"Before you run terraform import you must manually write a resource configuration block for the resource. https://developer.hashicorp.com/terraform/cli/import","poster":"noobster","timestamp":"1679403360.0","upvote_count":"1"},{"timestamp":"1674515160.0","content":"You don't need to write resource configuration before importing\n\nBringing existing infrastructure under Terraform's control involves five steps:\n\n1. Identify the existing infrastructure you will import.\n2. Import infrastructure into your Terraform state.\n3. Write Terraform configuration that matches that infrastructure.\n4. Review the Terraform plan to ensure the configuration matches the expected state and infrastructure.\n5. Apply the configuration to update your Terraform state.\n\nhttps://developer.hashicorp.com/terraform/tutorials/state/state-import?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS\n\nThe Correct Answer is: A","comment_id":"785937","poster":"TechHero","upvote_count":"2"},{"timestamp":"1674220140.0","poster":"Zeppoonstream","comment_id":"782255","content":"Selected Answer: D\nD. Terraform configuration should be written before terraform import is executed\n\nWhen running the terraform import command on existing infrastructure, Terraform uses the configuration files to know how to interact with the resources. Without the configuration files, Terraform does not know how to interact with the resources and what to import.\nTherefore, Terraform configuration files should be written before terraform import is executed.\n\nA. Infrastructure can be imported without corresponding Terraform code is not true.\nB. Terraform will generate the corresponding configuration files for you is not true.\nC. You should write Terraform configuration files after the next terraform import is executed is not true.\nIt's important to note that Terraform import is not a replacement for creating Terraform configuration files, but it helps to discover and populate the state with existing resources.","upvote_count":"1"},{"poster":"gekkehenk","upvote_count":"1","comment_id":"775132","timestamp":"1673676540.0","content":"Selected Answer: D\nAccording to Terraform, the configuration should be written before performing the import.\n\n\"Before you run terraform import you must manually write a resource configuration block for the resource. The resource block describes where Terraform should map the imported object.\"\nhttps://developer.hashicorp.com/terraform/cli/import"},{"comment_id":"763609","timestamp":"1672651080.0","poster":"Andreaw","comments":[{"timestamp":"1672760100.0","content":"D. Terraform configuration should be written before terraform import is executed\n\nThe terraform import command is used to import existing infrastructure into Terraform, so that it can be managed as part of your configuration. In order to use terraform import, you need to have a corresponding Terraform configuration file that defines the desired state of the infrastructure.\n\nTherefore, it is generally a good idea to write the Terraform configuration file before running terraform import. This will allow you to specify the desired state of the infrastructure, including any resources that you want to import and any additional resources or configurations that you want to add.","upvote_count":"1","poster":"robertninho","comment_id":"764818"}],"upvote_count":"1","content":"Selected Answer: A\nto import is not necessary update config. To apply yes, is tricky"},{"timestamp":"1672310580.0","poster":"InformationOverload","upvote_count":"1","content":"Selected Answer: D\nTerraform configuration files should be written before running the terraform import command on existing infrastructure. The configuration files define the infrastructure that Terraform will manage, and the terraform import command is used to import existing resources into the configuration so that Terraform can manage them.","comment_id":"760893"},{"comment_id":"752251","timestamp":"1671624000.0","content":"Selected Answer: D\nI'd go as docs say:\nhttps://learn.hashicorp.com/tutorials/terraform/state-import","upvote_count":"1","poster":"DawidB"},{"upvote_count":"1","content":"Selected Answer: D\n“Terraform import can only import resources into the state. Importing does not generate configuration.\n\nBefore you run terraform import you must manually write a resource configuration block for the resource. The resource block describes where Terraform should map the imported object.”\n\nhttps://developer.hashicorp.com/terraform/cli/import#state-only","comment_id":"741982","poster":"wanrltw","timestamp":"1670783820.0"},{"content":"Selected Answer: D\nyou should first write the config of the resource to get the resource address and after that execute the import command","comment_id":"711974","poster":"Atta33","upvote_count":"1","timestamp":"1667676600.0"},{"timestamp":"1666374420.0","upvote_count":"1","comment_id":"701086","poster":"dk_2022","content":"C is correct : https://developer.hashicorp.com/terraform/tutorials/state/state-import?utm_source=WEBSITE&utm_medium=WEB_IO&utm_offer=ARTICLE_PAGE&utm_content=DOCS"},{"timestamp":"1662465180.0","poster":"keiffo2","upvote_count":"2","content":"Yes - it should be D","comment_id":"661185"},{"upvote_count":"3","content":"Selected Answer: D\nIt should be D.","comment_id":"657797","timestamp":"1662149580.0","poster":"Burakko"},{"timestamp":"1662054720.0","content":"Selected Answer: C\nThe current implementation of Terraform import can only import resources into the state. It does not generate configuration. https://www.terraform.io/cli/import","comment_id":"656516","upvote_count":"2","poster":"Tarziel"}],"answers_community":["D (57%)","C (41%)","2%"],"answer_images":[],"isMC":true,"choices":{"C":"You should write Terraform configuration files after the next terraform import is executed","D":"Terraform configuration should be written before terraform import is executed","A":"Infrastructure can be imported without corresponding Terraform code","B":"Terraform will generate the corresponding configuration files for you"}},{"id":"SV3JQGjAYUkxrBWEhtHO","url":"https://www.examtopics.com/discussions/hashicorp/view/79336-exam-terraform-associate-topic-1-question-182-discussion/","exam_id":169,"answer_images":[],"answer":"B","answers_community":["B (100%)"],"discussion":[{"content":"Selected Answer: B\nThe terraform console command lets you experiment with Terraform's built-in functions. It provides an interactive shell where you can type in Terraform expressions and see the results.\n\nThe other commands are used for different purposes:\n\nterraform env lists the available Terraform environments.\nterraform test runs unit tests on your Terraform configuration.\nterraform validate checks your Terraform configuration for errors.","upvote_count":"2","comment_id":"991372","timestamp":"1724752500.0","poster":"BaburTurk"},{"comment_id":"846820","poster":"phidelics","timestamp":"1711096680.0","content":"Terraform Console","upvote_count":"1"},{"content":"Selected Answer: B\nThe provided answer is correct.","poster":"X_Wuo","upvote_count":"1","timestamp":"1709994660.0","comment_id":"834037"},{"upvote_count":"1","content":"Selected Answer: B\nTerraform console\nThis command provides an interactive command-line console for evaluating and experimenting with expressions. You can use it to test interpolations before using them in configurations and to interact with any values currently saved in state.\nhttps://developer.hashicorp.com/terraform/cli/commands/console","comment_id":"828742","poster":"gekkehenk","timestamp":"1709540160.0"},{"upvote_count":"1","comment_id":"662002","poster":"depal_dhir","content":"Selected Answer: B\nhttps://www.terraform.io/cli/commands/console","timestamp":"1694062200.0"},{"content":"The provided answer is correct.\n\nTerraform console provides an interactive command-line console for evaluating and experimenting with expressions. You can use it to test interpolations before using them in configurations and to interact with any values currently saved in state. \n\nSource: https://www.terraform.io/cli/commands/console","upvote_count":"4","comment_id":"657175","poster":"Uma10","timestamp":"1693642980.0"}],"timestamp":"2022-09-02 10:23:00","answer_description":"","question_id":93,"choices":{"C":"terraform test","A":"terraform env","B":"terraform console","D":"terraform validate"},"topic":"1","answer_ET":"B","isMC":true,"unix_timestamp":1662106980,"question_text":"Which command lets you experiment with Terraform's built-in functions?","question_images":[]},{"id":"9xPGjRM1mf42clRpbDfp","answer":"A","exam_id":169,"answer_description":"","isMC":true,"question_images":["https://www.examtopics.com/assets/media/exam-media/04279/0009900001.jpg"],"topic":"1","question_text":"Why does this backend configuration not follow best practices?\n//IMG//","question_id":94,"timestamp":"2022-09-02 22:14:00","url":"https://www.examtopics.com/discussions/hashicorp/view/79576-exam-terraform-associate-topic-1-question-183-discussion/","unix_timestamp":1662149640,"answers_community":["A (100%)"],"answer_images":[],"choices":{"B":"You should use the local enhanced storage backend whenever possible","A":"You should not store credentials in Terraform Configuration","D":"The backend configuration should contain multiple credentials so that more than one user can execute terraform plan and terraform apply","C":"An alias meta-argument should be included in backend blocks whenever possible"},"discussion":[{"timestamp":"1662149640.0","poster":"Burakko","content":"Selected Answer: A\n%100 A","comment_id":"657800","upvote_count":"7"},{"comment_id":"662004","poster":"depal_dhir","content":"Selected Answer: A\nAccess Key and Secret Key inside the config file? Really?","upvote_count":"5","timestamp":"1662526260.0"},{"poster":"090200f","comment_id":"1254815","content":"Selected Answer: A\nfor better understanding visit \nhttps://www.hashicorp.com/blog/managing-credentials-in-terraform-cloud-and-enterprise\n\nso never ever store your credentials in terraform config directly","upvote_count":"1","timestamp":"1721893620.0"},{"comment_id":"1129072","upvote_count":"1","content":"Selected Answer: A\nEasy come on, everyone should know this.","timestamp":"1705960260.0","poster":"Alandt"},{"timestamp":"1679475240.0","upvote_count":"1","poster":"phidelics","comment_id":"846835","content":"Selected Answer: A\nNever and never store your credentials in your terraform config"},{"upvote_count":"2","timestamp":"1676137500.0","poster":"kennynelcon","comment_id":"805474","content":"Selected Answer: A\nA is the answer"},{"comment_id":"760897","timestamp":"1672310640.0","poster":"InformationOverload","content":"Selected Answer: A\nNobrainer","upvote_count":"3"}],"answer_ET":"A"},{"id":"LU17Xct0p0cn05VGscCb","question_id":95,"isMC":true,"question_text":"Open source Terraform can only import publicly-accessible and open-source modules.","answer_ET":"B","timestamp":"2022-09-02 10:30:00","answers_community":["B (84%)","A (16%)"],"unix_timestamp":1662107400,"topic":"1","url":"https://www.examtopics.com/discussions/hashicorp/view/79339-exam-terraform-associate-topic-1-question-184-discussion/","answer_images":[],"answer":"B","choices":{"B":"False","A":"True"},"discussion":[{"comment_id":"657181","poster":"Uma10","content":"Selected Answer: B\nTerraform can load modules from a public or private registry. This makes it possible to publish modules for others to use, and to use modules that others have published.\n\nAlso, members of your organization might produce modules specifically crafted for your own infrastructure needs. Terraform Cloud and Terraform Enterprise both include a private module registry for sharing modules internally within your organization.\n\nSource: https://www.terraform.io/language/modules","upvote_count":"12","timestamp":"1693643400.0"},{"upvote_count":"1","poster":"TafMuko","timestamp":"1721152080.0","content":"Selected Answer: A\nhttps://www.hashicorp.com/resources/why-consider-terraform-enterprise-over-open-source","comment_id":"953535"},{"timestamp":"1715702580.0","content":"Selected Answer: B\nFalse as it can be from anywhere","comment_id":"897684","upvote_count":"1","poster":"Jhaggar"},{"content":"The Correct answer is B","comment_id":"811255","upvote_count":"1","poster":"pyro7","timestamp":"1708130340.0"},{"timestamp":"1708108380.0","content":"Selected Answer: B\nB. False.\n\nOpen source Terraform can import both publicly-accessible and private modules from various sources, including Terraform Registry, GitHub, GitLab, Bitbucket, and others. However, the support for private modules is limited in the open source version, while it's fully supported in Terraform Enterprise.","comment_id":"811002","poster":"princajen","upvote_count":"2"},{"poster":"wanrltw","content":"Selected Answer: A\nIt's A! Don't confuse Terraform Open Source with Cloud/Enterprise.\n\nhttps://developer.hashicorp.com/terraform/intro/terraform-editions\nhttps://www.hashicorp.com/resources/why-consider-terraform-enterprise-over-open-source","timestamp":"1702320360.0","comments":[{"content":"module \"suvpc\" {\n source = \"git::https://user:password@github.com/example/vpc.git\"\n}","comment_id":"764824","poster":"robertninho","upvote_count":"3","timestamp":"1704296460.0"}],"upvote_count":"2","comment_id":"741992"},{"timestamp":"1694566560.0","content":"Selected Answer: B\nPrivate repo for custom modules.","comment_id":"667556","poster":"waldonuts","upvote_count":"1"},{"poster":"duffyduck","timestamp":"1694504160.0","upvote_count":"3","content":"Published Modules\nIn addition to modules from the local filesystem, Terraform can load modules from a public or private registry. This makes it possible to publish modules for others to use, and to use modules that others have published.\n\nThe Terraform Registry hosts a broad collection of publicly available Terraform modules for configuring many kinds of common infrastructure. These modules are free to use, and Terraform can download them automatically if you specify the appropriate source and version in a module call block.\n\nAlso, members of your organization might produce modules specifically crafted for your own infrastructure needs. Terraform Cloud and Terraform Enterprise both include a private module registry for sharing modules internally within your organization.\n\nAnswer is B","comment_id":"666703"}],"answer_description":"","exam_id":169,"question_images":[]}],"exam":{"isMCOnly":false,"name":"Terraform Associate","provider":"Hashicorp","isImplemented":true,"numberOfQuestions":347,"isBeta":false,"lastUpdated":"12 Apr 2025","id":169},"currentPage":19},"__N_SSP":true}