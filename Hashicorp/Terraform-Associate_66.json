{"pageProps":{"questions":[{"id":"MBL2uFceBu27qnm84w25","choices":{"B":"Providers can be maintained by a community of users","A":"Providers can be written by individuals","E":"None of the above","D":"Major cloud vendors and non-cloud vendors can write, maintain, or collaborate on Terraform providers","C":"Some providers are maintained by HashiCorp"},"topic":"1","url":"https://www.examtopics.com/discussions/hashicorp/view/74084-exam-terraform-associate-topic-1-question-8-discussion/","isMC":true,"question_images":[],"question_text":"Which of the following is not true of Terraform providers?","exam_id":169,"answer":"E","answers_community":["E (95%)","5%"],"unix_timestamp":1650603600,"answer_description":"","answer_ET":"E","timestamp":"2022-04-22 07:00:00","answer_images":[],"question_id":326,"discussion":[{"poster":"icedog","timestamp":"1651388340.0","comment_id":"595477","upvote_count":"38","content":"Selected Answer: E\nE. is the correct answer.\nIt's obvious that D. is incorrect, of course cloud and non-cloud vendors can collaborate on creating providers just like anyone else"},{"poster":"nharaz","comment_id":"806260","upvote_count":"13","timestamp":"1727169120.0","content":"Selected Answer: E\nE. None of the above\n\nAll of the statements are true of Terraform providers.\n\nA. Providers can be written by individuals - Any person or organization can develop and distribute a Terraform provider, allowing them to expand Terraform's capabilities to manage resources that it previously could not.\n\nB. Providers can be maintained by a community of users - Many Terraform providers are open source projects, and the development and maintenance of these providers can be collaborative efforts between multiple individuals and organizations.\n\nC. Some providers are maintained by HashiCorp - HashiCorp, the creators of Terraform, maintain a number of official providers that cover popular infrastructure providers such as AWS, Google Cloud, and Microsoft Azure.\n\nD. Major cloud vendors and non-cloud vendors can write, maintain, or collaborate on Terraform providers - Providers can be developed and maintained by cloud vendors, non-cloud vendors, or a combination of both, to expand Terraform's capabilities and support for different types of infrastructure."},{"upvote_count":"1","comment_id":"1108303","content":"Selected Answer: E\nE. None of the above\n\nAll of the statements (A, B, C, and D) are true of Terraform providers:\n\nA. Providers can be written by individuals: True. Terraform allows individuals to create custom providers for their specific needs.\n\nB. Providers can be maintained by a community of users: True. Terraform has a community-driven model, and many providers are developed and maintained by the community.\n\nC. Some providers are maintained by HashiCorp: True. HashiCorp, the company behind Terraform, maintains and supports certain official providers.\n\nD. Major cloud vendors and non-cloud vendors can write, maintain, or collaborate on Terraform providers: True. Terraform is designed to work with a variety of providers, including major cloud providers, on-premises solutions, and other services. Providers can be developed and maintained by the vendors themselves or in collaboration with the community.","poster":"samimshaikh","timestamp":"1727169120.0"},{"timestamp":"1724144880.0","comment_id":"1269289","content":"Selected Answer: E\nDefinitely E","poster":"starvinboarder","upvote_count":"1"},{"comment_id":"1246418","upvote_count":"1","poster":"hrajkuma","content":"E is the right answer","timestamp":"1720748520.0"},{"content":"Selected Answer: E\nall statement are true","poster":"Narendra_Sharma","upvote_count":"1","comment_id":"1215004","timestamp":"1716300180.0"},{"content":"Selected Answer: E\nhttps://developer.hashicorp.com/terraform/registry/providers\nOfficial\nPartner\nCommunity","upvote_count":"1","comment_id":"1211730","poster":"pangchn","timestamp":"1715737740.0"},{"content":"Selected Answer: D\ncloud and non-cloud vendors can collaborate on creating providers just like anyone else","comment_id":"1145204","upvote_count":"1","poster":"galvarado89","timestamp":"1707444960.0"},{"comment_id":"1078459","timestamp":"1700747640.0","upvote_count":"1","poster":"guicane","content":"Selected Answer: E\nit's obviously E"},{"comment_id":"1055139","content":"Selected Answer: E\nD is obviously true","timestamp":"1698385740.0","poster":"qs5dq64s5dq5","upvote_count":"1"},{"timestamp":"1695929820.0","poster":"gofavad926","upvote_count":"1","comment_id":"1020195","content":"Selected Answer: E\nE. None of the above"},{"content":"E is the correct None of the above","comment_id":"1014961","upvote_count":"1","poster":"rajat06","timestamp":"1695476880.0"},{"upvote_count":"1","timestamp":"1693323960.0","poster":"ledjo","content":"Selected Answer: E\nE. is the correct answer.","comment_id":"993227"},{"poster":"Ashutosh_96","upvote_count":"1","comment_id":"966023","timestamp":"1690600500.0","content":"E, is correct"},{"upvote_count":"1","content":"E. None of the above","comment_id":"965390","poster":"Jayanth","timestamp":"1690532700.0"},{"timestamp":"1690122960.0","content":"Selected Answer: E\nall true -> E","poster":"Busi57","comment_id":"960512","upvote_count":"1"},{"upvote_count":"1","poster":"Shane_C","content":"Selected Answer: E\nE is clearly the correct answer","comment_id":"942513","timestamp":"1688459220.0"},{"upvote_count":"1","poster":"abhi6199","content":"Answer is E.","comment_id":"929096","timestamp":"1687326300.0"},{"timestamp":"1683732060.0","poster":"Chandru1988","content":"E is correct","comment_id":"894108","upvote_count":"1"},{"timestamp":"1680274620.0","poster":"camps","comment_id":"857231","content":"Selected Answer: E\nE. None of the above is not a correct statement.\n\nAll of the statements are true regarding Terraform providers. Providers can be written and maintained by individuals, as well as by a community of users. Some providers are maintained by HashiCorp, the creators of Terraform, but many providers are maintained by major cloud vendors and non-cloud vendors, and many of them collaborate on Terraform providers.","upvote_count":"2"},{"comment_id":"812544","timestamp":"1676683980.0","upvote_count":"1","poster":"Mal_8","content":"Selected Answer: E\nI think E is the correct answer."},{"content":"Selected Answer: D\nIt should be D. I interpret in this way. It refers to multiple vendors collaborate as single Terraform Provider. This is not true. Each vendor is a distinct provider.","upvote_count":"3","comment_id":"758699","timestamp":"1672154460.0","poster":"senthil5000"},{"content":"Selected Answer: E\nplease change answer to E","comment_id":"745831","poster":"resnef","timestamp":"1671091140.0","upvote_count":"1"},{"timestamp":"1666273860.0","poster":"Yonex","comment_id":"699991","content":"Selected Answer: E\nIt should be E, why revealed answer is D?","upvote_count":"1"},{"content":"I'm struggling to understand this website. I also said E along with everyone else but the revealed answer shows D ??","poster":"Charley68","timestamp":"1663480140.0","comment_id":"672014","upvote_count":"1"},{"content":"Selected Answer: E\nThe Terraform Registry includes documentation for a wide range of providers developed by HashiCorp, third-party vendors, and our Terraform community.","comment_id":"666199","timestamp":"1662906360.0","poster":"Ethik","upvote_count":"1"},{"upvote_count":"3","timestamp":"1662906000.0","content":"E https://www.terraform.io/language/providers\nProvider Documentation\nEach provider has its own documentation, describing its resource types and their arguments.\nThe Terraform Registry includes documentation for a wide range of providers developed by HashiCorp, third-party vendors, and our Terraform community. Use the \"Documentation\" link in a provider's header to browse its documentation.\nProvider documentation in the Registry is versioned; you can use the version menu in the header to change which version you're viewing.\nFor details about writing, generating, and previewing provider documentation, see the provider publishing documentation.","comment_id":"666198","poster":"Ethik"},{"content":"Selected Answer: E\nE is the right Answer","poster":"keiffo2","upvote_count":"1","timestamp":"1662475560.0","comment_id":"661342"},{"content":"why not A?","timestamp":"1658559840.0","upvote_count":"1","comment_id":"635454","poster":"Aws2222"},{"comment_id":"631596","poster":"cjig","upvote_count":"2","content":"Selected Answer: E\nE is the correct Answer.\nhttps://www.terraform.io/language/providers","timestamp":"1657853100.0"},{"content":"Selected Answer: E\nE is correct answer: none of the above.","poster":"Eltooth","upvote_count":"3","timestamp":"1657125240.0","comment_id":"627985"},{"poster":"ap10001","timestamp":"1654503960.0","content":"Selected Answer: E\nD is obviously false, see i.e. https://registry.terraform.io/providers/hashicorp/google/latest - This provider is collaboratively maintained by the Google Terraform Team at Google and the Terraform team at HashiCorp","upvote_count":"2","comment_id":"612256"},{"content":"lol read the question we talk about terraform provider and not the gcp , aws terraform provider so for me is D","timestamp":"1654028460.0","comment_id":"609894","upvote_count":"1","poster":"doumx"},{"comment_id":"598925","comments":[{"content":"and what does terraform community mean to you? robots? \nindividuals by me. A.","timestamp":"1661454780.0","comment_id":"651919","upvote_count":"1","poster":"bora4motion"}],"timestamp":"1652081700.0","upvote_count":"3","poster":"ashxos","content":"Selected Answer: E\nThe Terraform Registry includes documentation for a wide range of providers developed by HashiCorp, third-party vendors, and our Terraform community.\n\nhttps://www.terraform.io/language/providers"},{"comments":[{"content":"E, sorry","comment_id":"592626","upvote_count":"3","timestamp":"1650997740.0","poster":"danioct1917"}],"comment_id":"592624","timestamp":"1650997680.0","upvote_count":"3","content":"I'd say D is not correct. For me, D is the good one","poster":"danioct1917"},{"timestamp":"1650603600.0","comment_id":"589736","poster":"coco10k","upvote_count":"3","content":"Selected Answer: E\nwhy a cloud provider cannot maintain it's own terraform provider?"}]},{"id":"nroXBco9guIYFMmOAxKs","answers_community":["B (100%)"],"url":"https://www.examtopics.com/discussions/hashicorp/view/74894-exam-terraform-associate-topic-1-question-80-discussion/","question_images":[],"discussion":[{"poster":"nez15","timestamp":"1667044920.0","comment_id":"594431","content":"Selected Answer: B\nNeed to run Terraform Init first to install the plugins","upvote_count":"26"},{"upvote_count":"6","poster":"camps","timestamp":"1696084080.0","comment_id":"857189","content":"Selected Answer: B\nB. Terraform needs to install the necessary plugins first.\n\nWhen running terraform apply for a new Terraform configuration, Terraform needs to install the necessary provider plugins and any dependencies before it can create or modify any resources. Without the necessary plugins, Terraform cannot fully understand the resources that are defined in the configuration file."},{"comment_id":"1200378","upvote_count":"1","timestamp":"1729632060.0","content":"Selected Answer: B\nHas to run terraform init first","poster":"godie44"},{"upvote_count":"3","timestamp":"1721478900.0","content":"Answer - B. You need to run 'terraform init' command first to initialize the terraform plugins.","comment_id":"1127328","poster":"shefulacertificari"},{"content":"Selected Answer: B\nB. You need to run init for required plugins","upvote_count":"3","timestamp":"1706223120.0","poster":"LunarPhobia","comment_id":"963115"},{"content":"Selected Answer: B\nB for sure.","timestamp":"1699532460.0","comment_id":"892982","upvote_count":"2","poster":"Ni33"},{"poster":"Power123","upvote_count":"2","content":"B is correct","comment_id":"856280","timestamp":"1696022100.0"},{"content":"Selected Answer: B\nit's B","timestamp":"1694289180.0","upvote_count":"2","poster":"Rybitska","comment_id":"834460"},{"upvote_count":"2","timestamp":"1687445460.0","comment_id":"753495","poster":"vadeemkaa","content":"Answer B. terraform init"},{"content":"Selected Answer: B\nB is the correct, terraform init to download required plugins","timestamp":"1686545640.0","upvote_count":"1","poster":"adouban","comment_id":"742482"},{"poster":"karapet","timestamp":"1682863680.0","content":"First of all: terraform init","upvote_count":"2","comment_id":"707902"},{"comment_id":"645004","poster":"kopper2019","upvote_count":"1","timestamp":"1676043900.0","content":"it is B"},{"content":"init required\n Terraform needs to install the necessary plugins first","timestamp":"1673705460.0","upvote_count":"2","comment_id":"631349","poster":"Ahmad_Terraform"},{"comment_id":"625280","upvote_count":"2","timestamp":"1672413900.0","poster":"Ahmad_Terraform","content":"B plugins first"},{"content":"Selected Answer: B\nB is correct answer.\n\nYou need to run terraform init before running apply.","comment_id":"624126","poster":"Eltooth","timestamp":"1672255860.0","upvote_count":"3"},{"poster":"rfd","comment_id":"613984","upvote_count":"1","content":"Selected Answer: B\nterraform init needs to be run first so it can download required modules and setup backend.","timestamp":"1670596260.0"},{"timestamp":"1670182500.0","comment_id":"611517","content":"Selected Answer: B\nB for sure","upvote_count":"2","poster":"bp339"},{"poster":"Roro_Brother","upvote_count":"2","content":"Selected Answer: B\nB Off Course","comment_id":"603727","timestamp":"1668853980.0"},{"upvote_count":"2","timestamp":"1668734280.0","comment_id":"603073","poster":"bigboi23","content":"Selected Answer: B\nterraform init. B"},{"timestamp":"1668596940.0","content":"it is B for sure","poster":"softarts","comment_id":"602513","upvote_count":"1"},{"content":"B which is terraform init","upvote_count":"1","comment_id":"600395","poster":"Sunrayk","timestamp":"1668221820.0"},{"upvote_count":"3","comment_id":"596330","poster":"vitasac","content":"Selected Answer: B\nB For sure","timestamp":"1667480340.0"}],"answer_ET":"B","timestamp":"2022-04-29 14:02:00","question_text":"You write a new Terraform configuration and immediately run terraform apply in the CLI using the local backend.\nWhy will the apply fail?","question_id":327,"answer_images":[],"topic":"1","answer_description":"","unix_timestamp":1651233720,"choices":{"B":"Terraform needs to install the necessary plugins first","D":"Terraform requires you to manually run terraform plan first","A":"Terraform needs you to format your code according to best practices first","C":"The Terraform CLI needs you to log into Terraform cloud first"},"isMC":true,"exam_id":169,"answer":"B"},{"id":"1Q0GwD1ozLlbGUq0ivtk","question_text":"What features stops multiple admins from changing the Terraform state at the same time?","choices":{"B":"Backend types","A":"Version control","D":"State locking","C":"Provider constraints"},"topic":"1","question_images":[],"answers_community":["D (100%)"],"answer_images":[],"question_id":328,"answer_ET":"D","answer_description":"","isMC":true,"discussion":[{"content":"Selected Answer: D\nD is correct answer. \n\nSomewhat ambiguous question however the key phrase is \"feature\".\nYou need a remote backend first with a State Locking feature available to avoid this scenario.\n\nhttps://blog.gruntwork.io/how-to-manage-terraform-state-28f5697e68fa","upvote_count":"6","poster":"Eltooth","comment_id":"624131","timestamp":"1703792280.0"},{"upvote_count":"1","poster":"Ni33","content":"Selected Answer: D\nD is correct option.","comment_id":"892983","timestamp":"1731154920.0"},{"content":"Answer is D","upvote_count":"1","comment_id":"856401","poster":"Power123","timestamp":"1727651040.0"},{"upvote_count":"1","comment_id":"753496","poster":"vadeemkaa","content":"Answer D. state-lock feature","timestamp":"1719067920.0"},{"timestamp":"1705243500.0","content":"D. State locking","comment_id":"631364","upvote_count":"3","poster":"Ahmad_Terraform"},{"comment_id":"615250","timestamp":"1702382160.0","poster":"amrith501","content":"Selected Answer: D\nState locking","upvote_count":"3"}],"unix_timestamp":1655027760,"answer":"D","exam_id":169,"url":"https://www.examtopics.com/discussions/hashicorp/view/76741-exam-terraform-associate-topic-1-question-81-discussion/","timestamp":"2022-06-12 11:56:00"},{"id":"kPD3cFMtwN2ztFzVUEsP","answer_images":[],"answer_description":"","discussion":[{"timestamp":"1687974000.0","poster":"Eltooth","comment_id":"624132","content":"Selected Answer: B\nB is correct answer : terraform state rm\n\n\"You can use terraform state rm in the less common situation where you wish to remove a binding to an existing remote object without first destroying it, which will effectively make Terraform \"forget\" the object while it continues to exist in the remote system.\"\n\nhttps://www.terraform.io/cli/commands/state/rm","upvote_count":"13"},{"poster":"Tyler2023","comment_id":"1059609","upvote_count":"2","timestamp":"1730458200.0","content":"The answer is correct based on this https://developer.hashicorp.com/terraform/cli/commands/state/rm\n\nYou can use terraform state rm in the less common situation where you wish to remove a binding to an existing remote object without first destroying it, which will effectively make Terraform \"forget\" the object while it continues to exist in the remote system."},{"timestamp":"1715250300.0","comment_id":"892985","content":"Selected Answer: B\nBBBBBBBBBBB","upvote_count":"1","poster":"Ni33"},{"content":"Selected Answer: B\nB. terraform state rm aws_instance.ubuntu[1]\n\nTo tell Terraform to no longer manage a specific resource, you can use the terraform state rm command. This command removes the specified resource from the Terraform state file, effectively telling Terraform that the resource no longer exists.","timestamp":"1711895040.0","comment_id":"857181","poster":"camps","upvote_count":"3"},{"upvote_count":"1","timestamp":"1711843740.0","poster":"Power123","content":"B is correct. terraform state rm","comment_id":"856404"},{"content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/cli/commands/state/rm","comment_id":"680954","poster":"eduvar4","timestamp":"1695833280.0","upvote_count":"1"},{"timestamp":"1687443300.0","content":"The answer is B for sure","upvote_count":"2","comment_id":"620458","poster":"habbypat123"},{"upvote_count":"3","poster":"Zam88","content":"state rm\nThe terraform state rm command is used to remove items from the Terraform state. This command can remove single resources, single instances of a resource, entire modules, and more\n\nB","comment_id":"618691","timestamp":"1687178880.0"}],"answer":"B","question_images":[],"isMC":true,"topic":"1","exam_id":169,"question_id":329,"question_text":"A fellow developer on your team is asking for some help in refactoring their Terraform code. As part of their application's architecture, they are going to tear down an existing deployment managed by Terraform and deploy new. However, there is a server resource named aws_instance.ubuntu[1] they would like to keep to perform some additional analysis.\nWhat command should be used to tell Terraform to no longer manage the resource?","answers_community":["B (100%)"],"unix_timestamp":1655642880,"answer_ET":"B","choices":{"D":"terraform delete aws_instance.ubuntu[1]","C":"terraform plan rm aws_instance.ubuntu[1]","A":"terraform apply rm aws_instance.ubuntu[1]","B":"terraform state rm aws_instance.ubuntu[1]"},"timestamp":"2022-06-19 14:48:00","url":"https://www.examtopics.com/discussions/hashicorp/view/76922-exam-terraform-associate-topic-1-question-82-discussion/"},{"id":"bMgHflyF5vZOTtYQmz3r","answer":"B","unix_timestamp":1651648920,"isMC":true,"timestamp":"2022-05-04 09:22:00","discussion":[{"comment_id":"596575","content":"Selected Answer: B\nI think it's B for sure","timestamp":"1683184920.0","comments":[{"timestamp":"1727582340.0","content":"\"I think\", and \"for sure\"... are not compatible :D","poster":"gofavad926","comment_id":"1020429","upvote_count":"24"}],"upvote_count":"12","poster":"vitasac"},{"comment_id":"892988","upvote_count":"7","poster":"Ni33","content":"B is the correct answer. Terraform do manage implicit dependencies using the attribute values mentioned in the configuration of the resources.","timestamp":"1715250360.0"},{"comment_id":"1020428","timestamp":"1727582280.0","upvote_count":"2","poster":"gofavad926","content":"Selected Answer: B\nB, false"},{"content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/tutorials/0-13/dependencies?in=terraform%2F0-13\n\nImplicit dependencies are the primary way that Terraform understands the relationships between your resources. Sometimes there are dependencies between resources that are not visible to Terraform, however. The depends_on argument is accepted by any resource or module block and accepts a list of resources to create explicit dependencies for.","timestamp":"1712116620.0","comment_id":"859525","poster":"dhez46","upvote_count":"4"},{"poster":"camps","comment_id":"857182","timestamp":"1711895100.0","upvote_count":"3","content":"Selected Answer: B\nB. False.\n\nTerraform can manage resource dependencies automatically without explicitly setting them using the depends_on argument."},{"upvote_count":"2","poster":"Power123","timestamp":"1711843860.0","content":"B is correct. Implicit as well","comment_id":"856407"},{"content":"Selected Answer: B\nyou have implicit as well, therefore B","poster":"resnef","timestamp":"1704880440.0","comment_id":"771267","upvote_count":"1"},{"upvote_count":"3","content":"Answer is B.\nMost of the time, Terraform infers dependencies between resources based on the configuration given, so that resources are created and destroyed in the correct order. Occasionally, however, Terraform cannot infer dependencies between different parts of your infrastructure, and you will need to create an explicit dependency with the depends_on argument.\nhttps://developer.hashicorp.com/terraform/tutorials/0-13/dependencies?in=terraform%2F0-13","comment_id":"744727","timestamp":"1702529520.0","poster":"vikramvlr"},{"upvote_count":"2","content":"Answer: B\n\"Most of the time, Terraform infers dependencies between resources based on the configuration given, so that resources are created and destroyed in the correct order\"\n-> https://learn.hashicorp.com/tutorials/terraform/dependencies","comment_id":"680939","timestamp":"1695831060.0","poster":"eduvar4"},{"comment_id":"678100","timestamp":"1695578340.0","upvote_count":"1","poster":"j1809","content":"Terraform automatically infers when one resource depends on another by studying the resource attributes used in interpolation expressions."},{"content":"A is correct we need pass explicitly depends_on","timestamp":"1694175420.0","poster":"GopinathM","comment_id":"663589","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: B\nIt is B","comment_id":"645005","timestamp":"1691675220.0","poster":"kopper2019"},{"upvote_count":"2","content":"B. False\nimplicit = hidden dependencies Trfm can can manage.","comment_id":"631369","timestamp":"1689339120.0","poster":"Ahmad_Terraform"},{"upvote_count":"1","content":"B is correct \nimplicit decencies trfm can manage without depends on command, for example in AWS eip resource will be dependent on the Ec2 creation, so trfm will first create the Ec2 and then eip will be allocated/created. and eip creation will be after the creation of Ec2.\nhttps://learn.hashicorp.com/tutorials/terraform/dependencies?in=terraform/0-13","poster":"Ahmad_Terraform","comment_id":"625672","timestamp":"1688205000.0"},{"comments":[{"comment_id":"677607","content":"You voted A and the comment is in support of B ?","timestamp":"1695530220.0","poster":"RVivek","upvote_count":"2"}],"content":"Selected Answer: A\nI believe A is the correct answer. \n\n\"Use the depends_on meta-argument to handle hidden resource or module dependencies that Terraform cannot automatically infer. You only need to explicitly specify a dependency when a resource or module relies on another resource's behavior but does not access any of that resource's data in its arguments.\"\n\nhttps://www.terraform.io/language/meta-arguments/depends_on","poster":"Eltooth","timestamp":"1687974600.0","upvote_count":"2","comment_id":"624135"},{"timestamp":"1687179180.0","poster":"Zam88","comment_id":"618695","content":"Manage explicit dependencies\nImplicit dependencies are the primary way that Terraform understands the relationships between your resources. Sometimes there are dependencies between resources that are not visible to Terraform, however. The depends_on argument is accepted by any resource or module block and accepts a list of resources to create explicit dependencies for.\n\nB","comments":[{"upvote_count":"2","comment_id":"619489","timestamp":"1687301700.0","poster":"Zam88","content":"I was wrong i have checked it again - Terraform cannot infer dependencies between different parts of your infrastructure, and you will need to create an explicit dependency with the depends_on argument.\nA is correct answer"}],"upvote_count":"1"},{"poster":"rfd","upvote_count":"3","timestamp":"1686313980.0","content":"Selected Answer: B\nTerraform is smart enough to manage resource dependencies to an extent, without any explicit instructions.","comment_id":"613989"},{"comment_id":"600398","timestamp":"1683853320.0","poster":"Sunrayk","content":"B is the right answer. Mostly Terraform can manage dependencies inherently; depends_on is used for hidden dependencies that Terraform cannot automatically infer","upvote_count":"4"}],"answers_community":["B (93%)","7%"],"exam_id":169,"choices":{"B":"False","A":"True"},"answer_description":"","question_text":"Terraform can only manage resource dependencies if you set them explicitly with the depends_on argument.","answer_images":[],"url":"https://www.examtopics.com/discussions/hashicorp/view/75127-exam-terraform-associate-topic-1-question-83-discussion/","question_images":[],"question_id":330,"answer_ET":"B","topic":"1"}],"exam":{"numberOfQuestions":347,"provider":"Hashicorp","isMCOnly":false,"name":"Terraform Associate","isBeta":false,"isImplemented":true,"id":169,"lastUpdated":"12 Apr 2025"},"currentPage":66},"__N_SSP":true}