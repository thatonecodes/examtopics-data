{"pageProps":{"questions":[{"id":"6SQWzZ0ZxpvzT1wbq9Pi","exam_id":169,"isMC":true,"answer":"D","answer_ET":"D","answers_community":["D (100%)"],"discussion":[{"timestamp":"1709325240.0","content":"Selected Answer: D\nData sources allow data to be fetched or computed for use elsewhere in Terraform configuration. Use of data sources allows a Terraform configuration to build on information defined outside of Terraform, or defined by another separate Terraform configuration.","poster":"Burakko","upvote_count":"14","comment_id":"656562"},{"content":"Selected Answer: D\nit's D as you're using infrastructure already created - that's when you use \"data\". With \"resource\" you create new infrastructure.","comment_id":"657296","upvote_count":"13","poster":"bora4motion","timestamp":"1709382540.0"},{"upvote_count":"1","comment_id":"893298","timestamp":"1731177360.0","content":"Selected Answer: D\nD is the correct answer !","poster":"Ni33"},{"poster":"mkeology","content":"Selected Answer: D\nD. data, a data source","timestamp":"1728832260.0","upvote_count":"1","comment_id":"869514"},{"comment_id":"853127","poster":"Ravi528","content":"Selected Answer: D\nDefinitely not A, It's D as Infra is done already, Data is used to compute","upvote_count":"2","timestamp":"1727520840.0"},{"comment_id":"839505","poster":"SilentMilli","upvote_count":"3","content":"Selected Answer: D\nThe data block is used in Terraform to fetch or compute information from a given data source, and make that information available for use elsewhere in the Terraform configuration. This data can come from a variety of sources, including cloud provider APIs, databases, and other external systems.","timestamp":"1726360740.0"},{"timestamp":"1721400960.0","upvote_count":"5","content":"D. data\nData blocks in Terraform are used to fetch or compute information for use elsewhere in a Terraform configuration. They allow you to read data from external sources such as an API, a file, or a database and use it to populate variables or other parts of your Terraform configuration.\n\nA. provider\nA provider block is used to configure the provider plugin used in Terraform configuration, it's not related to data fetching or computation\n\nB. resource\nA resource block is used to create and manage infrastructure resources, it's not related to data fetching or computation\n\nC. local\nA local block is used to define variables that are only used within the module in which they are defined and not exposed as outputs. It's not related to data fetching or computation.\n\nIt's important to understand that data blocks do not make changes to the infrastructure, they are only used to fetch or compute data.","comment_id":"781355","poster":"TechHero"},{"poster":"kprod","upvote_count":"5","timestamp":"1709596920.0","content":"Selected Answer: D\nD - data","comment_id":"659574"}],"question_images":[],"question_text":"Which type of block fetches or computes information for use elsewhere in a Terraform configuration?","timestamp":"2022-09-01 20:34:00","unix_timestamp":1662057240,"topic":"1","answer_description":"","answer_images":[],"choices":{"A":"provider","B":"resource","D":"data","C":"local"},"question_id":21,"url":"https://www.examtopics.com/discussions/hashicorp/view/79137-exam-terraform-associate-topic-1-question-117-discussion/"},{"id":"nXoWqCI1kY1zHmRZAHrJ","question_id":22,"answer_description":"","question_images":[],"exam_id":169,"isMC":true,"discussion":[{"poster":"Burakko","timestamp":"1662057360.0","comment_id":"656565","content":"Selected Answer: D\nterraform init if you want to run it for the first time.","upvote_count":"6"},{"poster":"090200f","upvote_count":"1","timestamp":"1721074440.0","comment_id":"1248559","content":"keyword is for the first time: so terraform init is correct ans \noption : D"},{"content":"D is correct","timestamp":"1696239720.0","upvote_count":"1","comment_id":"1022978","poster":"Pikopo"},{"poster":"Ni33","timestamp":"1683650220.0","comment_id":"893299","content":"Selected Answer: D\nIf it is first time then Terraform init command.","upvote_count":"1"},{"poster":"Ravi528","comment_id":"853128","upvote_count":"1","content":"Selected Answer: D\nFirst we should run terraform init","timestamp":"1680000900.0"},{"timestamp":"1679446140.0","comment_id":"846531","poster":"Manguu","upvote_count":"1","content":"Selected Answer: D\nThis will initialize the working directory containing the TF config files"},{"comment_id":"742694","upvote_count":"1","poster":"adouban","content":"Selected Answer: D\nTerraform init","timestamp":"1670843220.0"},{"timestamp":"1664457660.0","content":"D\nYou need to initialize so all the provider plugin and configurations dependencies get initialized","comment_id":"682727","upvote_count":"1","poster":"legendary7"},{"content":"Selected Answer: D\nD - init","timestamp":"1662328980.0","comment_id":"659576","upvote_count":"3","poster":"kprod"},{"content":"Selected Answer: D\nI go with D. init","comment_id":"656645","timestamp":"1662062520.0","poster":"bora4motion","upvote_count":"4"}],"choices":{"C":"terraform show","B":"terraform plan","A":"terraform apply","D":"terraform init"},"unix_timestamp":1662057360,"url":"https://www.examtopics.com/discussions/hashicorp/view/79138-exam-terraform-associate-topic-1-question-118-discussion/","answer_ET":"D","answer":"D","answer_images":[],"timestamp":"2022-09-01 20:36:00","question_text":"You have just developed a new Terraform configuration for two virtual machines with a cloud provider. You would like to create the infrastructure for the first time.\nWhich Terraform command should you run first?","topic":"1","answers_community":["D (100%)"]},{"id":"Adp3ScyXWjIyKI4GxQTZ","choices":{"A":"True","B":"False"},"discussion":[{"upvote_count":"20","comment_id":"659529","timestamp":"1677969960.0","poster":"Hizumi","content":"Answer is False. \nOnly modules considered \"Verified Modules\" are reviewed by Hashicorp, otherwise anyone can publish modules on the Terraform Registry. \nReference: https://www.terraform.io/registry/modules/verified\nhttps://www.terraform.io/registry/modules/publish"},{"content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/registry/modules/verified","comment_id":"1108711","timestamp":"1719660360.0","poster":"samimshaikh","upvote_count":"1"},{"upvote_count":"2","poster":"Tyler2023","comment_id":"1061429","timestamp":"1714732260.0","content":"False\nVerified modules are expected to be actively maintained by HashiCorp partners. The verified badge isnâ€™t indicative of flexibility or feature support; very simple modules can be verified just because they're great examples of modules. Likewise, an unverified module could be extremely high quality and actively maintained. An unverified module shouldn't be assumed to be poor quality, it only means it hasn't been created by a HashiCorp partner.\n\nhttps://developer.hashicorp.com/terraform/registry/modules/verified"},{"content":"B is correct","comment_id":"1022980","timestamp":"1712050920.0","poster":"Pikopo","upvote_count":"1"},{"comment_id":"964902","timestamp":"1706380560.0","upvote_count":"1","content":"B. False \nA verified badge will usually appear on modules that are verified by Hashicorp. However, you can use filters to view unverified modules.","poster":"NextBrand"},{"timestamp":"1700302200.0","content":"Selected Answer: B\nhttps://developer.hashicorp.com/terraform/registry/modules/verified","upvote_count":"1","poster":"KJ_Rollings","comment_id":"900895"},{"poster":"BennaniHaythem","upvote_count":"1","content":"True because When you submit your module, HashiCorp will review it to ensure that it meets the quality standards for the Terraform Module Registry. This review process includes checks for compliance with Terraform's best practices, security vulnerabilities, and other potential issues that could impact the stability or security of the infrastructure being provisioned with Terraform. If your module meets these standards and passes the verification process, it can be listed on the official Terraform Module Registry with the HashiCorp Verified badge.","comment_id":"870918","timestamp":"1697373960.0"},{"timestamp":"1695898620.0","upvote_count":"2","content":"Selected Answer: B\nFalse, It's not mandatory. If Hashicorp verified then it will show Blue tick at the end, Otherwise not. But it's not mandatory verification by hashicorp","poster":"Ravi528","comment_id":"853130"},{"content":"Selected Answer: B\nB. False\n\nWhile the Terraform Module Registry contains many useful modules, not all modules are verified by HashiCorp. Verified modules are indicated by a special badge on the module's page. These modules have been reviewed and approved by HashiCorp to ensure they follow best practices and are of high quality. Other modules in the registry are created and maintained by the community, and while they may be helpful, they have not gone through the same verification process. Always exercise caution and review the module's documentation and source code before using it in your infrastructure.","upvote_count":"1","poster":"Nunyabiznes","timestamp":"1695770040.0","comment_id":"851558"},{"content":"Selected Answer: B\nSeems B to me","upvote_count":"1","poster":"rotimislaw","timestamp":"1692859440.0","comment_id":"820268"},{"timestamp":"1690811760.0","upvote_count":"2","comment_id":"794363","content":"Selected Answer: A\nThe modules available on the official Terraform Module Registry have been reviewed by HashiCorp to ensure that they follow best practices and are compatible with Terraform. HashiCorp also provides support and guidance for users of the Module Registry.","poster":"Abuu"},{"comment_id":"781363","content":"B. False\n\nThe Terraform Module Registry is a public repository of modules created and shared by the community, it's not maintained by Hashicorp.\nThese modules have not been verified by HashiCorp, and they may not have undergone any kind of security or quality review.\nIt's important to review the code and the documentation of the modules and also check if the author is trustworthy before using it in your infrastructure.\nAlthough, Hashicorp provides a way to submit a module to the community and it goes through a review process to be added to the verified module list.\nIt's also important to check the module's version, release date, and the number of downloads before using it.\nIt's a good practice to use a module from a verified publisher or a module that is widely used and well-maintained.\n\nIt's also worth noting that you can use modules from other sources like GitHub, GitLab, or any other VCS. These modules may have been reviewed and validated by other organizations or communities, but they are not part of the official Terraform module registry.","poster":"TechHero","timestamp":"1689778980.0","upvote_count":"1"},{"poster":"ssanjayt","upvote_count":"2","comment_id":"773457","timestamp":"1689159720.0","content":"Selected Answer: A\nA is the correct one coz here its saying about the official hasi corp"},{"comments":[{"upvote_count":"3","timestamp":"1686109200.0","comment_id":"737458","content":"I meant to SAY option B is the correct answer","poster":"ArizonaClassics"}],"content":"A is the correct answer. Read: verified modules are reviewed by HashiCorp and actively maintained by contributors to stay up-to-date and compatible with Terraform and their respective providers.\n\nThe verified badge appears next to modules published by a verified source.\nVerified modules are expected to be actively maintained by HashiCorp partners. The verified badge isnâ€™t indicative of flexibility or feature support; very simple modules can be verified just because they're great examples of modules. Likewise, an unverified module could be extremely high quality and actively maintained. An unverified module shouldn't be assumed to be poor quality, it only means it hasn't been created by a HashiCorp partner. \nhttps://developer.hashicorp.com/terraform/registry/modules/verified","timestamp":"1686108960.0","comment_id":"737450","poster":"ArizonaClassics","upvote_count":"1"},{"comment_id":"686476","upvote_count":"2","content":"https://www.terraform.io/registry/modules/verified \nA is the right answer","timestamp":"1680650100.0","poster":"Bobby1977"},{"timestamp":"1679792820.0","upvote_count":"2","poster":"RVivek","comment_id":"679322","content":"Terraform public regstry has community modules, which are not verified by Hashicorp"},{"comment_id":"667356","upvote_count":"2","content":"B. Not all modules published are verified by HashiCorp.","timestamp":"1678653360.0","poster":"Pinky0289"},{"upvote_count":"2","poster":"donathon","timestamp":"1678073100.0","comment_id":"660662","content":"Selected Answer: B\nFalse. Needs to have the verified sign."},{"content":"Selected Answer: B\nfalse : See this : https://registry.terraform.io/","timestamp":"1678063320.0","poster":"dinesh198728","upvote_count":"1","comment_id":"660598"},{"timestamp":"1677974700.0","content":"Selected Answer: A\nTrue ...","comment_id":"659582","upvote_count":"1","poster":"kprod"}],"answer_images":[],"exam_id":169,"topic":"1","answer":"B","question_id":23,"question_images":[],"url":"https://www.examtopics.com/discussions/hashicorp/view/80142-exam-terraform-associate-topic-1-question-119-discussion/","unix_timestamp":1662324360,"isMC":true,"answer_ET":"B","question_text":"All modules published on the official Terraform Module Registry have been verified by HashiCorp.","timestamp":"2022-09-04 22:46:00","answers_community":["B (64%)","A (36%)"],"answer_description":""},{"id":"mEpSNBqZmPV0NVv4sYSP","unix_timestamp":1662013380,"choices":{"A":"True","B":"False"},"timestamp":"2022-09-01 08:23:00","question_id":24,"topic":"1","answers_community":["B (100%)"],"exam_id":169,"isMC":true,"discussion":[{"upvote_count":"21","poster":"SilentMilli","timestamp":"1678568700.0","content":"Selected Answer: B\nTerraform variables and outputs that set the \"description\" argument are not stored in the state file. The \"description\" argument is used to provide a human-readable description of the variable or output, and it is intended to be used as documentation for other users of the Terraform code.\n\nThe state file is used to store the current state of the infrastructure managed by Terraform, including the values of variables and outputs. However, the \"description\" argument is not part of the state file, and it is not used by Terraform to manage the infrastructure. Instead, it is only used as metadata to describe the variable or output.","comment_id":"836515"},{"comment_id":"655867","upvote_count":"12","poster":"antivrillee","timestamp":"1662013380.0","content":"Selected Answer: B\nAnswer is B. Descriptions aren't stored in the state file."},{"upvote_count":"9","content":"Selected Answer: B\n1) Create the following Terraform configuration:\nprovider \"aws\" {\n region = \"eu-west-1\"\n}\n\nvariable \"instance_type\" {\n description = \"The type of instance to create\"\n default = \"t2.micro\"\n}\n\nresource \"aws_instance\" \"example\" {\n ami = \"ami-096800910c1b781ba\" # Replace this with an appropriate AMI ID for your region\n instance_type = var.instance_type\n}\n\noutput \"instance_id\" {\n description = \"The ID of the created instance\"\n value = aws_instance.example.id\n}\n\n2) After you run terraform apply on this configuration, the state file (terraform.tfstate) will include the value of the instance_type variable (\"t2.micro\") \nand the value of the instance_id output (which would be the ID of the created AWS instance), \nbut it would not include the descriptions of either the variable or the output.","comment_id":"965242","timestamp":"1727169420.0","poster":"Bere"},{"upvote_count":"2","content":"Selected Answer: B\nValidated; it would just show type, value in the terraform state.","comment_id":"1212841","timestamp":"1715941980.0","poster":"starkonbullet"},{"poster":"mamtak_2008","timestamp":"1706780460.0","content":"A. True\n\nTerraform variables and outputs that set the \"description\" argument will indeed store that description in the state file. This allows for better documentation and understanding of the purpose of variables and outputs within the Terraform configuration. However, it's important to note that sensitive information should not be included in descriptions as the state file is stored in plain text and could potentially expose sensitive information if not handled properly.","comment_id":"1137466","upvote_count":"1","comments":[{"upvote_count":"1","comment_id":"1261950","content":"not true. Terraform state file only stores the actual infrastructure resources and their state","poster":"Lashe","timestamp":"1723008540.0"}]},{"upvote_count":"3","content":"Selected Answer: B\nTerraform state files are intended to store the actual configuration and state of the infrastructure, focusing on information that is necessary for Terraform to understand and manage the resources. Descriptions, being informational and not affecting the infrastructure's configuration or behavior, are typically not included in the state file to keep it concise and focused on essential details for Terraform's management.","poster":"samimshaikh","comment_id":"1108318","timestamp":"1703821920.0"},{"content":"Selected Answer: B\nI don't understand how such a simple question can show the wrong answer by the website.","timestamp":"1700748180.0","comment_id":"1078466","poster":"guicane","upvote_count":"1"},{"timestamp":"1698927300.0","content":"Selected Answer: B\nsimply check the output of \"terraform state pull\" or see inside the tfstate file if using local state, there are no descriptions stored in the state","upvote_count":"1","comment_id":"1060530","poster":"luke404"},{"comment_id":"1021887","upvote_count":"1","poster":"Mimi666","content":"Selected Answer: B\nvariables are not stored in state","timestamp":"1696114920.0"},{"comment_id":"1001676","content":"Selected Answer: B\nAnswer is B","poster":"Badii","timestamp":"1694098680.0","upvote_count":"1"},{"poster":"Jayanth","content":"B. False","timestamp":"1690533120.0","upvote_count":"1","comment_id":"965397"},{"comment_id":"960524","poster":"Busi57","timestamp":"1690123380.0","upvote_count":"1","content":"Selected Answer: B\ni think B"},{"upvote_count":"1","timestamp":"1688459340.0","content":"Selected Answer: B\nB is correct","comment_id":"942520","poster":"Shane_C"},{"content":"Selected Answer: B\nThe correct answer is B.","poster":"SIAMIANJI","timestamp":"1685668020.0","comment_id":"912447","upvote_count":"2"},{"content":"Correct Ans is B","comment_id":"852748","upvote_count":"1","timestamp":"1679976120.0","poster":"Power123"},{"poster":"Mal_8","timestamp":"1676685720.0","upvote_count":"1","comment_id":"812561","content":"Selected Answer: B\nThe answer is B. Descriptions aren't stored in the state file."},{"content":"Answer is A, I can see description in state file on my environment","comments":[{"poster":"guicane","timestamp":"1700748120.0","content":"no you cannot","comment_id":"1078465","upvote_count":"1"}],"comment_id":"789420","upvote_count":"1","poster":"Only5","timestamp":"1674807540.0"},{"comment_id":"771223","content":"Selected Answer: B\nDescription not in state file","upvote_count":"1","timestamp":"1673341500.0","poster":"kennynelcon"},{"upvote_count":"1","poster":"safe2008","timestamp":"1672717200.0","content":"Vaoted B.","comment_id":"764213"},{"comments":[{"comment_id":"808243","poster":"itbrpl","timestamp":"1676366580.0","upvote_count":"5","content":"Tested now.. Outputs are present in state file but description is not:\n\n{\n \"version\": 4,\n \"terraform_version\": \"1.3.7\",\n \"serial\": 19,\n \"lineage\": \"8de81937-55d8-2487-7ad0-cabba43e4403\",\n \"outputs\": {\n \"iam_assumed_role\": {\n \"value\": \"user_iam_assumed_role\",\n \"type\": \"string\"\n },\n \"user_role_to_assume\": {\n \"value\": \"arn:aws:iam::999999999:role/user_iam_assumed_role\",\n \"type\": \"string\"\n }\n },\n \"resources\": [\n {\n }"}],"content":"Selected Answer: B\nB, tested on my lab, state only stores resources information it does not store outputs or variables","comment_id":"739800","poster":"adouban","timestamp":"1670561280.0","upvote_count":"2"},{"timestamp":"1665736920.0","upvote_count":"1","poster":"alifie","content":"Selected Answer: B\nit isn't in the state, just check it","comment_id":"694606"},{"timestamp":"1663228680.0","content":"Selected Answer: B\nI checked in my LAB. terraform.tfstate file doesnot store descriptions","comment_id":"669625","upvote_count":"3","poster":"RVivek"},{"comment_id":"658654","poster":"ser_ka","content":"Selected Answer: B\nShould be B. Tested this - no any descriptions v 1.2.7","upvote_count":"4","timestamp":"1662223380.0"}],"answer":"B","answer_description":"","url":"https://www.examtopics.com/discussions/hashicorp/view/78939-exam-terraform-associate-topic-1-question-12-discussion/","answer_images":[],"question_text":"Terraform variables and outputs that set the \"description\" argument will store that description in the state file.","question_images":[],"answer_ET":"B"},{"id":"wUgVopX2Ub8cafyJzc89","unix_timestamp":1662324540,"topic":"1","answer_description":"","answers_community":["B (67%)","A (33%)"],"question_images":[],"choices":{"B":"False","A":"True"},"url":"https://www.examtopics.com/discussions/hashicorp/view/80143-exam-terraform-associate-topic-1-question-120-discussion/","timestamp":"2022-09-04 22:49:00","question_id":25,"answer_ET":"B","isMC":true,"discussion":[{"content":"Selected Answer: B\nyou cannot initialize something that does not exist, so obviously you have to configure it first","upvote_count":"27","poster":"yaza","timestamp":"1680735960.0","comment_id":"687304"},{"upvote_count":"10","content":"Selected Answer: B\nyou first configure the backed and then initialize ....therefore should be B","poster":"zyxphreez","timestamp":"1678164660.0","comment_id":"661886"},{"content":"In case of local backend , just an init is sufficient and no config is needed. May be question should be more clearer to say if it is local or remote","comment_id":"1114015","poster":"RevSD","timestamp":"1720113600.0","upvote_count":"2"},{"content":"Selected Answer: B\nB\n\nWhen you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.\n\nAfter you initialize, Terraform creates a .terraform/ directory locally. This directory contains the most recent backend configuration, including any authentication parameters you provided to the Terraform CLI. Do not check this directory into Git, as it may contain sensitive credentials for your remote backend.","timestamp":"1719660720.0","poster":"samimshaikh","comment_id":"1108716","upvote_count":"2"},{"timestamp":"1715717580.0","comment_id":"1070887","content":"Selected Answer: B\nI guess, here \"initialize\" means \"instantiate\" i.e. the backend must be there For e.g.- a S3 bucket should be present first before we can use it (i.e. configure it in HCL). So, from that perspective, it should be \"A\". However, we can also have local backends, which is where the terraform configuration file themselves reside, and we don't have to separately instantiate those. Hence, the answer is \"B\"","upvote_count":"1","poster":"shortcut"},{"upvote_count":"2","comments":[{"content":"That link you provided contradicts your answer:\n\n\"When you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.\"\n\nClearly this suggests that configuration occurs PRIOR to initialisation.","timestamp":"1714024380.0","upvote_count":"3","poster":"3cc17f1","comment_id":"1053494"}],"poster":"aanataliya","timestamp":"1710411120.0","content":"Selected Answer: A\nConfigure doesnt mean writing configuration of \"backend block\" in this context. Hashicorp always use \"block\" if they want to mention writing configuration. example : backend block, terraform block or cloud block. If I say, I want to configure linux server doesnt mean writing HCL for linux server. Just writing \"backend block\" doesnt actually configure backend. You have to run/execute that HCL \"backend block\" to actually create backend configuration.\n\nDuring actual backend configuration, Terraform writes the backend configuration in plain text in two separate files. \nCheck Ref: https://developer.hashicorp.com/terraform/language/settings/backends/configuration\nAnd this cannot be done until we first execute init.","comment_id":"1007350"},{"comment_id":"979306","content":"Correct is B:\nHow sleepy are people who voted for an option A... like compiling the code before writing it.","upvote_count":"2","timestamp":"1707740220.0","poster":"arunrkaushik"},{"poster":"milan92stankovic","timestamp":"1702627440.0","comment_id":"923763","content":"Selected Answer: B\nI vote for B","upvote_count":"2"},{"timestamp":"1700725080.0","comment_id":"904595","poster":"Priyankakanna","content":"What I understand is who choose false confusing with terminology its config nor writting configuration ie before creating the resource ie apply we need to initialise the backend so we have to run init so that from the configuration files it will download the necessary plugins for the backend and then apply the configuration to configure the resources","upvote_count":"3"},{"upvote_count":"3","poster":"piezaS","comment_id":"903246","timestamp":"1700579160.0","content":"A. True\n\nBefore configuring and using a Terraform backend, you need to initialize it first. The initialization process sets up the backend configuration, such as the type of backend (e.g., S3, Azure Storage, etc.) and the connection details. This is done by running the terraform init command, which initializes the working directory and prepares it for Terraform operations, including the configuration of the backend."},{"poster":"sdm13168","content":"Selected Answer: B\nB you need to configure the backend first, then run terraform init","upvote_count":"1","timestamp":"1700274360.0","comment_id":"900612"},{"timestamp":"1699895220.0","poster":"kiran15789","content":"Selected Answer: A\nBefore configuring a backend in Terraform, it is necessary to initialize it. This is done by running the terraform init command, which sets up the working directory for the configuration, downloads any necessary plugins, and initializes the backend. Once the backend is initialized, you can configure it by editing the backend block in the Terraform configuration file.","upvote_count":"1","comment_id":"896812"},{"comment_id":"893301","timestamp":"1699555200.0","content":"Selected Answer: B\nB is the correct answer !","upvote_count":"1","poster":"Ni33"},{"comment_id":"864157","content":"Selected Answer: A\nYes, before configuring a Terraform backend, you need to initialize it. Initializing a backend sets up the necessary resources and configurations to use a particular backend, such as creating storage containers or initializing remote state.\n\nTo initialize a backend, you can use the terraform init command. This command reads the configuration files in your working directory and installs any necessary plugins or modules, as well as initializes the backend you have specified in your configuration.\n\nAfter initializing the backend, you can configure it by adding the appropriate configuration to your Terraform configuration files. The backend configuration typically includes details such as the backend type, the backend's credentials or access details, and any additional settings specific to the backend you're using.\n\nOnce you have initialized and configured your backend, you can then use Terraform to create and manage infrastructure resources in the backend.","poster":"Stanislav4907","upvote_count":"2","timestamp":"1696703280.0"},{"upvote_count":"4","poster":"Nunyabiznes","content":"Selected Answer: B\nB. False\n\nThe backend configuration is specified within the Terraform configuration files, typically in the main.tf file. You don't have to initialize a backend before configuring it; instead, you provide the backend configuration within the Terraform files, and then run terraform init. The initialization process will set up the backend as per the configuration provided. So, the backend configuration is done first, and then you initialize Terraform, which sets up the backend accordingly.","comment_id":"851559","timestamp":"1695770220.0"},{"upvote_count":"1","timestamp":"1695519720.0","poster":"_sreya23_","content":"Selected Answer: B\nWithout configuration (not writing code) you can't initialize it.","comment_id":"848918"},{"content":"Selected Answer: B\nyou can't do that if it doesn't exist","timestamp":"1694357160.0","comment_id":"835238","upvote_count":"1","poster":"khaled_razouk"},{"timestamp":"1693182600.0","upvote_count":"1","comment_id":"824321","content":"backend needs to be configured first.","poster":"Americanman"},{"upvote_count":"1","content":"Selected Answer: B\nSeems B to me","timestamp":"1692859560.0","comment_id":"820270","poster":"rotimislaw"},{"upvote_count":"1","content":"Selected Answer: B\nyou cannot initialize something that does not exist","timestamp":"1692000480.0","poster":"Mahendran103","comment_id":"808266"},{"content":"Selected Answer: B\nB, making the exam difficult and confusing with wording but easy content. You must initialize a terraform backend before it can be used but you must (in case not use a local backend) configure the backend before initializing. First, create a backend.tf config, then run terrafom init to use it.","upvote_count":"2","comment_id":"800606","timestamp":"1691381700.0","poster":"agmesas"},{"upvote_count":"1","poster":"pyro7","timestamp":"1690774320.0","content":"The Correct answer is A True. The Terraform backend must be initialized before it can be configured.","comment_id":"793689"},{"comment_id":"781365","poster":"TechHero","content":"A. True\n\nBefore configuring a backend in Terraform, the backend must be initialized with the terraform init command. This command will initialize the backend, configure the backend and download any necessary providers specified in the Terraform code.\nIt also performs some other tasks like checking for the existence of the state file in the backend, and creating it if it doesn't exist.\n\nIf you don't initialize the backend before configuring it, Terraform will not be able to find the backend and will assume that it is using the local filesystem as the backend, which can lead to unexpected results.\n\nIt's important to note that, if you are using a remote backend, you must run terraform init command on the machine where you want to run the terraform apply command, it will not work if you run the command on a different machine.\nIt's also important to note that if you are changing the backend configuration, you must run terraform init again with the -reconfigure flag.","timestamp":"1689779100.0","upvote_count":"4"},{"timestamp":"1689405960.0","poster":"resnef","upvote_count":"1","comment_id":"776344","content":"Selected Answer: B\nWhen you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations."},{"content":"Selected Answer: A\nInitialization. When you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations. After you initialize, Terraform creates a . terraform/ directory locally.","timestamp":"1688696400.0","upvote_count":"1","poster":"srcntpc","comment_id":"768229"},{"content":"Option A, \"True,\" is incorrect because you do not have to initialize a Terraform backend before it can be configured.\n\nIn Terraform, the backend is responsible for storing the Terraform state and determining how updates to the state are stored and how the state is loaded when you execute Terraform commands","timestamp":"1688540340.0","poster":"robertninho","comments":[{"content":"B for me","comment_id":"766416","timestamp":"1688540400.0","poster":"robertninho","upvote_count":"1"}],"upvote_count":"1","comment_id":"766415"},{"content":"Selected Answer: A\nChatGPT says True","upvote_count":"3","timestamp":"1687353180.0","comment_id":"752482","poster":"Aninina"},{"content":"Perhaps its habit - I init before I config. But I can see you not doing init first. Still, just for habit - I am going with A","poster":"macross","timestamp":"1686223680.0","upvote_count":"1","comment_id":"739107"},{"comment_id":"737466","content":"Backends are configured directly in Terraform files in the terraform section. After configuring a backend, it has to be initialized.\n\nBelow, we show a complete example of configuring the \"consul\" backend:\nterraform {\n backend \"consul\" {\n address = \"demo.consul.io\"\n scheme = \"https\"\n path = \"example_app/terraform_state\"\n }\n}\n\nYou specify the backend type as a key to the backend stanza. Within the stanza are backend-specific configuration keys. The list of supported backends and their configuration is in the sidebar to the left.\n\nOnly one backend may be specified and the configuration may not contain interpolations. Terraform will validate this.","upvote_count":"1","timestamp":"1686109500.0","poster":"ArizonaClassics"},{"upvote_count":"2","content":"Selected Answer: B\nWhatever change you make in the backend, you need to run `terraform init` again. The backend does not pick the changes dynamically in contrast to, e.g. resources pick from variables. Therefore adding configuration after initialization of the backend is non-sense.\n\nYou can also refer to the documentation:\n\"When you change a backend's configuration, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.\"\n\nhttps://developer.hashicorp.com/terraform/language/settings/backends/configuration#initialization","comment_id":"735035","timestamp":"1685871060.0","poster":"alirasouli"},{"comment_id":"694684","upvote_count":"2","comments":[{"poster":"wanrltw","upvote_count":"1","content":"So first you need to configure the backend and only AFTER run the init. Thus the answer is B.","comment_id":"740271","timestamp":"1686322440.0"}],"poster":"alifie","content":"Selected Answer: A\nDuring init, the root configuration directory is consulted for backend configuration and the chosen backend is initialized using the given configuration settings.","timestamp":"1681470600.0"},{"comment_id":"682179","timestamp":"1680044280.0","poster":"RVivek","content":"Selected Answer: A\nA - You have to initialize the backend","upvote_count":"2"},{"upvote_count":"1","content":"Option A. True\nBefore proceeding to configuration, the backend needs to be initialized.","poster":"Pinky0289","comment_id":"667358","timestamp":"1678653540.0"},{"content":"Selected Answer: A\nInitialization\nWhenever a configuration's backend changes, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.\n\nWhen changing backends, Terraform will give you the option to migrate your state to the new backend. This lets you adopt backends without losing any existing state.\n\nTo be extra careful, we always recommend manually backing up your state as well. You can do this by simply copying your terraform.tfstate file to another location. The initialization process should create a backup as well, but it never hurts to be safe!\n\nhttps://www.terraform.io/language/settings/backends/configuration","timestamp":"1678447440.0","comment_id":"665264","comments":[{"timestamp":"1686322560.0","upvote_count":"1","content":"\"Whenever a configuration's backend changes\" sounds like the configuration change happens BEFORE running the init, doesn't it?","poster":"wanrltw","comment_id":"740273"}],"poster":"dinesh198728","upvote_count":"1"},{"comment_id":"663871","poster":"vichu0308","content":"Backends are configured directly in Terraform files in the terraform section. After configuring a backend, it has to be initialized. Therefore its B","upvote_count":"3","timestamp":"1678305060.0"},{"upvote_count":"1","comment_id":"663409","content":"Selected Answer: A\nIt should be A. Backend should be initialized for the first time.","poster":"dinesh198728","timestamp":"1678273620.0"},{"timestamp":"1678096320.0","upvote_count":"3","content":"Whenever a configuration's backend changes, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations. TRUE","comment_id":"660964","poster":"keiffo2"},{"poster":"amanp","content":"Selected Answer: A\nIt is true.","upvote_count":"1","timestamp":"1678013520.0","comment_id":"659953"},{"poster":"Hizumi","content":"Answer is True\nWhenever a configuration's backend changes, you must run terraform init again to validate and configure the backend before you can perform any plans, applies, or state operations.\nReference: https://www.terraform.io/language/settings/backends/configuration","upvote_count":"1","comment_id":"659532","timestamp":"1677970140.0"}],"answer":"B","exam_id":169,"answer_images":[],"question_text":"You have to initialize a Terraform backend before it can be configured."}],"exam":{"numberOfQuestions":347,"id":169,"provider":"Hashicorp","isImplemented":true,"isMCOnly":false,"name":"Terraform Associate","isBeta":false,"lastUpdated":"12 Apr 2025"},"currentPage":5},"__N_SSP":true}