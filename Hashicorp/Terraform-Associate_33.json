{"pageProps":{"questions":[{"id":"EbPh0OZ9fT0AunBiQcoU","exam_id":169,"answer_description":"","question_id":161,"answer_ET":"A","discussion":[{"content":"Selected Answer: A\nNot all backends support locking. The documentation for each backend includes details about whether it supports locking or not.\nhttps://developer.hashicorp.com/terraform/language/state/backends","poster":"Oleg_gol","timestamp":"1683363540.0","upvote_count":"9","comment_id":"890619"},{"timestamp":"1722390060.0","poster":"090200f","comment_id":"1258492","upvote_count":"1","content":"Selected Answer: A\nhttps://developer.hashicorp.com/terraform/language/state/backends\nBackends are responsible for storing state and providing an API for state locking. State locking is optional.\nNot all backends support locking. The documentation for each backend includes details about whether it supports locking or not. key word is not all. so only some backends supports state locking \nSome of these backends act like plain remote disks for state files, while others support locking the state while operations are being performed. This helps prevent conflicts and inconsistencies."},{"content":"A is right","timestamp":"1707574980.0","upvote_count":"1","comment_id":"1146350","poster":"ravi135"},{"upvote_count":"1","content":"Selected Answer: D\nbecause it indicates that all backends support state locking. State locking is a mechanism used to control access to shared resources to ensure data consistency and prevent conflicts in concurrent or parallel systems.","comments":[{"upvote_count":"2","timestamp":"1684168860.0","content":"Correct answer is A. sorry for the confusion.","poster":"meetplanet","comment_id":"898515"}],"comment_id":"898510","timestamp":"1684168560.0","poster":"meetplanet"}],"choices":{"A":"Some","D":"All","C":"Only local","B":"No"},"topic":"1","unix_timestamp":1683363540,"timestamp":"2023-05-06 10:59:00","answers_community":["A (91%)","9%"],"answer":"A","isMC":true,"url":"https://www.examtopics.com/discussions/hashicorp/view/108629-exam-terraform-associate-topic-1-question-243-discussion/","question_images":[],"answer_images":[],"question_text":"____________ backends support state locking."},{"id":"KU3VDfJpkv4iLUtL3yQC","exam_id":169,"answer":"C","answer_description":"","url":"https://www.examtopics.com/discussions/hashicorp/view/108628-exam-terraform-associate-topic-1-question-244-discussion/","topic":"1","question_text":"Which of the following methods, used to provision resources into a public cloud, demonstrates the concept of infrastructure as code?","unix_timestamp":1683363360,"isMC":true,"question_id":162,"choices":{"D":"A series of commands you enter into a public cloud console","C":"A script that contains a series of public cloud CLI commands","B":"A sequence of REST requests you pass to a public cloud API endpoint","A":"curl commands manually run from a terminal"},"timestamp":"2023-05-06 10:56:00","answers_community":["C (54%)","B (46%)"],"discussion":[{"content":"Selected Answer: B\nyou declare your desired config and then Terraform performs a sequence of API calls to your cloud provider. It's not a script with CLI commands.","comment_id":"938800","upvote_count":"6","timestamp":"1688098620.0","comments":[{"comment_id":"1220772","comments":[{"poster":"sco_murad","upvote_count":"1","content":"read about declarative and imperative automation and you will understand that you are wrong","timestamp":"1729059120.0","comment_id":"1298583"}],"timestamp":"1716972660.0","content":"Wrong. You can use pipelines to execute CLI commands. In fact, you can execute Powershell scripts etc in Terraform itself. The answer can't be B because it's not in code. Question is asking about infrastructure as code.","upvote_count":"1","poster":"chaoscreater"}],"poster":"amoyano"},{"poster":"TheITGU3u","comment_id":"1424529","upvote_count":"1","timestamp":"1743640680.0","content":"Selected Answer: C\nSince its base don Infra as code in my opinion its based on a script that's ran to spin up infrastructure"},{"poster":"chessmaster5000","timestamp":"1742707740.0","upvote_count":"1","comment_id":"1402125","content":"Selected Answer: C\nC is the answer because this is code you can write, store, version control, and reuse — a key aspect of IaC.\n\nB is not the answer because while it is automated, REST calls alone are not typically wrapped or managed as code for IaC unless used in scripts or tools like Terraform."},{"timestamp":"1730290560.0","content":"Selected Answer: C\nI select C because B can use rest requests stored in different files an thoses requests could be inadequate pulled together, \nin C the cli commands are stored in a script so this confirme that they have been tested together","upvote_count":"1","poster":"6169891","comment_id":"1304976"},{"upvote_count":"1","content":"Selected Answer: B\nit works over REST API","timestamp":"1729498740.0","comment_id":"1300828","poster":"sco_murad"},{"comment_id":"1276122","poster":"Kriegs","upvote_count":"1","timestamp":"1725202200.0","content":"Selected Answer: C\nI'd argue that both B & C could be correct but I'd go with C on an exam."},{"timestamp":"1718697600.0","upvote_count":"2","poster":"8876ca1","comment_id":"1232311","content":"Selected Answer: C\nC. A script that contains a series of public cloud CLI commands:\nThis is correct. A script (e.g., using Bash, PowerShell, or another scripting language) that automates the provisioning of resources aligns with the principles of IaC. It is automated, repeatable, and can be version-controlled.\n\nAtte ChatGPT 4o"},{"upvote_count":"1","timestamp":"1717156260.0","content":"Selected Answer: C\nC is correct. It is the only option that persists the commands being run so that they can be re-used again later. All other options will need to be manually executed again if you wanted to recreate the infra config.","comment_id":"1222113","poster":"TheShantyman"},{"upvote_count":"2","content":"Selected Answer: B\nB is correct. For Azure Cloud, you provide an API version of a resource you are going to deploy.","comment_id":"1175494","timestamp":"1710637560.0","poster":"Roman_Rabodzey"},{"content":"Selected Answer: C\nThe concept of infrastructure as code (IaC) is to define and manage infrastructure using code, rather than manual processes or GUI tools. A script that contains a series of public cloud CLI commands is an example of IaC, because it uses code to provision resources into a public cloud. The other options are not examples of IaC, because they involve manual or interactive actions, such as running curl commands, sending REST requests, or entering commands into a console.Reference= [Introduction to Infrastructure as Code with Terraform] and [Infrastructure as Code]","upvote_count":"1","comment_id":"1165359","timestamp":"1709536980.0","poster":"iamabhi"},{"timestamp":"1702561140.0","upvote_count":"2","content":"Correct Answer is B.\nHashicorp Documentation Says it's not Step C, so it must be B.\n\nIaC Makes Infrastructure More Reliable\nIaC makes changes idempotent, consistent, repeatable, and predictable. Without IaC, scaling up infrastructure to meet increased demand may require an operator to remotely connect to each machine and then manually provision and configure many servers by executing a series of commands/scripts.\n\nhttps://www.hashicorp.com/blog/infrastructure-as-code-in-a-private-or-public-cloud","comment_id":"1096509","poster":"ae07177"},{"comment_id":"1062086","content":"Selected Answer: C\nThe method that demonstrates the concept of infrastructure as code when provisioning resources in a public cloud is:\n\nC. A script that contains a series of public cloud CLI commands\n\nInfrastructure as code (IaC) involves defining and provisioning infrastructure resources using code and scripts. In this case, using a script with CLI commands allows you to automate the provisioning process and manage infrastructure configurations programmatically. It provides the benefits of version control, repeatability, and automation, which are core principles of IaC.","upvote_count":"2","poster":"Tronko86","timestamp":"1699100520.0"},{"content":"B is correct in my opinion","upvote_count":"3","poster":"Pikopo","comment_id":"1018391","timestamp":"1695786180.0"},{"content":"Selected Answer: C\nC. A script that contains a series of public cloud CLI commands","timestamp":"1690219320.0","poster":"lotfi50","comment_id":"961866","upvote_count":"1"},{"poster":"seifskl","timestamp":"1690197780.0","comment_id":"961522","content":"Selected Answer: C\nThe correct answer is C.\n\nThe idea behind Infrastructure as Code (IaC) is to write and execute code to define, deploy, and update infrastructure. If that infrastructure code is written in a high-level language, then it can be version controlled and audited, which has benefits for traditional software development practices, such as code review, continuous integration, and automated testing.\n\nOption C, where a script contains a series of public cloud CLI commands, best fits this concept. This script can be version controlled, reviewed, and executed consistently across environments, adhering to the principles of IaC.\n\nThe other options are manual methods that do not adhere to the principles of IaC. They do not support versioning or auditing, are error-prone, and can't ensure consistency across multiple deployments.","upvote_count":"1"},{"upvote_count":"1","timestamp":"1689892440.0","content":"Selected Answer: C\nI would answer C because script is a code in a file ( like bash script) that can be executed multiple times. It can be pushed to a source control repo and can be versioned. Calling commands directly whether they are through CLI, APIs or through Console cannot be repeated like a script.","comment_id":"957913","poster":"VSMu"},{"timestamp":"1689535500.0","upvote_count":"2","content":"Selected Answer: B\nB makes more sense","poster":"TafMuko","comment_id":"953582"},{"upvote_count":"2","comment_id":"934947","content":"Doesn't B make more sense?","timestamp":"1687829040.0","poster":"atiiii"},{"comment_id":"890618","upvote_count":"1","content":"Selected Answer: C\nC. A script that contains a series of public cloud CLI commands","poster":"Oleg_gol","timestamp":"1683363360.0"}],"question_images":[],"answer_images":[],"answer_ET":"C"},{"id":"MifHkgOTwfh1myfZZQTR","exam_id":169,"answer_ET":"B","question_images":[],"question_text":"Which of the following should you put into the required_providers block?","answers_community":["B (74%)","C (21%)","5%"],"answer_images":[],"answer":"B","question_id":163,"timestamp":"2023-05-06 10:53:00","unix_timestamp":1683363180,"discussion":[{"upvote_count":"3","comment_id":"1258497","content":"Selected Answer: B\nb is correct there is no '=' sign for other 2 options \nterraform {\nrequired_providers {\naws = {\nsource = \"hashicorp/aws\"\nversion = \"~> 5.42\"\n}\n}\n\nrequired_version = \">= 1.2.0\"\n}","poster":"090200f","timestamp":"1722390540.0"},{"poster":"bella","content":"well B and C are correct. the question isn't clear about required provider... did they mean terraform version or hashicorp provider \nterraform {\n required_providers {\n aws = {\n source = \"hashicorp/aws\"\n version = \"~> 5.42\"\n }\n }\n\n required_version = \">= 1.2.0\"\n}","upvote_count":"1","comment_id":"1221104","timestamp":"1716998880.0"},{"timestamp":"1706092920.0","comment_id":"1130497","poster":"Alandt","upvote_count":"2","content":"Selected Answer: B\nB is correct, others have wrong syntax"},{"timestamp":"1699100700.0","poster":"Tronko86","comment_id":"1062089","content":"Selected Answer: B\nB is the only answer with a correct syntax: version parameter wants a string","upvote_count":"3"},{"timestamp":"1698131460.0","content":"terraform {\n required_providers {\n mycloud = {\n source = \"mycorp/mycloud\"\n version = \"~> 1.0\"\n }\n }\n}","upvote_count":"1","comment_id":"1052622","poster":"bajwa360"},{"timestamp":"1697600460.0","comment_id":"1046521","content":"Selected Answer: C\nC is the answer","upvote_count":"1","poster":"arun00028"},{"poster":"arun00028","comment_id":"1043832","timestamp":"1697338140.0","upvote_count":"1","content":"Selected Answer: C\nC is correct"},{"comment_id":"893062","poster":"Sathisgm","upvote_count":"1","content":"I choose B","timestamp":"1683633480.0"},{"timestamp":"1683629460.0","poster":"MarshalLaw","comment_id":"893014","upvote_count":"2","content":"Selected Answer: B\nB since this syntax is correct. If you go back to the previous questions you'll see a screenshot where a relevant question is being asked."},{"timestamp":"1683507600.0","upvote_count":"4","content":"Selected Answer: B\nB\nhttps://developer.hashicorp.com/terraform/language/providers/requirements","comment_id":"891741","poster":"sdm13168"},{"comment_id":"890617","poster":"Oleg_gol","timestamp":"1683363300.0","upvote_count":"2","content":"Selected Answer: C\nI choose \"С\""},{"timestamp":"1683363180.0","content":"Selected Answer: A\nA and C - correct (","poster":"Oleg_gol","comment_id":"890616","upvote_count":"1"}],"isMC":true,"url":"https://www.examtopics.com/discussions/hashicorp/view/108627-exam-terraform-associate-topic-1-question-245-discussion/","choices":{"C":"version ~> 3.1","A":"version >= 3.1","B":"version = “>= 3.1”"},"topic":"1","answer_description":""},{"id":"pNZV4wpCwiDqW1IRYoAG","question_text":"When should you write Terraform configuration files for existing infrastructure that you want to start managing with Terraform?","exam_id":169,"unix_timestamp":1683362880,"isMC":true,"question_id":164,"discussion":[{"timestamp":"1699806960.0","comment_id":"895991","upvote_count":"13","poster":"Ni33","content":"Selected Answer: A\nA is the correct answer !"},{"poster":"geekos","comment_id":"1339148","content":"Selected Answer: C\nIf you are not using the experimental feature: The correct answer remains A. Before you run terraform import, as traditionally, Terraform requires configuration files to exist before importing resources.\nIf you are using the experimental feature in Terraform v1.5 or later: Terraform can generate configuration during the import process, making C. Terraform will generate the corresponding configuration files for you a valid option.","upvote_count":"1","timestamp":"1736598900.0"},{"timestamp":"1730287440.0","poster":"blop213","content":"If D is right then B is necesarry right, and since its not multiple choice, it can only be A\nRight answer : A","upvote_count":"1","comment_id":"1204450"},{"comment_id":"1137033","poster":"Tricejer","content":"Selected Answer: A\nA is correct","upvote_count":"1","timestamp":"1722444720.0"},{"poster":"Blitz123","content":"as per terraform 1.0 which is the latest version for exam \nits B. You can import infrastructure without corresponding Terraform code","timestamp":"1722377460.0","upvote_count":"3","comment_id":"1136269"},{"content":"Selected Answer: A\nWhen should you write Terraform configuration files for existing infrastructure that you want to start managing with Terraform?\n\nA. Before you run terraform import.","upvote_count":"1","comment_id":"1055881","timestamp":"1714257600.0","poster":"uax"},{"content":"Selected Answer: A\nTested","timestamp":"1710518340.0","poster":"AdriBFK","comment_id":"1008498","upvote_count":"1"},{"upvote_count":"2","content":"You cannot import the resource unless the resource's basic block is not coded in the .tf file. Hence this is the 1st step. Once a basic block is written, you import the resources and enhance the code using the state details.\n<b> Before you run terraform import </b>","timestamp":"1707855600.0","comment_id":"980188","poster":"arunrkaushik"},{"comment_id":"961534","poster":"seifskl","upvote_count":"4","content":"Selected Answer: A\nPlease refer to this link https://developer.hashicorp.com/terraform/cli/import/usage\nIt is said: \n\"To import a resource, first write a resource block for it in your configuration, establishing the name by which it will be known to Terraform \n...\nNow terraform import can be run to attach an existing instance to this resource configuration\"","timestamp":"1706103180.0"},{"upvote_count":"2","poster":"lukacs16","content":"Selected Answer: A\n\"To import a resource, first write a resource block for it in your configuration, establishing the name by which it will be known to Terraform\"\n\nAnswer is A.\n\nhttps://developer.hashicorp.com/terraform/cli/import/usage","timestamp":"1704966300.0","comment_id":"948795"},{"comment_id":"926824","content":"Selected Answer: D\n1. Run terraform import to bring the existing resources under Terraform management. This command allows you to import the existing resources into the Terraform state without the corresponding Terraform configuration files.\n\n2.After importing the resources, you should write the Terraform configuration files to define and manage the imported resources. These configuration files specify the desired state of the infrastructure and allow you to make changes to it in a controlled manner.","poster":"Foram31","timestamp":"1702928040.0","upvote_count":"2"},{"poster":"yubac","comment_id":"910420","content":"Selected Answer: A\nCondidering and existing infrastructurre on a cloud provider, in order to manage these resources on terraform you need:\n1. foreach resource, add at least the resources definition using resource_type.resource_name {}\n2. foreach resource, use terraform import resource_type.resource_name <id>","timestamp":"1701368220.0","upvote_count":"1"},{"comment_id":"901587","timestamp":"1700362800.0","upvote_count":"1","poster":"Sydurrahman12","content":"which one right A or D?"},{"timestamp":"1700061300.0","upvote_count":"2","content":"Selected Answer: A\nhttps://spacelift.io/blog/importing-exisiting-infrastructure-into-terraform","poster":"sdm13168","comment_id":"898302"},{"content":"Answer is D","upvote_count":"2","timestamp":"1699538460.0","comment_id":"893065","poster":"Sathisgm"},{"poster":"MarshalLaw","comment_id":"893017","comments":[{"comments":[{"poster":"joyboy23","upvote_count":"1","comment_id":"945119","timestamp":"1704597600.0","content":"But that is your \"Import config\", It is not the \"existing infra config\""}],"comment_id":"941485","timestamp":"1704268620.0","content":"Answer is A.\n\nSource: https://developer.hashicorp.com/terraform/tutorials/state/state-import. Has been updated with new steps for Terraform v1.5\n\nUsing configuration to import resources involves the following steps:\nIdentify the existing infrastructure you will import.\nDefine an import block for the resources.\nRun terraform plan to review the import plan and optionally generate configuration for the resources.\nPrune generated configuration to only the required arguments.\nApply the configuration to bring the resource into your Terraform state file.","poster":"[Removed]","upvote_count":"1"}],"timestamp":"1699534380.0","content":"Selected Answer: D\nD:\nYou can use the import command to migrate existing resources into your Terraform state file. The import command does not currently generate the configuration for the imported resource, so you must write the corresponding configuration block to map the imported resource to it.\n\nImporting infrastructure involves five steps:\n\n1 Identify the existing infrastructure you will import.\n2 Import infrastructure into your Terraform state file.\n3 Write Terraform configuration that matches that infrastructure.\n4 Review the Terraform plan to ensure the configuration matches the expected state and infrastructure.\n5 Apply the configuration to update your Terraform state.\n\nSource: https://developer.hashicorp.com/terraform/tutorials/state/state-import","upvote_count":"4"},{"comment_id":"892036","upvote_count":"3","content":"A:\nYou need to have the corresponding resources defined in your Terraform configuration files before you can import them.","poster":"dbrosowskiCW","timestamp":"1699447980.0"},{"comment_id":"890608","upvote_count":"3","content":"Selected Answer: D\nD. After you run terraform import","poster":"Oleg_gol","timestamp":"1699267680.0"}],"timestamp":"2023-05-06 10:48:00","answer_images":[],"answer_ET":"A","answers_community":["A (71%)","D (26%)","3%"],"url":"https://www.examtopics.com/discussions/hashicorp/view/108626-exam-terraform-associate-topic-1-question-246-discussion/","answer":"A","question_images":[],"choices":{"D":"After you run terraform import","B":"You can import infrastructure without corresponding Terraform code","A":"Before you run terraform import","C":"Terraform will generate the corresponding configuration files for you"},"topic":"1","answer_description":""},{"id":"RzrkVNIx7Ee4tk0MriZC","question_images":[],"exam_id":169,"choices":{"D":"terraform fmt -check","C":"terraform fmt -check -recursive","A":"terraform fmt -write=false","B":"terraform fmt -list -recursive"},"question_text":"Which command should you run to check if all code in a Terraform configuration that references multiple modules is properly formatted without making changes?","question_id":165,"isMC":true,"discussion":[{"upvote_count":"6","timestamp":"1721820900.0","content":"Selected Answer: C\nC. terraform fmt -check -recursive\n\nThe terraform fmt -check -recursive command checks if the files are formatted according to the Terraform language style conventions. The -check option will make the command return a non-zero exit code if any of the files are not properly formatted, and the -recursive option instructs it to go into the sub-directories as well, which is useful when you have a Terraform configuration that references multiple modules.","comment_id":"961540","poster":"seifskl"},{"upvote_count":"1","content":"Selected Answer: C\nC. terraform fmt -check -recursive","comment_id":"890607","timestamp":"1714985160.0","poster":"Oleg_gol"}],"topic":"1","answer":"C","answer_description":"","unix_timestamp":1683362760,"answer_images":[],"answers_community":["C (100%)"],"timestamp":"2023-05-06 10:46:00","answer_ET":"C","url":"https://www.examtopics.com/discussions/hashicorp/view/108625-exam-terraform-associate-topic-1-question-247-discussion/"}],"exam":{"name":"Terraform Associate","isImplemented":true,"provider":"Hashicorp","lastUpdated":"12 Apr 2025","isMCOnly":false,"isBeta":false,"id":169,"numberOfQuestions":347},"currentPage":33},"__N_SSP":true}