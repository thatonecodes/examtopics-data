{"pageProps":{"questions":[{"id":"UZTiWm21OIgHarM1aqJ3","question_text":"You are creating an entitlement object in Business Central to enable transactability for AppSource apps.\nYou must map the entitlement object to a plan in Partner Center.\nYou need to select the value of the Type property to use in the entitlement object.\nWhich value should you use?","discussion":[{"comment_id":"1419610","content":"Selected Answer: A\nA should say PerUserOfferPlan as per https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-entitlement-object.\n\n\"An example of an entitlement where Type is PerUserOfferPlan. This type is used to enable transactability for AppSource apps. The Id property is used to map the entitlement to the plan in Partner Center, and must contain the Service ID for the plan.\"","upvote_count":"1","timestamp":"1743558120.0","poster":"e9eacea"}],"answer_ET":"A","question_id":51,"timestamp":"2025-02-13 04:09:00","topic":"1","answers_community":["A (100%)"],"answer_images":[],"answer_description":"","exam_id":90,"isMC":true,"url":"https://www.examtopics.com/discussions/microsoft/view/156419-exam-mb-820-topic-1-question-55-discussion/","answer":"A","choices":{"A":"PerUserServicePlan","D":"Role","B":"Implicit","C":"Unlicensed"},"unix_timestamp":1739416140,"question_images":[]},{"id":"u4rrVMQPelmfLDGWZ0Uh","answer_description":"","discussion":[{"comments":[{"poster":"z_safar","content":"Correct!\nRef: https://learn.microsoft.com/en-us/dynamics365/business-central/application/base-application/table/microsoft.purchases.history.purch.-rcpt.-header","comment_id":"1299264","timestamp":"1729178460.0","upvote_count":"2"}],"poster":"AutomateFlo","comment_id":"1295958","content":"1. TableRelation\n2. Buy-from Vendor No. (the table Purch. Rcpt. Header does not have a field \"Vendor No.\")\n3. field","upvote_count":"18","timestamp":"1728642480.0"}],"exam_id":90,"answer_images":["https://img.examtopics.com/mb-820/image145.png"],"question_id":52,"answer":"","timestamp":"2024-10-11 12:28:00","question_text":"HOTSPOT\n-\n\n\nCase study\n-\n\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\n\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\n\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\n\nTo start the case study\n-\n\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question.\n\n\nCompany Background\n-\n\nAlpine Ski House is a company that owns and operates hotels, restaurants, and stores.\n\nCurrently, the company uses the following software and interface:\n\n• Property management software (PMS) to manage hotel rooms\n• On-premises accounting software to generate sales invoices and create purchase orders\n• An API that allows restaurants and stores to obtain necessary information\n\nRestaurants and stores use standalone software for point of sale (POS) devices. Each day, the POS terminals generate a text file of sales data and save the files in a server folder. An account assistant must manually import the files to the current software tables to be processed by the system.\n\nThe general manager receives several reports monthly from department managers. The reports take too much time to prepare.\n\n\nPlanned improvements\n-\n\nThe company is moving from a different system to Business Central online to manage the whole company.\n\nThe company plans to increase efficiency in every department by using APIs to obtain or share information between the different systems.\n\nEach department involved in purchasing must be able to make purchase requests automatically and easily. The departments do not need access to the full ERP management system.\n\n\nTechnical specifications\n-\n\nAlpine Ski House requires the development of several extensions for the planned improvements. Business Central design patterns must be used to develop all extensions.\n\nAlpine Ski House must develop the following pages:\n\n• Pages that provide multiple configurations in a multistep dialog, like a wizard, to provide required information when the extensions are first installed\n• Department-specific Role Center pages to show relevant information and pages with additional information\n\nThe IT department plans to use Power BI to analyze departmental information. The database must be configured to provide optimal performance.\n\nDepartment-specific requirements. Housekeeping department\n\nThe housekeeping department requires the following to increase efficiency and help avoid data entry errors:\n\n• A Housekeeping Role Center to minimize navigation to relevant areas in Business Central online and to show relevant information in it\n• Pages to embed into a new Room page to show additional information about the Room entity\n• A table named Room Incident for the housekeeping team to enter room issue information\n• A Housekeeping canvas app that connects to an extension\n\nThe department requires the development of an extension with a new API page named RoomsAPI.\n\n• The housekeeping team will use RoomsAPI to publish room details, update when work is complete, or provide repair notifications from the canvas app.\n• This custom API page must expose a custom table named Rooms and have an ID 50000. The table must be able to update from the PMS. The PMS team must know the endpoint to connect to the custom API.\n• A developer provides the following details for the API page:\n\n//IMG//\n\n\n• The extension must be published in Business Central online and include a list page named Room List that includes all hotel rooms.\n• Installation or updates to this extension must meet the following requirements:\no Some web services must be published automatically.\no The version of the specified application's metadata must be obtained in AL language.\no The code required to perform tasks cannot be accessible from other parts of the application.\n\nThe Room Incident table information must include the following fields:\n\n• Incident entry: An incremental number\n• Room No.: A room from the Room table\n• Incident Date: The work date\no The table definition in the Room Incident table must autofill the Incident Date when the housekeeping team inserts a new record.\no The value for Incident Date must be the work date configured in the Business Central online client.\n• Status: Includes the following options to identify the status of the incident:\no Open: When the Room Incident is created\no In Progress: When someone starts repair work\no Closed: When the incident is solved\n• Incident Closing Date: Auto-updating field (when the status passes to Closed, the field will update with the work date)\n• Incident Description: Text\n• Image: Media data type\no The stored picture must be downloadable from a menu action.\no A Room Incident page must be developed to contain the download action.\n\nDepartment-specific requirements. Restaurants and stores\n\nTo increase efficiency, the new system must manage the generated data from the restaurants and stores directly by using the API on the POS terminals.\n\n• The company requires a codeunit called from a job queue to read the information from the POS terminal APIs.\n• The POS terminal information must be stored in a table named POS Information, have an ID 50100, and be editable on a page.\n• The account manager requires an option on the menu of the page to run the process manually.\n\nTo analyze the information received from the POS terminals, the company requires:\n\n• A custom API named ticketAPI to export the information to Power BI\n• Use of the Read Scale-Out feature to improve database performance\n\nDepartment-specific requirements. Purchasing department and non-conformity handling\n\nThe purchasing department requires a new entity in Business Central online to log non-conformities of goods received from vendors. The entity must be set up as follows:\n\n• The non-conformity entity must have two tables:\no a header with common information\no one or more lines with the detailed received items that are non-conforming\n• The entity requires a page named Non-conformity and a subpage named Non-conformity Lines to store the information.\n\nWhen a purchase order with incorrect quantity or quality issues is received, the entity must create a non-conformity document in the system. The following information must be included in the document:\n\n• Non-conformity Number: must use the No. Series table from Business Central online to manage this field and use these features:\no Alphanumeric values\no Number format that includes “NC” and the year as part of the number; for example, NC24-001\n• Non-conformity Date: stores only the creation date\n• Vendor No.: stores the number of the vendor that sent the items; only vendors from the company must be included\n• Owner: code of an employee defined in the company\n• Receipt No.: must meet the following conditions:\no Be an existing receipt No.\no Be received from the vendor indicated in the Vendor No. field\n• Comments: can include comments with rich text and pictures to illustrate quality problems\n• Status: includes non-conformity statuses, such as:\no Open\no Notified\no Closed\n• Lines must contain the following details:\no Item No.: item received (for existing inventory items only)\no Description: item description\no Quantity: non-conforming quantity\no Non-conformity Type:\n- Quality\n- Quantity\n- Delivery date\n\nThe serial numbers of the non-conformities and the period in which they can be created must be in a configuration table and its corresponding page to allow them to be modified for the users.\n\n\nYou need to define the properties for the Receipt No. field in the Non-conformity table when storing the information to the purchasing department.\n\nHow should you complete the code segment? To answer, select the appropriate options in the answer area.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","answer_ET":"","unix_timestamp":1728642480,"question_images":["https://img.examtopics.com/mb-820/image143.png","https://img.examtopics.com/mb-820/image144.png"],"url":"https://www.examtopics.com/discussions/microsoft/view/149057-exam-mb-820-topic-1-question-57-discussion/","answers_community":[],"isMC":false,"topic":"1"},{"id":"UueCLDDVcWrEbB97uQhq","answer":"A","topic":"1","answer_ET":"A","isMC":true,"unix_timestamp":1730201400,"choices":{"D":"Include in the extension a codeunit of type Install that publishes RoomsAPI.","A":"Use the default API configuration in Business Central.","C":"Open the Web Services page and publish the RoomsAPI page as a web service.","B":"Enable the APIs for the Business Central online environment."},"answers_community":["A (100%)"],"question_text":"Case study -\n\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\n\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\n\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\n\nTo start the case study -\n\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question.\n\n\nCompany Background -\n\nAlpine Ski House is a company that owns and operates hotels, restaurants, and stores.\n\nCurrently, the company uses the following software and interface:\n\n• Property management software (PMS) to manage hotel rooms\n• On-premises accounting software to generate sales invoices and create purchase orders\n• An API that allows restaurants and stores to obtain necessary information\n\nRestaurants and stores use standalone software for point of sale (POS) devices. Each day, the POS terminals generate a text file of sales data and save the files in a server folder. An account assistant must manually import the files to the current software tables to be processed by the system.\n\nThe general manager receives several reports monthly from department managers. The reports take too much time to prepare.\n\n\nPlanned improvements -\n\nThe company is moving from a different system to Business Central online to manage the whole company.\n\nThe company plans to increase efficiency in every department by using APIs to obtain or share information between the different systems.\n\nEach department involved in purchasing must be able to make purchase requests automatically and easily. The departments do not need access to the full ERP management system.\n\n\nTechnical specifications -\n\nAlpine Ski House requires the development of several extensions for the planned improvements. Business Central design patterns must be used to develop all extensions.\n\nAlpine Ski House must develop the following pages:\n\n• Pages that provide multiple configurations in a multistep dialog, like a wizard, to provide required information when the extensions are first installed\n• Department-specific Role Center pages to show relevant information and pages with additional information\n\nThe IT department plans to use Power BI to analyze departmental information. The database must be configured to provide optimal performance.\n\nDepartment-specific requirements. Housekeeping department\n\nThe housekeeping department requires the following to increase efficiency and help avoid data entry errors:\n\n• A Housekeeping Role Center to minimize navigation to relevant areas in Business Central online and to show relevant information in it\n• Pages to embed into a new Room page to show additional information about the Room entity\n• A table named Room Incident for the housekeeping team to enter room issue information\n• A Housekeeping canvas app that connects to an extension\n\nThe department requires the development of an extension with a new API page named RoomsAPI.\n\n• The housekeeping team will use RoomsAPI to publish room details, update when work is complete, or provide repair notifications from the canvas app.\n• This custom API page must expose a custom table named Rooms and have an ID 50000. The table must be able to update from the PMS. The PMS team must know the endpoint to connect to the custom API.\n• A developer provides the following details for the API page:\n\n//IMG//\n\n\n• The extension must be published in Business Central online and include a list page named Room List that includes all hotel rooms.\n• Installation or updates to this extension must meet the following requirements: o Some web services must be published automatically. o The version of the specified application's metadata must be obtained in AL language. o The code required to perform tasks cannot be accessible from other parts of the application.\n\nThe Room Incident table information must include the following fields:\n\n• Incident entry: An incremental number\n• Room No.: A room from the Room table\n• Incident Date: The work date\no The table definition in the Room Incident table must autofill the Incident Date when the housekeeping team inserts a new record. o The value for Incident Date must be the work date configured in the Business Central online client.\n• Status: Includes the following options to identify the status of the incident: o Open: When the Room Incident is created o In Progress: When someone starts repair work o Closed: When the incident is solved\n• Incident Closing Date: Auto-updating field (when the status passes to Closed, the field will update with the work date)\n• Incident Description: Text\n• Image: Media data type\no The stored picture must be downloadable from a menu action. o A Room Incident page must be developed to contain the download action.\n\nDepartment-specific requirements. Restaurants and stores\n\nTo increase efficiency, the new system must manage the generated data from the restaurants and stores directly by using the API on the POS terminals.\n\n• The company requires a codeunit called from a job queue to read the information from the POS terminal APIs.\n• The POS terminal information must be stored in a table named POS Information, have an ID 50100, and be editable on a page.\n• The account manager requires an option on the menu of the page to run the process manually.\n\nTo analyze the information received from the POS terminals, the company requires:\n\n• A custom API named ticketAPI to export the information to Power BI\n• Use of the Read Scale-Out feature to improve database performance\n\nDepartment-specific requirements. Purchasing department and non-conformity handling\n\nThe purchasing department requires a new entity in Business Central online to log non-conformities of goods received from vendors. The entity must be set up as follows:\n\n• The non-conformity entity must have two tables:\no a header with common information\no one or more lines with the detailed received items that are non-conforming\n• The entity requires a page named Non-conformity and a subpage named Non-conformity Lines to store the information.\n\nWhen a purchase order with incorrect quantity or quality issues is received, the entity must create a non-conformity document in the system. The following information must be included in the document:\n\n• Non-conformity Number: must use the No. Series table from Business Central online to manage this field and use these features: o Alphanumeric values o Number format that includes “NC” and the year as part of the number; for example, NC24-001\n• Non-conformity Date: stores only the creation date\n• Vendor No.: stores the number of the vendor that sent the items; only vendors from the company must be included\n• Owner: code of an employee defined in the company\n• Receipt No.: must meet the following conditions:\no Be an existing receipt No.\no Be received from the vendor indicated in the Vendor No. field\n• Comments: can include comments with rich text and pictures to illustrate quality problems\n• Status: includes non-conformity statuses, such as:\no Open\no Notified\no Closed\n• Lines must contain the following details:\no Item No.: item received (for existing inventory items only) o Description: item description o Quantity: non-conforming quantity o Non-conformity Type:\n- Quality\n- Quantity\n- Delivery date\n\nThe serial numbers of the non-conformities and the period in which they can be created must be in a configuration table and its corresponding page to allow them to be modified for the users.\n\n\nYou need to access the RoomsAPI API from the canvas app.\n\nWhat should you do?","question_images":["https://img.examtopics.com/mb-820/image143.png"],"timestamp":"2024-10-29 12:30:00","answer_description":"","discussion":[{"timestamp":"1730201400.0","poster":"e3b13ec","upvote_count":"5","content":"Selected Answer: A\nIt´s an API Page, not a Webservice Page, so it´s getting activated automatically.","comment_id":"1304418"}],"answer_images":[],"exam_id":90,"url":"https://www.examtopics.com/discussions/microsoft/view/150449-exam-mb-820-topic-1-question-59-discussion/","question_id":53},{"id":"lzfYBzW2KcM5L3GGCqbE","discussion":[{"comment_id":"1192701","poster":"zazpe","timestamp":"1712724120.0","upvote_count":"16","content":"To run an approve action on a test page named TestPageA, it should be \"Configure TestPageA.Approve.Invoke()\"\n\nhttps://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/testaction/testaction-invoke-method"},{"upvote_count":"6","content":"For the Second Question answer should be B- Configure TestPageA.Approve.Invoke()","comment_id":"1228217","poster":"Madeira","timestamp":"1718074020.0"},{"poster":"Bravo_Dravel","upvote_count":"1","timestamp":"1742792460.0","comments":[{"poster":"Bravo_Dravel","timestamp":"1742894100.0","upvote_count":"1","content":"Correction: 2. Configure TestPageA.Approve.Invoke()","comment_id":"1409543"}],"content":"Answer: 1. Set the TransactionModel attribute to AutoRollBack\n 2. Configure TestPageA.Trap()","comment_id":"1409542"},{"timestamp":"1728910440.0","content":"TestPageA.Approve.Invoke()\"","comment_id":"1297566","upvote_count":"3","poster":"ddc215f"}],"question_id":54,"answer_description":"","answer":"","answers_community":[],"answer_images":["https://img.examtopics.com/mb-820/image13.png"],"answer_ET":"","url":"https://www.examtopics.com/discussions/microsoft/view/137782-exam-mb-820-topic-1-question-6-discussion/","exam_id":90,"timestamp":"2024-04-03 06:31:00","question_text":"HOTSPOT -\nYou develop a test application.\nYou must meet the following requirements:\nRoll back changes to a test method after run time.\nRun an approve action on a test page named TestPageA.\nYou need to implement the given requirements on the test codeunit.\nWhich actions should you perform? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\n//IMG//","isMC":false,"topic":"1","unix_timestamp":1712118660,"question_images":["https://img.examtopics.com/mb-820/image12.png"]},{"id":"Di1KYMGp7XQ1O8LUR3xT","isMC":true,"unix_timestamp":1730201700,"choices":{"D":"Set the DataAccessIntent property to ReadOnly on the ticketAPI API page","A":"Set the ODataReadonlyGetEnabled parameter to True in the Business Central admin center.","C":"Enable read scale-out on the Business Central database.","B":"Set the AccessByPermission property to Read on the ticketAPI API page."},"topic":"1","answer":"D","url":"https://www.examtopics.com/discussions/microsoft/view/150450-exam-mb-820-topic-1-question-60-discussion/","discussion":[{"poster":"Tirex","content":"Selected Answer: D\nWe need improve performance with single API page.","upvote_count":"2","comment_id":"1399240","timestamp":"1742130480.0"},{"content":"Selected Answer: C\nI think is correct\n\nhttps://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/database-read-scale-out-overview\nThe way Business Central Server interacts with the database can broadly be categorized in two patterns:\n\nBusiness processes that read and write data, such as codeunits that run from UI pages or web services.\nAnalytical workloads that only read data, such as queries, reports, or API pages.","poster":"Chanitos24","upvote_count":"1","comment_id":"1355945","timestamp":"1739418480.0"},{"timestamp":"1730201700.0","poster":"e3b13ec","content":"Selected Answer: D\nAnswer C is wrong:\nWe are talking about a Cloud Environment, so it´s enabled by default","comment_id":"1304421","upvote_count":"2"}],"answer_ET":"D","exam_id":90,"answer_description":"","timestamp":"2024-10-29 12:35:00","answer_images":[],"question_images":["https://img.examtopics.com/mb-820/image143.png"],"answers_community":["D (80%)","C (20%)"],"question_id":55,"question_text":"Case study -\n\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\n\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\n\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\n\nTo start the case study -\n\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. If the case study has an All Information tab, note that the information displayed is identical to the information displayed on the subsequent tabs. When you are ready to answer a question, click the Question button to return to the question.\n\n\nCompany Background -\n\nAlpine Ski House is a company that owns and operates hotels, restaurants, and stores.\n\nCurrently, the company uses the following software and interface:\n\n• Property management software (PMS) to manage hotel rooms\n• On-premises accounting software to generate sales invoices and create purchase orders\n• An API that allows restaurants and stores to obtain necessary information\n\nRestaurants and stores use standalone software for point of sale (POS) devices. Each day, the POS terminals generate a text file of sales data and save the files in a server folder. An account assistant must manually import the files to the current software tables to be processed by the system.\n\nThe general manager receives several reports monthly from department managers. The reports take too much time to prepare.\n\n\nPlanned improvements -\n\nThe company is moving from a different system to Business Central online to manage the whole company.\n\nThe company plans to increase efficiency in every department by using APIs to obtain or share information between the different systems.\n\nEach department involved in purchasing must be able to make purchase requests automatically and easily. The departments do not need access to the full ERP management system.\n\n\nTechnical specifications -\n\nAlpine Ski House requires the development of several extensions for the planned improvements. Business Central design patterns must be used to develop all extensions.\n\nAlpine Ski House must develop the following pages:\n\n• Pages that provide multiple configurations in a multistep dialog, like a wizard, to provide required information when the extensions are first installed\n• Department-specific Role Center pages to show relevant information and pages with additional information\n\nThe IT department plans to use Power BI to analyze departmental information. The database must be configured to provide optimal performance.\n\nDepartment-specific requirements. Housekeeping department\n\nThe housekeeping department requires the following to increase efficiency and help avoid data entry errors:\n\n• A Housekeeping Role Center to minimize navigation to relevant areas in Business Central online and to show relevant information in it\n• Pages to embed into a new Room page to show additional information about the Room entity\n• A table named Room Incident for the housekeeping team to enter room issue information\n• A Housekeeping canvas app that connects to an extension\n\nThe department requires the development of an extension with a new API page named RoomsAPI.\n\n• The housekeeping team will use RoomsAPI to publish room details, update when work is complete, or provide repair notifications from the canvas app.\n• This custom API page must expose a custom table named Rooms and have an ID 50000. The table must be able to update from the PMS. The PMS team must know the endpoint to connect to the custom API.\n• A developer provides the following details for the API page:\n\n//IMG//\n\n\n• The extension must be published in Business Central online and include a list page named Room List that includes all hotel rooms.\n• Installation or updates to this extension must meet the following requirements: o Some web services must be published automatically. o The version of the specified application's metadata must be obtained in AL language. o The code required to perform tasks cannot be accessible from other parts of the application.\n\nThe Room Incident table information must include the following fields:\n\n• Incident entry: An incremental number\n• Room No.: A room from the Room table\n• Incident Date: The work date\no The table definition in the Room Incident table must autofill the Incident Date when the housekeeping team inserts a new record. o The value for Incident Date must be the work date configured in the Business Central online client.\n• Status: Includes the following options to identify the status of the incident: o Open: When the Room Incident is created o In Progress: When someone starts repair work o Closed: When the incident is solved\n• Incident Closing Date: Auto-updating field (when the status passes to Closed, the field will update with the work date)\n• Incident Description: Text\n• Image: Media data type\no The stored picture must be downloadable from a menu action. o A Room Incident page must be developed to contain the download action.\n\nDepartment-specific requirements. Restaurants and stores\n\nTo increase efficiency, the new system must manage the generated data from the restaurants and stores directly by using the API on the POS terminals.\n\n• The company requires a codeunit called from a job queue to read the information from the POS terminal APIs.\n• The POS terminal information must be stored in a table named POS Information, have an ID 50100, and be editable on a page.\n• The account manager requires an option on the menu of the page to run the process manually.\n\nTo analyze the information received from the POS terminals, the company requires:\n\n• A custom API named ticketAPI to export the information to Power BI\n• Use of the Read Scale-Out feature to improve database performance\n\nDepartment-specific requirements. Purchasing department and non-conformity handling\n\nThe purchasing department requires a new entity in Business Central online to log non-conformities of goods received from vendors. The entity must be set up as follows:\n\n• The non-conformity entity must have two tables:\no a header with common information\no one or more lines with the detailed received items that are non-conforming\n• The entity requires a page named Non-conformity and a subpage named Non-conformity Lines to store the information.\n\nWhen a purchase order with incorrect quantity or quality issues is received, the entity must create a non-conformity document in the system. The following information must be included in the document:\n\n• Non-conformity Number: must use the No. Series table from Business Central online to manage this field and use these features: o Alphanumeric values o Number format that includes “NC” and the year as part of the number; for example, NC24-001\n• Non-conformity Date: stores only the creation date\n• Vendor No.: stores the number of the vendor that sent the items; only vendors from the company must be included\n• Owner: code of an employee defined in the company\n• Receipt No.: must meet the following conditions:\no Be an existing receipt No.\no Be received from the vendor indicated in the Vendor No. field\n• Comments: can include comments with rich text and pictures to illustrate quality problems\n• Status: includes non-conformity statuses, such as:\no Open\no Notified\no Closed\n• Lines must contain the following details:\no Item No.: item received (for existing inventory items only) o Description: item description o Quantity: non-conforming quantity o Non-conformity Type:\n- Quality\n- Quantity\n- Delivery date\n\nThe serial numbers of the non-conformities and the period in which they can be created must be in a configuration table and its corresponding page to allow them to be modified for the users.\n\n\nYou need to improve performance when ticketAPI is used to analyze the POS data.\n\nWhat should you do?"}],"exam":{"name":"MB-820","lastUpdated":"12 Apr 2025","isImplemented":true,"id":90,"isMCOnly":false,"numberOfQuestions":75,"isBeta":false,"provider":"Microsoft"},"currentPage":11},"__N_SSP":true}