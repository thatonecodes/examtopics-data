{"pageProps":{"questions":[{"id":"Dc3O8NFJbqwKpZ5G2Bgt","choices":{"D":"a user-assigned managed identity","B":"Azure SQL sign-in credentials","A":"a system-assigned managed identity","C":"database-scoped credentials"},"discussion":[{"timestamp":"1735928460.0","content":"Selected Answer: D\nAnswer is D as it best allows you to leverage Azure AD/Microsoft Entra.","comment_id":"1336115","poster":"JamC","upvote_count":"1"},{"timestamp":"1730305500.0","content":"Selected Answer: D\na user-assigned managed identity","comment_id":"1305067","poster":"Mtour","upvote_count":"1"},{"timestamp":"1729392480.0","poster":"2f5c7cd","upvote_count":"2","content":"Selected Answer: D\n\"The solution must support the use of location-based Conditional Access policies\"","comment_id":"1300268"}],"url":"https://www.examtopics.com/discussions/microsoft/view/149822-exam-dp-300-topic-2-question-53-discussion/","answer_ET":"C","isMC":true,"answer_images":[],"answer":"D","timestamp":"2024-10-20 04:48:00","exam_id":68,"question_text":"You have an Azure subscription that contains an Azure SQL database named DB1.\n\nYou need to host elastic jobs by using DB1. DB1 will also be configured as a job target. The solution must support the use of location-based Conditional Access policies.\n\nWhat should the elastic jobs use to access DB1?","answer_description":"","unix_timestamp":1729392480,"question_id":141,"question_images":[],"topic":"2","answers_community":["D (100%)"]},{"id":"RCOUxBLWiJPdSIttFMJk","exam_id":68,"question_id":142,"url":"https://www.examtopics.com/discussions/microsoft/view/151220-exam-dp-300-topic-2-question-55-discussion/","timestamp":"2024-11-13 18:40:00","answer":"B","topic":"2","choices":{"B":"No","A":"Yes"},"discussion":[{"timestamp":"1740688560.0","poster":"voodoo_sh","comment_id":"1362720","upvote_count":"1","content":"Selected Answer: B\nNo\n\nIf there was a typo in the question and they meant \"sp_set_database_firewall_rule\", the answer is correct. \n\nIf we assume there is no typo and they really mean \"sp_set_firewall_rule\" in context of DB1, it will throw an error: \nMsg 5001, Level 16, State 5, Procedure sp_set_firewall_rule, Line 1 [Batch Start Line 693]\nUser must be in the master database."},{"timestamp":"1736391180.0","comment_id":"1338177","poster":"c80f499","upvote_count":"1","content":"Selected Answer: B\nNo, the solution does not meet the goal as it uses a server-level firewall rule for DB1, which allows access to all databases. The correct approach is to use database-level firewall rules for both DB1 and DB2."},{"poster":"voodoo_sh","comment_id":"1311541","upvote_count":"2","content":"it should be \"sp_set_database_firewall_rule\" for DB1, not \"sp_set_firewall_rule\". \n\nOtherwise, answer is correct.","timestamp":"1731519600.0"}],"answers_community":["B (100%)"],"isMC":true,"unix_timestamp":1731519600,"answer_description":"","answer_ET":"A","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\n\nYou have the on-premises networks shown in the following table.\n\n//IMG//\n\n\nYou have an Azure subscription that contains an Azure SQL Database server named SQL1. SQL1 contains two databases named DB1 and DB2.\n\nYou need to configure access to DB1 and DB2. The solution must meet the following requirements:\n\n• Ensure that DB1 can be accessed only by users in Branch1.\n• Ensure that DB2 can be accessed only by users in Branch2.\n\nSolution: You connect to DB1 and run the following command.\n\nEXECUTE sp_set_firewall_rule ‘Allow db1 users’, ‘131.107.10.0’, ‘131.107.10.255’\n\nYou connect to DB2 and run the following command.\n\nEXECUTE sp_set_database_firewall_rule ‘Allow db2 users’, ‘131.107.11.0’, ‘131.107.11.255’\n\nDoes this meet the goal?","answer_images":[],"question_images":["https://img.examtopics.com/dp-300/image355.png"]},{"id":"qo2NBaGCicNw0NHHFehN","timestamp":"2025-01-09 03:52:00","exam_id":68,"answer_ET":"B","discussion":[{"content":"Selected Answer: B\nNo, the solution does not meet the goal as it uses a server-level firewall rule for DB1, which allows access to all databases. The correct approach is to use database-level firewall rules for both DB1 and DB2.","timestamp":"1736391120.0","upvote_count":"1","comment_id":"1338176","poster":"c80f499"}],"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\n\nYou have the on-premises networks shown in the following table.\n\n//IMG//\n\n\nYou have an Azure subscription that contains an Azure SQL Database server named SQL1. SQL1 contains two databases named DB1 and DB2.\n\nYou need to configure access to DB1 and DB2. The solution must meet the following requirements:\n\n• Ensure that DB1 can be accessed only by users in Branch1.\n• Ensure that DB2 can be accessed only by users in Branch2.\n\nSolution: You connect to the master of SQL1 and run the following command.\n\nEXECUTE sp_set_firewall_rule ‘Allow db1 and db2 users’, ‘131.107.11.0’, ‘131.107.11.255’\n\nDoes this meet the goal?","topic":"2","isMC":true,"answer_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/154146-exam-dp-300-topic-2-question-56-discussion/","question_id":143,"answer":"B","unix_timestamp":1736391120,"answer_description":"","choices":{"A":"Yes","B":"No"},"question_images":["https://img.examtopics.com/dp-300/image355.png"],"answers_community":["B (100%)"]},{"id":"64T8sFgfzYq0CmWOCnka","question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0010600001.jpg"],"answers_community":[],"question_id":144,"url":"https://www.examtopics.com/discussions/microsoft/view/55054-exam-dp-300-topic-2-question-6-discussion/","exam_id":68,"question_text":"HOTSPOT -\nYou have an Azure SQL database named DB1 that contains two tables named Table1 and Table2. Both tables contain a column named a Column1. Column1 is used for joins by an application named App1.\nYou need to protect the contents of Column1 at rest, in transit, and in use.\nHow should you protect the contents of Column1? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","unix_timestamp":1623319680,"isMC":false,"answer_ET":"","answer":"","answer_description":"Box 1: Column encryption Key -\nAlways Encrypted uses two types of keys: column encryption keys and column master keys. A column encryption key is used to encrypt data in an encrypted column. A column master key is a key-protecting key that encrypts one or more column encryption keys.\nIncorrect Answers:\nTDE encrypts the storage of an entire database by using a symmetric key called the Database Encryption Key (DEK).\n\nBox 2: Deterministic -\nAlways Encrypted is a feature designed to protect sensitive data, such as credit card numbers or national identification numbers (for example, U.S. social security numbers), stored in Azure SQL Database or SQL Server databases. Always Encrypted allows clients to encrypt sensitive data inside client applications and never reveal the encryption keys to the Database Engine (SQL Database or SQL Server).\nAlways Encrypted supports two types of encryption: randomized encryption and deterministic encryption.\nDeterministic encryption always generates the same encrypted value for any given plain text value. Using deterministic encryption allows point lookups, equality joins, grouping and indexing on encrypted columns.\nIncorrect Answers:\n✑ Randomized encryption uses a method that encrypts data in a less predictable manner. Randomized encryption is more secure, but prevents searching, grouping, indexing, and joining on encrypted columns.\n✑ Transparent data encryption (TDE) helps protect Azure SQL Database, Azure SQL Managed Instance, and Azure Synapse Analytics against the threat of malicious offline activity by encrypting data at rest. It performs real-time encryption and decryption of the database, associated backups, and transaction log files at rest without requiring changes to the application.\nReference:\nhttps://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/always-encrypted-database-engine","timestamp":"2021-06-10 12:08:00","topic":"2","answer_images":["https://www.examtopics.com/assets/media/exam-media/04275/0010700001.jpg"],"discussion":[{"poster":"examtry","content":"Correct answer","comment_id":"378935","timestamp":"1718014080.0","upvote_count":"17"},{"content":"Though starting SQL Server 2019 they made it possible to compare, group, search, etc. on columns with Randomized encryption via Secure enclaves https://docs.microsoft.com/en-us/learn/modules/protect-data-transit-rest/5-explain-object-encryption-secure-enclaves. So now both Deterministic and Randomized would do.","comment_id":"439096","poster":"Volhva","timestamp":"1725450000.0","upvote_count":"4"}]},{"id":"crGEeLhPWj07uq8NtAa9","answers_community":["BC (76%)","BE (24%)"],"isMC":true,"answer_description":"","unix_timestamp":1619107980,"question_images":[],"discussion":[{"timestamp":"1623582120.0","poster":"Mend","upvote_count":"17","comments":[{"comments":[{"comment_id":"494983","comments":[{"poster":"licna","upvote_count":"4","timestamp":"1673279280.0","comment_id":"770605","content":"There is not anything like database firewall. There are only server firewall and database FW rules. Besides, what the rules would be? We'd need to know source IPs. There is no request to allow customers to connect from a specific location so they should be able to connect from anywhere. Moreover, setting DB level FW rules assumes to create server level FW rules first."}],"upvote_count":"3","poster":"quermi","content":"Server firewall allows access to all logical server databases, it does not discriminate databases.\nMust be database firewall","timestamp":"1638778680.0"},{"upvote_count":"13","timestamp":"1639998900.0","content":"DB is not the answer it means database in this case :-)\nthe answer is BC","comment_id":"505371","poster":"gerard"}],"upvote_count":"1","content":"its BD? Opinions??","poster":"o2091","timestamp":"1637148660.0","comment_id":"479982"},{"comment_id":"1115097","poster":"yyc585","content":"B & E\nDatabase-level firewall rules can only be configured using Transact-SQL (T-SQL) statements, and only after you've configured a server-level firewall rule.\n\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database/secure-database-tutorial?view=azuresql#:~:text=Database%2Dlevel%20firewall%20rules%20can%20only%20be%20configured%20using%20Transact%2DSQL%20(T%2DSQL)%20statements%2C%20and%20only%20after%20you%27ve%20configured%20a%20server%2Dlevel%20firewall%20rule.","upvote_count":"1","timestamp":"1704534000.0"}],"comment_id":"381050","content":"The key is \"only connect to and access their respective database\", which means Contained DB's. In that case creating in each DB is the right choice."},{"upvote_count":"11","content":"correct","timestamp":"1619107980.0","poster":"ChikuLal","comment_id":"341176"},{"poster":"voodoo_sh","content":"Selected Answer: BC\nB,C - isolate the customers from each other using the database-level firewall rules, and also create separate contained database users for each customer in each database","timestamp":"1734716640.0","comment_id":"1329593","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: BC\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database/firewall-configure?view=azuresql#server-level-versus-database-level-ip-firewall-rules","comment_id":"1300178","poster":"2f5c7cd","timestamp":"1729372440.0"},{"content":"BC","upvote_count":"1","comment_id":"1293658","poster":"2f5c7cd","timestamp":"1728174840.0"},{"content":"I would go for BC. Not A as that implies access to the database itself. B is an obvious requirement for customer to access own database. C allows control of ip addresses or ports or ranges to restrict access to the correct user. D is for server-level control not individual databases. Not E as master database login is server-level access not individual database. Not F as encryption does not address access.","comment_id":"1292441","timestamp":"1727876820.0","upvote_count":"1","poster":"bingomutant"},{"comment_id":"1260076","upvote_count":"1","content":"Selected Answer: BE\nLogins in the master database are necessary for authenticating users at the server level. Without a login, a user cannot connect to the SQL server to access any database.\n Once authenticated, the login is mapped to a user within a specific database. This mapping allows the user to access only the database for which they have been granted permissions.\n While firewalls can restrict access to specific IP addresses, they do not inherently differentiate between different databases on the same server. Firewalls control network access rather than database-specific access.","poster":"Natali","timestamp":"1722637920.0"},{"timestamp":"1712991900.0","upvote_count":"2","content":"Selected Answer: BE\nAnswer is correct.\nYou need to create Logins in the master database and create a user for each database linked to its Login\n\"CRETE USER user1 FOR LOGIN enterprise1\" on database 1\n\"CREATE USER user2 FOR LOGIN enterprise2\" on database2\" ecc.\n\nThe question doesn't talk about IP address limitation, so there is no need to configure Firewall","poster":"sca88","comment_id":"1194718"},{"comment_id":"1119883","content":"Bing Chat Result:\nTo ensure that each customer can only connect to and access their respective database, you should perform the following two actions:\n\nCreate users in each database. This will allow you to grant permissions to specific users for accessing their respective databases 1.\nConfigure the database firewall. This will enable you to restrict access to each database by configuring the firewall rules for each database 2.\nPlease note that this is a high-level answer and there may be other factors to consider when implementing security for your Azure SQL databases. I recommend consulting the Azure SQL Database documentation for more information.","poster":"EW3772","timestamp":"1704985860.0","upvote_count":"1"},{"upvote_count":"1","content":"B. Create users in each database.\nE. Create logins in the master database.\n\nUnder the section \"Create accounts for non-administrator users\"\n\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage?view=azuresql","comments":[{"timestamp":"1697400180.0","upvote_count":"2","poster":"boopytoob","comment_id":"1044423","content":"Please ignore the parent comment. Correct answer is B&C.\nIn addition to the above link, check this one out.\nhttps://learn.microsoft.com/en-us/sql/relational-databases/security/contained-database-users-making-your-database-portable?view=sql-server-ver16"}],"poster":"boopytoob","timestamp":"1697394480.0","comment_id":"1044377"},{"content":"it really is coorect - you need to create logins (master db by default, there is no way around) and database users associated to those logins.","poster":"testdumps2017","comment_id":"982685","upvote_count":"1","timestamp":"1692197100.0"},{"poster":"fede_are","content":"Selected Answer: BC\nMy opinion","comment_id":"960083","timestamp":"1690088580.0","upvote_count":"1"},{"timestamp":"1689007020.0","poster":"Socket","upvote_count":"2","content":"Selected Answer: BC\nTo ensure that each customer can only connect to and access their respective database in Azure SQL, you should perform the following two actions:\n\nB. Create users in each database: Creating separate users for each customer in their respective databases allows you to control access at the database level. Each user will have its own set of permissions and can only connect to and access their assigned database.\n\nC. Configure the database firewall: The database firewall provides an additional layer of security by controlling the incoming connections to the Azure SQL Database server. By configuring the database firewall, you can define IP address ranges or individual IP addresses that are allowed to connect to each database. This ensures that only authorized connections from specific sources can access the databases.\n\nTherefore, the correct actions to perform are B. Create users in each database and C. Configure the database firewall.","comment_id":"948274"},{"upvote_count":"1","poster":"uvj","comment_id":"938846","timestamp":"1688104860.0","content":"BE, logins mapped to the specific users in respective DBs would fulfill the requirement here."},{"timestamp":"1681651500.0","poster":"PMiao","comment_id":"871773","upvote_count":"2","content":"Selected Answer: BC\nmy answer"},{"upvote_count":"1","content":"because you can only create and manage database-level IP firewall rules for master and user databases by using Transact-SQL statements and only after you configure the first server-level firewall.\ntherefore i think the answer is correct","comment_id":"869377","timestamp":"1681387860.0","poster":"amazonalex"},{"content":"B. Create users in each database: For each database, create a user that corresponds to the login that the customer will use to connect to their database. This will allow you to control which login has access to which database.\n\nC. Configure the database firewall: Configure the database firewall to allow only connections from the IP addresses or IP address ranges that correspond to the customers who are authorized to access each database","timestamp":"1677130800.0","comment_id":"818824","upvote_count":"1","poster":"KIET2131"},{"timestamp":"1675605300.0","content":"Is it not CD as assume the respective users for the each database exist?","comment_id":"798873","upvote_count":"1","poster":"Batt098"},{"comments":[{"timestamp":"1671460980.0","poster":"OneplusOne","comment_id":"749927","upvote_count":"2","content":"The question does not state AAD accounts are to be used. We can create local SQL Server logins and subsequently the DB users."}],"comment_id":"734039","upvote_count":"3","content":"Selected Answer: BC\nI think D is not right because of this :\n\"Azure Active Directory authentication requires that database users are created as contained. A contained database user maps to an identity in the Azure AD directory associated with the database and has no login in the master database.\"\nhttps://www.examtopics.com/exams/microsoft/dp-300/view/10/","timestamp":"1670011320.0","poster":"des2907"},{"poster":"lukelin08","comments":[{"upvote_count":"1","timestamp":"1712992020.0","content":"Thanks for your explanation.","poster":"sca88","comment_id":"1194721"}],"timestamp":"1663550340.0","content":"(B,E) is correct. Although it would make sense to also add a database firewall, you must first create a server level firewall. So that would mean select those two answers, but the access to the database would still be left unsatisfied. So the only other option that gives access to the databases as per the question is the answers (B,E). \n\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database/firewall-configure?view=azuresql","upvote_count":"2","comment_id":"672839"},{"upvote_count":"5","comments":[{"comment_id":"671878","upvote_count":"1","content":"https://docs.microsoft.com/en-us/azure/azure-sql/database/secure-database-tutorial","poster":"renxkee","timestamp":"1663460160.0"}],"timestamp":"1663460100.0","comment_id":"671876","poster":"renxkee","content":"BC is the right choice."},{"upvote_count":"3","comment_id":"625131","content":"Weird Question. Who sets up 40 databases without creating users already? But configuring database firewall is correct.","timestamp":"1656578400.0","poster":"JustAnotherDBA"},{"poster":"Chunchi","timestamp":"1656523860.0","content":"Selected Answer: BC\nBC is correct answer","comment_id":"624807","upvote_count":"4"},{"upvote_count":"3","comment_id":"583580","poster":"Jo123se","content":"The answer is BC. On Azure SQL databases, you do not have to create a Login for the user unless he needs to access several databases within the server. The requirement is each user will only be allowed to access his own database. So with the principle of least privilege, we just need to a contained user. The database firewall is additional security to limit access on each database.","timestamp":"1649566680.0"},{"upvote_count":"5","poster":"CaptainJameson","comment_id":"566367","timestamp":"1647112920.0","content":"Selected Answer: BC\nUsers in the database (contained users)\nDb firewall rules to allow only customer locations to their db"},{"comment_id":"566005","poster":"Gall","timestamp":"1647076380.0","upvote_count":"1","content":"Selected Answer: BE\nhttps://www.sqlnethub.com/blog/creating-azure-sql-database-logins-and-users/"},{"content":"BE is correct","comment_id":"563197","timestamp":"1646739660.0","poster":"Appajip","upvote_count":"1"},{"comment_id":"552973","upvote_count":"2","poster":"AlCubeHead","timestamp":"1645458660.0","content":"Selected Answer: BE\nBE is the correct option as you cannot create users at the database level without logins at the master level. Even with Azure SQL Database there is still a master DB.\nThis has to be done:\nCREATE LOGIN testuser WITH PASSWORD 'P@ssword1234';\nCREATE USER testuser FROM login testuser;"},{"comment_id":"534681","comments":[{"upvote_count":"1","timestamp":"1647519840.0","content":"you CAN create db fw rules!\n\nDatabase-level firewall rules only apply to individual databases. The database will retain these rules during a server failover. Database-level firewall rules can only be configured using Transact-SQL (T-SQL) statements, and only after you've configured a server-level firewall rule.\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/secure-database-tutorial#setup-database-firewall-rules","comment_id":"569707","poster":"[Removed]"}],"content":"Its BD\nB - You have to create users for each customer on its respective DataBase (you dont have master DB in Azure SQL to make logins);\nD - You have to create firewall rules in the SERVER, you cant make firewall rules for DB in Azure SQL.","poster":"Smartiup","upvote_count":"1","timestamp":"1643372700.0"},{"upvote_count":"2","comments":[{"content":"You can create login in master in SQL Databases.","upvote_count":"1","poster":"Surjit24","comment_id":"979541","timestamp":"1691868360.0"}],"poster":"aidewuado","timestamp":"1641837420.0","comment_id":"521018","content":"BC is the correct.\n\nB-> create a container user to DB\nC -> A firewall is configured to DB specify\nD-> Configure Firewall a server level but no to DB\ne -> its incorrect, statement is SQL Databases not SQL management ( no access to system DB)\nf -> not apply"},{"upvote_count":"4","timestamp":"1637698860.0","poster":"Surjit24","content":"BE is the correct option","comment_id":"485400"},{"comments":[{"timestamp":"1632506100.0","poster":"Mapep","content":"Suppose customer 1 gives customer 2 credentials to access customer 1's database. By whitelisting only customer 1's IP address(es) using the database firewall, it decreases the chance of customer 2 getting access to customer 1's database, since customer 2 is now blocked.","comment_id":"451028","upvote_count":"1"}],"content":"So what's the rationale behind configuring the database firewalls?","timestamp":"1630182180.0","upvote_count":"1","comment_id":"434139","poster":"ovokpus"},{"content":"incorrect; correct answer is BE: first create logins in the master database, then create users in each database\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/logins-create-manage#create-accounts-for-non-administrator-users","comments":[{"comment_id":"419755","comments":[{"content":"You're incorrect. still Login can be created in the master database in PAAS. it is not excluded! The use case in this question is different. as long as we have to choose only two options so only selected orphan users (user without login).","comment_id":"424580","timestamp":"1628907480.0","poster":"learnazureportal","upvote_count":"6"}],"timestamp":"1628088300.0","poster":"paxa","upvote_count":"1","content":"we are talking about Azure SQL Databases, no access to master database and logins..."},{"timestamp":"1631508120.0","comment_id":"443744","upvote_count":"1","content":"how you can create login in database , without created on master db first ? it's orphan user\ni thinks this incorect","poster":"deden_cha"}],"timestamp":"1623012180.0","poster":"mbn","comment_id":"376319","upvote_count":"7"}],"url":"https://www.examtopics.com/discussions/microsoft/view/50795-exam-dp-300-topic-2-question-7-discussion/","exam_id":68,"topic":"2","answer_ET":"BC","choices":{"D":"Configure the server firewall.","F":"Implement Always Encrypted.","A":"Implement row-level security (RLS).","B":"Create users in each database.","C":"Configure the database firewall.","E":"Create logins in the master database."},"answer":"BC","answer_images":[],"question_text":"You have 40 Azure SQL databases, each for a different customer. All the databases reside on the same Azure SQL Database server.\nYou need to ensure that each customer can only connect to and access their respective database.\nWhich two actions should you perform? Each correct answer presents part of the solution.\nNOTE: Each correct selection is worth one point.","question_id":145,"timestamp":"2021-04-22 18:13:00"}],"exam":{"isBeta":false,"isMCOnly":false,"lastUpdated":"12 Apr 2025","numberOfQuestions":360,"id":68,"name":"DP-300","provider":"Microsoft","isImplemented":true},"currentPage":29},"__N_SSP":true}