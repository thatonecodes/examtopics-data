{"pageProps":{"questions":[{"id":"ytRwmCqA1IxWrDEhZ5DZ","topic":"6","exam_id":48,"discussion":[{"comment_id":"979780","upvote_count":"8","content":"Retrieve via HEAD because \n\n\"For example, if your application needs the Exif (exchangeable image format) data from a photo, it can retrieve the photo and extract it. To save bandwidth and improve performance, your application can store the Exif data in the blob's metadata when the application uploads the photo. You can then retrieve the Exif data in metadata using only a HEAD request.\"\n\nRef: https://learn.microsoft.com/en-us/azure/storage/blobs/storage-performance-checklist#use-metadata","timestamp":"1691906640.0","poster":"oCaio"},{"poster":"Fabiann","upvote_count":"7","timestamp":"1691918100.0","content":"we want to store as Metadata :\n\nso PUT for set and GET/HEAD to retrieve.\n\nhttps://learn.microsoft.com/en-us/training/modules/work-azure-blob-storage/6-set-retrieve-properties-metadata-rest?ns-enrollment-type=learningpath&ns-enrollment-id=learn.wwl.develop-solutions-that-use-blob-storage","comment_id":"979882","comments":[{"content":"I see where you come from on the link, however generally POST is for new data and PUT is for overriding existing data. \nWhen the question is phrased \"Store the Exif (exchangeable image file format) data from the image as blob metadata when the application uploads the image.\" I lean towards using POST and not PUT","comment_id":"1053863","timestamp":"1698250080.0","poster":"the_odd_one","upvote_count":"2"}]},{"poster":"overhill","comment_id":"1313654","content":"POST on the first box might made the most sense for most people but the right answer is PUT\n\nAnd HEAD for the second one to get the metadata","upvote_count":"1","timestamp":"1731861000.0"},{"upvote_count":"1","poster":"yusuf_eb","timestamp":"1723195440.0","comments":[{"upvote_count":"1","content":"For the second one i'm not sure tho","poster":"yusuf_eb","comment_id":"1262832","timestamp":"1723195500.0"}],"content":"why PUT? While you might think POST sounds more logical, using PUT instead of POST is generally preferred for storing or updating data in Azure Blob Storage, and here's why:\n\nPUT: The PUT method is idempotent, meaning that making the same PUT request multiple times will result in the same outcome. This is ideal for uploading a file or setting metadata because it ensures consistency—if you PUT the same data again, it will simply overwrite the previous version.\n\nas for retrieval i would also say GET","comment_id":"1262831"},{"comment_id":"1127262","upvote_count":"2","content":"answers are correct:\nhttps://learn.microsoft.com/en-us/rest/api/storageservices/get-blob-metadata?tabs=microsoft-entra-id#authorization\nhttps://learn.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata?tabs=microsoft-entra-id#authorization\nhttps://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-properties-metadata","timestamp":"1705754340.0","poster":"sky_may"},{"upvote_count":"4","comment_id":"1101258","timestamp":"1703049840.0","poster":"130nk3r5","content":"To store Exif data, you should use the PUT verb.\n\nTo retrieve Exif data, you should use the HEAD verb.\n\nExplanation:\n\nPUT is used to upload the blob to Azure Storage and set the blob's metadata at the same time. The metadata is sent in the headers of the PUT request.\n\nHEAD is used to retrieve the metadata of a blob without downloading the blob itself. This minimizes bandwidth and processing time as only the headers of the response (which contain the metadata) are sent."},{"content":"According to ChatGPT, first answer is correct: \"When storing Exif data from an image as blob metadata in Azure Blob Storage, you can use the HTTP `PUT` method. This method is commonly used for uploading a resource to the specified URI, which in this case would be the URL of your Azure Blob Storage container. When making the `PUT` request, you can include the Exif data as metadata headers in the request to associate the metadata with the uploaded blob.\"","poster":"danisancho","upvote_count":"1","comment_id":"1055105","timestamp":"1698380700.0"},{"content":"Strange question and answers. The response should be POST and GET.","poster":"Ciupaz","timestamp":"1695222000.0","comment_id":"1012432","upvote_count":"2"},{"upvote_count":"4","content":"I got this question on 6th August 2023. chose highly voted first box: PUT, Second Box: POST. passed with 904. I got a Case study: city and Lights. All questions are from ExamTopics.","poster":"kvtborad","comment_id":"975619","timestamp":"1691495400.0"},{"content":"Store can be PUT or POST, make no sense, I think Head for store and retrieve.","upvote_count":"3","poster":"NguyenDo","comment_id":"968030","timestamp":"1690803600.0"},{"timestamp":"1690580340.0","poster":"Firo","comment_id":"965857","content":"Store: Head (not sure)\nRetrieve: Head \nhttps://learn.microsoft.com/en-us/azure/storage/blobs/storage-performance-checklist#use-metadata","upvote_count":"1"}],"isMC":false,"answer_ET":"","answers_community":[],"question_text":"HOTSPOT\n-\n\nYou are developing an application to store millions of images in Azure blob storage.\n\nThe application has the following requirements:\n\n• Store the Exif (exchangeable image file format) data from the image as blob metadata when the application uploads the image.\n• Retrieve the Exif data from the image while minimizing bandwidth and processing time.\n• Utilizes the REST API.\n\nYou need to use the image Exif data as blob metadata in the application.\n\nWhich HTTP verbs should you use? To answer, select the appropriate options in the answer area.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/116703-exam-az-204-topic-6-question-51-discussion/","question_images":["https://img.examtopics.com/az-204/image476.png"],"answer":"","question_id":431,"unix_timestamp":1690580340,"timestamp":"2023-07-28 23:39:00","answer_images":["https://img.examtopics.com/az-204/image477.png"]},{"id":"GH7V8scnsfT5v137ZbRR","question_text":"You are developing several microservices to run on Azure Container Apps for a company. External TCP ingress traffic from the internet has been enabled for the microservices.\n\nThe company requires that the microservices must scale based on an Azure Event Hub trigger.\n\nYou need to scale the microservices by using a custom scaling rule.\n\nWhich two Kubernetes Event-driven Autoscaling (KEDA) trigger fields should you use? Each correct answer presents part of the solution.\n\nNOTE: Each correct selection is worth one point.","answer_ET":"AB","answer":"AB","topic":"6","exam_id":48,"choices":{"B":"type","A":"metadata","C":"authenticationRef","E":"metricType","D":"name"},"question_id":432,"discussion":[{"poster":"applepie","content":"https://keda.sh/docs/2.11/scalers/azure-event-hub/","upvote_count":"10","timestamp":"1690662660.0","comment_id":"966634"},{"timestamp":"1694339340.0","comment_id":"1003885","upvote_count":"6","poster":"nardk","content":"Selected Answer: AB\nA. metadata\nB. type"},{"comment_id":"1313103","content":"Selected Answer: AB\nA. metadata\n\nB. type","upvote_count":"2","poster":"Vichu_1607","timestamp":"1731771000.0"},{"content":"Kubernetes us meant to be out of scope.","poster":"1CY1","timestamp":"1721107680.0","upvote_count":"2","comment_id":"1248696"},{"content":"Selected Answer: AB\nScale the microservices by using a custom scaling rule --> Choose two Kubernetes event-driven auto-scaling trigger: metadata + type.","timestamp":"1710312540.0","comment_id":"1172302","poster":"james2033","upvote_count":"1"}],"answer_description":"","unix_timestamp":1690662660,"answers_community":["AB (100%)"],"question_images":[],"isMC":true,"timestamp":"2023-07-29 22:31:00","answer_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/116742-exam-az-204-topic-6-question-52-discussion/"},{"id":"C93obeycRvsze2AyCi0E","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\n\nYou are implementing an application by using Azure Event Grid to push near-real-time information to customers.\n\nYou have the following requirements:\n• You must send events to thousands of customers that include hundreds of various event types.\n• The events must be filtered by event type before processing.\n• Authentication and authorization must be handled by using Microsoft Entra ID.\n• The events must be published to a single endpoint.\n\nYou need to implement Azure Event Grid.\n\nSolution: Publish events to an event domain. Create a custom topic for each customer.\n\nDoes the solution meet the goal?","answer_ET":"A","answer":"A","exam_id":48,"topic":"6","choices":{"B":"No","A":"Yes"},"question_id":433,"discussion":[{"timestamp":"1704580680.0","content":"Selected Answer: A\nhttps://learn.microsoft.com/en-us/azure/event-grid/event-domains?tabs=event-grid-event-schema \nAn event domain is a management tool for large number of Event Grid topics related to the same application. You can think of it as a meta-topic that can have thousands of individual topics. It provides one publishing endpoint for all the topics in the domain. When publishing an event, the publisher must specify the target topic in the domain to which it wants to publish. The publisher can send an array or a batch of events where events are sent to different topics in the domain. See the Publishing events to an event domain section for details.\n\nDomains also give you authentication and authorization control over each topic so you can partition your tenants. This article describes how to use event domains to manage the flow of custom events to your various business organizations, customers, or applications.","upvote_count":"8","poster":"RDTAus","comment_id":"1115482"},{"poster":"FeriAZ","comments":[{"poster":"FeriAZ","timestamp":"1708434840.0","upvote_count":"4","comment_id":"1154730","content":"I was wrong.\nThe solution suggests publishing events to an event domain, which is a logical grouping mechanism. This aligns well with the requirement of handling events for thousands of customers with various event types.\nCreating a custom topic for each customer ensures that events can be filtered by event type before processing, as each customer's topic can be subscribed to only the relevant event types.\nIt's not explicitly mentioned in the solution, but handling authentication and authorization via Microsoft Entra ID can be achieved at the event domain level, ensuring secure access to all topics within the domain.\nThe events being published to a single endpoint can be interpreted as all events being managed within the context of the event domain, providing a centralized location for event management."}],"comment_id":"1138511","content":"Selected Answer: B\nCreating a custom topic for each customer would be unnecessarily complex and not scalable for thousands of customers. It could also complicate the management and the goal of publishing events to a single endpoint.","upvote_count":"5","timestamp":"1706876460.0"},{"upvote_count":"1","timestamp":"1739840820.0","comment_id":"1358064","content":"Selected Answer: B\nEvent Domain is correct \n\nBut I believe 'Custom Topic for each customer' is not. \n\n1. Event Domains use \"Domain Topics\", not Custom Topics: \nSee image: https://learn.microsoft.com/en-us/azure/event-grid/includes/media/domain-example-use-case/contoso-construction-example.png \n\nI don't think Domain Topics and Custom Topics are the same thing. \n\nIt seems you can create an Event Subscription, which automatically creates the Domain Topic, or create Domain Topics manually, but these appear to be distinct from Custom Topics. \n\nSee: https://learn.microsoft.com/en-us/azure/event-grid/event-domains?tabs=cloud-event-schema#subscribing-to-topics \n\n2. Custom Topics are limited to 100 per Azure subscription, therefore the requirement of \"thousands of customers\" cannot be fufilled by Custom Topics. \n\nTherefore, the correct answer would be \"use event domain\" and \"create Domain Topic for each customer\" or \"create Event Subscription for each customer\"","poster":"5691024"},{"poster":"examtopicsLogin123","comment_id":"1356779","timestamp":"1739610300.0","upvote_count":"1","content":"Selected Answer: A\nGot this question in February 2025. Went with \"event domain\""},{"content":"Selected Answer: B\nyou create event domain, you create topics, but what about the subscriptions?\nthey need to be subscribed I'm almost sure.\nso I would say this is a: NO","upvote_count":"1","poster":"overhill","timestamp":"1731862860.0","comment_id":"1313670"},{"comment_id":"1313669","poster":"overhill","content":"you create event domain, you create topics, but what about the subscriptions?\nthey need to be subscribed I'm almost sure.\nso I would say this is a no","upvote_count":"1","timestamp":"1731862680.0"},{"content":"Selected Answer: B\nNo The correct approach is to use a single custom topic with event subscriptions and filters.","comment_id":"1313106","poster":"Vichu_1607","timestamp":"1731771240.0","upvote_count":"1"},{"poster":"Jobalos009","upvote_count":"1","timestamp":"1720095180.0","comment_id":"1242053","content":"Selected Answer: A\nThe answer is A.\nAn event domain provides an endpoint for thousands of individual topics related to the same application. You can think of it as a meta-topic that can have thousands of individual topics. It provides one publishing endpoint for all the topics in the domain.\nRef: https://learn.microsoft.com/en-us/azure/event-grid/event-domains?tabs=cloud-event-schema"},{"timestamp":"1720009560.0","poster":"ProtossOR89144","comment_id":"1241406","content":"Selected Answer: A\nhttps://learn.microsoft.com/en-us/azure/event-grid/quotas-limits - \"When the limit is reached, you can consider a different region or consider using domains, which can support 100,000 topics.\", so the domain is a way to handle thousands of topics","upvote_count":"2"},{"upvote_count":"4","poster":"Junak","timestamp":"1706167920.0","comment_id":"1131454","content":"Selected Answer: A\nProbably the answer is Yes.\nhttps://learn.microsoft.com/en-us/azure/event-grid/event-domains?tabs=event-grid-event-schema#example-use-case"},{"content":"Selected Answer: B\nNo. It sould be custom topic.","timestamp":"1704997800.0","poster":"dom271219","upvote_count":"1","comment_id":"1120060"}],"answer_description":"","unix_timestamp":1704580680,"answers_community":["A (64%)","B (36%)"],"question_images":[],"isMC":true,"timestamp":"2024-01-06 23:38:00","answer_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/130481-exam-az-204-topic-6-question-56-discussion/"},{"id":"US2RvfYJl0uv4DfC2r3D","exam_id":48,"url":"https://www.examtopics.com/discussions/microsoft/view/130537-exam-az-204-topic-6-question-57-discussion/","discussion":[{"comment_id":"1152575","content":"Azure Event Grid Domains\nEvent subscriptions within the domain\n can then be configured for each customer or customer group, with filtering rules applied to ensure that subscribers only receive the events that are relevant to them. This architecture effectively addresses the need for event filtering before processing.","upvote_count":"2","timestamp":"1708177560.0","poster":"FeriAZ"},{"timestamp":"1707408120.0","comment_id":"1144675","content":"Selected Answer: B\nCustom topics per Azure subscription: 100\nWhen the limit is reached, you can consider a different region or consider using domains, which can support 100,000 topics.","poster":"egaws","upvote_count":"4","comments":[{"timestamp":"1731862980.0","upvote_count":"1","comment_id":"1313671","content":"Good Info","poster":"overhill"}]},{"timestamp":"1707127260.0","upvote_count":"3","comment_id":"1140916","content":"Selected Answer: B\nThe number of subscriptions per custom topic is limited to 500. See: https://learn.microsoft.com/en-us/azure/event-grid/quotas-limits#custom-topic-system-topic-and-partner-topic-resource-limits\n\nYou have thousands of customers so you will not manage with this solution","poster":"raymond_abcd"},{"upvote_count":"1","poster":"FeriAZ","timestamp":"1706779140.0","comment_id":"1137440","content":"Selected Answer: B\nScalability and Management: Managing an event subscription for each customer could become cumbersome as the number of customers grows. This approach might not efficiently scale or simplify the management of event types and customer-specific filtering.\nSingle Endpoint Requirement: Publishing events to a custom topic does meet the requirement of a single endpoint for publishing. However, the management and scalability of subscriptions could pose challenges.\nFiltering by Event Type: While event subscriptions can be configured to filter events based on type, the proposed solution might not be the most efficient way to handle hundreds of event types, especially if the filtering needs are complex or highly dynamic."},{"comments":[{"upvote_count":"2","poster":"dom271219","timestamp":"1704997860.0","comment_id":"1120061","content":"I agree with you"}],"upvote_count":"4","comment_id":"1116242","timestamp":"1704670740.0","poster":"vpsrini1981","content":"Selected Answer: A\nYes, the proposed solution meets the requirements. Publishing events to a custom topic and creating an event subscription for each customer allows for filtering events by event type before processing. This way, each customer's subscription can specify the specific event types they are interested in receiving.\n\nAdditionally, using Azure Event Grid provides built-in support for authentication and authorization through Microsoft Entra ID, ensuring secure access to the events. Furthermore, by having a separate subscription for each customer, events can be sent to multiple customers while directing them to a single endpoint, thus fulfilling the requirement to push near-real-time information to thousands of customers via a single endpoint."}],"unix_timestamp":1704670740,"choices":{"B":"No","A":"Yes"},"answers_community":["B (67%)","A (33%)"],"timestamp":"2024-01-08 00:39:00","isMC":true,"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\n\nYou are implementing an application by using Azure Event Grid to push near-real-time information to customers.\n\nYou have the following requirements:\n• You must send events to thousands of customers that include hundreds of various event types.\n• The events must be filtered by event type before processing.\n• Authentication and authorization must be handled by using Microsoft Entra ID.\n• The events must be published to a single endpoint.\n\nYou need to implement Azure Event Grid.\n\nSolution: Publish events to a custom topic. Create an event subscription for each customer.\n\nDoes the solution meet the goal?","question_id":434,"answer_images":[],"answer_description":"","question_images":[],"answer_ET":"B","topic":"6","answer":"B"},{"id":"0prPPv9PXs7KhZ5mBojZ","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\n\nYou are implementing an application by using Azure Event Grid to push near-real-time information to customers.\n\nYou have the following requirements:\n• You must send events to thousands of customers that include hundreds of various event types.\n• The events must be filtered by event type before processing.\n• Authentication and authorization must be handled by using Microsoft Entra ID.\n• The events must be published to a single endpoint.\n\nYou need to implement Azure Event Grid.\n\nSolution: Enable ingress, create a TCP scale rule, and apply the rule to the container app.\n\nDoes the solution meet the goal?","discussion":[{"poster":"dom271219","comment_id":"1120062","timestamp":"1720715460.0","content":"Selected Answer: B\nNo. What the hell is TCP scale rule?","upvote_count":"6"},{"upvote_count":"1","comment_id":"1172312","timestamp":"1726203240.0","poster":"james2033","content":"Selected Answer: B\nDid not meet the goal."}],"timestamp":"2024-01-11 19:31:00","answer_ET":"B","exam_id":48,"question_images":[],"choices":{"B":"No","A":"Yes"},"answers_community":["B (100%)"],"unix_timestamp":1704997860,"isMC":true,"topic":"6","answer_images":[],"question_id":435,"url":"https://www.examtopics.com/discussions/microsoft/view/130870-exam-az-204-topic-6-question-58-discussion/","answer_description":"","answer":"B"}],"exam":{"provider":"Microsoft","id":48,"numberOfQuestions":452,"lastUpdated":"12 Apr 2025","isBeta":false,"isMCOnly":false,"isImplemented":true,"name":"AZ-204"},"currentPage":87},"__N_SSP":true}