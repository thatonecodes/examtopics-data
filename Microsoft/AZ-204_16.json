{"pageProps":{"questions":[{"id":"z2GbTZoURSmFXoXSwfrQ","unix_timestamp":1604273520,"question_images":[],"answers_community":["A (86%)","14%"],"answer_description":"","answer_images":[],"choices":{"B":"No","A":"Yes"},"question_id":76,"exam_id":48,"timestamp":"2020-11-02 00:32:00","answer":"A","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou develop an HTTP triggered Azure Function app to process Azure Storage blob data. The app is triggered using an output binding on the blob.\nThe app continues to time out after four minutes. The app must process the blob data.\nYou need to ensure the app does not time out and processes the blob data.\nSolution: Use the Durable Function async pattern to process the blob data.\nDoes the solution meet the goal?","discussion":[{"upvote_count":"92","comments":[{"timestamp":"1680786660.0","upvote_count":"7","poster":"rgullini","content":"Somehow you need to investigate and understand the answers, not just memorize without understanding.","comments":[{"poster":"montoya8201","comment_id":"1206551","timestamp":"1714837260.0","upvote_count":"1","content":"It's true"}],"comment_id":"862981"},{"upvote_count":"55","comments":[{"comment_id":"548281","poster":"Netspud","content":"See question 17, which would suggest the correct answer for this question is NO. The issues is the calling app is timing out not the function (i.e. the function in not replying as completed to the calling app in time, so use a queue, queue replies as completed in time, and work is deferred). At least after reading the two that is how I understand it. Very confusing question.","comments":[{"poster":"xRiot007","timestamp":"1655962080.0","comment_id":"620785","content":"these types of questions can have multiple correct responses, and sometimes no correct responses at all. In this case, Durable Functions and using http triggers that can differ to a queue for long time processing are good answers.","upvote_count":"3"},{"comment_id":"712188","timestamp":"1667721780.0","upvote_count":"1","content":"I agree with xRiot007. This question have two correct answers as MS saying that you can use Durable Function OR Service Bus in this scenario. So are correct.\n\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","poster":"Magis"}],"timestamp":"1644983880.0","upvote_count":"4"}],"content":"A. Yes\n\n\"230 seconds is the maximum amount of time[...] For longer processing times, consider using the DURABLE FUNCTIONS ASYNC PATTERN[...]\"\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","comment_id":"501347","poster":"john4p","timestamp":"1639485180.0"},{"poster":"surprise0011","timestamp":"1681724880.0","comment_id":"872564","content":"received 2023-04-17 went with most voted answer, score 926","upvote_count":"4"}],"comment_id":"227965","content":"if someone knows the exact answer or any reference , then only comment. It is so confusing","poster":"sasisang","timestamp":"1606352340.0"},{"content":"Shouldn't this be TRUE? \nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#async-http","comments":[{"poster":"sieiro","comment_id":"490108","upvote_count":"1","content":"I thing that maybe durable functions exceed de timeout of other functions, but if the functions fails or interrumpt don't cover the \"The app must process the blob data\".","timestamp":"1638207960.0"},{"poster":"noro5","timestamp":"1644297360.0","content":"True, I think the explanation mentions this \nhttps://docs.microsoft.com/en-us/azure/architecture/patterns/async-request-reply#example\nwhich looks exactly like the Async Pattern of Durable Function","comment_id":"542868","upvote_count":"1"},{"content":"Seems you are right...\nDurable Functions provides built-in support for this pattern(Pattern #3: Async HTTP APIs), simplifying or even removing the code you need to write to interact with long-running function executions.","upvote_count":"8","comment_id":"226813","timestamp":"1606237800.0","poster":"Secure01"},{"poster":"WillPassExam","timestamp":"1618227840.0","content":"Agree :)\nDurable function is one of the suggested two options for long processing tasks (the other is to defer the actual work (e.g. push to service bus queue + queue triggered function solution)\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","comment_id":"333900","upvote_count":"28"}],"comment_id":"210846","timestamp":"1604273520.0","upvote_count":"58","poster":"Awry"},{"timestamp":"1730303940.0","upvote_count":"1","poster":"fiercefreedom","content":"A function app cannot be triggered by an output binding. The wording is confusing.","comment_id":"1305060"},{"comment_id":"1202132","timestamp":"1714060980.0","upvote_count":"1","poster":"HariB1992","content":"The solution provided does not meet the goal. The Durable Function async pattern is not necessary for this scenario. Instead, you can address the timeout issue by adjusting the execution timeout settings for your Azure Function app"},{"content":"Selected Answer: A\nCopilot AI:\nYes, the solution meets the goal. Using the Durable Function async pattern to process the blob data can help you avoid the HTTP timeout issue and handle long-running operations in a serverless environment. Durable Functions let you write stateful functions that can orchestrate other functions and entities using the Azure Functions programming model. You can use the async HTTP API pattern to implement a polling mechanism that allows the client to check the status and the result of the operation.","timestamp":"1708608300.0","comment_id":"1156377","poster":"Isoldhe","upvote_count":"3"},{"content":"Selected Answer: A\nUsing the Durable Function async pattern allows the function app to orchestrate the processing of blob data in a way that does not tie up the initial HTTP triggered function. Instead, the HTTP trigger can initiate the process and respond immediately, while the actual processing happens asynchronously. This method effectively circumvents the timeout issue because the durable orchestration can run for much longer than the standard function timeout period.","upvote_count":"1","timestamp":"1707381360.0","poster":"FeriAZ","comment_id":"1144289"},{"comment_id":"1135752","upvote_count":"1","poster":"AhmedAbdelAziz","timestamp":"1706616540.0","content":"Correct Answer No : As the app time out you have to use service bus queue and trigger function app when item added to the queue and for the better performance you can event grid and let the function trigger based on the service bus trigger events from the event grid"},{"timestamp":"1706599080.0","content":"Selected Answer: A\nA is true as per the documentation here: https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\nHowever the explanation in the answer provided by ExamTopics is also correct it seems.","comment_id":"1135574","upvote_count":"1","poster":"Jak007"},{"content":"Using the Durable Function async pattern can help overcome the timeout limitation. Durable Functions provide a way to write stateful functions in a serverless environment, and they support long-running workflows. By breaking down the processing into smaller, manageable steps and leveraging the async pattern, you can ensure that the function continues processing the blob data without timing out. So I would say Yes.","timestamp":"1704465240.0","upvote_count":"1","comment_id":"1114563","poster":"manopeydakon"},{"comment_id":"1000487","timestamp":"1693996140.0","poster":"Vladimir_Gajinov","upvote_count":"2","content":"Selected Answer: A\nThe answer is YES.\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout"},{"comment_id":"949705","content":"This site is not helping me at all... Every third awnser is wrong","timestamp":"1689160620.0","upvote_count":"5","poster":"Michael19842"},{"poster":"sarmaria","comment_id":"844162","content":"Got this question in the exam on 16/03/2023. Chosen yes. Scored 846. Make sure to prepare for case studies. I got city and lights case study.","upvote_count":"3","timestamp":"1679255640.0"},{"timestamp":"1677333240.0","upvote_count":"1","poster":"daothanhyen","content":"Selected Answer: B\nNo. \nDurable changes timeout settings. It can’t resolve the problem. \nUse queues to response immediately","comment_id":"821535"},{"poster":"jimmyyml","comment_id":"820257","upvote_count":"1","timestamp":"1677227280.0","content":"Yes, using the Durable Function async pattern can solve the problem of the app timing out and ensure that the blob data is processed. The Durable Function allows long-running functions to be executed in a more scalable and reliable way, by splitting the functions into smaller, asynchronous tasks that can be managed by the framework. This can help prevent timeouts by allowing the function to continue processing in the background, while also providing additional benefits such as state management and error handling."},{"upvote_count":"3","poster":"dimsok","content":"I wouldn't use durable functions, they are build to solve stateful problems, and in any case If the calling app is timing out, then durable functions will do nothing.","comment_id":"800768","timestamp":"1675766640.0"},{"content":"Yes, Is the correct answer","comments":[{"poster":"Esward","timestamp":"1674800100.0","content":"https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","comment_id":"789355","upvote_count":"1"}],"comment_id":"789354","upvote_count":"1","timestamp":"1674800040.0","poster":"Esward"},{"timestamp":"1673471880.0","upvote_count":"2","comment_id":"772902","content":"Selected Answer: A\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","poster":"narenazure"},{"comments":[{"timestamp":"1668873540.0","upvote_count":"2","comment_id":"722097","poster":"hubekpeter","content":"I'm curious, when we'll get an edit feature from examtopics to fix typos."}],"content":"Selected Answer: A\nAnswer is yes. You can find the same example here. https://learn.microsoft.com/en-us/azure/developer/javascript/how-to/with-web-app/azure-function-file-upload And here's the code change required to deal with HTTP API Async pattern. Basically the probably the problem is with a big blobs, when you are hitting the LB/HTTP timeout limits, which is 230s. With an async pattern, you get a webhook you can query instead.","comment_id":"722096","poster":"hubekpeter","upvote_count":"2","timestamp":"1668873420.0"},{"content":"Did my exam on 15th November 2022. This question was on it.","upvote_count":"2","poster":"TheExamMaster2020","comment_id":"718770","timestamp":"1668520020.0"},{"content":"A or B can be an answer, it depends on your preference\nThe key here is \"The app continues to time out after four minutes.\" and it seems it is expected for the processing to run more than four minutes, but based on this https://learn.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\nFor longer processing times, consider using the Durable Functions async pattern OR defer the actual work and return an immediate response.","upvote_count":"1","timestamp":"1668096480.0","poster":"micro9000","comment_id":"715371"},{"timestamp":"1666591920.0","poster":"TheExamMaster2020","upvote_count":"4","comment_id":"702736","content":"Selected Answer: A\nThere are more solutions. I quote here the description \"Some question sets might have more than one correct solution, while others might not have a correct solution\" so both Durable func & HTTP is right."},{"upvote_count":"2","content":"Http triggered function: okay\nThe app is triggered using an output binding on the blob: What? How can the app be triggered with an output binding? Or do you mean it get the blob data with an input binding after being triggered by an HttpTrigger? Assuming that. \nYES: A durable function properly implemented can return immediately to the HttpTrigger with a 202 (Accepted), process the blob, and the http trigger can get the status\nNO: Because it never says if the http trigger can check the status later. Even a queue in between cannot make it work. \nBasically these kind of questions are typical of Microsoft. Does not make sense. \nBut I will vote for YES, considering Microsoft is proud of Durable functions (I do like it and used it)","poster":"[Removed]","timestamp":"1664435880.0","comment_id":"682433"},{"upvote_count":"4","content":"Got this in 09/22 , went with the most voted answers, score 927. This was the only I marked as YES.","poster":"serpevi","timestamp":"1662877260.0","comment_id":"665854"},{"comment_id":"659777","poster":"Ameet9","timestamp":"1662358080.0","upvote_count":"1","content":"Selected Answer: B\n* Regardless of the Function App Timeout configuration, 230 seconds is the maximum amount of time that an HTTP Triggered function can take to respond to a request.\nso the answer is \"No\""},{"comment_id":"647863","comments":[{"poster":"mmdex","timestamp":"1676245800.0","comment_id":"806921","upvote_count":"1","content":"Community consensus, sometimes not even that. Anyway, never trust selected answers, they are usually wrong."}],"upvote_count":"3","poster":"eplugplay","content":"This website confuses me, is the selected answer correct or the community consensus correct?","timestamp":"1660698720.0"},{"timestamp":"1660290840.0","comment_id":"645797","poster":"cwn53066","upvote_count":"5","content":"Selected Answer: A\nAccording to Coursera, correct answer is A: Yes. Comment from the course test: The maximum amount of time that an HTTP triggered function can take to respond to a request is 230 seconds. For longer processing times, consider using the Durable Functions async pattern.","comments":[{"comment_id":"654064","upvote_count":"1","content":"Even as per official Microsoft practice test, Yes is the correct answer.","poster":"Eobard","timestamp":"1661865240.0"}]},{"upvote_count":"2","poster":"kyawtlearning","comment_id":"644588","timestamp":"1660064580.0","content":"Selected Answer: A\nFor longer processing times, consider using the DURABLE FUNCTIONS ASYNC PATTERN."},{"comment_id":"641260","upvote_count":"2","content":"Selected Answer: A\nA IS CORRECT ANSWER","timestamp":"1659442620.0","poster":"N9"},{"content":"Selected Answer: A\nA is correct answer.","poster":"Dani_ac7","timestamp":"1656606000.0","upvote_count":"1","comment_id":"625353"},{"timestamp":"1655224320.0","content":"Selected Answer: A\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","poster":"GINEY","comment_id":"616305","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: A\nA is correct answer.","comment_id":"613866","timestamp":"1654771200.0","poster":"Eltooth"},{"timestamp":"1653223920.0","comment_id":"605514","upvote_count":"1","content":"Selected Answer: A\nhttps://www.examtopics.com/exams/microsoft/az-204/view/4/","poster":"UmarAbbas"},{"comment_id":"591170","content":"Selected Answer: B\nLas funciones grandes y de ejecución prolongada pueden causar problemas de tiempo de espera inesperados.","upvote_count":"1","timestamp":"1650819900.0","poster":"Eche_lr73"},{"content":"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","upvote_count":"1","comment_id":"585432","timestamp":"1649884680.0","poster":"Evo_Morales"},{"poster":"Vegetta95","comment_id":"568579","content":"We have two important pieces of information\n - HTTP triggered Azure Function app to process Azure Storage blob data\n - The app is triggered using an output binding on the blob\nIt's possible to implement HTTP triggered Azure function which is triggered by an HTTP request. \nTo make a function triggered by blob we have to create Blob triggered Azure function which is definitely not HTTP. If we don't have those two pieces of the puzzle I'd say the answer with Durable Function is correct because it helps with a 5-minute limit. What am I missing?","upvote_count":"1","timestamp":"1647368520.0"},{"timestamp":"1646864220.0","comment_id":"564384","poster":"GEEK4CODE","content":"Selected Answer: A\nThe app must process the blob data and cannot return without completion -> Durable async pattern","upvote_count":"1"},{"upvote_count":"7","timestamp":"1646453520.0","poster":"Alasmindas","comment_id":"561165","content":"Got this in exam 03/22 and cleared. Went with YES"},{"content":"it is not clear, is the app trigged using blob out trigger or http trigger ?","poster":"Nina2022","upvote_count":"2","timestamp":"1645567680.0","comment_id":"554044"},{"poster":"Freidrich","timestamp":"1645534500.0","upvote_count":"1","content":"Selected Answer: B\nWrong.","comments":[{"comment_id":"557929","poster":"Freidrich","timestamp":"1646034000.0","content":"Apologies, I misvoted. The correct answer is A: Yes.","upvote_count":"2"}],"comment_id":"553680"},{"comment_id":"550090","upvote_count":"1","poster":"heisenberg33","timestamp":"1645170360.0","content":"Selected Answer: A\nA. Yes Ref: https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout"},{"comment_id":"523042","upvote_count":"2","poster":"Arnab101","content":"Selected Answer: B\nConfusing. \n\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp\" says \"For triggers, the direction is always in\"\nDoes that mean the trigger with input binding was never the solution?\nThis could mean the durable function async pattern won't solve the issue","timestamp":"1642102500.0"},{"timestamp":"1642101960.0","upvote_count":"1","poster":"Arnab101","comment_id":"523036","content":"Selected Answer: A\nUsing Durable functions Async pattern is one of the options"},{"content":"Selected Answer: A\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","poster":"LeoAlioth","timestamp":"1641815220.0","upvote_count":"1","comment_id":"520817","comments":[{"content":"The response has nothing to do with processing.","poster":"vladhof","timestamp":"1642455060.0","comment_id":"526126","upvote_count":"1"}]},{"content":"No (B) is Correct. The only way to prevent azure functions from time-out is using App Service Plan Tier or Premium. Durable Functions have nothing to do with this","timestamp":"1638576840.0","poster":"leotheavanadev","upvote_count":"5","comments":[{"poster":"dookebroyle","upvote_count":"1","timestamp":"1656009120.0","content":"\"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n2 The default timeout for version 1.x of the Functions runtime is unlimited.\"\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale","comment_id":"621215"}],"comment_id":"493427"},{"comment_id":"492934","upvote_count":"1","timestamp":"1638503280.0","poster":"AzureXin","content":"Correct answer: A = YES"},{"timestamp":"1637526840.0","upvote_count":"4","comment_id":"483650","poster":"Lucario95","content":"Selected Answer: A\nDurable functions is used when normal requests to Azure Function would time-out.\nThus Answer A is correct"},{"upvote_count":"1","content":"The correct answer is No. \nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-http-features?tabs=csharp#limitations","timestamp":"1637511600.0","poster":"r__k","comment_id":"483431"},{"upvote_count":"1","timestamp":"1637502420.0","comment_id":"483296","content":"If HTTP function can timeout then queue triggered function can also timeout! so durable function seems only way. or should use app service plan.","poster":"altafpatel1984"},{"timestamp":"1636247580.0","upvote_count":"8","comments":[{"poster":"jjggooaa","timestamp":"1649107380.0","content":"utterly true","upvote_count":"1","comment_id":"580925"}],"content":"Answer should be \"No\" because the question says the function is triggered using Blob output binding. And the Functions are supposed be triggered only using Input binding. Triggers directions always should be \"In\".\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp","poster":"DhanukaJ","comment_id":"473684"},{"upvote_count":"2","timestamp":"1635888360.0","content":"HTTP triggered Azure Function app?\nThe app is triggered using an output binding on the blob?\nIt is a http trigger or blob trigger?","poster":"jinxinhelloworld","comment_id":"471813"},{"upvote_count":"2","content":"I'd tend to agree with Quanster. The question scenario says the function is timing out, and asks if the durable async pattern solve it. It doesn't ask if that's the cheapest solution, or if there are other solutions. In this case the microsoft docs on durable functions does say the async pattern \"addresses the problem of coordinating the state of long-running operations with external clients\".","comment_id":"467668","timestamp":"1635194100.0","poster":"jldevguy"},{"poster":"Abhiroop","timestamp":"1634958540.0","upvote_count":"1","content":"which answer is correct? yes or no?\nits a bit confusing.\n\ndurable function seems correct imo.","comment_id":"466411"},{"poster":"Quanster","content":"Answer: Yes.\n\nReferencing https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout There is a note that makes reference to two solutions:\n\n1: Durable Functions async pattern; or \n2. defer the actual work and return an immediate response.\n \n\n Note\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","comment_id":"451193","timestamp":"1632539700.0","upvote_count":"7"},{"comment_id":"441624","poster":"scollyus","timestamp":"1631130360.0","upvote_count":"2","content":"Answer is No - \nIf not using Durable Functions or Logic Apps to integrate with multiple functions, it's best to use storage queues for cross-function communication. The main reason is that storage queues are cheaper and much easier to provision than other storage options.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices"},{"upvote_count":"2","comment_id":"438678","timestamp":"1630696980.0","poster":"Drummer","content":"Answer: B\n\nExplanation:\n\nInstead pass the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and return an immediate HTTP success response. NOTE: Large, long-running functions can cause unexpected timeout issues. General best practices include:\n\nWhenever possible, refactor large functions into smaller function sets that work together\n\nand return responses fast. For example, a webhook or HTTP trigger function might require an acknowledgment response within a certain time limit; it’s common for webhooks to require an immediate response. You can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work and return an immediate response.\n\nReference: https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices"},{"poster":"TheGreat9081","upvote_count":"2","comment_id":"432533","content":"This answer is correct as https://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices","timestamp":"1630004220.0"},{"content":"After reading the comments and thinking a bit I came up with the following question: Does the Durable function ensure that the app doesn't time out no matter what size the blob is?","comments":[{"poster":"GigaCaster","content":"A better phrasing would be is the Durability function usable with varying blob sizes or would I need to redo the durability function for the new blob.","timestamp":"1626780660.0","comment_id":"410209","upvote_count":"2"},{"timestamp":"1642654500.0","content":"I will say yes, based on this:\n\"Orchestrator functions can be long-running. The total lifespan of an orchestration instance can be seconds, days, months, or never-ending.\"\n\nhttps://docs.microsoft.com/en-us/learn/modules/implement-durable-functions/5-durable-orchestrations-overview","poster":"ScubaDiver123456","comment_id":"528142","upvote_count":"1"}],"timestamp":"1626780420.0","poster":"GigaCaster","comment_id":"410206","upvote_count":"2"},{"comment_id":"408865","poster":"Ravi22","content":"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\nAns is A ( Yes)\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","timestamp":"1626604320.0","upvote_count":"5"},{"comment_id":"406466","timestamp":"1626287220.0","upvote_count":"4","poster":"Snowtoad","content":"I think the think that favours the Service Bus Queue is that part where it says that it must be processed. Queues have the whole thing of requeuing if there is an issue and then falling into a dead queue if there is still an issue. If a durable function fails, you will need to add a lot more effort to allow it to be captured and re-run. This may explain why the answer is No."},{"upvote_count":"2","timestamp":"1625482200.0","content":"I believe Durable Functions supports long running tasks by allowing you to decompose long running functions into shorter activity functions. Only migrating to durable function will not solve the problem in the core. Besides those time-out can be solved:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-host-json#functiontimeout","comment_id":"399094","poster":"Robert12345Robert"},{"comment_id":"397998","upvote_count":"3","timestamp":"1625373060.0","content":"yes should be the answer","poster":"PC_MAD"},{"comment_id":"392673","upvote_count":"6","poster":"DParekh","content":"there are two solutions\n1. Durable function\n2. use service bus apporach \nhence answer should be YES","timestamp":"1624864740.0"},{"upvote_count":"2","content":"There are two solutions\n1. Durable function\n2. use service bus approach. \nhence answer must be No","comment_id":"392672","poster":"DParekh","timestamp":"1624864680.0"},{"poster":"AmitTech","content":"When it comes to an HTTP trigger, the maximum function timeout is 230 seconds. For long-running functions with HTTP triggers, you should use Durable Functions or pass the HTTP payload to another function-based trigger.","timestamp":"1624853040.0","upvote_count":"1","comment_id":"392570"},{"content":"Correct answer is YES!","comment_id":"391398","timestamp":"1624724460.0","poster":"Yoldas","upvote_count":"2"},{"comment_id":"390556","content":"I might think answer is NO, we can update host.json file. and could fix this timeout issue.\nthoughts?","upvote_count":"1","poster":"Maanu","timestamp":"1624631400.0"},{"content":"If the function is getting timeout in four minutes then it is load balancer issue and can be resolved by async pattern function.\nso answer is \"YES\".\nFrom Azure docs - \n\"If a function that uses the HTTP trigger doesn't complete within 230 seconds, the Azure Load Balancer will time out and return an HTTP 502 error. The function will continue running but will be unable to return an HTTP response. For long-running functions, we recommend that you follow async patterns and return a location where you can ping the status of the request.\"\n\nURL - https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-http-webhook-trigger?tabs=csharp#:~:text=If%20a%20function,of%20the%20request.\n\nUpvote to help everyone.","comment_id":"386897","upvote_count":"5","poster":"Yogendra_examtopic","timestamp":"1624263780.0"},{"timestamp":"1624236420.0","upvote_count":"2","comment_id":"386661","content":"how the function be httptriggered as well as a triggered by a blob creation?","poster":"sujitwarrier11"},{"upvote_count":"2","timestamp":"1624183200.0","poster":"Ramito2020","content":"For me thee pattern meet the goal to bypass the time out, so answer is True : \n\nPattern #3: Async HTTP APIs\n\nThe async HTTP API pattern addresses the problem of coordinating the state of long-running operations with external clients. A common way to implement this pattern is by having an HTTP endpoint trigger the long-running action. Then, redirect the client to a status endpoint that the client polls to learn when the operation is finished.\nA diagram of the HTTP API pattern\nDurable Functions provides built-in support for this pattern, simplifying or even removing the code you need to write to interact with long-running function executions.","comment_id":"386133"},{"upvote_count":"1","timestamp":"1623128400.0","content":"Please tell correct answer.","poster":"Shreyas2811","comment_id":"377229"},{"content":"got this in the exam :)","comment_id":"376110","comments":[],"timestamp":"1622990880.0","upvote_count":"2","poster":"francis6170"},{"upvote_count":"7","content":"Correct Answer: Yes\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n\n\nReference:\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-timers?tabs=csharp\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#async-http\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","poster":"mlantonis","comment_id":"370015","timestamp":"1622366940.0"},{"timestamp":"1622047980.0","comment_id":"367322","upvote_count":"3","content":"it says the function is triggered by an output binding, when it should be an input, and http? why no a blob trigger? and it is also confusing when it states that the function times out? how will timeout if it never gets triggered?","poster":"nflappo89"},{"upvote_count":"2","content":"Its No\nInstead pass the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger\nfunction and return an immediate HTTP success response.\nNote: Large, long-running functions can cause unexpected timeout issues. General best practices include:\nWhenever possible, refactor large functions into smaller function sets that work together and return responses\nfast. For example, a webhook or HTTP trigger function might require an acknowledgment response within a\ncertain time limit; it's common for webhooks to require an immediate response. You can pass the HTTP trigger\npayload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work\nand return an immediate response.\nReference:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices","timestamp":"1621364880.0","poster":"hems4all","comment_id":"360787"},{"upvote_count":"1","comment_id":"356191","timestamp":"1620897780.0","poster":"Hemarxyll","content":"Correct answer is A. Quoting this line from https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout,\n\"For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\""},{"poster":"glam","content":"A. Yes","upvote_count":"3","timestamp":"1620735720.0","comment_id":"354702"},{"comment_id":"324248","poster":"Zsolt72","timestamp":"1617106920.0","upvote_count":"2","content":"imho, there is no differences between the durable func async pattern and the service bus queue solution.\nWith the durable function you have the possibility to poll for the result but in case of this you do need to poll but my understanding is that just a possibility the durable function will do the job, if fails restarts so this guaranties the the blob will be processed. I would go with the YES."},{"comments":[{"comment_id":"380219","timestamp":"1623476160.0","poster":"TakumaK","content":"what if your functionTimout is timed out?","upvote_count":"1"},{"content":"how would you know how much to put as timeout? still there is a limit after whcih regrardless to the value you have put your function will be stopped.","timestamp":"1624236540.0","poster":"sujitwarrier11","upvote_count":"1","comment_id":"386664"},{"poster":"AOE","comment_id":"426482","timestamp":"1629225600.0","content":"Timeout setting has a maximum value, therefore, no matter how big it is, you can still encouter a timeout issue.","upvote_count":"1"}],"upvote_count":"3","poster":"[Removed]","timestamp":"1616443560.0","content":"OMG, the suggested answers to this exam are just horrible. Why on earth should I start fiddling around with a service bus queue, if instead, I could just increase the \"functionTimeout\" parameter inside host.json?\n\nAnswer is \"No\"","comment_id":"317508"},{"comment_id":"317285","upvote_count":"1","comments":[{"comment_id":"380224","poster":"TakumaK","content":"\"Durable could only increase time limit \" <- source?","timestamp":"1623476340.0","upvote_count":"1"}],"content":"Durable could only increase time limit but what about triggering function waiting for quick response.","poster":"Umar93","timestamp":"1616427240.0"},{"content":"In my opinion an important factor to make this decision is who/what calls the Azure Function. It's not specified in the question but you know that an http call is needed. So best practices suggest to respond as soon as possible and not wait for the completion of the entire process if this could last for a long time (as you do in asynchronous programming). So the given answer in my opinion is correct and is also well documented in the link attached.","timestamp":"1616147100.0","upvote_count":"3","comment_id":"314721","poster":"rdemontis","comments":[{"poster":"rdemontis","comment_id":"314727","content":"Instead durable functions are useful for stateful workflows: https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp","upvote_count":"2","timestamp":"1616147280.0"}]},{"content":"Durable function async pattern cannot be used in this scenario. This pattern returns the client immediately with an endpoint to poll the status. The client need to constantly poll the returned endpoint to poll the status. Instead use queue to store the payload. Ideal approach is to fragment the function to minimal logic.","comments":[{"timestamp":"1642654740.0","comment_id":"528149","poster":"ScubaDiver123456","upvote_count":"1","content":"Why does it need to use the polling functionality? The Blob service will trigger the durable function and be done. Then durable function goes on its merry way to process the blog, which can take as long as it wants. No need for any polling to know when it is done. When it is done, the durable function can trigger some other action."}],"comment_id":"310308","poster":"pmsiva","timestamp":"1615701420.0","upvote_count":"7"},{"poster":"JohnWooDeere","timestamp":"1614096900.0","upvote_count":"4","content":"this should be definitely 'YES'","comment_id":"297534"},{"poster":"Amrit862","upvote_count":"4","comment_id":"283151","content":"Answer should be 'Yes'\nRef: https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#async-http\nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-http-features?tabs=csharp#async-operation-tracking","timestamp":"1612413180.0"},{"content":"The question is \"Does the solution meet the goal?\", and the goal is \"It must process the blob data\"... so Durable Functions would be Yes, wouldn't it? Even if some other process would be better, that's not the question.","comment_id":"279752","timestamp":"1611984420.0","poster":"disda1n","upvote_count":"8"},{"comment_id":"276333","poster":"rolandcha","content":"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\nso it should be true","timestamp":"1611611520.0","upvote_count":"2"},{"poster":"snowxam","upvote_count":"2","content":"I would choose the same answer NO.\nBased on following doc, Queue is an alternative \"If you require faster or more reliable blob processing, consider creating a queue message\". \nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger?tabs=csharp","timestamp":"1611083940.0","comment_id":"271459"},{"upvote_count":"5","poster":"diligent176","timestamp":"1610218320.0","comment_id":"263447","content":"\"The app is triggered using an output binding on the blob.\" These words are nonsense.","comments":[{"content":"\"The app is triggered using an output binding on the blob.\"\n-->\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-output?tabs=csharp","poster":"vladans","upvote_count":"1","timestamp":"1616663520.0","comment_id":"319986"},{"content":"You are right, it should be some function is triggered...","poster":"AOE","upvote_count":"1","comment_id":"426483","timestamp":"1629225720.0"}]},{"poster":"Wanni","comment_id":"254530","upvote_count":"4","content":"https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#:~:text=Regardless%20of%20the%20function%20app,timeout%20of%20Azure%20Load%20Balancer.","timestamp":"1609213260.0","comments":[{"upvote_count":"3","content":"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","timestamp":"1609214160.0","poster":"Wanni","comment_id":"254539"}]},{"upvote_count":"3","comment_id":"244724","timestamp":"1608048720.0","poster":"luppittegui","content":"It's true: https://docs.microsoft.com/es-es/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#pattern-3-async-http-apis that pattern it's for that"},{"timestamp":"1607869800.0","upvote_count":"1","content":"Can any one confirm the correct answer for this?","poster":"NLKReddy","comment_id":"242649"},{"upvote_count":"13","content":"It appears that the durable function async pattern could be a valid choice:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\n\n\"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\"\n\nAs others pointed out redirecting the request to a queue or service bus seems to be a valid option too.\n\nMaybe the trick is in this statement \"The app is triggered using an output binding on the blob\"? But I am not even sure what this statement actually mean","timestamp":"1607751420.0","poster":"ms70","comments":[{"upvote_count":"1","comment_id":"255532","content":"Yes, it looks correct. Correct answer is Yes.","timestamp":"1609324980.0","poster":"bhushan_786"},{"comment_id":"380228","poster":"TakumaK","timestamp":"1623476460.0","content":"Yes. CORRECT! the answer SHOULD be \"YES\"","upvote_count":"1"},{"timestamp":"1616663460.0","upvote_count":"2","poster":"vladans","comment_id":"319984","content":"\"The app is triggered using an output binding on the blob.\"\n-->\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-output?tabs=csharp"}],"comment_id":"241375"},{"comments":[{"timestamp":"1616517420.0","upvote_count":"2","content":"The function only has one trigger, the output binding means you can write to blob. it's easy way to write to blob","comment_id":"318246","poster":"john080808"},{"comment_id":"319983","content":"profesorklaus question:\n\"how app can be triggered by the output if function can have only one trigger?\"\nAnswer:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-output?tabs=csharp","timestamp":"1616663400.0","upvote_count":"1","poster":"vladans"}],"timestamp":"1607460240.0","content":"Sorry but anyone can explain me this task?\n\"You develop an HTTP triggered Azure Function app to process Azure Storage blob data.\" - this I understand. \"The app is triggered using an output binding on the blob.\" - how app can be triggered by the output if function can have only one trigger? There is one HttpTrigger. It seems I don't get the architecture of this. What do they mean?","comment_id":"238664","upvote_count":"8","poster":"profesorklaus"},{"upvote_count":"2","poster":"tomasschier","content":"Should be TRUE. Durable function timeout defaults to 5 min, and can be configured https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-timers?tabs=csharp","comment_id":"219935","timestamp":"1605477420.0"},{"timestamp":"1604687280.0","poster":"AakashNeedsEmAll","upvote_count":"9","content":"Cannot be true as HTTP based calls usually don't hold for 4 minutes. Durable functions is useless if the problem is not running synchronous functions together; just by using Durable functions, the time will not reduce.","comment_id":"214234","comments":[{"upvote_count":"2","timestamp":"1606445460.0","content":"Ah, but the problem statement is not to reduce the time. It is to avoid timing out before completion. By using Durable Functions, it is possible to use Durable Timers to implement timeouts. So can we not increase the timeout duration to allow for completion by using Durable timers?","comment_id":"228729","poster":"Cornholioz"}]}],"answer_ET":"A","url":"https://www.examtopics.com/discussions/microsoft/view/35691-exam-az-204-topic-2-question-16-discussion/","isMC":true,"topic":"2"},{"id":"ir73XZt6GGZdPyYEg4NY","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou develop an HTTP triggered Azure Function app to process Azure Storage blob data. The app is triggered using an output binding on the blob.\nThe app continues to time out after four minutes. The app must process the blob data.\nYou need to ensure the app does not time out and processes the blob data.\nSolution: Pass the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and return an immediate HTTP success response.\nDoes the solution meet the goal?","isMC":true,"unix_timestamp":1605350100,"exam_id":48,"answers_community":["A (61%)","B (39%)"],"topic":"2","answer_description":"","question_id":77,"discussion":[{"poster":"msdevanms","upvote_count":"66","timestamp":"1620981300.0","content":"Answer is correct","comments":[{"content":"What about sending files via Service Bus ? I guess this is not a good idea especially when maximum message size is 256 kb.","comment_id":"563502","poster":"piotrek1993","upvote_count":"3","comments":[{"upvote_count":"5","comments":[{"content":"But it's a message, not an event. There are chances that a message would contain a blob in their body, max size 256k for standard and 100MB for premium.","upvote_count":"1","poster":"tom112","comment_id":"896255","timestamp":"1699834380.0"}],"poster":"hubekpeter","content":"You are not going to send the file throu message buss, only reference to a blob, 256kB is plenty enough for that purpose.","timestamp":"1684504860.0","comment_id":"722098"}],"timestamp":"1662660060.0"},{"timestamp":"1678271580.0","poster":"vruizrob","upvote_count":"7","comments":[{"poster":"surprise0011","content":"good finding. now it is clear. \nIMO it not seems optimal but it is certainly a solution","comment_id":"870826","timestamp":"1697364660.0","upvote_count":"1"}],"comment_id":"663377","content":"This link https://docs.microsoft.com/en-us/azure/azure-functions/performance-reliability#avoid-long-running-functions confirms that the correct answer is A."},{"poster":"noro5","upvote_count":"2","comment_id":"542870","timestamp":"1659929100.0","content":"Yes, the note section here confirms that\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout"},{"timestamp":"1673979360.0","content":"Async request-reply pattern https://docs.microsoft.com/en-us/azure/architecture/patterns/async-request-reply#example","poster":"henry1985","upvote_count":"2","comment_id":"632615"}],"comment_id":"219056"},{"content":"Answer is NO. The best solution is durable functions\nDurable Functions provides built-in support for this pattern(Pattern #3: Async HTTP APIs), simplifying or even removing the code you need to write to interact with long-running function executions.\nDurable Functions provides built-in support for this pattern(Pattern #3: Async HTTP APIs), simplifying or even removing the code you need to write to interact with long-running function executions.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#async-http","comments":[{"comment_id":"228282","upvote_count":"21","poster":"Figa","content":"Why should this Answer be false? \n\nCan`t be both correct? They are not asking for the optimal solution.","comments":[{"timestamp":"1622077080.0","comment_id":"228733","poster":"Cornholioz","comments":[{"comment_id":"228740","content":"But then again, can you really chunk the Blob data into multiples just so the refactored smaller function sets can process in parallel? What if the Blob data is just one huge chunk of a single transaction that has to be completed in shot even if takes long. That makes the Durable Functions the better/right/only answer :(","comments":[{"comment_id":"316617","content":"It was timing out because you were doing a long task during HTTP request, which can't live forever. If you're saving a huge blob and it's not being done during the lifecycle of that request, the time doesn't really matter.","poster":"tevivi8222","timestamp":"1632244560.0","upvote_count":"1"}],"upvote_count":"1","timestamp":"1622077380.0","poster":"Cornholioz"}],"content":"You may be right. There are questions where two answers are true. I think both Durable Timers and this solution are both true.","upvote_count":"10"}],"timestamp":"1622024100.0"},{"comment_id":"862986","content":"Question is not asking for the BEST solution. Is asking if the provided solution will solve the issue or not, despite it is more expensive or not.","upvote_count":"6","timestamp":"1696598160.0","poster":"rgullini"},{"content":"You are asked if the solution is possible, which it is, along with using Durable Functions","poster":"xRiot007","upvote_count":"2","comment_id":"620786","timestamp":"1671780600.0"},{"poster":"AOE","content":"Both are correct: service bus queue or durable function async pattern","upvote_count":"21","timestamp":"1645130760.0","comment_id":"426484","comments":[{"timestamp":"1657112640.0","content":"If a service bus queue trigger is used, wouldn't the function app still be timed out? The problem seems to be the processing time of the blob data.","comment_id":"518307","poster":"SummerWarrior","upvote_count":"5"}]},{"poster":"Yah88","timestamp":"1632071640.0","upvote_count":"21","content":"you aren't asked for best solution, but for solution that works.","comment_id":"315093"},{"content":"don't overthink. stick to what the question is asking. and why does this comment have the upvotes that many?","timestamp":"1639295340.0","poster":"TakumaK","comment_id":"380242","upvote_count":"21"}],"poster":"Secure01","upvote_count":"26","comment_id":"226814","timestamp":"1621869180.0"},{"comment_id":"1202130","content":"Yes, the solution meets the goal. By passing the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and returning an immediate HTTP success response, you can address the timeout issue and ensure that the blob data is processed without timing out.","upvote_count":"1","timestamp":"1729872000.0","poster":"HariB1992"},{"comment_id":"1186705","content":"Selected Answer: A\nCorrect","poster":"blpiek21","timestamp":"1727688660.0","upvote_count":"1"},{"timestamp":"1724326320.0","content":"Selected Answer: A\nCopilot AI:\nYes, the solution meets the goal. Passing the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and returning an immediate HTTP success response can help you avoid the HTTP timeout issue and handle long-running operations in a serverless environment. Azure Service Bus is a fully managed message broker service that enables reliable and secure communication between applications. Azure Functions integrates with Azure Service Bus via triggers and bindings, allowing you to build functions that react to and send queue or topic messages.","comment_id":"1156384","upvote_count":"1","poster":"Isoldhe"},{"timestamp":"1723099080.0","content":"Selected Answer: A\nBy leveraging an Azure Service Bus queue to decouple the initial HTTP request from the blob data processing, this architectural pattern effectively addresses the timeout issue. It ensures that the app can process blob data without being constrained by the execution timeout of the HTTP-triggered function, aligning well with best practices for building scalable and resilient cloud applications.","comment_id":"1144291","upvote_count":"1","poster":"FeriAZ"},{"poster":"Jak007","timestamp":"1722316800.0","comment_id":"1135576","content":"Selected Answer: A\nA) Yes. This is true and is a suggested approach from the documentation here: https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","upvote_count":"1"},{"upvote_count":"2","poster":"garbas","content":"Selected Answer: B\nIf you return immediate success, the app can't ensure the blob data is actually processed\nhttps://learn.microsoft.com/en-us/azure/azure-functions/performance-reliability#make-sure-background-tasks-complete","timestamp":"1721739960.0","comment_id":"1129706"},{"poster":"bgbgvfvf","comment_id":"1104213","content":"A yes is correct","timestamp":"1719163680.0","upvote_count":"1"},{"timestamp":"1716287160.0","content":"Selected Answer: B\nYES but only to ensure the app does not time out but not to processes the blob data\n\nAn HTTP triggered function has a 320 seconds of max timeout and is because the HTTP request binding. So the solution only avoids having a timeout in the request but not in the processing\n\nThe max timeout for any function is 4 minutes (With another kind of triggers) so the only way to be sure that the blob is processed is with a durable function\n\nThe right answer is NO","comment_id":"1076276","upvote_count":"1","poster":"AlbertoBT"},{"content":"The problem here is “ The app must process the blob data.”. Using a queue trigger will not guarantee that the blob is processed. Asynchronous pattern will Le me ask for the status and it fails, I can resend the request. I would go for no.","upvote_count":"1","timestamp":"1715884320.0","comment_id":"1072782","poster":"mlop3s"},{"comment_id":"1065201","content":"I think answer is B.No cause the Http trigger can take more time than four minute and it cause time out. Best way is using durable function which can check stateful","poster":"zreaf29","timestamp":"1715114400.0","upvote_count":"1"},{"content":"Selected Answer: A\nThe answer is YES.\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","upvote_count":"2","poster":"Vladimir_Gajinov","timestamp":"1709728200.0","comment_id":"1000488"},{"comment_id":"998487","poster":"nardk","timestamp":"1709558340.0","upvote_count":"1","content":"Selected Answer: A\nAnswer is A"},{"comment_id":"994709","content":"Selected Answer: A\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\n For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","upvote_count":"1","poster":"Kanasan","timestamp":"1709184360.0"},{"comment_id":"964786","timestamp":"1706370780.0","content":"A is correct.","upvote_count":"1","poster":"longnguyendh"},{"upvote_count":"3","poster":"WuksaUK","timestamp":"1705069080.0","content":"Answer is correct, the timeout time for HTTP triggers is always 230s. Since the compute time is 240s the minimum timeout for a Standard azure function that isn't from a HTTP trigger is 5 minutes. So this works","comment_id":"949754"},{"poster":"deathRac3","upvote_count":"2","timestamp":"1700574180.0","content":"Selected Answer: A\nFor longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.","comment_id":"903153"},{"poster":"tom112","comment_id":"896257","timestamp":"1699834560.0","upvote_count":"1","content":"Selected Answer: B\n\"return an immediate HTTP success response.\" part makes the answer No.\nMax size of a message is 100mb, we don't know how long it takes to process, and the condition is saying that the app times out after 4 min. then you cannot process through servicebus queue and give immediate response in time.","comments":[{"poster":"tom112","content":"Soz, I was stupid. the answer is A.","comment_id":"896258","upvote_count":"1","timestamp":"1699834860.0"}]},{"poster":"lyggwtwtczxnhznebw","comment_id":"885381","content":"This solution may not meet the goal of processing the blob data within the Azure Function app without timing out.\n\nPassing the HTTP trigger payload to a Service Bus queue will remove the processing logic from the original Azure Function app, and instead, pass the message to a separate Azure Function that is triggered by the Service Bus queue.\n\nWhile this approach can be useful for decoupling processing logic and scaling the processing across multiple functions, it does not directly address the timeout issue in the original function. The original function will still timeout after four minutes, and the Service Bus queue-triggered function will also be subject to a default timeout limit of five minutes.\n\nTherefore, while passing the HTTP trigger payload to an Azure Service Bus queue and processing it with a queue trigger function may be a useful approach for certain scenarios, it may not meet the goal of ensuring that the original HTTP-triggered Azure Function app processes the blob data without timing out.","timestamp":"1698687840.0","upvote_count":"1"},{"content":"Passing the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function would not necessarily prevent the Azure Function from timing out after four minutes. This solution would introduce additional complexity and may not be necessary depending on the specific requirements of the application. It would be better to investigate options such as increasing the function timeout limit, breaking up the processing into smaller chunks, or using Durable Functions to handle long-running operations. B.No","poster":"crica007","comment_id":"825501","timestamp":"1693532460.0","upvote_count":"3"},{"content":"the wording is somehow really confusing here, because I have an HTTP triggered function app... and also the app is triggered using an output binding on the blob... so what is meant here exactly? ...\nalso the question describtion says, that there can be more than 1 right solutions","timestamp":"1690378080.0","poster":"Michael2023","comment_id":"788860","upvote_count":"1"},{"timestamp":"1687958580.0","content":"Selected Answer: A\nComparing with previous answer, I expect one of them to be TRUE and the other FALSE","poster":"rotimislaw","upvote_count":"2","comments":[{"upvote_count":"1","comment_id":"862988","timestamp":"1696598340.0","poster":"rgullini","content":"Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\n\n\nPlease read carefully to avoid wrong asumptions"}],"comment_id":"760025"},{"content":"Selected Answer: B\nYou need to ensure the app does not time out and processes the blob data. I think this is the key. Yes it's technically doable but if you send immediate response, there's no guarantee that a function will really process the data. Yes there are retry policies etc., but relying on something like that is considered as anti pattern from architecture standpoint.","timestamp":"1684513260.0","poster":"hubekpeter","upvote_count":"2","comment_id":"722166"},{"timestamp":"1684151160.0","upvote_count":"1","comment_id":"718769","content":"Did my exam on 15th November 2022. This question was on it.","poster":"TheExamMaster2020"},{"upvote_count":"3","poster":"Magis","content":"Selected Answer: A\nMS saying that you can select Durable function OR service bus.\n\nSo in this YES/NO question series we have two correct answers not just a one as usually.\n\nThis one is correct.","timestamp":"1683352740.0","comment_id":"712187"},{"upvote_count":"1","timestamp":"1682315700.0","content":"Selected Answer: A\nThe maximum amount of time that an HTTP triggered function can take to respond to a request is 230 seconds. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","comment_id":"702729","poster":"TheExamMaster2020"},{"timestamp":"1680074580.0","poster":"[Removed]","content":"Yes, that can work as well and considering this is in the documentation exactly. \nBut durable functions is also a way to do exactly this. In the Durable functions accept the request and start an orchestrator to do the processing. So, much cheaper also considering a service bus cost money and goes to fund Microsoft","upvote_count":"1","comments":[{"comment_id":"688385","timestamp":"1680849060.0","content":"But also consider the maximum size of service bus queue considering this is a blob. A tricky one from Microsoft to check if you are a machine","upvote_count":"1","poster":"gmishra88"}],"comment_id":"682436"},{"upvote_count":"2","timestamp":"1678769940.0","poster":"hpjjphhpj","comment_id":"668569","content":"Selected Answer: A\nCorrect"},{"timestamp":"1678003800.0","content":"Selected Answer: A\n* Regardless of the Function App Timeout configuration, 230 seconds is the maximum amount of time that an HTTP Triggered function can take to respond to a request.\nso the answer is \"Yes\"","upvote_count":"2","comments":[{"comment_id":"784953","content":"but 230 sec < 4min","timestamp":"1690077540.0","upvote_count":"1","poster":"adilkhan"}],"poster":"Ameet9","comment_id":"659781"},{"timestamp":"1676522760.0","poster":"Knightie","content":"Selected Answer: B\nThe answer is no. Even you get the immediate success response, it doesn't not ensure the processing is completed. The Durable Pattern will keep polling to get the actual completion status to ensure the process is really completed.","upvote_count":"3","comment_id":"647425"},{"content":"Selected Answer: B\nVote B. Can't send file via queue.","timestamp":"1675846440.0","upvote_count":"2","poster":"nqthien041292","comment_id":"643987"},{"timestamp":"1675404720.0","content":"Selected Answer: A\nAnswer is correct.","poster":"Perplex","comment_id":"641562","upvote_count":"1"},{"timestamp":"1672842420.0","upvote_count":"1","poster":"Ives_24","content":"from the question it seems long running hours causes issuse and i see that alot of people are saying durable functions is right cause they can run for long... but arent we trying to avoid that?","comment_id":"626983"},{"comment_id":"617451","upvote_count":"2","poster":"HumbleYolo","content":"Yes ... answer A\n\n> Large, long-running functions can cause unexpected timeout issues. To learn more about the timeouts for a given hosting plan, see function app timeout duration.\n\nA function can become large because of many Node.js dependencies. Importing dependencies can also cause increased load times that result in unexpected timeouts. Dependencies are loaded both explicitly and implicitly. A single module loaded by your code may load its own additional modules.\n\nWhenever possible, refactor large functions into smaller function sets that work together and return responses fast. For example, a webhook or HTTP trigger function might require an acknowledgment response within a certain time limit; it's common for webhooks to require an immediate response. You can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work and return an immediate response.\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","timestamp":"1671243480.0"},{"poster":"xRiot007","comment_id":"617234","timestamp":"1671199680.0","content":"Anwer is NO. Reason: you will not receive a correct immediate response because it is long running. Second, the recommendation is to use Durable Functions for *anything* that lasts more than 230 seconds to process.","upvote_count":"2"},{"comment_id":"606562","upvote_count":"3","poster":"yohannvf","content":"Selected Answer: B\nThe app must process the blob data.\nAnswer should be B\nBlob isn't processed if a quick reply is sent back.","timestamp":"1669285500.0"},{"content":"Selected Answer: A\nCorrect, this is also a solution.","upvote_count":"1","comment_id":"553683","poster":"Freidrich","timestamp":"1661165760.0"},{"content":"They key point here is \"The app is triggered using an output binding on the blob.\"\nThere is no input blob binding.","timestamp":"1658461980.0","comment_id":"529631","poster":"fksifujasdasdasdaqweqw","upvote_count":"1"},{"upvote_count":"4","timestamp":"1657530120.0","comment_id":"521472","content":"The answer is correct - service bus and durable functions are both correct here.\n\nThe idea for this question is that you need to implement out of process messaging - both of these design patterns fit the goal","poster":"asdasdasg2"},{"comment_id":"518304","poster":"SummerWarrior","content":"The given answer doesn't seem to be correct.\n\nThe timeout problem we have is because blob processing is long. It doesn't matter if function app is going to process from a queue trigger/blob trigger. So to get rid of the problem, isn't the right solution is to use durable functions?","timestamp":"1657112520.0","upvote_count":"4"},{"timestamp":"1651879080.0","upvote_count":"3","comment_id":"473685","poster":"DhanukaJ","content":"Same as the previous, answer should be \"No\", because the question is state that the function is triggered using BLOB output binding. BLOB output binding is used to modify the state of the BLOB. Not to trigger the function.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-output?tabs=csharp"},{"poster":"MiraA","upvote_count":"3","comment_id":"456915","content":"From the assignment: \"The app is triggered using an output binding on the blob.\"\n\nWhat does it exactly mean? Does it means passing a Stream object with the blob data?\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-output\n\nAnd is it possible to store such payload (Stream object) in a Service Bus queue to be used to invoke a queue trigger function? Or payload would be a (string) path to the blob? Then the queue trigger function must connect to Blob Storage and read the blob by itself?\n\nI would prefer Durable Function to achieve this...","timestamp":"1649052960.0"},{"content":"Answer is YES:\n\nThe key is in \"You need to ensure the app does not time out and processes the blob data.\"\n\n\"\nWarning\n\nIn addition, storage logs are created on a \"best effort\" basis. There's no guarantee that all events are captured. Under some conditions, logs may be missed.\n\nIf you require faster or more reliable blob processing, consider creating a queue message when you create the blob. Then use a queue trigger instead of a blob trigger to process the blob. Another option is to use Event Grid; see the tutorial Automate resizing uploaded images using Event Grid.\n\"\n\nRef: https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger?tabs=csharp","poster":"fesioche","upvote_count":"2","comment_id":"431108","timestamp":"1645767660.0"},{"timestamp":"1645092540.0","comment_id":"426186","content":"The documentation says \"You can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work and return an immediate response\" but in this answer it says \"Pass the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and return an immediate HTTP success response\" It's not exactly the same. Would it be valid? Or is it a cheat answer?","poster":"LauraGF","upvote_count":"2"},{"comment_id":"392572","poster":"AmitTech","content":"When it comes to an HTTP trigger, the maximum function timeout is 230 seconds. For long-running functions with HTTP triggers, you should use Durable Functions or pass the HTTP payload to another function-based trigger.","upvote_count":"2","timestamp":"1640671560.0"},{"timestamp":"1640378400.0","content":"Answer is YES - a webhook or HTTP trigger function might require an acknowledgment response within a certain time limit; it's common for webhooks to require an immediate response. You can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work and return an immediate response.","upvote_count":"1","poster":"kondapaturi","comment_id":"389827"},{"upvote_count":"1","poster":"Yogendra_examtopic","content":"Solution to this is \"Yes\".\n\nRead this - \n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#:~:text=Regardless%20of%20the,an%20immediate%20response.","comment_id":"386900","timestamp":"1640082540.0"},{"upvote_count":"15","comment_id":"372555","timestamp":"1638444780.0","content":"YES\n\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n\nSo, pass the HTTP trigger payload into an Azure Service Bus queue to be processed by a queue trigger function and return an immediate HTTP success response.\n\nReference:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices \nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices#avoid-long-running-functions","poster":"mlantonis"},{"upvote_count":"4","poster":"glam","comment_id":"354703","content":"A. Yes","timestamp":"1636640580.0"},{"comment_id":"287765","upvote_count":"4","timestamp":"1628611380.0","poster":"daporh","content":"The answer is correct. Durable function async pattern just sets up a specified timeout and since we don't know how long the function will run, as the function always times out, then the best option is to defer the processing to a queue trigger function."},{"comments":[{"poster":"clarionprogrammer","comment_id":"336470","content":"This is the best explanation as to why it is correct.","timestamp":"1634317680.0","upvote_count":"2"}],"content":"Answer is correct\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer. For longer processing times, consider using the Durable Functions async pattern or defer the actual work and return an immediate response.\n230seconds/60 = 3.84 hence better to move forward with best practice","upvote_count":"4","timestamp":"1626124560.0","poster":"rajwit","comment_id":"265920"},{"upvote_count":"6","content":"The function that has to handle the message from the queue will time out as well. So this is no solution.","timestamp":"1625476860.0","comment_id":"260199","poster":"CaptCaveman","comments":[{"poster":"sutliman","comment_id":"579382","timestamp":"1664611260.0","upvote_count":"1","content":"not really, 230 seconds is the timeout for HTTP trigger functions. If a queue service will trigger the function, then timeout will change depending on the plan you're using and your timeout settings.It can be 5min ot 50mins..."}]},{"poster":"RahulKate","timestamp":"1624683540.0","content":"In my opinion if we use Durable Function for Async pattern, there is no provision to check status of durable function work from Azure storage blob...\n\nSo using service bus queue is right option....\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp#application-patterns","upvote_count":"2","comment_id":"252483"},{"comment_id":"219221","poster":"27close","timestamp":"1621003980.0","upvote_count":"5","content":"You can pass the HTTP trigger payload into a queue to be processed by a queue trigger function. This approach lets you defer the actual work and return an immediate response.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-best-practices\nAnswer -yes"}],"choices":{"A":"Yes","B":"No"},"answer_ET":"A","timestamp":"2020-11-14 11:35:00","answer_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/36991-exam-az-204-topic-2-question-17-discussion/","question_images":[],"answer":"A"},{"id":"L98mXr2FxVpsXVDQfHmf","answer_description":"","exam_id":48,"choices":{"A":"Yes","B":"No"},"url":"https://www.examtopics.com/discussions/microsoft/view/37868-exam-az-204-topic-2-question-18-discussion/","answer_images":[],"isMC":true,"topic":"2","question_id":78,"unix_timestamp":1606446360,"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou develop an HTTP triggered Azure Function app to process Azure Storage blob data. The app is triggered using an output binding on the blob.\nThe app continues to time out after four minutes. The app must process the blob data.\nYou need to ensure the app does not time out and processes the blob data.\nSolution: Configure the app to use an App Service hosting plan and enable the Always On setting.\nDoes the solution meet the goal?","discussion":[{"timestamp":"1626495180.0","upvote_count":"65","poster":"00avatar","comment_id":"269348","comments":[{"poster":"Knightie","comment_id":"647427","timestamp":"1676523120.0","content":"No is the answer, but the reason is the timeout being raised by HTTP layer from the Azure Load Balancer, not the App layer that at least it gives 5 minutes for the cheapest type, Consumption, so however you enhance the app layer, the http layer Azure Load Balance will not wait more than 230 second and will reply it as timeout. Use the durable function pattern to poll the status for completion will be the easiest solution, else avoid the http layer like service bus will work too.\n \nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout:~:text=1%20Regardless%20of,immediate%20response.","upvote_count":"6"},{"upvote_count":"2","poster":"surprise0011","content":"received 2023-04-17 went given answer, score 926","comment_id":"872563","timestamp":"1697536020.0"},{"poster":"abdou1987","content":"Answer is YES\nthe default time for App service plan is 30 to unlimit\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","comment_id":"369068","upvote_count":"3","comments":[{"timestamp":"1638219900.0","poster":"abdou1987","comment_id":"369686","upvote_count":"23","content":"Sorry i cant delete my previois comment.\nI confirm the answer is NO. Whatever the app service plan the maximum timeout for HTTP triggers is 230 seconds."}],"timestamp":"1638149580.0"},{"comment_id":"283156","content":"Answer is still 'No' but default time for dedicated host is 30 mins, it can be technically configured to infinite...but have to do that manually and that is not mentioned in solution.\nref: https://docs.microsoft.com/en-us/azure/azure-functions/functions-host-json#functiontimeout","upvote_count":"1","poster":"Amrit862","timestamp":"1628044920.0"},{"poster":"Basu525","upvote_count":"5","timestamp":"1628055540.0","comments":[{"comment_id":"336475","content":"Agreed. 'No' is correct.\nHere is the reference cited above.\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout","poster":"clarionprogrammer","upvote_count":"5","timestamp":"1634317860.0"}],"comment_id":"283257","content":"Yes absolutely, as per Microsoft documentation, \"Regardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer.\" So App service plan with Always On is not a solution."}],"content":"Answer \"No\" is correct. Always On enables waking up on HTTPTrigger, but does not prevent the exceeding the max time out time of 230 seconds. https://docs.microsoft.com/en-us/azure/azure-functions/dedicated-plan#always-on"},{"upvote_count":"9","timestamp":"1622077560.0","comment_id":"228743","poster":"Cornholioz","content":"Answer \"B.No\" seems right because this is not about App Services Best Practices."},{"comment_id":"1337921","upvote_count":"2","timestamp":"1736336940.0","content":"Selected Answer: B\nAnswer is \"No\" just verified with GEMINI","poster":"VK1989"},{"upvote_count":"1","content":"CoPilot Says Option as Yes.\nYes, the solution meets the goal. By configuring the app to use an App Service hosting plan and enabling the Always On setting, you can prevent the app from timing out and ensure that it processes the blob data successfully.","timestamp":"1729871820.0","poster":"HariB1992","comment_id":"1202128"},{"comment_id":"1066338","upvote_count":"1","timestamp":"1715243160.0","poster":"[Removed]","content":"Selected Answer: B\nNo i correct"},{"timestamp":"1709184480.0","comment_id":"994711","upvote_count":"1","poster":"Kanasan","content":"Selected Answer: B\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\nRegardless of the function app timeout setting, 230 seconds is the maximum amount of time that an HTTP triggered function can take to respond to a request. This is because of the default idle timeout of Azure Load Balancer."},{"timestamp":"1698464160.0","upvote_count":"1","content":"Selected Answer: B\nAnswer \"No\" is correct","poster":"RenatoJr","comment_id":"883205"},{"timestamp":"1678306920.0","poster":"Anitay","content":"Use Durable function for this requirement","comment_id":"663899","upvote_count":"1"},{"poster":"Perplex","upvote_count":"1","content":"Selected Answer: B\nAlways On does not prevent a timeout so is not a solution to this problem. Answer is B (No).","timestamp":"1675404780.0","comment_id":"641565"},{"upvote_count":"1","poster":"Rakeshpro","timestamp":"1674486120.0","content":"Selected Answer: A\nCorrect!","comment_id":"635558"},{"comment_id":"613914","upvote_count":"1","content":"Selected Answer: B\nB is correct answer (No). \nMax timeout for HTTP triggers is 230 seconds < 240 seconds (4 minutes).","poster":"Eltooth","timestamp":"1670590560.0"},{"comment_id":"380250","timestamp":"1639295940.0","poster":"TakumaK","content":"\"Always On\" feature of Azure App Service is to keep the host process running to allow more responsive to requests after significant idle periods. This is UNRELATED to the timeout.\nSo the answer is obvious!!","upvote_count":"5"},{"timestamp":"1638272280.0","content":"Correct Answer: No\n\nAlways On enables waking up on HTTP trigger, but does not prevent the exceeding the max time out time of 230 seconds.\n\nIf you run on an App Service plan, you should enable the Always on setting so that your function app runs correctly. On an App Service plan, the functions runtime goes idle after a few minutes of inactivity, so only HTTP triggers will \"wake up\" your functions. The Always on setting is available only on an App Service plan. On a Consumption plan, the platform activates function apps automatically.\n\nReference:\n\nhttps://docs.microsoft.com/en-us/azure/azure-functions/dedicated-plan#always-on","upvote_count":"8","poster":"mlantonis","comment_id":"370026"},{"comments":[{"content":"you are messing up this comment section by correcting your own wrong answer. :)","comment_id":"380249","upvote_count":"1","timestamp":"1639295760.0","poster":"TakumaK"}],"comment_id":"369065","timestamp":"1638149280.0","content":"Answer is YES\n\"Best for long-running scenarios where Durable Functions can't be used. Consider an App Service plan in the following situations:\" link: https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#overview-of-plans\nanother link https://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout that mentionned the duration is 30 min and upper","upvote_count":"1","poster":"abdou1987"},{"poster":"UnknowMan","timestamp":"1637406540.0","upvote_count":"2","comment_id":"361989","content":"Answer \"No\" is correct"},{"timestamp":"1636640640.0","comment_id":"354704","upvote_count":"3","content":"B. No,,","poster":"glam"},{"upvote_count":"1","timestamp":"1625030580.0","poster":"bugimachi","content":"The page, however, does not talk about Service Bus queues (any more).","comment_id":"255425"}],"timestamp":"2020-11-27 04:06:00","answer":"B","question_images":[],"answers_community":["B (88%)","13%"],"answer_ET":"B"},{"id":"2wxJ32QJHleovPzhWyBS","question_id":79,"discussion":[{"poster":"AnkanG","comment_id":"144234","timestamp":"1595779800.0","content":"as is correct","upvote_count":"57"},{"content":"The answer is correct, but it should have also mentioned that the function app must not be on a consumption plan. because in that case, it might take up to 10 minutes to process the event.","upvote_count":"31","timestamp":"1614462900.0","comment_id":"300480","comments":[{"poster":"bbou","content":"No 10 seconds","upvote_count":"1","timestamp":"1617995940.0","comment_id":"332134","comments":[{"content":"I was wrong - yes up to 10 minutes","poster":"bbou","upvote_count":"6","timestamp":"1617997380.0","comment_id":"332140"}]},{"timestamp":"1619947980.0","comments":[{"comment_id":"483271","comments":[{"comment_id":"1223974","content":"Or we can assume user doesn't use premium plan... your argument isn't valid","poster":"HelloCloudWorld","upvote_count":"1","timestamp":"1717481760.0"}],"content":"That limitation is only for Consumption plan. Since no mention of it, we can assume user can opt for premium, app service plan.","upvote_count":"5","poster":"altafpatel1984","timestamp":"1637500680.0"}],"upvote_count":"7","comment_id":"347577","content":"So the answer is NO. Cant wait 10 minutes","poster":"BrettusMaximus"},{"comment_id":"621220","content":"The time limit is for the process to START only. It can take longer to process.","upvote_count":"5","poster":"dookebroyle","timestamp":"1656009420.0"}],"poster":"fadikh"},{"poster":"Ody","timestamp":"1736029080.0","content":"Selected Answer: A\nIt appears this answer has changed over time and now their are two ways to configure the trigger.\n\nNewer --> Event-Based Trigger: This implementation uses Azure Event Grid to trigger the function. It provides low latency, typically triggering the function within seconds of the blob upload.\n\nOlder --> Polling-Based Trigger: This implementation periodically polls the storage account for changes. The latency can be higher, potentially up to several minutes, depending on the polling interval.\n\nI only question if anyone writing test questions at Microsoft knows about it.\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-event-grid-blob-trigger?pivots=programming-language-csharp","comment_id":"1336563","upvote_count":"1"},{"comment_id":"1258980","upvote_count":"1","poster":"Tej_007","timestamp":"1722443640.0","content":"Selected Answer: B\nblob storage event doesn't guarantee an SLA. \nyou cannot control the event arrival in less than a minute."},{"upvote_count":"1","timestamp":"1719938880.0","poster":"Munwalinwali","comment_id":"1240902","content":"Selected Answer: A\nAnswer is yes. Posted the question in ChatGPT"},{"poster":"Isoldhe","upvote_count":"1","content":"Selected Answer: A\nCopilot AI:\nYes, the solution meets the goal. Moving photo processing to an Azure Function triggered from the blob upload can help you create a scalable, serverless, and event-driven solution for your SaaS offering. Azure Functions can run code in response to various triggers, such as HTTP requests, timers, queues, and blobs. In this case, you can use a Blob storage trigger to execute your photo processing logic whenever a new photo is uploaded to a specific container in your storage account. This way, you can ensure that the process to produce a mobile-friendly version of the image starts in less than one minute, as the function is invoked almost immediately after the blob is created or updated.","comment_id":"1156386","timestamp":"1708608900.0"},{"poster":"ragha81","content":"Answer is B as per below comment\n\nThere is no service level agreement around the time it takes for a message to arrive. It's not uncommon for messages to arrive anywhere from 30 minutes to two hours.","upvote_count":"2","comment_id":"1151626","timestamp":"1708040520.0"},{"upvote_count":"2","timestamp":"1706624460.0","content":"Correct No : As there is no grantee on the blob storage to trigger in less than min , so we should use the event grid and the azure function should subscribe to the event grid not the blob direct","poster":"AhmedAbdelAziz","comment_id":"1135874"},{"upvote_count":"2","comment_id":"1135578","timestamp":"1706599500.0","poster":"Jak007","content":"Selected Answer: B\nB) No. \nAs per the documentation linked by @Rabi3. Under \"Recommended Practices for Consuming Blob Events\": \"There is no service level agreement around the time it takes for a message to arrive. It's not uncommon for messages to arrive anywhere from 30 minutes to two hours\". \nhttps://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview#practices-for-consuming-events"},{"upvote_count":"2","content":"Selected Answer: B\nAnswer is B. the key point here is that the processing should start in less one minute. Which is not a guaranteed for Blob storage events. \n\"There is no service level agreement around the time it takes for a message to arrive. It's not uncommon for messages to arrive anywhere from 30 minutes to two hours.\"\nhttps://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview#practices-for-consuming-events","comment_id":"1119519","timestamp":"1704963240.0","poster":"Rabi3"},{"content":"I think the answer is B","upvote_count":"1","comment_id":"1104224","poster":"bgbgvfvf","timestamp":"1703360220.0"},{"poster":"ami2023","content":"Selected Answer: A\nthis is related to topic 2 question 8, A. Yes should the correct answer.","comment_id":"1075349","timestamp":"1700478840.0","upvote_count":"1"},{"poster":"dddddd111","timestamp":"1698637800.0","content":"Selected Answer: A\nI think the answer is A.","comment_id":"1057329","upvote_count":"1"},{"comment_id":"1017302","content":"Selected Answer: A\nGo with A","poster":"Dixavado","upvote_count":"1","timestamp":"1695689040.0"},{"comment_id":"994706","content":"> The process to produce a mobile-friendly version of the image must start in less than one minute.\n\nThis cannot be fulfilled with the proposed solution.\nSo, vote for B","upvote_count":"1","poster":"Kanasan","timestamp":"1693452240.0"},{"upvote_count":"1","timestamp":"1691500260.0","poster":"LxstInNxght","comment_id":"975707","content":"Selected Answer: A\nAnswer is A"},{"upvote_count":"1","comment_id":"964454","content":"Selected Answer: A\nA. Yes\n\nThe solution does meet the goal. Azure Functions can be triggered by blob storage events, such as the uploading of a new photo. When a new photo is uploaded to blob storage, the Azure Function would be triggered to process the photo and create a mobile-friendly version. The trigger is almost instantaneous, so the process would indeed start in less than a minute after a photo is uploaded. This meets the requirement mentioned in the question.","poster":"EliteAllen","timestamp":"1690441440.0"},{"content":"Got this on 06/27/2023 exam","poster":"Sleepers","upvote_count":"3","comment_id":"936646","timestamp":"1687955100.0"},{"upvote_count":"1","comment_id":"927716","poster":"Priyankakanna","timestamp":"1687193820.0","content":"Answer A, just to vote"},{"upvote_count":"1","timestamp":"1684669500.0","content":"Selected Answer: A\njust to vote","comment_id":"903154","poster":"deathRac3"},{"upvote_count":"5","poster":"surprise0011","content":"In conjuction with Event Grid it will work, but without it is not guaranteed to start within 1 minute. \nSo, since Event Grid is not mentioned I would say: No","timestamp":"1681553760.0","comment_id":"870829"},{"content":"Correct answer is B:\n\nThere is no service level agreement around the time it takes for a message to arrive. It's not uncommon for messages to arrive anywhere from 30 minutes to two hours.\nhttps://learn.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview","comment_id":"849356","timestamp":"1679666880.0","upvote_count":"6","poster":"bdumois"},{"poster":"adilkhan","upvote_count":"1","comment_id":"844251","content":"YES CHATGPT","timestamp":"1679259900.0"},{"comment_id":"839881","poster":"red0400","content":"Selected Answer: A\nA is correct.","timestamp":"1678884180.0","upvote_count":"1"},{"poster":"fkaracan","upvote_count":"6","comment_id":"817709","timestamp":"1677061500.0","content":"Selected Answer: B\nI would say \"No\" because the question says \"must\" be less than 10 minutes. The latency with the Azure blob storage trigger is up to 10 minutes.\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger?tabs=in-process&pivots=programming-language-csharp"},{"poster":"szumik","comment_id":"817686","upvote_count":"6","timestamp":"1677059160.0","content":"I had this set of questions on exam on 22/02/23, it consisted of solutions:\n1. Function on Consumption plan\n2. Implement change feed\n3. Change to BlockBlob\nI selected No on all of them, not sure if correct, but scored overall 846"},{"content":"Selected Answer: A\nA is correct","comment_id":"755599","poster":"AymanAkk","timestamp":"1671968460.0","upvote_count":"1"},{"comment_id":"738089","timestamp":"1670429100.0","poster":"mdg3501","upvote_count":"4","content":"got this on 2022-12-7"},{"upvote_count":"1","comment_id":"726585","poster":"carlosghosn","timestamp":"1669369380.0","content":"Got this in the exam today ! Nov 25, 2022"},{"comments":[{"upvote_count":"1","timestamp":"1672769880.0","comment_id":"764923","poster":"rgullini","content":"You don´t HAVE TO WAIT 10 minutes. You need it to start in LESS than a minute."}],"poster":"micro9000","content":"Event Grid is not mentioned on the question, so I assume the function is blob triggered, and using that, you have to wait at least 10mins to execute your function, so the answer is NO.","timestamp":"1668149640.0","upvote_count":"2","comment_id":"715809"},{"timestamp":"1667842440.0","upvote_count":"8","content":"Selected Answer: B\nA Blob Trigger is not a recommended approach due to it's lower reliability.\n\nQuoting the docs:\n\"Polling works as a hybrid between inspecting logs and running periodic container scans. Blobs are scanned in groups of 10,000 at a time with a continuation token used between intervals. If your function app is on the Consumption plan, there can be up to a 10-minute delay in processing new blobs if a function app has gone idle.\"\n\"There's no guarantee that all events are captured. Under some conditions, logs may be missed.\"\n\nThe latency can be handled by putting the function on a Dedicated plan with Always On setting, but due to the lack of reliability, a recommended approach is to switch to Event Grid based trigger:\n\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger?tabs=in-process%2Cextensionv5&pivots=programming-language-csharp#polling-and-latency","comment_id":"713208","poster":"Matlo","comments":[{"poster":"warchoon","timestamp":"1676827260.0","upvote_count":"2","content":"I agree but there is 32 question which contains exact Consumption option","comment_id":"814306"}]},{"comment_id":"652941","timestamp":"1661692140.0","poster":"neralkarvg","upvote_count":"1","content":"Selected Answer: A\nCorrect"},{"content":"Selected Answer: A\nfunction can handle on-demand conversion requests","poster":"ghuna","timestamp":"1661573340.0","comment_id":"652451","upvote_count":"1"},{"upvote_count":"2","poster":"Perplex","timestamp":"1659500040.0","content":"Selected Answer: A\nAnswer is correct","comment_id":"641566"},{"timestamp":"1659444000.0","upvote_count":"1","poster":"N9","content":"Selected Answer: A\nA is correct","comment_id":"641264"},{"timestamp":"1659069900.0","poster":"Perplex","content":"Selected Answer: A\nAnswer A is correct (see most upvoted comments and their explanation). Adding this as a voting comment since those currently say B which is incorrect.","comment_id":"638990","upvote_count":"3"},{"content":"Selected Answer: B\nNot necessary to convert the account, instead move photo processing to an Azure Function triggered from the blob upload..\n\nAzure Storage events allow applications to react to events. Common Blob storage event scenarios include image or video processing, search indexing, or any file- oriented workflow.\n\nNote: Only storage accounts of kind StorageV2 (general purpose v2) and BlobStorage support event integration. Storage (general purpose v1) does not support integration with Event Grid.\n\nReference:\n\nhttps://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-event-overview","upvote_count":"1","timestamp":"1658301000.0","comment_id":"633910","poster":"tushar1812"},{"comment_id":"617267","content":"Selected Answer: A\n10-minute timeout in consumption plan means 1 task processing must be less than 10 minutes. Resizing an uploaded image would not take that much time. The correct answer is A: Yes\nhttps://docs.microsoft.com/en-us/azure/event-grid/resize-images-on-storage-blob-upload-event","timestamp":"1655384880.0","poster":"drgn7676","upvote_count":"2"},{"comments":[{"comment_id":"617242","timestamp":"1655381940.0","upvote_count":"1","poster":"xRiot007","content":"Your function will only use some blob data. Here is the integration example on the scenario:https://docs.microsoft.com/en-us/azure/event-grid/resize-images-on-storage-blob-upload-event?tabs=dotnet%2Cazure-powershell"}],"content":"The answer is Yes. You will use an Event Grid to distribute data and implement an Azure function as a subscriber, to do your data processing. The azure function is not a blob trigger, it will not even know there is a blob there","poster":"xRiot007","comment_id":"617238","timestamp":"1655381700.0","upvote_count":"1"},{"comment_id":"608012","upvote_count":"4","timestamp":"1653643800.0","poster":"Anrich96","content":"Selected Answer: B\n\"When you're using a blob trigger on a Consumption plan, there can be up to a 10-minute delay in processing new blobs. This delay occurs when a function app has gone idle. After the function app is running, blobs are processed immediately. To avoid this cold-start delay, use an App Service plan with Always On enabled, or use the Event Grid trigger.\" Question states it has to start in less than a minute."},{"upvote_count":"2","content":"Selected Answer: A\nplan isn't the subject here","comment_id":"606586","timestamp":"1653383340.0","poster":"yohannvf"},{"upvote_count":"2","comment_id":"559142","content":"Selected Answer: B\nIf we assume consumption plan then there is no guarantee that the process would start in the minute, if there is uncertainty only work on what is provided. Schrodinger's cat :)","timestamp":"1646188200.0","poster":"karthik0328"},{"content":"Selected Answer: B\nThe proposed solution does not resolve our issue, as we are not guaranteed from this action that the relevant process starts within 1 minute of an upload. For instance, if we use a Blob storage trigger while on a Consumption plan.","poster":"Freidrich","comment_id":"553671","upvote_count":"1","timestamp":"1645534020.0"},{"content":"There is nothing said that an Azure Function triggered by Azure Blob storage trigger. The solution allows using any kind of trigger mechanism, including EventGrid. So then, I'm for 'Yes', because there are no reasons to say that it's incorrect.","timestamp":"1641290400.0","upvote_count":"6","comment_id":"516435","poster":"leonidn"},{"upvote_count":"3","poster":"beonsoft","timestamp":"1635835560.0","comment_id":"471524","content":"It is YES.\nThe question is \"You need to design the process that STARTS the photo processing.\". So that you don't need to wait for the result."},{"content":"Please see https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger?tabs=csharp, this is apparently no!","comments":[{"poster":"Marcin4455","upvote_count":"4","content":"Could you highlight specifically why?","comment_id":"506278","timestamp":"1640105040.0"}],"timestamp":"1630500360.0","comment_id":"437148","poster":"ning","upvote_count":"5"},{"upvote_count":"1","timestamp":"1627846440.0","comment_id":"418395","poster":"ozbonny","content":"I would say yes"},{"poster":"ning","upvote_count":"3","content":"I would say it is a \"NO\", no need to over think, azure function trigger up to 10 minutes, azure grid event can be done within 1 minute","comment_id":"417378","comments":[{"poster":"altafpatel1984","timestamp":"1637500560.0","comment_id":"483269","content":"That limitation is only for Consumption plan.","upvote_count":"1"}],"timestamp":"1627648620.0"},{"content":"The answer is NO. There is state that it should be executed in less than 1 min but Event Grid does not tihs. Event can be executed in less than 10 min.","upvote_count":"2","comments":[],"comment_id":"405574","poster":"DamianSobanski","timestamp":"1626194580.0"},{"content":"I will say 'no' in general cause it is not stating the hosting or the plan the function is on. Please see timing for the function:\nhttps://docs.microsoft.com/en-us/azure/azure-functions/functions-scale#timeout\n\nI think using event triggers generally will be a more desirable behavior.","poster":"j888","upvote_count":"1","timestamp":"1625395740.0","comment_id":"398234"},{"comment_id":"389832","content":"YES is correct answer","poster":"kondapaturi","timestamp":"1624560480.0","upvote_count":"1"},{"upvote_count":"9","poster":"xupiter","timestamp":"1623593700.0","content":"Should be NO for two reasons:\n\n1) The Azure Blob storage trigger requires a general-purpose storage account. Storage V2 accounts with hierarchical namespaces are also supported. The question has no mention about hierarchical namespaces.\n\n2) For blobs, polling works on a \"best effort\" basis. There's no guarantee that all events are captured. If you require faster or more reliable blob processing, consider creating a queue message when you create the blob. \n\nLink: https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob-trigger","comments":[{"upvote_count":"2","content":"Yes the link you provided contains the relevant information and even a warning against using BLOB triggers. Thanks!","poster":"zzt","timestamp":"1626425760.0","comment_id":"407734"}],"comment_id":"381151"},{"timestamp":"1622367660.0","poster":"mlantonis","upvote_count":"7","comment_id":"370030","content":"Correct Answer: Yes"},{"upvote_count":"1","timestamp":"1620796680.0","content":"A. Yes","comment_id":"355272","poster":"glam"},{"poster":"kishor1787","timestamp":"1618489680.0","comment_id":"336265","content":"Thanks","upvote_count":"1"},{"content":"Answer is Correct, use evnetgrid to trigger azure function to load images.\n\nhttps://docs.microsoft.com/en-us/azure/event-grid/resize-images-on-storage-blob-upload-event?toc=%2Fazure%2Fstorage%2Fblobs%2Ftoc.json&tabs=dotnet","poster":"Whirly","timestamp":"1617561900.0","comment_id":"328177","upvote_count":"7"},{"poster":"PoundingCode","content":"Answer is correct. From the docs: \"Asynchronous file uploads are a great fit for events\"","comment_id":"285064","timestamp":"1612640520.0","upvote_count":"3"},{"comment_id":"283157","comments":[{"upvote_count":"11","poster":"Zidimirite","timestamp":"1617624480.0","comment_id":"328635","comments":[{"timestamp":"1617624720.0","content":"Oh and even then, you don't necessarily need an EventGridTrigger to prevent the long delay, Always On and a BlobTrigger would do just fine!","poster":"Zidimirite","upvote_count":"3","comment_id":"328638"}],"content":"It's tricky, but the answer is YES. The scenario is not similar, since here they don't say it is triggered by a BlobTrigger, but triggered from the blob upload, which could also be an EventGridTrigger. The question mentioning that is runs on v2 tells me that YES is the right answer."}],"upvote_count":"6","poster":"Amrit862","content":"answer is 'NO' refer https://www.examtopics.com/exams/microsoft/az-204/view/2/\nquestion number #8 - Discussion","timestamp":"1612413960.0"}],"url":"https://www.examtopics.com/discussions/microsoft/view/26699-exam-az-204-topic-2-question-19-discussion/","answer_ET":"B","choices":{"B":"No","A":"Yes"},"exam_id":48,"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou develop a software as a service (SaaS) offering to manage photographs. Users upload photos to a web service which then stores the photos in Azure\nStorage Blob storage. The storage account type is General-purpose V2.\nWhen photos are uploaded, they must be processed to produce and save a mobile-friendly version of the image. The process to produce a mobile-friendly version of the image must start in less than one minute.\nYou need to design the process that starts the photo processing.\nSolution: Move photo processing to an Azure Function triggered from the blob upload.\nDoes the solution meet the goal?","unix_timestamp":1595779800,"answer_description":"","question_images":[],"answer_images":[],"topic":"2","answers_community":["B (54%)","A (46%)"],"answer":"B","isMC":true,"timestamp":"2020-07-26 18:10:00"},{"id":"6I2iD4hpNrxNaSA0MYkL","discussion":[{"timestamp":"1622363580.0","poster":"mlantonis","upvote_count":"78","content":"Box 1: Deployment\nTo deploy Azure Functions to Kubernetes use the func kubernetes deploy command has several attributes that directly control how our app scales, once it is deployed to Kubernetes.\n\nBox 2: ScaledObject\nWith --polling-interval, we can control the interval used by KEDA to check Azure Service Bus Queue for messages.\n\nBox 3: Secret\nStore connection strings in Kubernetes Secrets.","comment_id":"369979"},{"upvote_count":"23","content":"kubernetes is marked as out of scope but still there are few questions coming in the exam from this section","poster":"neerajupadhyay82","comment_id":"279099","timestamp":"1611901800.0"},{"content":"while the pollingInterval itself doesn’t directly scale the application, it influences how often KEDA evaluates the need to scale based on the defined triggers.","comment_id":"1259053","upvote_count":"1","poster":"8ac3742","timestamp":"1722451680.0"},{"content":"I think kubernetes out of the exam","upvote_count":"5","comments":[{"upvote_count":"1","comment_id":"1183936","timestamp":"1711526700.0","content":"I hope so...","poster":"spahno"}],"timestamp":"1706523720.0","comment_id":"1134825","poster":"AhmedAbdelAziz"},{"upvote_count":"2","content":"I hope this is not on the exam anymore.","timestamp":"1692797160.0","poster":"jakobste","comment_id":"988360"},{"content":"out-of-the-scope for the AZ-204 Exam; please remove from the Question Bank","poster":"wrak","upvote_count":"6","comment_id":"813387","timestamp":"1676745120.0"},{"poster":"Esward","comment_id":"788474","timestamp":"1674717600.0","content":"Given answers are correct!!\nhttps://learn.microsoft.com/en-us/azure/azure-functions/functions-kubernetes-keda","upvote_count":"1"},{"content":"This question is not AKS, but Functions being run in Kubernetes. So, technically in scope","timestamp":"1664307180.0","upvote_count":"4","comment_id":"681111","poster":"[Removed]"},{"comment_id":"647408","timestamp":"1660611780.0","poster":"nuiowmokka","content":"Is Kubernetes part of AZ-204, I did not study Kubernetes?","upvote_count":"4","comments":[{"upvote_count":"4","content":"I dont know but it doesn't appers here https://docs.microsoft.com/en-us/certifications/exams/az-204","comment_id":"653033","poster":"VACAS","timestamp":"1661703600.0"}]},{"poster":"dookebroyle","comments":[{"comment_id":"623838","upvote_count":"2","content":"https://keda.sh/","poster":"ldiw02","timestamp":"1656404640.0"}],"timestamp":"1655927100.0","content":"Is there any Microsoft documentation on this? I can't find it.","upvote_count":"1","comment_id":"620590"},{"timestamp":"1643190360.0","content":"Box 1: Deployment -\nBox 2: ScaledObject -\nBox 3: Secret","upvote_count":"2","comment_id":"532755","poster":"Dev666"},{"comment_id":"419902","upvote_count":"6","content":"1. Azure Function code - Deployment\n-To deploy Azure Functions to Kubernetes use the func kubernetes deploy command\n2. Polling interval - ScaledObject \n- This is the interval to check each trigger on. By default KEDA will check each trigger source on every ScaleObject every 30 seconds.\n3. Azure Storage connection string - Secret\n- Store connection string in Kubernetes secret\n\nSource for ScaledObject: https://keda.sh/docs/1.4/concepts/scaling-deployments/","timestamp":"1628109180.0","poster":"finnishr"},{"comment_id":"352414","content":"Box 1: Deployment -\nBox 2: ScaledObject -\nBox 3: Secret -","upvote_count":"3","poster":"glam","timestamp":"1620454320.0"},{"upvote_count":"5","poster":"Kiranvnv","comment_id":"229706","content":"https://www.thinktecture.com/en/kubernetes/serverless-workloads-with-keda/serverless-workloads-with-keda/ is the right link","timestamp":"1606578540.0"},{"comment_id":"214004","upvote_count":"4","content":"is this question in the exam?","comments":[{"timestamp":"1605025200.0","content":"yes it is, got it yesterday when taking the 204","poster":"notjon","comment_id":"216738","upvote_count":"15"},{"comment_id":"216538","upvote_count":"8","content":"Yes. There are several Kubernetes questions. I found this odd since all the study material from MS states they use the container registry.","timestamp":"1605006000.0","poster":"dirtygooback"}],"poster":"Leandromellor","timestamp":"1604657280.0"}],"timestamp":"2020-11-06 11:08:00","question_text":"DRAG DROP -\nYou are a developer for a software as a service (SaaS) company that uses an Azure Function to process orders. The Azure Function currently runs on an Azure\nFunction app that is triggered by an Azure Storage queue.\nYou are preparing to migrate the Azure Function to Kubernetes using Kubernetes-based Event Driven Autoscaling (KEDA).\nYou need to configure Kubernetes Custom Resource Definitions (CRD) for the Azure Function.\nWhich CRDs should you configure? To answer, drag the appropriate CRD types to the correct locations. Each CRD type may be used once, more than once, or not at all. You may need to drag the split bar between panes or scroll to view content.\nNOTE: Each correct selection is worth one point.\nSelect and Place:\n//IMG//","exam_id":48,"isMC":false,"question_id":80,"topic":"2","answer_description":"Box 1: Deployment -\nTo deploy Azure Functions to Kubernetes use the func kubernetes deploy command has several attributes that directly control how our app scales, once it is deployed to Kubernetes.\n\nBox 2: ScaledObject -\nWith --polling-interval, we can control the interval used by KEDA to check Azure Service Bus Queue for messages.\nExample of ScaledObject with polling interval\napiVersion: keda.k8s.io/v1alpha1\nkind: ScaledObject\nmetadata:\nname: transformer-fn\nnamespace: tt\nlabels:\ndeploymentName: transformer-fn\nspec:\nscaleTargetRef:\ndeploymentName: transformer-fn\npollingInterval: 5\nminReplicaCount: 0\nmaxReplicaCount: 100\n\nBox 3: Secret -\nStore connection strings in Kubernetes Secrets.\nExample: to create the Secret in our demo Namespace:\n# create the k8s demo namespace\nkubectl create namespace tt\n# grab connection string from Azure Service Bus\nKEDA_SCALER_CONNECTION_STRING=$(az servicebus queue authorization-rule keys list \\\n-g $RG_NAME \\\n--namespace-name $SBN_NAME \\\n--queue-name inbound \\\n-n keda-scaler \\\n--query \"primaryConnectionString\" \\\n-o tsv)\n# create the kubernetes secret\nkubectl create secret generic tt-keda-auth \\\n--from-literal KedaScaler=$KEDA_SCALER_CONNECTION_STRING \\\n--namespace tt\nReference:\nhttps://www.thinktecture.com/en/kubernetes/serverless-workloads-with-keda/","answers_community":[],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04273/0009100001.jpg"],"answer_ET":"","answer":"","url":"https://www.examtopics.com/discussions/microsoft/view/36239-exam-az-204-topic-2-question-2-discussion/","question_images":["https://www.examtopics.com/assets/media/exam-media/04273/0009000001.jpg"],"unix_timestamp":1604657280}],"exam":{"isMCOnly":false,"isImplemented":true,"provider":"Microsoft","lastUpdated":"12 Apr 2025","id":48,"isBeta":false,"numberOfQuestions":452,"name":"AZ-204"},"currentPage":16},"__N_SSP":true}