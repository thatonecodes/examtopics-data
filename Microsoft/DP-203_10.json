{"pageProps":{"questions":[{"id":"FHT5jxcqQFFEmIFjPNW8","question_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007200001.png"],"question_id":46,"question_text":"You are designing a slowly changing dimension (SCD) for supplier data in an Azure Synapse Analytics dedicated SQL pool.\nYou plan to keep a record of changes to the available fields.\nThe supplier data contains the following columns.\n//IMG//\n\nWhich three additional columns should you add to the data to create a Type 2 SCD? Each correct answer presents part of the solution.\nNOTE: Each correct selection is worth one point.","answer_ET":"ABE","answer_description":"","exam_id":67,"url":"https://www.examtopics.com/discussions/microsoft/view/67557-exam-dp-203-topic-1-question-34-discussion/","choices":{"B":"effective start date","E":"effective end date","D":"last modified date","F":"foreign key","C":"business key","A":"surrogate primary key"},"unix_timestamp":1639139220,"discussion":[{"timestamp":"1639187400.0","content":"Selected Answer: ABE\nThe answer is ABE. A type 2 SCD requires a surrogate key to uniquely identify each record when versioning. \n\nSee https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types under SCD Type 2 “ the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member.”\n\nA business key is already part of this table - SupplierSystemID. The column is derived from the source data.","poster":"ItHYMeRIsh","comment_id":"499044","comments":[{"timestamp":"1725395700.0","poster":"Bouhdy","upvote_count":"1","comment_id":"1277813","content":"Correct, the answer is ABE indeed ! \n\nType 2 SCD involves keeping a full history of changes to the data by creating new records for changes rather than overwriting old data. Each version of the record is identified by a surrogate key and is valid for a specific period, defined by the effective start and end dates."},{"comment_id":"753457","timestamp":"1671724740.0","poster":"Achu24","upvote_count":"4","content":"Correct"}],"upvote_count":"130"},{"upvote_count":"24","content":"Selected Answer: BCE\nWHAT ARE YOU GUYS TALKING ABOUT??? You are really misleading other people!!! No issue with the provided answer. Should be BCE!!!\n\nCheck this out:\nhttps://docs.microsoft.com/en-us/sql/integration-services/data-flow/transformations/slowly-changing-dimension-transformation?view=sql-server-ver15\n\"The Slowly Changing Dimension transformation requires at least one business key column.\"\n[Surrogate key] is not mentioned in this Microsoft documentation AT ALL!!!","poster":"CHOPIN","timestamp":"1641704940.0","comments":[{"timestamp":"1641876480.0","upvote_count":"4","comment_id":"521280","poster":"dev2dev","content":"Search for Business Keys in that page. and make sure you wear specs :D"},{"content":"Yes, because SupplierSystemID is unique. But Microsoft questions are terribly misleading here. People think that SupplierSystemID is business key because of Supplier in it. Also, there are some really not good and not sufficient examples on Learn. See https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","timestamp":"1641840120.0","upvote_count":"1","comment_id":"521044","comments":[{"comment_id":"1254624","timestamp":"1721864520.0","upvote_count":"1","poster":"practia","content":"https://learn.microsoft.com/en-us/training/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\nType 2 SCD: \"The table must also define a surrogate key because the business key (in this instance, employee ID) won't be unique.\""},{"comments":[{"comment_id":"581505","upvote_count":"3","content":"No you're not wrong, the unique identifier form the ERP system is the Business Key","poster":"Onobhas01","timestamp":"1649204400.0"}],"timestamp":"1645608060.0","upvote_count":"4","comment_id":"554347","poster":"Mad_001","content":"I don't understand. \n1) What in your opinion should then be the business key. Can you explain please.\n2) SupplierSysteID ist uniqe in the source system. Is there a definition that the column need to be unique also in the DataWarehouse? If no, there ist the possibility to use it as business key. Am I wrong?"}],"poster":"assU2"},{"comment_id":"641982","content":"https://www.mssqltips.com/sqlservertip/5602/why-surrogate-keys-are-needed-for-a-sql-server-data-warehouse/","poster":"muove","upvote_count":"1","timestamp":"1659540600.0"},{"content":"https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\n\nUnder Type 2 SCD, it indicates that it must have a surrogate key","upvote_count":"3","timestamp":"1675346100.0","poster":"SHENOOOO","comment_id":"796079"},{"content":"Look at the following Question #35 and you will understand quickly! ;-)","upvote_count":"1","poster":"auwia","comment_id":"936962","timestamp":"1687973640.0"},{"content":"@CHOPIN maybe, but the problem is that the question says \"which three columns should you Add\", and here the problem is Add. If the Business Key is already there should NOT be added, because is already there. You need a surrogate key.","upvote_count":"9","timestamp":"1663845660.0","poster":"bakstorage00001","comment_id":"676026"},{"upvote_count":"2","poster":"bhrz","content":"@CHOPIN the correct answer is ABE. Read the reference here https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","timestamp":"1663324620.0","comment_id":"670698"},{"content":"\"A Type 2 SCD supports versioning of dimension members. Often the source system doesn't store versions, so the data warehouse load process detects and manages changes in a dimension table. In this case, the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member. \"\nhttps://learn.microsoft.com/en-us/training/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","poster":"jds0","upvote_count":"2","comment_id":"853223","timestamp":"1680005940.0"}],"comment_id":"519908"},{"comment_id":"1356922","poster":"IMadnan","content":"Selected Answer: ABE\nThe answer is ABE. A type 2 SCD requires a surrogate key to uniquely identify each record when versioning.","timestamp":"1739635320.0","upvote_count":"1"},{"poster":"The_OTC","timestamp":"1735243680.0","content":"Selected Answer: BDE\nWhy not D: Last Modified Date ??????","upvote_count":"1","comment_id":"1332107"},{"upvote_count":"1","content":"Selected Answer: ABE\nCorrect Answer: ABE","poster":"EmnCours","comment_id":"1319014","timestamp":"1732768800.0"},{"poster":"jarobdataeng","timestamp":"1725644040.0","comment_id":"1279718","content":"In my humble opinion the SupplierSystemID column is the business key: it remains an IDENTIFY column to represent the surrogate key","upvote_count":"1"},{"poster":"iceberge","comment_id":"1255180","timestamp":"1721932440.0","content":"Copilot\nSent by Copilot:\nTo create a Type 2 Slowly Changing Dimension (SCD) in Azure Synapse Analytics, you should add the following three columns:\n\nA. Surrogate primary key\n\nThis uniquely identifies each version of a record, allowing you to track changes over time.\nB. Effective start date\n\nThis indicates when a particular version of the record became active.\nE. Effective end date\n\nThis indicates when a particular version of the record was superseded by a new version.\nThese columns help maintain historical data by creating new records for each change, rather than updating existing records. This way, you can track the history of changes to the supplier data.","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: AB\nThe surrogate key is a must, so the proposed answer is incorrect in my view. The start date and end date for each record have always been an over-design in my view. This means that you have to maintain both records. The latest record of the set with the same business key is the latest record, and you only need one date, the valid from date, in that row. I have long stopped versioning with valid from and valid to dates. You can easily use a simple lag function to grab a previous valid to date for the previous record, which is then the valid from date for the latest record. So why still use both dates?","poster":"Okkier","comment_id":"1243325","timestamp":"1720262940.0"},{"poster":"sergio_eduardo","comment_id":"1217331","timestamp":"1716541920.0","upvote_count":"1","content":"Selected Answer: ABE\nThe answer is ABE, you need subrogate key,"},{"poster":"codedev91","upvote_count":"2","comment_id":"1207203","content":"Selected Answer: ABE\nABE\nSCD Type 2 doesn't work with business key it requires a surrogate key to uniquely identify each record when versioning., \nfor example - an employee can have a unique key(i.e. Business key) in the organization, but when you create SCD Type 2, you need to preserve historical data, hence then even a unique key of an Employee can't uniquely different the record but Surrogate key will do it.","timestamp":"1714974840.0"},{"content":"ABE; SupplierSystemId is a business key","poster":"Dusica","upvote_count":"1","timestamp":"1714466580.0","comment_id":"1204424"},{"upvote_count":"1","comment_id":"1199032","poster":"olayvo","content":"I think ABE, see as below:\n\"A Type 2 SCD supports versioning of dimension members. Often the source system doesn't store versions, so the data warehouse load process detects and manages changes in a dimension table. In this case, the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member. It also includes columns that define the date range validity of the version (for example, StartDate and EndDate) and possibly a flag column (for example, IsCurrent) to easily filter by current dimension members.\"\nhttps://learn.microsoft.com/en-us/training/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","timestamp":"1713603900.0"},{"content":"Selected Answer: ABE\nSurrogate primary key (ensure to include edited records) - A, effective start date - B, effective end date - E","timestamp":"1711516080.0","poster":"dgerok","upvote_count":"2","comment_id":"1183870"},{"poster":"ulrom","timestamp":"1711360320.0","comment_id":"1182365","upvote_count":"2","content":"Should be ABE. According to a Microsoft learning SCD Type 2 requires a surrogate key.\n\n\"A Type 2 SCD supports versioning of dimension members. Often the source system doesn't store versions, so the data warehouse load process detects and manages changes in a dimension table. In this case, the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member.\"\n\nhttps://learn.microsoft.com/en-us/training/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types"},{"upvote_count":"1","comment_id":"1147956","content":"The surrogate key is an artificially generated key, usually an incremental or globally unique identifier.\nBusiness key derived from the actual business data and has business meaning. Examples could include a product code, customer ID, employee ID, or any other identifier that has relevance in the business context.\n\n\nI think this is it's business key \nEffective end and start date","timestamp":"1707732120.0","poster":"j888"},{"upvote_count":"2","comment_id":"1140641","content":"Selected Answer: ABE\nSelected Answer: ABE\n\nThe answer is ABE. A type 2 SCD requires a surrogate key to uniquely identify each record when versioning.\n\nSee https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types under SCD Type 2 “ the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member.”\n\nA business key is already part of this table - SupplierSystemID. The column is derived from the source data.","poster":"rocky48","timestamp":"1707101040.0"},{"upvote_count":"3","comment_id":"1088649","timestamp":"1701795420.0","content":"I'm working now more then 13years with this stuff, ABE is correct. CHOPIN is wrong.\na 2 SCD needs a unique ID, this is the surrogate key, \nbesides, in the table given, there is already a business key , is the first column\nA business key is NOT unique in an 2 SCD\nhallo","poster":"blazy001"},{"upvote_count":"1","content":"Selected Answer: ABE\nSurrogate Key\nEffective Start Date\nEffective End Date","poster":"hassexat","comment_id":"1001236","timestamp":"1694068440.0"},{"timestamp":"1693744200.0","upvote_count":"1","comment_id":"997607","content":"Selected Answer: BCE\nBCE is answer","poster":"kkk5566"},{"comment_id":"993551","content":"How come it can be anything other than ABE.\nABE is the correct answer.","upvote_count":"2","poster":"subhraz","timestamp":"1693349220.0"},{"content":"To create a Type 2 Slowly Changing Dimension (SCD) in Azure Synapse Analytics dedicated SQL pool for supplier data, you would need to add the following three additional columns:\n\nA. Surrogate Primary Key: This column is a unique identifier for each supplier record and is used as a primary key in the dimension table.\n\nB. Effective Start Date: This column indicates the date when a particular version of the supplier data becomes effective or active.\n\nE. Effective End Date: This column indicates the date when a particular version of the supplier data becomes obsolete or inactive. It is usually set to a specific value (e.g., '9999-12-31') to indicate the current active record.\n\nWith these three additional columns, you can effectively manage historical changes to the supplier data and track different versions of each supplier record over time.","timestamp":"1690869240.0","poster":"Amitj2625","upvote_count":"6","comment_id":"968765"},{"timestamp":"1687168560.0","upvote_count":"1","poster":"amirshaz","comment_id":"927349","content":"Selected Answer: ABE\nThe Supplier Key from the ERP system is the business key, hence we need a surrogate key"},{"comment_id":"884819","poster":"SinSS","timestamp":"1682819220.0","content":"Business key is already there, SupplierSystemId","upvote_count":"2"},{"comment_id":"884817","content":"Selected Answer: ABE\nABE is correct","timestamp":"1682819100.0","poster":"SinSS","upvote_count":"1"},{"content":"Selected Answer: ABE\nTo create a Type 2 SCD, you should add the following three additional columns to the data:\n\nA. surrogate primary key: This is a unique identifier for each record in the table.\nB. effective start date: This is the date and time when the record becomes effective.\nE. effective end date: This is the date and time when the record is no longer effective.\n\nSo the correct options are A, B, and E.","upvote_count":"2","comment_id":"879570","poster":"mgastalho","timestamp":"1682357220.0"},{"content":"To create a Type 2 slowly changing dimension (SCD) for supplier data in an Azure Synapse Analytics dedicated SQL pool, the following three additional columns should be added to the data:\n\nA. surrogate primary key: A surrogate key is used as a primary key to uniquely identify each record in the dimension table.\n\nB. effective start date: This column represents the date when the current version of the supplier data became effective.\n\nE. effective end date: This column represents the date when the current version of the supplier data will end, or become ineffective.\n\nTherefore, the correct options are A, B, and E.","poster":"divadbou","upvote_count":"1","timestamp":"1681975080.0","comment_id":"875365"},{"content":"Selected Answer: ABE\nTo create a Type 2 slowly changing dimension (SCD) for supplier data in an Azure Synapse Analytics dedicated SQL pool, in addition to the existing columns, the following three additional columns should be added:\n\nB. Effective start date - This column specifies the date and time when the supplier record becomes active or effective.\n\nE. Effective end date - This column specifies the date and time when the supplier record is no longer active or effective.\n\nA. Surrogate primary key - This column is used as a unique identifier for each supplier record and can be used as a foreign key in other tables.\n\nOption C (business key) is not mandatory for creating a Type 2 SCD, but it can be used to ensure the uniqueness of each supplier record.","timestamp":"1678808280.0","poster":"esaade","upvote_count":"1","comment_id":"838987"},{"poster":"Anshuman_B","comment_id":"798349","upvote_count":"1","timestamp":"1675542540.0","content":"Selected Answer: BCE\nIf option C - Business Key is a composite key that needs to be added then answer is BCE.\nOtherwise ABE. In both cases, the concept is we need a column that uniquely identifies each row."},{"upvote_count":"1","poster":"vrodriguesp","timestamp":"1675414380.0","comment_id":"796897","content":"Selected Answer: ABE\nbecause I think the SupplierSystemId it's business key."},{"upvote_count":"4","timestamp":"1674225960.0","poster":"JosephVishal","comment_id":"782365","content":"Since, the SupplierSystemId is an entity from Source ERP, it is business key. Hence, answer is \n1.) Surrogate Primary Key\n2.) Effective Start Date\n3.) Effective End Date"},{"timestamp":"1673715060.0","content":"Selected Answer: ABE\nThe answer is ABE","upvote_count":"2","poster":"Venub28","comment_id":"775750"},{"timestamp":"1673017500.0","poster":"urielramoss","content":"Selected Answer: ABE\nThe answer is ABE.","upvote_count":"3","comment_id":"767819"},{"timestamp":"1672163100.0","content":"ABE - here's why\nEffective start date: This column should be used to store the date on which a particular record becomes effective. This will allow you to track the history of changes to the data over time.\n\nEffective end date: This column should be used to store the date on which a particular record becomes no longer effective. This will allow you to track the history of changes to the data over time, and to easily identify the current valid record for each supplier.\n\nSurrogate primary key: This column should be used as a unique identifier for each record in the SCD. It can be used to join the SCD to other tables, and to ensure that there are no duplicate records in the SCD.","poster":"akk_1289","comment_id":"758864","upvote_count":"3"},{"poster":"Alan_CA","timestamp":"1669068000.0","upvote_count":"1","content":"Selected Answer: ABE\nThe answer is ABE","comment_id":"723964"},{"poster":"Aslan_KZ","upvote_count":"1","timestamp":"1668327960.0","content":"Selected Answer: ABE\nThe table should include [start] and [end date] values to define the time validity. The table must also define a [surrogate key] because the business key won't be unique.\nhttps://learn.microsoft.com/en-us/training/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","comment_id":"717182"},{"timestamp":"1665554580.0","content":"Selected Answer: BCE\nJust check the table above, it already has a UNIQUE id key, so another surrogate key is not necessary, so A. However it does need a business key, so C. BE for the type 2 SCD.","upvote_count":"1","poster":"JellyFishKing","comment_id":"692725"},{"comment_id":"672528","upvote_count":"5","timestamp":"1663516500.0","content":"Selected Answer: ABE\nShould be ABE. Since it is SCD Type 2 when another row is added the business key will be duplicated. So it wont uniquely identify a row. So that's the reason surrogate key is required.","poster":"rohanb1986"},{"comment_id":"654155","poster":"Hema_V","timestamp":"1661872620.0","content":"Selected Answer: ABE\nThe dimension table must use a surrogate key to provide a unique reference to a version of the dimension member. It also includes columns that define the date range validity of the version (for example, StartDate and EndDate) and possibly a flag column (for example, IsCurrent) to easily filter by current dimension members.\nReference: https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","upvote_count":"4"},{"content":"Selected Answer: ABE\ncorrect","upvote_count":"3","comment_id":"646863","poster":"Deeksha1234","timestamp":"1660494480.0"},{"timestamp":"1658841300.0","content":"Selected Answer: ABE\nhttps://sqlserverplanet.com/data-warehouse/how-to-create-a-type2-scd-slowly-changing-dimension","poster":"Janisys","upvote_count":"1","comment_id":"637426"},{"comment_id":"636675","poster":"Deeksha1234","content":"ABE is correct","upvote_count":"2","timestamp":"1658748720.0"},{"poster":"georgiakon","comment_id":"620293","content":"Selected Answer: ABE\nBusiness key is already there (see the description of SupplierSystemID). Thus a surrogate key is needed - so as to uniquely identify the record in the database - as well as the start/end dates to show which is the currently valid record.","timestamp":"1655890680.0","upvote_count":"5"},{"content":"ABE seems correct. Why not business key is already discussed. Why not foreign key? one reason: Foreign key constraint is not supported in dedicated SQL pool.","poster":"shrikantK","comment_id":"603856","timestamp":"1652961060.0","upvote_count":"2"},{"poster":"gabdu","content":"why is there no mention of flag?","timestamp":"1651486080.0","upvote_count":"2","comment_id":"595987"},{"upvote_count":"4","comment_id":"593471","timestamp":"1651112400.0","content":"Selected Answer: ABE\nPlease, SupplierSystemID is unique in ERP, that not mean that must be unique in our DW, that's why we need a surrogate primary key, If don't, SCD type 2 can't be implemented","poster":"necktru"},{"content":"Selected Answer: ABE\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","comment_id":"592986","upvote_count":"2","poster":"Andushi","timestamp":"1651049220.0"},{"upvote_count":"5","content":"Selected Answer: ABE\nABE - very clear answer if you know what a type 2 SCD is. you will need a new surrogate key. the business key is already there - it's SupplierSystemID - and will stay the same over time = will not be unique when anything changes as we will insert a new row then.","timestamp":"1648464660.0","poster":"ladywhiteadder","comment_id":"576772"},{"comments":[{"content":"Good answer! It's worth talking about the business key, since that is the controversial bit. \nThere needs to be something that functions as a business key, in this case it can be the SupplierSystemID.\nThe Current Flag is not strictly needed, the solution would function okay without it, but I would include it in real life anyway for performance and ease of querying (it's also not shown as an option).","upvote_count":"2","timestamp":"1650948960.0","poster":"KashRaynardMorse","comment_id":"592093","comments":[{"timestamp":"1650949380.0","poster":"KashRaynardMorse","content":"And to add, the question is what \"additional\" columns are needed. So emphasising, although a business key is definitely needed, the column that serves it's purpose is already present (albeit with a different column name), so does not need adding again.","upvote_count":"1","comment_id":"592098"}]}],"comment_id":"539415","content":"Selected Answer: ABE\nType 2\n\nIn order to support type 2 changes, we need to add four columns to our table:\n\n· Surrogate Key – the original ID will no longer be sufficient to identify the specific record we require, we therefore need to create a new ID that the fact records can join to specifically.\n\n· Current Flag – A quick method of returning only the current version of each record\n\n· Start Date – The date from which the specific historical version is active\n\n· End Date – The date to which the specific historical version record is active\n\nhttps://adatis.co.uk/introduction-to-slowly-changing-dimensions-scd-types/","upvote_count":"7","poster":"kilowd","timestamp":"1643866920.0"},{"comment_id":"534705","timestamp":"1643375580.0","poster":"stunner85_","content":"Here's why the answer is Surrogate Key and not Business key:\n\nIn a temporal database, it is necessary to distinguish between the surrogate key and the business key. Every row would have both a business key and a surrogate key. The surrogate key identifies one unique row in the database, the business key identifies one unique entity of the modeled world.","upvote_count":"4"},{"upvote_count":"2","comment_id":"533717","poster":"m0rty","timestamp":"1643285700.0","content":"Selected Answer: ABE\ncorrecto"},{"upvote_count":"1","timestamp":"1643279220.0","comment_id":"533660","poster":"PallaviPatel","content":"Selected Answer: ABE\nthese are correct answers."},{"content":"Totally agree with Chopin, SCD type 2 tables require at least a Business Key column and a start and end date to capture historical dat, thus BCE is the correct answer.\nhttps://docs.microsoft.com/en-us/sql/integration-services/data-flow/transformations/slowly-changing-dimension-transformation","comment_id":"527298","upvote_count":"1","timestamp":"1642578540.0","poster":"Hervedoux"},{"poster":"Mahesh_mm","comment_id":"510403","content":"ABE is correct","upvote_count":"2","timestamp":"1640617200.0"},{"content":"Selected Answer: ABE\nA B E.... Surrogate Key s required.","comment_id":"506807","poster":"gitoxam686","timestamp":"1640159760.0","upvote_count":"3"},{"content":"Selected Answer: ABE\nez ezez","upvote_count":"1","comment_id":"506158","poster":"KevinSames","timestamp":"1640094960.0"},{"timestamp":"1639508100.0","upvote_count":"1","comment_id":"501618","poster":"m2shines","content":"A, B and E"},{"comments":[{"comments":[{"upvote_count":"3","timestamp":"1651112280.0","comment_id":"593470","poster":"necktru","content":"It's unique in the ERP, in the DW can be duplicated, it's why we need the surrogate pk that must be unique, answers are ABE"}],"timestamp":"1641841080.0","comment_id":"521057","poster":"assU2","content":"It's not a business key, its unique. And business key may not be unique because it's 2 SCD. You can have multiple rows for one entity with different start/end dates.","upvote_count":"2"}],"upvote_count":"2","timestamp":"1639175700.0","comment_id":"498986","content":"shouldn't it be ABE? we already have a business key! we need a surrogate to use as a primary key when a supplier with updated attributes is to be inserted into the table","poster":"Nifl91"},{"content":"It should be surrogate Key SupplierSystemID is already a business key avaialble","timestamp":"1639139220.0","comment_id":"498611","upvote_count":"1","poster":"PalamKaloki"}],"timestamp":"2021-12-10 13:27:00","answers_community":["ABE (87%)","12%"],"isMC":true,"answer":"ABE","answer_images":[],"topic":"1"},{"id":"Afk6yfxqCWqloZq21jTW","discussion":[{"timestamp":"1643279400.0","poster":"PallaviPatel","content":"Answer correct.","comment_id":"533664","upvote_count":"26"},{"upvote_count":"8","poster":"ajhak","content":"Always denormalize when moving from database to date warehouse.","comment_id":"900504","timestamp":"1684356960.0","comments":[{"content":"God no! Only dimensional models, read Inmon and Lindstedt approach.","timestamp":"1684837320.0","upvote_count":"2","poster":"Rob77","comment_id":"904810"}]},{"content":"Why Denormalizing to 2nd Normal Form (2NF) is CORRECT?: In a star schema, dimension tables are typically denormalized to reduce the number of joins required during query execution. This denormalization improves query performance, particularly in read-heavy workloads typical in analytics environments like Azure Synapse. Denormalizing to 2NF involves reducing the number of tables and increasing the redundancy within the dimension tables, which is beneficial for faster reads.\n\nMaintaining 3NF: While 3rd Normal Form (3NF) minimizes redundancy and ensures data integrity, it also requires more complex joins during queries, which can slow down read operations in a star schema designed for analytics.","upvote_count":"3","comment_id":"1268753","timestamp":"1724075820.0","poster":"roopansh.gupta2"},{"poster":"kkk5566","timestamp":"1693744380.0","comment_id":"997611","upvote_count":"2","content":"denormalizing and IDENTITY"},{"timestamp":"1675346220.0","poster":"SHENOOOO","comment_id":"796081","upvote_count":"3","content":"Answer Is correct"},{"upvote_count":"3","timestamp":"1658752260.0","poster":"Deepshikha1228","comment_id":"636700","content":"Answer is correct"},{"comment_id":"602625","upvote_count":"6","poster":"JimZhang4123","content":"'The solution must optimize read operations.' means denormalization","timestamp":"1652711460.0"},{"upvote_count":"1","timestamp":"1640617440.0","content":"Answers are correct","comment_id":"510406","poster":"Mahesh_mm"},{"content":"answer is correct","poster":"PallaviPatel","timestamp":"1639991760.0","comment_id":"505296","upvote_count":"4"},{"upvote_count":"1","content":"While denormalizing does require implementing a lower level of normalization, the second normal form ONLY applies when a table has a composite primary key. https://www.geeksforgeeks.org/second-normal-form-2nf/","comment_id":"499487","timestamp":"1639237380.0","poster":"moreinva43"}],"answer_ET":"","unix_timestamp":1639237380,"question_text":"HOTSPOT -\nYou have a Microsoft SQL Server database that uses a third normal form schema.\nYou plan to migrate the data in the database to a star schema in an Azure Synapse Analytics dedicated SQL pool.\nYou need to design the dimension tables. The solution must optimize read operations.\nWhat should you include in the solution? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","answers_community":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007400001.png"],"isMC":false,"exam_id":67,"answer_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007400002.jpg","https://www.examtopics.com/assets/media/exam-media/04259/0007500001.jpg"],"question_id":47,"topic":"1","answer":"","answer_description":"Box 1: Denormalize to a second normal form\nDenormalization is the process of transforming higher normal forms to lower normal forms via storing the join of higher normal form relations as a base relation.\nDenormalization increases the performance in data retrieval at cost of bringing update anomalies to a database.\n\nBox 2: New identity columns -\nThe collapsing relations strategy can be used in this step to collapse classification entities into component entities to obtain flat dimension tables with single-part keys that connect directly to the fact table. The single-part key is a surrogate key generated to ensure it remains unique over time.\nExample:\n\nNote: A surrogate key on a table is a column with a unique identifier for each row. The key is not generated from the table data. Data modelers like to create surrogate keys on their tables when they design data warehouse models. You can use the IDENTITY property to achieve this goal simply and effectively without affecting load performance.\nReference:\nhttps://www.mssqltips.com/sqlservertip/5614/explore-the-role-of-normal-forms-in-dimensional-modeling/ https://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-tables-identity","timestamp":"2021-12-11 16:43:00","url":"https://www.examtopics.com/discussions/microsoft/view/67637-exam-dp-203-topic-1-question-35-discussion/"},{"id":"So5NzbSPvChZhaWqC1gf","url":"https://www.examtopics.com/discussions/microsoft/view/67646-exam-dp-203-topic-1-question-36-discussion/","answer_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007700001.png"],"discussion":[{"upvote_count":"24","comment_id":"510408","content":"Answers are correct","poster":"Mahesh_mm","timestamp":"1656335220.0"},{"upvote_count":"9","poster":"Aslam208","timestamp":"1654959240.0","comment_id":"499533","content":"correct"},{"timestamp":"1727409660.0","content":"The answer is correct","upvote_count":"2","poster":"dgerok","comment_id":"1183900"},{"content":"Got this question on my exam on january 17, the answer is correct","poster":"ELJORDAN23","upvote_count":"7","timestamp":"1721312640.0","comment_id":"1126045"},{"timestamp":"1710500520.0","content":"Answers are correct","poster":"hodashiyam","upvote_count":"1","comment_id":"1008305"},{"timestamp":"1709476860.0","poster":"kkk5566","content":"correct","upvote_count":"1","comment_id":"997612"},{"comment_id":"727884","content":"Why parquet option? Can anyone explain.","upvote_count":"3","timestamp":"1685145060.0","poster":"Rrk07","comments":[{"timestamp":"1704187380.0","content":"I guess because of the requirement \"reducing storage costs\"","poster":"DataSaM","comment_id":"940616","upvote_count":"6"},{"content":"The solution must minimize storage costs.","timestamp":"1698880080.0","poster":"steveo123","comment_id":"886745","upvote_count":"6"},{"poster":"phydev","content":"Because Parquet is always the answer.","upvote_count":"32","timestamp":"1714159320.0","comment_id":"1054864"}]},{"upvote_count":"6","comment_id":"726972","content":"Can somebody explain why are we partitioning by StoreId, Year, Month, Day and Hour instead of just StoreID and Hour?","comments":[{"upvote_count":"41","content":"if partitioned by storeid and hour only, the same hours from different days would go to the same partition, that would be innefficient","comment_id":"729195","timestamp":"1685275440.0","poster":"dduque10"}],"poster":"gabrielkuka","timestamp":"1685026980.0"},{"upvote_count":"3","comment_id":"658396","comments":[{"timestamp":"1686328980.0","upvote_count":"7","poster":"uira","comment_id":"740352","comments":[{"upvote_count":"1","comment_id":"1336194","poster":"hypersam","timestamp":"1735946880.0","content":"saveAsTable default saves as delta table, which is parquet but with additional _delta_log"}],"content":"Parquet is columnar, so faster to be read by Azure Synapse Analytics via CETAs."}],"content":"Can someone explain why parquet and not saveAsTable option?","timestamp":"1677851400.0","poster":"Keerthi24"},{"timestamp":"1674659340.0","upvote_count":"3","poster":"Deeksha1234","comment_id":"636721","content":"given answers are correct"},{"content":"Correct","poster":"hm358","upvote_count":"2","comment_id":"615348","timestamp":"1670859600.0"},{"poster":"sparkchu","comment_id":"578086","timestamp":"1664518680.0","upvote_count":"4","content":"ans should be saveAsTable. format is defined by format() method."},{"comment_id":"521113","timestamp":"1657477140.0","comments":[{"upvote_count":"11","poster":"bhanuprasad9331","timestamp":"1660373520.0","comment_id":"546337","content":"There should be a different folder for each store. Partitioning will create separate folder for each storeId. In bucketing, multiple stores having same hash value can be present in the same file, so multiple storeIds can be present under a single file."},{"content":"Bucketing feature (part of data skipping index) was removed and microsoft recommends using DeltaLake, which uses the partition syntax. \nhttps://docs.microsoft.com/en-us/azure/databricks/spark/latest/spark-sql/dataskipping-index","poster":"KashRaynardMorse","timestamp":"1666761240.0","comment_id":"592102","upvote_count":"6"},{"comment_id":"521119","upvote_count":"2","content":"Is it a question of correct syntax (numBuckets int the number of buckets to save) or is it smth else?","timestamp":"1657477620.0","poster":"assU2"}],"content":"Can anyone explain why it's Partitioning and not Bucketing pls?","upvote_count":"6","poster":"assU2"}],"timestamp":"2021-12-11 17:54:00","exam_id":67,"answer_ET":"","question_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007500010.png","https://www.examtopics.com/assets/media/exam-media/04259/0007600002.png"],"answers_community":[],"question_id":48,"question_text":"HOTSPOT -\nYou plan to develop a dataset named Purchases by using Azure Databricks. Purchases will contain the following columns:\n✑ ProductID\n✑ ItemPrice\n✑ LineTotal\n✑ Quantity\n✑ StoreID\n✑ Minute\n✑ Month\n✑ Hour\n\nYear -\n//IMG//\n\n✑ Day\nYou need to store the data to support hourly incremental load pipelines that will vary for each Store ID. The solution must minimize storage costs.\nHow should you complete the code? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","isMC":false,"unix_timestamp":1639241640,"answer_description":"Box 1: partitionBy -\nWe should overwrite at the partition level.\nExample:\ndf.write.partitionBy(\"y\",\"m\",\"d\")\n.mode(SaveMode.Append)\n.parquet(\"/data/hive/warehouse/db_name.db/\" + tableName)\nBox 2: (\"StoreID\", \"Year\", \"Month\", \"Day\", \"Hour\", \"StoreID\")\nBox 3: parquet(\"/Purchases\")\nReference:\nhttps://intellipaat.com/community/11744/how-to-partition-and-write-dataframe-in-spark-without-deleting-partitions-with-no-new-data","topic":"1","answer":""},{"id":"WfKjLREvEA3kJoz1wcrX","exam_id":67,"answer_ET":"A","choices":{"D":"2,400","C":"400","B":"240","A":"40"},"answers_community":["A (76%)","10%","8%"],"answer_description":"","topic":"1","answer":"A","unix_timestamp":1639242000,"url":"https://www.examtopics.com/discussions/microsoft/view/67647-exam-dp-203-topic-1-question-37-discussion/","question_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007700003.png"],"timestamp":"2021-12-11 18:00:00","question_id":49,"discussion":[{"content":"correct","comment_id":"499537","poster":"Aslam208","timestamp":"1639242000.0","upvote_count":"26"},{"comments":[{"comment_id":"880338","content":"Another way to think about this:\n\nThe number of records for the period stated = 2.4 billion\nNumber of underlying (\"automatic\") distributions: 60\n\n2.4 billion / 60 distributions = 40 million rows\n40 million / 40 partitions = 1 million rows\n\nAs stated, 1 million rows per distribution are optimal for compression and performance. Divide the 40 million rows with the other partitioning options and you have too few rows per distribution -> suboptimal.","upvote_count":"5","poster":"zekescookies","timestamp":"1682424840.0"},{"upvote_count":"1","content":"Thank you for your comment. I do not agree. Your logic conflates rowgroups with table partitions. You don't define partitions specifically for each distribution. The 60 distributions operate automatically, regardless of how many partitions you define.Table partitions are logical divisions, and Azure Synapse automatically handles the data distribution within each partition across its 60 distributions.\nIf you only define 40 partitions, each partition would hold 2.4 billion ÷ 40 = 60 million rows.2.4 billion ÷ 40 = 60 million rows. This would make partitions very large and reduce the effectiveness of partition elimination, especially for date-based queries.\n\n240 partitions aligns better with the guideline of 1–10 million rows per partition, allowing better granularity and performance for large-scale data.","poster":"JustImperius","comments":[{"comment_id":"1342727","poster":"JustImperius","timestamp":"1737232920.0","content":"Upon further review of the documentation it is clearly stated...Guess I was wrong.\n\n\"If you partition your data, each partition will need to have 1 million rows to benefit from a clustered columnstore index. For a table with 100 partitions, it needs to have at least 6 billion rows to benefit from a clustered columns store (60 distributions 100 partitions 1 million rows).\n\nIf your table doesn't have 6 billion rows, you have two main options. Either reduce the number of partitions or consider using a heap table instead. It also may be worth experimenting to see if better performance can be gained by using a heap table with secondary indexes rather than a columnstore table.?\"\n\nhttps://learn.microsoft.com/en-us/azure/synapse-analytics/sql/best-practices-dedicated-sql-pool","upvote_count":"1"}],"timestamp":"1737232020.0","comment_id":"1342708"}],"content":"No of automatic Distributions is 60. So each distribution will have 2.4 B / 60 = 40M. For a good performance each partition within a distribution ( some time called buckets of data ) should have 1M rows per bucket. So 40M / 1M = 40 partitions.","timestamp":"1676043240.0","upvote_count":"19","comment_id":"804512","poster":"AZLearn111"},{"upvote_count":"1","content":"Selected Answer: D\n1 million in every partition is the best performance","comment_id":"1354128","poster":"samirarian","timestamp":"1739135160.0"},{"content":"Selected Answer: B\n240 partitions balances the data across partitions, with each partition handling approximately 10 million rows:\nRows per partition\n=\n2.4\n billion rows\n240\n partitions\n=\n10\n million rows per partition\n.\nRows per partition= \n240 partitions\n2.4 billion rows\n\n =10 million rows per partition","poster":"iam_momo88","upvote_count":"2","comment_id":"1333958","timestamp":"1735544100.0"},{"upvote_count":"2","content":"Selected Answer: B\nIsn't the question about finding the total number of partitions, not partitions per distribution. Dividing the total rows (2.4B) by 10M gives 240 partitions, which falls within the optimal range of 1–60M rows per partition. \nAm I missing something?\nThe most voted answer and the other comments are to find partition within each distribution.","comment_id":"1333324","poster":"Parakkal","timestamp":"1735447200.0"},{"timestamp":"1733140800.0","comment_id":"1320927","upvote_count":"2","content":"Selected Answer: D\nLes index columnstore fonctionnent de manière optimale lorsqu'une partition contient environ 1 million de lignes par segment de colonne. Vous avez 2,4 milliards d'enregistrements. Diviser ces données pour que chaque partition contienne au moins 1 million de lignes donne :\n\nNombre optimal de partitions\n=\n2\n,\n4\n \nmilliards\n1\n \nmillion\n=\n2400\nNombre optimal de partitions= \n1million\n2,4milliards\n\n =2400\n2400 partitions garantiront que chaque partition est suffisamment compacte pour une compression efficace et des performances optimales.","poster":"moize"},{"poster":"e56bb91","comment_id":"1243942","content":"Selected Answer: A\n2.4B = 2400M\n2400/60 = 40","timestamp":"1720372620.0","upvote_count":"1"},{"poster":"Danweo","comment_id":"1243309","timestamp":"1720260540.0","content":"Selected Answer: A\nA is correct","upvote_count":"1"},{"content":"Selected Answer: A\n2,400,000,000 / 60,000,000 = 40","comment_id":"1001237","timestamp":"1694068800.0","upvote_count":"2","poster":"hassexat"},{"timestamp":"1693744920.0","content":"Selected Answer: A\nA is correct","comment_id":"997613","poster":"kkk5566","upvote_count":"1"},{"content":"Selected Answer: A\nOPTION A","upvote_count":"1","timestamp":"1691389560.0","poster":"akhil5432","comment_id":"974444"},{"content":"Selected Answer: A\nConsidering that:\nHaving too many partitions can reduce the effectiveness of clustered columnstore indexes\nif each partition has fewer than 1 million rows. \nDedicated SQL pools automatically partition your data into 60 databases\nSo a table with no partiton (or just one partition) has 60Milion of records\n\nI have use this logic, simple proportion:\n\n1 partion : 60M = x = 2.4 B ==> 1 : 60 M = x : 2400 M ==> x = 2400 / 60 ==> x = 40 partitions","poster":"vrodriguesp","comments":[{"timestamp":"1675872660.0","poster":"vrodriguesp","comment_id":"802220","content":"1 partion : 60M = x : 2.4 B\n1 partion : 60 M = x : 2400 M\n ==> x = 2400 / 60 \n ==> x = 40 partitions","upvote_count":"3"}],"comment_id":"802218","timestamp":"1675872540.0","upvote_count":"3"},{"content":"Selected Answer: A\nCorrect Answer","upvote_count":"1","poster":"SHENOOOO","timestamp":"1675348320.0","comment_id":"796121"},{"comment_id":"686069","timestamp":"1664876340.0","poster":"NORLI","content":"Very simple go with the smallest partition because too many partitions affect peformance","upvote_count":"4"},{"content":"Selected Answer: A\n2,4bn/60=40M","timestamp":"1662228780.0","upvote_count":"13","comment_id":"658726","poster":"dom271219"},{"timestamp":"1660495020.0","upvote_count":"1","comment_id":"646864","content":"Selected Answer: A\ncorrect","poster":"Deeksha1234"},{"upvote_count":"1","content":"Selected Answer: A\nOptimal distribution is up to 60 instances","poster":"hm358","timestamp":"1655041320.0","comment_id":"615349"},{"comment_id":"606943","poster":"sdokmak","timestamp":"1653433740.0","content":"Selected Answer: A\nquick maths","upvote_count":"3"},{"poster":"MS_Nikhil","comment_id":"594248","upvote_count":"1","content":"Selected Answer: A\nA is correct","timestamp":"1651210320.0"},{"poster":"Egocentric","timestamp":"1649706900.0","comment_id":"584396","content":"correct","upvote_count":"1"},{"upvote_count":"2","poster":"Twom","comment_id":"567527","content":"Selected Answer: A\nCorrect","timestamp":"1647248400.0"},{"poster":"jskibick","comment_id":"554372","content":"Selected Answer: A\nI am also confused.\n\nSo we have 2.400.000.000 rows that are already split in 60 nodes od SQL DW. That makes\n40.000.000 per node. \n\nNow is question how to order partitions to obtain efficiency for CCI.\n\nNext, we know the partitions will be divided into CCI segments ~1mln per each. And here is my problem. Because CCI will autosplit data in partitions into 1mln row segments. We do not have to do it on our own in partitions. I would split data into monthly partitions i.e. #24 for 2 year, 2019 and 2020. The segments will autosplit partitions.\n\nBut there is not such answer. \n\nI will have to go with A = 40","timestamp":"1645613040.0","upvote_count":"6"},{"timestamp":"1644530400.0","poster":"Justin_beswick","content":"Selected Answer: C\nThe Rule is Partitions= Records/(1 million * 60)\n24,000,000,000/60,000,000 = 400","upvote_count":"5","comments":[{"content":"it's 2.4 billion, not 24 billion","poster":"helpaws","comment_id":"550523","upvote_count":"15","timestamp":"1645223460.0"},{"content":"The Rule is Partitions= Records/(1 million * 60)\n2,400,000,000/60,000,000 = 40","upvote_count":"11","comment_id":"545968","timestamp":"1644680880.0","poster":"AlvaroEPMorais"},{"comment_id":"788859","timestamp":"1674746880.0","content":"2,400,000,000/60,000,000 = 40","poster":"panda_azzurro","upvote_count":"1"}],"comment_id":"544895"},{"comment_id":"521383","poster":"dev2dev","upvote_count":"2","timestamp":"1641889380.0","content":"Are you suggesting create 40 partitions on ProductId? This is confusing. If you create 40 partitions, SQL Pool will create 40*60 partitions which is 2400. And documentation says create fewer partitions. If we want to create paritions by year then we can create 2 partitions for two years which internally creates 2*60 = 120 paritions, but extra 2 paritions for outer boundaries will make it 4*60 = 240. So 240 paritions for 2.4 billion rows is ideal. But what is confusing me is we creat only 4 paritions which is not even in options"},{"content":"A distributed table appears as a single table, but the rows are actually stored across 60 distributions.\n60 is for distribution, not partition.","comment_id":"521209","comments":[{"timestamp":"1641863820.0","comment_id":"521213","poster":"Canary_2021","upvote_count":"1","content":"If you partition your data, each partition will need to have 1 million rows to benefit from a clustered columnstore index. For a table with 100 partitions, it needs to have at least 6 billion rows to benefit from a clustered columns store (60 distributions 100 partitions 1 million rows)."},{"poster":"Muishkin","timestamp":"1651050060.0","comment_id":"592990","upvote_count":"1","content":"So then how do we calculate the number of partitions?Is'nt it user driven ?"}],"upvote_count":"3","timestamp":"1641863040.0","poster":"Canary_2021"},{"poster":"Mahesh_mm","timestamp":"1640617860.0","upvote_count":"1","content":"correct","comment_id":"510411"}],"question_text":"You are designing a partition strategy for a fact table in an Azure Synapse Analytics dedicated SQL pool. The table has the following specifications:\n✑ Contain sales data for 20,000 products.\nUse hash distribution on a column named ProductID.\n//IMG//\n\n✑ Contain 2.4 billion records for the years 2019 and 2020.\nWhich number of partition ranges provides optimal compression and performance for the clustered columnstore index?","answer_images":[],"isMC":true},{"id":"iMUjZ0hOsSwkkdwgdPcD","timestamp":"2021-05-01 10:45:00","answers_community":[],"answer_description":"Box 1: Type 2 -\nA Type 2 SCD supports versioning of dimension members. Often the source system doesn't store versions, so the data warehouse load process detects and manages changes in a dimension table. In this case, the dimension table must use a surrogate key to provide a unique reference to a version of the dimension member. It also includes columns that define the date range validity of the version (for example, StartDate and EndDate) and possibly a flag column (for example,\nIsCurrent) to easily filter by current dimension members.\nIncorrect Answers:\nA Type 1 SCD always reflects the latest values, and when changes in source data are detected, the dimension table data is overwritten.\n\nBox 2: a business key -\nA business key or natural key is an index which identifies uniqueness of a row based on columns that exist naturally in a table according to business rules. For example business keys are customer code in a customer table, composite of sales order header number and sales order item line number within a sales order details table.\nReference:\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","question_images":["https://www.examtopics.com/assets/media/exam-media/04259/0007900001.png","https://www.examtopics.com/assets/media/exam-media/04259/0008000001.png"],"topic":"1","discussion":[{"upvote_count":"238","timestamp":"1620201900.0","poster":"nkav","comments":[{"content":"TOTALLY AGREE HERE !!!! \nThe ProductKey column is defined as an IDENTITY(1,1) column, which means it is an auto-incremented value and serves as a unique identifier for each row. This is characteristic of a surrogate key, which is used in dimensional modeling to uniquely identify records in a dimension table, especially in a Type 2 SCD.","comment_id":"1277814","timestamp":"1725395940.0","poster":"Bouhdy","upvote_count":"5"},{"poster":"111222333","upvote_count":"17","comments":[{"content":"Type 2\n\nIn order to support type 2 changes, we need to add four columns to our table:\n\n· Surrogate Key – the original ID will no longer be sufficient to identify the specific record we require, we therefore need to create a new ID that the fact records can join to specifically.\n\n· Current Flag – A quick method of returning only the current version of each record\n\n· Start Date – The date from which the specific historical version is active\n\n· End Date – The date to which the specific historical version record is active\n\nWith these elements in place, our table will now look like:","upvote_count":"14","poster":"rikku33","comments":[{"upvote_count":"7","comment_id":"1131328","poster":"Gikan","content":"You know the start and end date of the selling, but not the version of the product (size, color....) If the waterpump size has changed for a car by rhe producer but the function product id are the same, selling is continuous you can not store it into this structure. But you can store at the timepoints and see validation point in creation date of the record. Therefore it is type 1","timestamp":"1706160000.0"}],"timestamp":"1632636300.0","comment_id":"451679"}],"timestamp":"1621186500.0","comment_id":"358966","content":"Agree on the surrogate key, exactly.\n\n\"In data warehousing, IDENTITY functionality is particularly important as it makes easier the creation of surrogate keys.\"\n\nWhy ProductKey is certainly not a business key: \"The IDENTITY value in Synapse is not guaranteed to be unique if the user explicitly inserts a duplicate value with 'SET IDENTITY_INSERT ON' or reseeds IDENTITY\". Business key is an index which identifies uniqueness of a row and here Microsoft says that identity doesn't guarantee uniqueness.\n\nReferences:\nhttps://azure.microsoft.com/en-us/blog/identity-now-available-with-azure-sql-data-warehouse/\nhttps://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-tables-identity"}],"content":"product key is a surrogate key as it is an identity column","comment_id":"350086"},{"timestamp":"1620774240.0","content":"Type2 because there are start and end columns and ProductKey is a surrogate key. ProductNumber seems a business key.","poster":"sagga","comments":[{"content":"The start and end columns are for when to when the product was being sold, not for metadata purposes. That makes it: \nType 1 – No History\nUpdate record directly, there is no record of historical values, only current state","timestamp":"1622196780.0","comment_id":"368646","upvote_count":"124","poster":"DrC","comments":[{"comment_id":"373389","timestamp":"1622708640.0","upvote_count":"2","content":"Exactly how I saw it","poster":"captainbee"},{"content":"When the product is not being sold anymore, it becomes a historical record. Hence Type 2.","comments":[{"content":"With type 2, you normally don't update any column of a row other than row start date and end date.","comment_id":"505180","timestamp":"1639965600.0","upvote_count":"1","poster":"Yuri1101"},{"comment_id":"551698","timestamp":"1645352820.0","content":"It is type 1 not 2","upvote_count":"4","poster":"rockyc05"}],"upvote_count":"2","poster":"Kyle1","comment_id":"445601","timestamp":"1631763600.0"},{"content":"I agree with the first part. From just the table it's impossible to know if the changes in the products are ignored or are updated, if you don't see the ETL. I suppose there is some mistake in the name of the fields start end effective fields.","upvote_count":"2","timestamp":"1668634860.0","comment_id":"720029","poster":"borinot"},{"content":"Right, its Type 1. We have the updateddatetime and inserteddatetime, not historical","timestamp":"1663093680.0","comment_id":"668316","upvote_count":"10","poster":"juanlu46"},{"comment_id":"1071930","timestamp":"1700084760.0","poster":"SillyChili","content":"totally agree that this is type 1. the table has RowUpdatedDateTime, which seems to be the source system's audit column. SCD Type 2 should have date columns to capture its ExpiresOn (for previous record version) and EffectiveFrom (start of the record new version)","upvote_count":"3"}]}],"upvote_count":"51","comment_id":"355075"},{"upvote_count":"1","content":"I agree with the surrogate key cos of the identiy (1,1) clause however, if you look at the adventureworks dw tables, product key is a business key or primary key on the dimproduct table. It is confusing but i guess the gve away is that the table is a SCD table so yea I'm swayed towards Dimensin table","timestamp":"1741936620.0","comment_id":"1395543","poster":"AMJB"},{"upvote_count":"5","poster":"roopansh.gupta2","comment_id":"1268764","content":"SURROGATE KEY AND SCD 1:\nThe absence of a Current_Flag or similar indicator and the RowUpdatedDateTime column might suggest that the DimProduct table is not strictly adhering to a Type 2 Slowly Changing Dimension (SCD). Instead, it seems to be implementing a Type 1 Slowly Changing Dimension (SCD). Further evidence for SCD 1:\n\nRowUpdatedDateTime: The RowUpdatedDateTime column indicates when the row was last modified, which is consistent with Type 1 SCDs where data is overwritten.\n\nNo Historical Tracking: There is no mechanism to track historical changes (e.g., Current_Flag, EffectiveDate, EndDate). Without these, the table does not store previous versions of the data, reinforcing that this is a Type 1 SCD.","timestamp":"1724076720.0"},{"content":"The ProductKey is a surrogate key, as you can se the query use IDENTITY(1,1) to identify unique values in the table. If was a Business Key, the query don't need to specific the INDENTITY, usually we use Concat to create new business Key or naturally the database return that.","timestamp":"1721499600.0","upvote_count":"1","poster":"jonatahs18","comment_id":"1251909"},{"comment_id":"1243341","timestamp":"1720264740.0","poster":"Okkier","content":"Operational transaction systems don't use keys as their ID columns. They generally use product IDs, which refer to a business key. When we hit the dimension design for star schemas, we generally name them product keys. \n\nThe second column in the table, which is product source ID, I've read as being an ID combined with the source where the record has come from, which makes it the business key. This is generally what we do for multi-sourced dimensions, i.e., different systems that can deliver products into a single dimension table. \n\nI wouldn't create a product source ID column; I would create a source column and a product ID column, which then become the combined business key. These questions are overly simplified and not providing enough clear guidance, which is simply confusing and leads to incorrect answers and inaccurate results.","upvote_count":"1"},{"poster":"jpgsa11","comment_id":"1213434","upvote_count":"2","timestamp":"1716057180.0","content":"A Product can stop selling gets a sellendDate and the table does not receive a new version of the record. On the other hand a SCD1 can have a SK to simplify joins"},{"timestamp":"1714467540.0","comment_id":"1204434","content":"This is a far too easy question to get it wrong by the site admins","poster":"Dusica","upvote_count":"2"},{"comment_id":"1199353","content":"I think: Type 1 and Surrogate key","timestamp":"1713649200.0","poster":"olayvo","comments":[{"poster":"SheShanD","upvote_count":"1","timestamp":"1724839140.0","comment_id":"1273938","content":"why need surrogate key for type 1 ?"}],"upvote_count":"1"},{"poster":"Pankaj_128","timestamp":"1712589480.0","content":"Correct Answer : \nType 2 SCD (start date , end date , surrogate key)\nSurrogate key as its an IDENTITY column.","comment_id":"1191641","upvote_count":"1"},{"comment_id":"1179979","upvote_count":"2","timestamp":"1711100640.0","poster":"Alongi","content":"Type 1 because there is a time of row update, and not a column validity flag.\nSurrogate key, identity column is always a surrogate ."},{"timestamp":"1708781820.0","upvote_count":"2","content":"The SellStartDate and SellEndDate wont be updated. They seem to be fixed columns. As you have a RowInsert and a RowUpdate it would be deemed to be a Type 1 because the row would be updated in place rather than a new row created (Type 2). Plus as the ID is an identity column it is a Surrogate Key - it has been created by the system not by the business. Business Keys are Keys that are provided by the business with business logic, such as an order number or a customer number (e.g. CUST-00001).","poster":"s_unsworth","comment_id":"1157962"},{"upvote_count":"4","content":"Type 1 plus surrogate Key","timestamp":"1705994940.0","poster":"Jdfer34","comment_id":"1129265"},{"timestamp":"1701796860.0","poster":"blazy001","content":"13 years in this stuff\nproduct key is a surrogate , business key comes from the ERP business app\nand it is a type 1 NOT 2\nan insert and update column does not tell you the date from and to , hallo","upvote_count":"16","comment_id":"1088667"},{"comment_id":"1001238","poster":"hassexat","content":"Type 2 & Surrogate Key","timestamp":"1694068920.0","upvote_count":"2"},{"upvote_count":"3","timestamp":"1693974780.0","poster":"AvSUN","content":"Ans 1 - TYPE 2\nAns 2 - Product key is a surrogate key (identity column)\n\nNote: Product number would be the business key if I had to pick one","comment_id":"1000167"},{"content":"t2 & is a surrogate key.","comment_id":"997614","timestamp":"1693744980.0","poster":"kkk5566","upvote_count":"2"},{"timestamp":"1693349580.0","upvote_count":"4","poster":"subhraz","comment_id":"993554","content":"SCD: Type1\nProductKey is Surrogate key."},{"comment_id":"990131","timestamp":"1692972000.0","content":"I agree that it is a surrogate key and not s business one.","poster":"kdp203","upvote_count":"1"},{"timestamp":"1687843800.0","poster":"othman_ee","upvote_count":"13","comment_id":"935049","content":"Type1 SCD and SurrogateKey"},{"upvote_count":"12","poster":"auwia","content":"The attribute: RowUpdatedDateTime is a clear indication of: Type 1 SCD.\nType 1 SCD involves updating the dimension attribute with the latest value whenever a change occurs. In this approach, the previous value is overwritten, and there is no historical tracking of changes. This means that only the current version of the dimension data is retained. Type 1 SCD is simple and suitable when historical data is not required or when the dimension changes are not significant.","comment_id":"929071","timestamp":"1687323780.0"},{"timestamp":"1683727980.0","comment_id":"894064","content":"It is type 2 SCD not because sale start date / sale end date which has n relation what so ever but because of Insert date & update date. had it been scd type 1, only one date column i.e insert/update would have sufficed.","upvote_count":"3","poster":"Debasish93"},{"comments":[{"content":"Sorry, its Type 1 SCD & ProductKey is a surrogate key.","poster":"rocky48","timestamp":"1707114240.0","comment_id":"1140711","upvote_count":"1"}],"comment_id":"885235","timestamp":"1682860260.0","poster":"rocky48","content":"Type 2 SCD because there are start and end columns & \nProductKey is a surrogate key.","upvote_count":"1"},{"poster":"Honour","content":"Please, do not be confused. The ProductKey is a surrogate key, not a business key.","timestamp":"1680168660.0","upvote_count":"4","comment_id":"855555"},{"comment_id":"838997","content":"This table is a Type 1 slowly changing dimension because it overwrites the old data with new data when changes occur, without keeping a history of changes.\n\nThe ProductKey column is a surrogate key, which is a system-generated unique identifier for each row in the table. It is not related to any business meaning of the data.","poster":"esaade","timestamp":"1678808940.0","upvote_count":"12"},{"timestamp":"1676736300.0","poster":"Abhishek_C86","comment_id":"813245","upvote_count":"1","content":"I have a question for all....\n\nI have a Emp location table that supposedly has columns like .... emp_id, emp_name, office_loc, start_dt, end_dt \nNow if I consider that the employee joins the company and until his retirement, he gets transferred to 4 places .... so at the end of his carrier, that table would be having 4 rows.\nThere would be a time consistency in the start_dt and end_dt column for all 4 rows ..... meaning there wont be day within his carrier that would not be included in this total time covered by the 4 rows ....\n\nNow, in this example, the sale for a product can have a start_date and an end_date ..... and that sale might happen say 3 times a year .... but most likely there will be gaps in the timeline as its a \"periodic sale\" which does not happen throughout the year or throughout the lifecycle of that product ....\n\nIf for the second case, we consider it to be a SCD in-spite of the time in-consistancy, then its surely a SCD2 else its SCD1 ....\n\nMy question is ... do we consider tables that maintain a SCD type 2 structure but does not maintain a time consistency ... an SCD type2 ?"},{"timestamp":"1675556220.0","comments":[{"poster":"Mal2002","timestamp":"1694081880.0","comment_id":"1001422","content":"if you are going with the surrogate key then it's most likely not type 1 SCD","upvote_count":"1"}],"comment_id":"798501","upvote_count":"9","content":"Type 1 & Surrogate Key:\nType 1: because there is no value start and end date. The sell start & end date in the picture is when the product actually is sold in the market. Instead of that, there is modified date which indicates type 1.\nsurrogate key: even though type 1 doesn't require surrogate key, but this table has another column indicating the product source ID, so product key is most likely surrogate key","poster":"patvn"},{"timestamp":"1675348500.0","content":"It Should be Type 2 , Surrogate Key","poster":"SHENOOOO","upvote_count":"1","comment_id":"796124"},{"content":"It's Type 1, there are no columns that can be valid_from, valid_to.","poster":"astone42","upvote_count":"6","timestamp":"1674756120.0","comment_id":"788986"},{"timestamp":"1674300300.0","upvote_count":"9","content":"If it was type 2 you would see the following fields:\n- Active\n And you would not see fields like\n-Last Modified \n-LastUpdated\n\nFor this very reason and having implemented it in the real world, it has to be Type 1 as the answer\nThe reason is type 2 always creates a new row, so you can be almost certain this is type 1","poster":"MarkTek","comment_id":"783209"},{"upvote_count":"6","poster":"Dusica","timestamp":"1673424420.0","comment_id":"772212","content":"Surrogate key, Type 1 since no history"},{"poster":"dmov","timestamp":"1670595600.0","content":"It's definitely type 1 and product key is surrogate","upvote_count":"11","comment_id":"740193"},{"poster":"dmitriypo","upvote_count":"9","comments":[{"timestamp":"1667856780.0","upvote_count":"1","comment_id":"713327","poster":"dmitriypo","content":"FYI\nBusiness Key represents the Product Number column."}],"content":"Type 1\nSurrogate Key","timestamp":"1667856720.0","comment_id":"713326"},{"comment_id":"672185","poster":"bakstorage00001","upvote_count":"1","content":"In the case of having this question on the exam, and choosing a Surrogate Key, we would have it wrong or right? Can anyone update/correct the correct answer on the question?","timestamp":"1663494420.0"},{"upvote_count":"2","poster":"bhrz","comment_id":"670814","timestamp":"1663331460.0","content":"type 1 and business key - you can skip surrogate key in scd type1. https://community.oracle.com/tech/apps-infra/discussion/4081503/need-of-surrogate-key-in-scd-type-1-and-scd-type2"},{"upvote_count":"9","content":"Right Answer: \nBox 1: Type 1 -\nRowInsertedDateTime / RowUpdatedDateTime\nDon’t consider sellStartDate/sellEndDate with Effective Start/End Date\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\n\nBox 2: a surrogate key – \nIDENTITY property\n\nA surrogate key on a table is a column with a unique identifier for each row. The key is not generated from the table data. Data modelers like to create surrogate keys on their tables when they design data warehouse models. You can use the IDENTITY property to achieve this goal simply and effectively without affecting load performance.\n\nhttps://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-tables-identity","poster":"emna2022","timestamp":"1660464240.0","comment_id":"646636","comments":[{"timestamp":"1672454340.0","content":"correct answer","comment_id":"762441","upvote_count":"1","poster":"blackTee"}]},{"content":"Answer should be type 2 and surrogate key","timestamp":"1658756700.0","poster":"Deepshikha1228","upvote_count":"4","comment_id":"636741"},{"timestamp":"1658750880.0","upvote_count":"1","poster":"Franz58","comment_id":"636686","content":"Tyoe 1- Surrogate key."},{"comment_id":"636685","content":"It's Type 1. Product key is indeed a surrogate key, but you should alway use surrogate keys in a DW (learn Kimball methodology) , even for SCD1 (you are forced to use them for SCD2), to make joins faster. It is type 1 because it has an Update Date,. type 2 do not have an Update Date, they are never updated, in type 2 you insert new rows if something changes.","upvote_count":"3","poster":"Franz58","timestamp":"1658750820.0"},{"upvote_count":"2","content":"If it's SCD Typ2 2. which column states the current record. \nAs RowInsert and RowUpdatetimestamp are both NOT NULL.","poster":"NintyFour","comment_id":"632505","timestamp":"1658047680.0"},{"upvote_count":"3","timestamp":"1657462140.0","poster":"jainparag1","content":"It should be SCD1 for the first option and so the second option is business key since surrogate key is not required.","comment_id":"629588"},{"timestamp":"1655893260.0","comment_id":"620335","poster":"georgiakon","upvote_count":"5","content":"It's a type 1 SCD because there is only the last version of the row, and an \"update date\" that also identifies whether the row has been updated or not; it does not keep the old vs new version of the row.\nThe key is a surrogate because it is declared as IDENTITY but this is irrelevant to the SCD type.I don't think there is any restriction for the table to not bear a surrogate key column in type 1 SCD.\nQuoting: \n\"A Type 1 SCD always reflects the latest values, and when changes in source data are detected, the dimension table data is overwritten. [...]\"\n\"A Type 2 SCD supports versioning of dimension members. [...] \"\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types"},{"timestamp":"1655879460.0","comment_id":"620214","poster":"btk7","upvote_count":"1","content":"Answer is :\nTYPE 2\nSURROGATE KEY"},{"content":"Product key cannot be surrgoate key. https://en.wikipedia.org/wiki/Surrogate_key\nProductKey doesn't uniquely identify the row anymore, and its business key","upvote_count":"1","poster":"VM_GCP","timestamp":"1655585880.0","comment_id":"618419"},{"timestamp":"1654384500.0","upvote_count":"1","content":"for me is type 2, in this Microsoft doc, type 1 doesn't have a surrogate key https://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types","comment_id":"611606","poster":"mmm16","comments":[{"comment_id":"616661","content":"and does type support column update? no it inserts a new row, so what is the use of the updated row coloumn here. It is type 1","upvote_count":"1","comments":[{"upvote_count":"1","content":"*and does type 2","poster":"Aditya0891","timestamp":"1655286900.0","comment_id":"616662"}],"timestamp":"1655286900.0","poster":"Aditya0891"}]},{"timestamp":"1652080500.0","content":"product key is definitely a surrogate key","upvote_count":"1","poster":"SandipSingha","comment_id":"598917"},{"timestamp":"1651731240.0","content":"Definitely Type 1. There are no columns to indicate the different versions of the same business key. The sell start and end date columns are actual source columns from when the product was sold. The Insert and Update columns are audit columns that explain when a record was inserted for the first time and when it was updated. So the insert date remains the same, but the updated column is updated every time a Type 1 update occurs.","comment_id":"597150","upvote_count":"9","poster":"dazero"},{"timestamp":"1648324080.0","comment_id":"575750","content":"Product Key is surrogate NOT business key as it's a derived IDENTITY\nDimension is type 1 as it does not have a StartDate and EndDate associated with data changes and also does not have an IsCurrent flag","upvote_count":"7","poster":"AlCubeHead"},{"poster":"Shrek66","comment_id":"539794","upvote_count":"5","timestamp":"1643902920.0","content":"Agree with ploer\nSCD Type 1\nSurrogate"},{"poster":"ploer","comment_id":"538970","content":"Surrugate Key and Type 1 SCD. Tpye 1 SCD because sellenddate and sellstartdate are attributes of the product and not for versioning. rowupdated and rowinserted are used for scd. And - as the naming indicates- the fact that both have a not null constraint leads to the conclusion that we have no possibility to store the information which row is the current one. So it must be scd type 1.","timestamp":"1643820960.0","upvote_count":"6"},{"comment_id":"538785","upvote_count":"3","poster":"skkdp203","content":"SCD Type 1 \nSurrogate\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\n\nSurrogate keys in dimension tables\nIt is critical that the primary key’s value of a dimension table remains unchanged. And it is highly recommended that all dimension tables use surrogate keys as primary keys.\n\nSurrogate keys are key generated and managed inside the data warehouse rather than keys extracted from data source systems.","timestamp":"1643812680.0"},{"poster":"dev2dev","content":"identity/surrogate key's can be a business key in transition tables but in dw it can be used only as surrogate key.","comment_id":"537616","timestamp":"1643685480.0","upvote_count":"1"},{"comment_id":"521668","poster":"assU2","content":"Maybe it's type 2 because the logic is: we can have multiple rows with one productID, different surrogate keys and different start/end sale dates. \nkey | id | start sale | end sale |\n1 | 998 | 2021-01-01 | 2021-02-01 |\n2 | 998 | 2022-01-01 | 9999-12-31 | <-- current","timestamp":"1641921900.0","upvote_count":"3"},{"poster":"assU2","upvote_count":"2","timestamp":"1641920280.0","content":"Where are these answers from? Why there are so many mistakes? ProductKey is obviously a surrogate key","comment_id":"521656"},{"content":"It seems like Type 1: There is no flag to inform if the record is the current record, also the date column is just for modified date","timestamp":"1641740400.0","poster":"alex623","upvote_count":"1","comments":[{"comment_id":"599543","upvote_count":"1","poster":"Boompiee","timestamp":"1652179500.0","content":"The flag is commonly used, but not required."}],"comment_id":"520265"},{"comment_id":"510418","timestamp":"1640618280.0","upvote_count":"2","poster":"Mahesh_mm","content":"Type 2 and surrogate key"},{"poster":"Ayan3B","timestamp":"1639250820.0","comment_id":"499628","upvote_count":"4","content":"when table being created rowinsertdatetime and rowupdatedatetime attribute has been kept along with ETL identifier attribute so no previous version data would be kept. So type 1 is answer. Type 2 keep the older version information at row level along with start date and end date and type 3 keeps column level restricted old version of data.\n\nSecond answer would be surrogate key as product key generated with IDENTITY"},{"upvote_count":"1","content":"What is type 0 ?","timestamp":"1638345000.0","comment_id":"491387","poster":"satyamkishoresingh","comments":[{"upvote_count":"2","timestamp":"1641143700.0","poster":"DrTaz","comment_id":"515096","content":"SCD type 0 us a constant value that never changes."}]},{"content":"This was on test today","upvote_count":"1","timestamp":"1637852880.0","comment_id":"486735","poster":"jay5518"},{"content":"Took the exam today, this question came out. \nType2, Surrogate Key","timestamp":"1635024840.0","comment_id":"466751","upvote_count":"7","comments":[{"timestamp":"1654174800.0","content":"How are you so sure? Did you get 100%?\nI am very confused about this question. It totally depends on what is the purpose of SaleStartDate and SaleEndDate. If they are attributes, then Type 1, if they are used for versioning, then Type 2.","comment_id":"610603","upvote_count":"1","poster":"koyelchatt"}],"poster":"ohana"},{"poster":"Danielcifuentes","content":"Type 2 and Surrogate Key","comment_id":"466234","timestamp":"1634920020.0","upvote_count":"2"},{"upvote_count":"3","poster":"HaliBrickclay","timestamp":"1634018880.0","content":"Yes, its Type 2 ,we productnumber is BusinessKey.\n\nsurrogate key,\nsurrogate key =\"A surrogate key is a system generated (could be GUID, sequence, etc.) value with no business meaning that is used to uniquely identify a record in a table.\"","comment_id":"460927"},{"timestamp":"1631787480.0","upvote_count":"11","content":"Type 1: because this has rowInsertedDate and RowUpdatedDate. This does not contain flag to represent the current record and also SellStart and SellEnd date columns can be attribute columns. \n\nSurrogate Key: Because it is an identity column with unique values.","poster":"gcuda","comment_id":"445826"},{"comments":[{"poster":"kamil_k","upvote_count":"1","comment_id":"567543","timestamp":"1647249540.0","content":"I tend to agree, but at the same time could we not use the null value in the SellEndDate as an indication that it's the current version? (i.e. instead of using a separate flag field)"}],"comment_id":"441018","upvote_count":"6","timestamp":"1631034360.0","poster":"Marcus1612","content":"It seems that the correct answer is: scd=type 1 and ProductKey=Surrogate. \nProductNumber sounds better for a business key but since there is no Identity on it, we can conclude that the field was not a good candidat for a surrogate key . Why not Type 2 ? because the field SellEnddate could be null and the type should be DateTime instead of Date. A good design for Type 2 would be only two fields (ex: startdate and enddate) datetime not null."},{"timestamp":"1630893900.0","upvote_count":"3","content":"The surrogate key identifies one unique row in the database\nthe business key identifies one unique entity of the modeled world.\nSo surrogate key.\n\nBecause here we are keeping, RowInsertedDate and RowUpdatedDate, and both are set to NOT NULL. Hence SCD 1","poster":"Amyqwertyu","comments":[{"timestamp":"1631766960.0","comment_id":"445629","upvote_count":"2","content":"You don't need surrogate keys in SCD type 1 because all the rows are unique in it anyways as old data is always overwritten. Hence the case is SCD type 2.","poster":"Kyle1"}],"comment_id":"440051"},{"content":"1.SCD Type 2 (Type 1 - the old attribute value in the dimension row is overwritten with the new value; Type 2 -changes add a new row in the dimension with the updated attribute values)\n2. surrogate key","upvote_count":"3","comment_id":"436823","poster":"bender_r","timestamp":"1630467840.0"},{"upvote_count":"3","comment_id":"433304","poster":"realtp9","timestamp":"1630090920.0","content":"Correct Answer is \nType-1: Because here we are keeping, RowInsertedDate and RowUpdatedDate, and both are set to NOT NULL.\nSurrogate Key: Because identity key is auto-incremented by System and not decided by business stakeholders."},{"content":"this is a divided discussion, still confused if is SCD 1or 2 ?","comment_id":"430152","upvote_count":"3","timestamp":"1629734280.0","poster":"SatyamKishore"},{"comments":[{"poster":"YipingRuan","timestamp":"1634446620.0","upvote_count":"1","comment_id":"463411","content":"Should be Type 1"}],"poster":"YipingRuan","upvote_count":"2","comment_id":"428626","timestamp":"1629545040.0","content":"Type 2 and Surrogate key.\n\n“The table must also define a surrogate key because the business key (in this instance, employee ID) won't be unique.”\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\n\nSo IDENTITY suggests [ProductKey] is a surrogate key."},{"poster":"anarvekar","upvote_count":"1","comment_id":"421307","timestamp":"1628357100.0","content":"I guess the answer Type-2 is valid because RowInsertedDateTime and RowUpdatedDateTime are being used as type-2 effective dates, where inserted date is the effective_from date and updated date is the effective_to date, which will be set to some futuristic date or NULL for the currently active records. So I'm conviced that it is Type-2.\n\nHowever, ProductKey has to be a surrogate key. Identity column can never be a business/natural key, as that's what we import from the source as is and the column is supposed to contain duplicates in case of type-2."},{"comment_id":"410889","content":"For all questions from contributor access 9403778084","poster":"Akki0120","upvote_count":"1","timestamp":"1626869340.0"},{"upvote_count":"4","comment_id":"402462","poster":"noone_a","content":"SCD Type 1 is correct. There is no start/end date to show when the record is valid from/to. sellStart/end does not fulfill this role. a product might have a limited sales run, say of 1 month, and that is what these columns show. they dont show the row has been replaced.\n\nThe key is a surrogate key. Identity fields generate unique values in most cases. of course this can be overridden using IDENTITY_INSERT, but this is something that is only used usually to fix issues, and not in day to day operations.","timestamp":"1625812740.0"},{"content":"Type1 and SurrogateKey.\nType1 because the sellstartdate and sellenddate has business meaning, and not SCD columns. Surrogatekey because ID is incremented for every insert.","timestamp":"1625618100.0","upvote_count":"2","comment_id":"400373","poster":"Balaji1003"},{"content":"Answer is: TYPE 2 SCD and Surrogate Key. There is a [ETLAuditID] that's an INT and tracks changes like 1 or 0 for history. Also, you cannot have a TYPE1 SCD with a surrogate key.","comment_id":"386814","timestamp":"1624254840.0","upvote_count":"3","poster":"Steviyke"},{"content":"Type 2 doesn't need the insert and update field, so it's Type 1 and surrogate key","poster":"eng1","comment_id":"379012","timestamp":"1623328380.0","upvote_count":"6"},{"comments":[{"upvote_count":"3","comment_id":"384829","poster":"captainbee","timestamp":"1624020540.0","content":"It really isn't Type-2. The start and end columns apply to the product being sold, not the entry on the table. Also there is no IsActive column either. Type-1 all the way."}],"comment_id":"375599","timestamp":"1622951640.0","poster":"ThiruthuvaRajan","content":"SCD is Type-2. It has both start and end information. with that we can easily say which is current one. the \"Current\" one refers to Type-2.\n\nhttps://docs.microsoft.com/en-us/learn/modules/populate-slowly-changing-dimensions-azure-synapse-analytics-pipelines/3-choose-between-dimension-types\n\nAnd the key is unique identifier for each row so it is Surrogate key.\n \nhttps://docs.microsoft.com/en-us/azure/synapse-analytics/sql-data-warehouse/sql-data-warehouse-tables-identity","upvote_count":"1"},{"comment_id":"369425","timestamp":"1622289840.0","content":"product is surrogate key","poster":"DragonBlake","upvote_count":"3"},{"poster":"clguy","content":"ProductKey is SK and SourceProductId is BK and it it TYPE 1 SCD","comment_id":"369021","upvote_count":"2","timestamp":"1622236080.0"},{"comment_id":"365376","poster":"dmnantilla9","content":"Is type 2 and surrogate key","timestamp":"1621841520.0","upvote_count":"1"},{"poster":"wfrf92","upvote_count":"12","timestamp":"1620675120.0","comments":[{"comment_id":"367744","content":"Type 1 as there is no obvious versioning, just latest value and the time of record creation and update.","poster":"baobabko","timestamp":"1622106840.0","upvote_count":"3"}],"comment_id":"354090","content":"Type 1\nSurrogate Key"},{"upvote_count":"1","poster":"bananawu","content":"Correct Answer, \"In Azure Synapse Analytics, the IDENTITY value increases on its own in each distribution and does not overlap with IDENTITY values in other distributions. The IDENTITY value in Synapse is not guaranteed to be unique if the user explicitly inserts a duplicate value with “SET IDENTITY_INSERT ON” or reseeds IDENTITY. For details, see CREATE TABLE (Transact-SQL) IDENTITY (Property).\"","timestamp":"1620617940.0","comments":[{"comment_id":"367742","timestamp":"1622106780.0","poster":"baobabko","content":"IDENTITY is assigned by the system. It has no business meaning. Hence it cannot be a business key. Automatically generated and assigned keys are called Surrogate Keys.","upvote_count":"1"}],"comment_id":"353430"},{"timestamp":"1620522900.0","content":"It should be a type 1 dimension.","upvote_count":"4","comment_id":"352746","poster":"neerajkrjain"},{"timestamp":"1620060120.0","upvote_count":"1","comments":[{"poster":"malakosan","timestamp":"1620124740.0","comment_id":"349319","upvote_count":"1","content":"With Arindamb"}],"poster":"malakosan","content":"I agree","comment_id":"348820"},{"comment_id":"346719","comments":[],"poster":"Arindamb","content":"Identity column holds natural number which is different from natural key such as SSN Number, Mobile number etc. Hence the answer should be surrogate key..","timestamp":"1619858700.0","upvote_count":"4"}],"url":"https://www.examtopics.com/discussions/microsoft/view/51384-exam-dp-203-topic-1-question-38-discussion/","question_id":50,"isMC":false,"answer_images":["https://www.examtopics.com/assets/media/exam-media/04259/0008000002.png"],"answer":"","unix_timestamp":1619858700,"answer_ET":"","exam_id":67,"question_text":"HOTSPOT -\nYou are creating dimensions for a data warehouse in an Azure Synapse Analytics dedicated SQL pool.\nYou create a table by using the Transact-SQL statement shown in the following exhibit.\n//IMG//\n\nUse the drop-down menus to select the answer choice that completes each statement based on the information presented in the graphic.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//"}],"exam":{"numberOfQuestions":384,"provider":"Microsoft","isMCOnly":false,"isImplemented":true,"name":"DP-203","id":67,"lastUpdated":"12 Apr 2025","isBeta":false},"currentPage":10},"__N_SSP":true}