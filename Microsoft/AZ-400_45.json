{"pageProps":{"questions":[{"id":"rJkQm6w5SWWcwaxkGNkR","question_text":"You use GitHub for source control.\nA file that contains sensitive data is committed accidentally to the Git repository of a project.\nYou need to delete the file and its history form the repository.\nWhich two tools can you use? Each correct answer presents a complete solution.\nNOTE: Each correct selection is worth one point.","exam_id":55,"answer":"AB","answers_community":["AB (100%)"],"url":"https://www.examtopics.com/discussions/microsoft/view/74555-exam-az-400-topic-5-question-13-discussion/","timestamp":"2022-04-26 08:56:00","answer_description":"","choices":{"A":"the git filter-branch command","D":"GitHub Desktop","B":"BFG Repo-Cleaner","C":"the git rebase command"},"discussion":[{"poster":"knvenkat123","comment_id":"641067","timestamp":"1675322160.0","content":"Selected Answer: AB\nBFG Repo cleaner is an alternative to git filter-branch. It can be used to remove sensitive data or large files that were committed wrongly like binaries compiled from the source. It is written in Scala. Project website: BFG Repo Cleaner","upvote_count":"9"},{"comment_id":"908238","poster":"zellck","timestamp":"1701138120.0","content":"Selected Answer: AB\nAB is the answer.\n\nhttps://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository#using-the-bfg\nThe BFG Repo-Cleaner is a tool that's built and maintained by the open source community. It provides a faster, simpler alternative to git filter-repo for removing unwanted data.","upvote_count":"6","comments":[{"timestamp":"1701138180.0","poster":"zellck","upvote_count":"3","comment_id":"908241","content":"https://git-scm.com/docs/git-filter-branch#_description\nLets you rewrite Git revision history by rewriting the branches mentioned in the <rev-list options>, applying custom filters on each revision. Those filters can modify each tree (e.g. removing a file or running a perl rewrite on all files) or information about each commit. Otherwise, all information (including original commit times or merge information) will be preserved."}]},{"timestamp":"1718755260.0","poster":"vsvaid","content":"Selected Answer: AB\nAgree with given answer","comment_id":"1100204","upvote_count":"2"},{"upvote_count":"6","poster":"surensaluka","content":"Selected Answer: AB\nThis question came today (2023-02-14). Answers came as pair of 2 commands.","timestamp":"1691986620.0","comment_id":"808137"},{"comment_id":"761579","content":"BFG Repo cleaner is an alternative to git filter-brancIt is h. It can be used to remove sensitive data or large files that were committed wrongly like binaries compiled from the source. Project website: BFG Repo Cleaner","poster":"Power123","timestamp":"1688078340.0","upvote_count":"2"},{"timestamp":"1678049460.0","upvote_count":"4","comment_id":"660466","poster":"alexax578","content":"Selected Answer: AB\nIt is git-filter-repo now (+ BFG Repo-Cleaner)\n\n\"To entirely remove unwanted files from a repository's history you can use either the git filter-repo tool or the BFG Repo-Cleaner open source tool.\"\n\nhttps://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository"},{"poster":"syu31svc","comment_id":"643339","upvote_count":"2","timestamp":"1675689060.0","content":"Selected Answer: AB\nGiven link supports A and B as the answers"},{"upvote_count":"2","poster":"az_architect","timestamp":"1674825900.0","comment_id":"638044","content":"Thanks Jay158. The provided link explain very well that \ngit filter-branch and BFG are the correct options."},{"upvote_count":"2","poster":"Govcomm","content":"git filter-branch\nBFG","timestamp":"1674492960.0","comment_id":"635656"},{"timestamp":"1669213860.0","upvote_count":"3","poster":"Eltooth","comment_id":"606064","content":"Selected Answer: AB\nA and B are correct answers."},{"upvote_count":"3","timestamp":"1666767360.0","poster":"jay158","comment_id":"592153","content":"Answer is correct\nhttps://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository"}],"unix_timestamp":1650956160,"topic":"5","isMC":true,"question_images":[],"question_id":221,"answer_ET":"AB","answer_images":[]},{"id":"Rj9mwbiRnrh5muTarf0J","answer_images":[],"discussion":[{"timestamp":"1675689360.0","content":"Selected Answer: CE\nhttps://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team\n\n\"Optionally, to always skip certain members of the team, select Never assign certain team members. Then, select one or more team members you'd like to always skip\" ---> C (prevent assignment to Leader)\n\n\"The load balance algorithm chooses reviewers based on each member's total number of recent review requests and considers the number of outstanding reviews for each member. The load balance algorithm tries to ensure that each team member reviews an equal number of pull requests in any 30 day period.\" ---> E (Ensure that each team member performs an equal number of code reviews in any 30-day period)","comment_id":"643342","upvote_count":"18","poster":"syu31svc"},{"timestamp":"1742060820.0","content":"Selected Answer: CE\nC and E","comment_id":"1398961","poster":"Bakare118","upvote_count":"1"},{"upvote_count":"1","timestamp":"1726325280.0","poster":"AnishGS","content":"Selected Answer: CE\nTested in lab account","comment_id":"1173576"},{"content":"Selected Answer: CE\nC and E","poster":"vsvaid","comment_id":"1100207","timestamp":"1718755800.0","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: CE\nCE. Select Never assign certain team members is option C not A.","comment_id":"944094","timestamp":"1704492120.0","poster":"fafda"},{"content":"Selected Answer: CE\nCE is the answer.\n\nhttps://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team#routing-algorithms\nThe load balance algorithm chooses reviewers based on each member's total number of recent review requests and considers the number of outstanding reviews for each member. The load balance algorithm tries to ensure that each team member reviews an equal number of pull requests in any 30 day period.","comment_id":"908230","poster":"zellck","comments":[{"timestamp":"1701137880.0","poster":"zellck","content":"https://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team#configuring-auto-assignment\nOptionally, to always skip certain members of the team, select Never assign certain team members. Then, select one or more team members you'd like to always skip.","comment_id":"908231","upvote_count":"2"}],"upvote_count":"4","timestamp":"1701137880.0"},{"comment_id":"638042","upvote_count":"3","poster":"az_architect","content":"CE options are logically correct. However, I have not tried the options practically.","timestamp":"1674825720.0"},{"comment_id":"635657","poster":"Govcomm","upvote_count":"1","content":"Never assign specific team member. i.e. The team leader\nLoad balancing","timestamp":"1674493020.0"},{"timestamp":"1673285220.0","upvote_count":"4","poster":"Leandrocei","content":"Selected Answer: CE\nCE. Came today 22 july 9","comment_id":"629247"},{"comment_id":"623075","upvote_count":"3","content":"Selected Answer: CE\n1. The load balance algorithm chooses reviewers based on each member's total number of recent review requests and considers the number of outstanding reviews for each member. The load balance algorithm tries to ensure that each team member reviews an equal number of pull requests in any 30 day period.\n 2. Optionally, to always skip certain members of the team, select Never assign certain team members. Then, select one or more team members you'd like to always skip.","timestamp":"1672126800.0","poster":"Redimido"},{"upvote_count":"3","timestamp":"1668604020.0","comment_id":"602546","poster":"Eltooth","content":"Selected Answer: CE\nCorrect answer - C & E."},{"comment_id":"601507","poster":"zuzu_toggler","upvote_count":"2","content":"Selected Answer: CE\nCE is correct.","timestamp":"1668425040.0"},{"timestamp":"1667861760.0","upvote_count":"2","poster":"UnknowMan","comment_id":"598331","content":"Selected Answer: CE\nCE is correct"},{"comment_id":"592159","upvote_count":"4","poster":"jay158","timestamp":"1666767840.0","content":"Selected Answer: CE\nhttps://docs.github.com/en/organizations/organizing-members-into-teams/managing-code-review-settings-for-your-team"},{"timestamp":"1666714980.0","upvote_count":"2","poster":"Brexten","comment_id":"591833","content":"Provided answer and choice do not match, perhaps some mix up. Should be C&E"},{"content":"So I guess that should be C&E (instead of A&E)","timestamp":"1666697520.0","upvote_count":"1","comment_id":"591621","poster":"Pandur1"},{"comment_id":"591207","timestamp":"1666638600.0","upvote_count":"2","content":"I think C&E","poster":"U3"},{"comment_id":"588744","poster":"tzlima","upvote_count":"1","timestamp":"1666272900.0","content":"Selected Answer: C\nA answer was wrongly selected"}],"question_images":[],"isMC":true,"answer":"CE","answers_community":["CE (98%)","2%"],"question_text":"Your company uses GitHub for source control. The company has a team that performs code reviews.\nYou need to automate the assignment of the code reviews. The solution must meet the following requirements:\n✑ Prioritize the assignment of code reviews to team members who have the fewest outstanding assignments.\n✑ Ensure that each team member performs an equal number of code reviews in any 30-day period.\n✑ Prevent the assignment of code reviews to the team leader.\nWhich two actions should you perform? Each correct answer presents part of the solution.\nNOTE: Each correct selection is worth one point.","exam_id":55,"question_id":222,"timestamp":"2022-04-20 15:35:00","choices":{"C":"Select Never assign certain team members.","D":"Set Routing algorithm to Round robin.","B":"Select If assigning team members, don't notify the entire team.","A":"Clear Never assign certain team members.","E":"Set Routing algorithm to Load balance."},"topic":"5","url":"https://www.examtopics.com/discussions/microsoft/view/73902-exam-az-400-topic-5-question-14-discussion/","unix_timestamp":1650461700,"answer_ET":"CE","answer_description":""},{"id":"KfuTmemN91lfUoq8WvRt","question_text":"You have a GitHub repository.\nYou create a new repository in Azure DevOps.\nYou need to recommend a procedure to clone the repository from GitHub to Azure DevOps.\nWhat should you recommend?","question_images":[],"answer_images":[],"topic":"5","answers_community":["D (100%)"],"isMC":true,"exam_id":55,"discussion":[{"upvote_count":"38","content":"Correct Answer - Verified","poster":"AS007","comment_id":"88562","timestamp":"1636855380.0"},{"comment_id":"91584","timestamp":"1637270340.0","poster":"Fred64","content":"Import Repository inside Repos/Files after creating the project","upvote_count":"5"},{"content":"Selected Answer: D\nD is the answer.\n\nhttps://learn.microsoft.com/en-us/azure/devops/repos/git/import-git-repository?view=azure-devops#import-into-a-new-repo","comment_id":"908007","timestamp":"1732720560.0","upvote_count":"3","poster":"zellck"},{"timestamp":"1706361420.0","upvote_count":"1","poster":"az_architect","content":"The import Git repo is the correct answer.","comment_id":"638038"},{"poster":"syu31svc","content":"Selected Answer: D\nIf you've done your own hands-on, D is the answer","timestamp":"1706099520.0","upvote_count":"2","comment_id":"635976"},{"timestamp":"1706029800.0","content":"Import a Git repository","comment_id":"635668","upvote_count":"1","poster":"Govcomm"},{"comment_id":"628280","poster":"kennynelcon","content":"Selected Answer: D\nCorrect answer and explanation. \nLab Tested","timestamp":"1704625560.0","upvote_count":"1"},{"upvote_count":"1","poster":"Eltooth","timestamp":"1700749920.0","comment_id":"606066","content":"Selected Answer: D\nD is correct answer."},{"comment_id":"598333","poster":"UnknowMan","timestamp":"1699397940.0","content":"correct","upvote_count":"1"},{"poster":"rdemontis","comment_id":"572074","content":"Selected Answer: D\ncorrect answer and explanation","upvote_count":"1","timestamp":"1695281520.0"},{"comment_id":"514983","upvote_count":"1","content":"Correct answer verified!","timestamp":"1688296140.0","poster":"sidharthwader"},{"poster":"aroravibhu","comment_id":"504697","upvote_count":"1","content":"Selected Answer: D\nD it is","timestamp":"1687153200.0"},{"timestamp":"1683780000.0","poster":"rajvelm","comment_id":"476024","upvote_count":"1","content":"Got this questions on 7 Nov 2021"},{"content":"https://docs.microsoft.com/en-us/azure/devops/repos/git/import-git-repository?view=azure-devops","comment_id":"458743","timestamp":"1680871620.0","poster":"Ashutosh_9608","upvote_count":"1"},{"poster":"Kalaismile06","content":"From Import Git repository is the right answer","comment_id":"365166","timestamp":"1669268100.0","upvote_count":"1"},{"poster":"Miles19","comment_id":"336547","timestamp":"1665860100.0","content":"correct","upvote_count":"1"},{"content":"Verified - Correct!","upvote_count":"2","timestamp":"1660108440.0","poster":"RKS","comment_id":"287393"},{"timestamp":"1652973300.0","upvote_count":"2","content":"D. From Import a Git repository, click Import.","poster":"kumardeb","comment_id":"222959"},{"timestamp":"1642861080.0","comment_id":"141115","poster":"Nicole456","content":"Correct","upvote_count":"3"},{"comment_id":"99600","upvote_count":"4","timestamp":"1638317160.0","content":"Fred64 is correct. the right answer is D.","poster":"JK2"}],"timestamp":"2020-05-14 02:03:00","unix_timestamp":1589414580,"question_id":223,"answer_ET":"D","choices":{"D":"From Import a Git repository, click Import.","A":"Create a pull request.","C":"Create a service connection for GitHub.","B":"Create a webhook.","E":"Create a personal access token in Azure DevOps."},"answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/20518-exam-az-400-topic-5-question-15-discussion/","answer":"D"},{"id":"5Ujumn9lxCbxqnHLEF6O","topic":"5","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nThe lead developer at your company reports that adding new application features takes longer than expected due to a large accumulated technical debt.\nYou need to recommend changes to reduce the accumulated technical debt.\nSolution: You recommend increasing the code duplication.\nDoes this meet the goal?","answer":"B","exam_id":55,"timestamp":"2021-04-15 20:57:00","discussion":[{"comments":[{"upvote_count":"1","timestamp":"1732272300.0","content":"That means code complexity","comment_id":"1215585","poster":"Mattt"}],"timestamp":"1662912360.0","content":"Selected Answer: B\nprobably the easiest question in the exam. Imagine telling the lead dev that MORE duplication is how you reduce technical debt lol","comment_id":"565717","poster":"jasifu3","upvote_count":"20"},{"comment_id":"1000318","timestamp":"1709715540.0","upvote_count":"2","poster":"WH16","content":"Selected Answer: B\nOn exam 2023-09-06, selected B."},{"timestamp":"1709443140.0","poster":"Tyler2023","upvote_count":"2","content":"definitely no, you need to submit your resignation letter when you recommend this.","comment_id":"997270"},{"timestamp":"1701098640.0","comment_id":"908014","upvote_count":"1","content":"Selected Answer: B\nB is the answer.\n\nhttps://learn.microsoft.com/en-us/training/modules/identify-technical-debt/2-examine-code-quality\nReusability measures whether existing assets—such as code—can be used again. Assets are more easily reused if they have modularity or loose coupling characteristics. The number of interdependencies can measure reusability. Running a static analyzer can help you identify these interdependencies.","poster":"zellck"},{"timestamp":"1678605480.0","content":"On the opposite side ,Does \"Decreasing\" code duplication , reduces technical debt?","comment_id":"666601","poster":"ubuntu1234","upvote_count":"2"},{"upvote_count":"2","comment_id":"642833","poster":"syu31svc","content":"Selected Answer: B\nInstead reduce the code complexity.\n\nAnswer is No","timestamp":"1675592340.0"},{"upvote_count":"1","poster":"az_architect","comment_id":"638023","content":"Code duplication would rather increase the existing technical debt. \nHence answer is: B","timestamp":"1674824640.0"},{"timestamp":"1670402580.0","content":"Selected Answer: B\nPlease Microsoft add more questions like that so I can pass the exam lol","comment_id":"612609","poster":"franekfranek","comments":[{"timestamp":"1672661640.0","upvote_count":"1","content":"Jajaja","poster":"currotron","comment_id":"626102"}],"upvote_count":"4"},{"upvote_count":"1","poster":"Eltooth","content":"Selected Answer: B\nB is correct answer.","timestamp":"1669213980.0","comment_id":"606067"},{"upvote_count":"1","content":"Correct","timestamp":"1667861940.0","comment_id":"598334","poster":"UnknowMan"},{"comment_id":"572075","timestamp":"1663745880.0","upvote_count":"1","content":"Selected Answer: B\ncorrect and obvious","poster":"rdemontis"},{"poster":"V_Ramon","upvote_count":"3","content":"this question came out today, July 28, 2021","timestamp":"1643341140.0","comment_id":"415823"},{"comment_id":"388791","poster":"ukohae39","upvote_count":"2","content":"Correct","timestamp":"1640268480.0"},{"poster":"Miles19","upvote_count":"4","comment_id":"336549","timestamp":"1634324220.0","content":"Correct."}],"answer_images":[],"answer_description":"","answers_community":["B (100%)"],"answer_ET":"B","isMC":true,"url":"https://www.examtopics.com/discussions/microsoft/view/50224-exam-az-400-topic-5-question-16-discussion/","question_images":[],"question_id":224,"unix_timestamp":1618513020,"choices":{"B":"No","A":"Yes"}},{"id":"mgWs87Pu1eZonNIyK67w","discussion":[{"comments":[{"comment_id":"1080972","upvote_count":"1","content":"We are recommending changes to reduce technical debt. Increasing test coverage doesnt have to solve the problem itself to be a \"good\" recommendation.\n\nI think test coverage is effective if there is large, unmanaged technical debt. It can identify areas that could be improved, complexity reduced, or otherwise streamlined. But that effect will have a diminishing return as the backlog of technical debt is resolved. When the returns have diminished past a certain point, the test coverage can probably be scaled back.\n\nSince the scenario presented states that there is a large accumulated technical debt, I believe the answer is Yes for this case.","timestamp":"1716742680.0","poster":"mfawew223"},{"comments":[{"timestamp":"1676271660.0","poster":"pj74","content":"But the point of tests is they enable you to refactor the code with more confidence... the existing tests don't change as you reduce technical debt, it's the underlying code being tested that is improved. Agree that changing test coverage can be a supporting factor in reducing technical debt, but by itself doesn't reduce technical debt.","upvote_count":"2","comment_id":"646125","comments":[{"comment_id":"943363","timestamp":"1704442980.0","poster":"zeaimen","content":"Typical non sense binary question (tests required to refactor with confidence)","upvote_count":"1"}]}],"content":"Dave Farley would say sth. else here. Usaly it reduces technical debt cause you start to refactor things. You wouldnt just write tests for bad code.","comment_id":"533704","timestamp":"1658915820.0","poster":"samyderlachs","upvote_count":"3"}],"timestamp":"1634897280.0","poster":"Beast_Hollow","comment_id":"340955","upvote_count":"36","content":"B is correct, cause just adding test coverages won't reduce the technical debt."},{"poster":"Mithi","timestamp":"1619464860.0","comments":[{"poster":"Miles19","comment_id":"341084","content":"Yes, I believe you're right. By increasing the code coverage on the unit tests, we are making sure that classes and methods are doing what they are supposed to do - meaning this is definitely contributing decreasing the technical debt.","upvote_count":"4","timestamp":"1634908860.0"},{"upvote_count":"4","comment_id":"236760","poster":"ArnoudBM","timestamp":"1623001320.0","content":"And unit testing is an almost required ingredient for checking your refactoring results"}],"comment_id":"206602","content":"Yes, this can also help. If the test coverage is high , that means you know parts of the code that are not being used at all. This can help you refactor code snippets to see if they are required or not.","upvote_count":"19"},{"timestamp":"1730792100.0","comment_id":"1206782","poster":"arr73","upvote_count":"3","content":"Selected Answer: A\nA is correct. The link below is the reference in Microsoft Learn documentation. It says \"One key way to minimize the constant acquisition of technical debt is to use automated testing and assessment.\" --> more automated testing --> higher test coverage\nhttps://learn.microsoft.com/en-us/training/modules/identify-technical-debt/4-introduction-technical-debt"},{"poster":"vsvaid","content":"Selected Answer: A\nI think yes","timestamp":"1718756640.0","upvote_count":"1","comment_id":"1100213"},{"poster":"Tyler2023","timestamp":"1709443260.0","comments":[{"poster":"Tyler2023","upvote_count":"1","timestamp":"1709443380.0","comment_id":"997274","content":"My answer is 50/50 :D, I don't know, it depends after reading other comments, all their reasoning are valid"}],"upvote_count":"1","content":"I don't think adding test coverage will help reduce the technical debt. Unit tests and integration tests are only specifications that will make sure no one break the logic of the code","comment_id":"997272"},{"poster":"yana_b","timestamp":"1708077000.0","upvote_count":"1","content":"https://learn.microsoft.com/en-us/azure/devops/pipelines/test/review-code-coverage-results?view=azure-devops\n\nReviewing the code coverage result helps to identify code path(s) that are not covered by the tests. This information is important to improve the test collateral over time by reducing the test debt.","comment_id":"982308"},{"poster":"renzoku","comment_id":"925379","upvote_count":"3","content":"you can get 100% test coverage but your technical debt won't be solved","timestamp":"1702751220.0"},{"upvote_count":"1","poster":"Fal991l","timestamp":"1696176960.0","content":"GPT: Yes, increasing test coverage can help reduce accumulated technical debt [^A^]. By writing more tests to cover more of the codebase, you can improve the quality of the code and make it easier to identify and fix issues. This can help prevent the accumulation of technical debt and make it easier to add new features to the application.\n\nSo, the correct answer to your question is A. Yes.","comments":[{"content":"you know GPT can be confidently wrong on basic things, I'm not liking all these comments where someone has just pasted AI responses.....","poster":"catfood","upvote_count":"6","timestamp":"1704520200.0","comment_id":"944294"}],"comment_id":"858093"},{"comment_id":"805248","comments":[{"timestamp":"1705565460.0","poster":"xRiot007","content":"Technical debt is not just coding style, but overall design, the performance and functionality of that design and how many issues (code smells, bugs, etc) are in your codebase.","comment_id":"955020","upvote_count":"1"}],"content":"Selected Answer: B\ntest coverages dont check your coding style, spelling and code duplication. It just checks functionality it check if :\n\nvar 123urass = true ? 1 : 0;\nvar 123uranus = false ? 0 : 1\nAssert 123urass == 123uranus == true\n\noooh cool it passes.","timestamp":"1691753820.0","upvote_count":"6","poster":"Hieronimusov"},{"timestamp":"1690244700.0","poster":"SayCloud","comment_id":"787207","upvote_count":"1","content":"Selected Answer: A\nI think it should be A, \nRegular and timely testing, process automation, or increased testing coverage help reduce technical debt. \nhttps://ardas-it.com/how-to-reduce-technical-debt-best-strategies-for-technical-debt-reduction"},{"upvote_count":"3","content":"Selected Answer: B\nWould consider B as the answer. Not seeing the relationship with test coverage. \nThe more test coverage, means that more of your code is under some control, but that doesn't mean that you are still introducing issues that will be part of technical debt, i.e, code does what is supposed to do, but might fail sooner or later, either do to the deprecation of what is being used,...","timestamp":"1687256460.0","poster":"DavidCarp","comment_id":"750844"},{"upvote_count":"3","poster":"GokhanSenyuz","content":"Selected Answer: B\nanswer clear No","timestamp":"1683718440.0","comment_id":"715263"},{"poster":"ehurfheiz","content":"Selected Answer: B\nI think it doesn't reduce the technical debt","timestamp":"1681280340.0","comment_id":"692753","upvote_count":"3"},{"poster":"giuliohome","comment_id":"657222","content":"Selected Answer: A\nhttps://www.opkey.com/blog/technical-debt-what-does-it-mean-to-be-in-the-red-with-qa-testing\nThe key contributors in accumulating technical debt in a QA practice include: a lack of test coverage, oversized user stories, short sprints, and cutting corners due to delivery pressures.","timestamp":"1677755760.0","upvote_count":"2"},{"upvote_count":"3","content":"Selected Answer: B\nB is correct since reducing code complexity should be the right answer to these technical debt problem","comment_id":"651382","timestamp":"1677266040.0","poster":"WickedMJ"},{"upvote_count":"3","comment_id":"649616","timestamp":"1676966520.0","content":"Selected Answer: B\nIncreasing test coverage ensures your UnitTest runs through that block of code.","poster":"tempura108"},{"content":"Selected Answer: A\nhttps://docs.microsoft.com/en-us/azure/devops/pipelines/test/review-code-coverage-results?view=azure-devops\n\n\"Code coverage helps you determine the proportion of your project's code that is actually being tested by tests such as unit tests. To increase your confidence of the code changes, and guard effectively against bugs, your tests should exercise - or cover - a large proportion of your code.\n\nReviewing the code coverage result helps to identify code path(s) that are not covered by the tests. This information is important to improve the test collateral over time by reducing the test debt.\"\n\nI would say Yes","timestamp":"1676420760.0","upvote_count":"2","poster":"syu31svc","comment_id":"646936"},{"upvote_count":"1","content":"Selected Answer: A\nI consider Low/poor test coverage as technical debt, because every time you want to refactor / make changes to the code! You may break existing features / introduce bugs that aren’t caught until later in the development cycle (e.g. while conducting functional tests or worse still, reported by users in production) and that slows down your team velocity","timestamp":"1675498020.0","poster":"CS1980","comment_id":"642189"},{"timestamp":"1674824580.0","content":"Agree with the Answer and the explanation provided.","poster":"az_architect","upvote_count":"1","comment_id":"638022"},{"comment_id":"598336","content":"Selected Answer: B\ntest coverage dont reduce technical debt himself, but can help to.\nThe real solution is :\n\nSOLID \nReduce code complexity\nDependency cycle etc..","poster":"UnknowMan","timestamp":"1667862120.0","upvote_count":"6"},{"timestamp":"1663747140.0","upvote_count":"2","content":"Selected Answer: A\nIMHO the answer should be Yes, because code coverage is one of the various metric you can use to reduce technical debt. See the following documents:\nhttps://medium.com/the-liberators/how-to-deal-with-technical-debt-in-scrum-f4ec3481eabb\nhttps://www.jamasoftware.com/blog/seven-metrics-to-reduce-tech-debt/#:~:text=Code%20coverage&text=As%20a%20rule%20of%20thumb,to%20achieve%20a%20quality%20product.","poster":"rdemontis","comment_id":"572095"},{"poster":"awron_durat","comment_id":"533910","comments":[{"timestamp":"1670402700.0","content":"Exactly this, very well put","poster":"franekfranek","comment_id":"612610","upvote_count":"1"}],"content":"Would it be fair to say that it would identify some of the tech debt but not actually reduce any of it?","upvote_count":"3","timestamp":"1658930760.0"},{"comment_id":"394402","upvote_count":"1","poster":"Lokeshbm","timestamp":"1640840280.0","content":"Answer – B, NO\nIncreasing more test coverage will not help in managing technical debt.\nFor more information on technical debt, one can browse to the following URL-\nhttps://devblogs.microsoft.com/premier-developer/technical-debt-the-anti-devops-culture/"},{"content":"Considering a tech-debt measure punctuation like you would get from sonar, increasing the code coverage will not decrease the tech-debt and it can increase it if tests themselves are included in the metric. Besides, increasing coverage will not tell you parts of the code unused, it will simply tell you parts of the code un-tested.\n\nThe question states that the problem is the consuming time in producing new features by having a large tech-debt. So a reasonable measure to start with is just remove duplicated and unused code, not producing more code by adding coverage of code that might not be used.\n\nSo the first thing to do is remove unused code and re-factorise duplicated code, using static code analyzers and not adding more code. So answer is B.","upvote_count":"3","poster":"mpindado","comments":[{"content":"Your argument is like saying that adding safety checks to an airplane reduces its safety, because it results in more safety problems being revealed.\n\nLike on an airplane, more knowledge about problems increases safety, rather than decreasing it.","comment_id":"565721","upvote_count":"2","poster":"jasifu3","timestamp":"1662912720.0"}],"comment_id":"382589","timestamp":"1639573620.0"},{"comment_id":"371562","poster":"msafi","content":"A is correct. Code coverage increases assurance that a change does not break the application which results in reduced development time which is the main issue in this case.\nIncreasing code coverage also requires refactoring so the code is testable.\nOverall code coverage reduces technical dept.","upvote_count":"5","timestamp":"1638339000.0"},{"poster":"Dekai","content":"B. Correct","timestamp":"1637637300.0","upvote_count":"5","comment_id":"364027"},{"poster":"luclasses","upvote_count":"6","comments":[{"upvote_count":"3","poster":"Kinon4","content":"Thank you amigo","timestamp":"1637161380.0","comment_id":"359556"},{"upvote_count":"1","content":"Which one? Which instructor?","timestamp":"1639462200.0","comment_id":"381524","poster":"Hathuguay"}],"content":"Es si, lo dice el indio de udemy","comment_id":"354498","timestamp":"1636626900.0"},{"content":"I would say is correct, because just by adding more test coverages to the project won't fix the tech debt","comment_id":"333639","timestamp":"1634003100.0","poster":"rafapaz09","upvote_count":"9"}],"answers_community":["B (69%)","A (31%)"],"topic":"5","timestamp":"2020-10-26 22:21:00","answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/35260-exam-az-400-topic-5-question-17-discussion/","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nThe lead developer at your company reports that adding new application features takes longer than expected due to a large accumulated technical debt.\nYou need to recommend changes to reduce the accumulated technical debt.\nSolution: You recommend increasing the test coverage.\nDoes this meet the goal?","answer_ET":"B","isMC":true,"choices":{"B":"No","A":"Yes"},"answer":"B","question_id":225,"exam_id":55,"unix_timestamp":1603747260,"question_images":[],"answer_images":[]}],"exam":{"isBeta":false,"lastUpdated":"12 Apr 2025","id":55,"numberOfQuestions":558,"provider":"Microsoft","isMCOnly":false,"name":"AZ-400","isImplemented":true},"currentPage":45},"__N_SSP":true}