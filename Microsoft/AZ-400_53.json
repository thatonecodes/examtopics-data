{"pageProps":{"questions":[{"id":"qnWZtXj9Qtj2QXmceXnc","question_text":"HOTSPOT -\nYour company uses GitHub for source control. GitHub repositories store source code and store process documentation. The process documentation is saved as\nMicrosoft Word documents that contain simple flow charts stored as .bmp files.\nYou need to optimize the integration and versioning of the process documentation and the flow charts. The solution must meet the following requirements:\n✑ Store documents as plain text.\n✑ Minimize the number of files that must be maintained.\n✑ Simplify the modification, merging, and reuse of flow charts.\nSimplify the modification, merging, and reuse of documents.\n//IMG//\n\nHot Area:\n//IMG//","isMC":false,"exam_id":55,"timestamp":"2022-09-05 20:36:00","discussion":[{"content":"1. Markdown (.md)\n2. Mermaid diagrams\n\nhttps://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/quickstart-for-writing-on-github\nMarkdown is an easy-to-read, easy-to-write language for formatting plain text. You can use Markdown syntax, along with some additional HTML tags, to format your writing on GitHub, in places like repository READMEs and comments on pull requests and issues. \n\nhttps://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams\nYou can create diagrams in Markdown using three different syntaxes: mermaid, geoJSON and topoJSON, and ASCII STL.\nMermaid is a Markdown-inspired tool that renders text into diagrams.","comment_id":"913984","upvote_count":"15","poster":"zellck","timestamp":"1717459980.0"},{"upvote_count":"8","timestamp":"1694802000.0","comment_id":"670193","poster":"markp","content":"Correct"},{"upvote_count":"3","content":"Correct","poster":"yana_b","comment_id":"982200","timestamp":"1723785540.0"},{"comment_id":"660452","timestamp":"1693938960.0","upvote_count":"8","poster":"alexax578","content":"Markdown and Mermaid makes sense to me, correct answer."}],"url":"https://www.examtopics.com/discussions/microsoft/view/80408-exam-az-400-topic-5-question-5-discussion/","answer":"","answer_description":"Box 1: Markdown (.md)\nGithub understands several text formats, including .txt and .md. .md stands for a file written in Markdown.\n\nBox 2: Mermaid diagrams -\nMermaid lets you create diagrams and visualizations using text and code.\nIt is a Javascript based diagramming and charting tool that renders Markdown-inspired text definitions to create and modify diagrams dynamically.\nReference:\nhttps://ourcodingclub.github.io/tutorials/git/\nhttps://mermaid-js.github.io/mermaid/#/","question_id":261,"answer_images":["https://www.examtopics.com/assets/media/exam-media/04257/0022800001.jpg"],"unix_timestamp":1662402960,"answers_community":[],"topic":"5","question_images":["https://www.examtopics.com/assets/media/exam-media/04257/0022600012.png","https://www.examtopics.com/assets/media/exam-media/04257/0022700001.jpg"],"answer_ET":""},{"id":"7CkRfjGoj1MMJO2dOJrG","exam_id":55,"answer_description":"","answer":"BE","isMC":true,"answer_ET":"BE","choices":{"A":"Install the git-fat extension and associate the extension to ZIP files.","D":"Use GZip to compress the file before committing the file.","E":"Store files in Azure Storage and enable blob versions.","B":"Install the Git LFS extension and associate the extension to ZIP files.","C":"Install the git-stash extension and associate the extension to ZIP files."},"answers_community":["BE (50%)","BD (30%)","AB (20%)"],"topic":"5","question_id":262,"url":"https://www.examtopics.com/discussions/microsoft/view/131773-exam-az-400-topic-5-question-50-discussion/","question_text":"You use Git for source control.\n\nYou need to commit a 3-GB ZIP file that contains virtual machines used for testing. The solution must meet the following requirements:\n\n• The file must be versioned.\n• The file must be associated with the corresponding code commits.\n\nWhich two actions should you include in the solution? Each correct answer presents part of the solution.\n\nNOTE: Each correct selection is worth one point.","answer_images":[],"question_images":[],"unix_timestamp":1705908000,"timestamp":"2024-01-22 08:20:00","discussion":[{"comment_id":"1128389","poster":"Rafi786_khan","comments":[{"comment_id":"1196592","content":"The question says Each correct answer presents part of the solution. Both B and E are complete solutions.","timestamp":"1713272520.0","poster":"zhshwx","upvote_count":"1"}],"content":"Answer: B & E\nExplanation:\n\nGit LFS (Large File Storage): This extension is specifically designed for handling large files within a Git repository. It stores the file contents in a separate backend (e.g., GitHub LFS servers), while only storing a pointer to the file within the Git repository itself. This significantly reduces the repository size and improves versioning performance. Associating the ZIP file extension with Git LFS ensures automatic handling of large files.\n\nAzure Storage with Blob Versions: This approach stores the actual 3GB ZIP file in Azure Storage, not the Git repository. By enabling blob versions, you maintain version history for the file, allowing you to revert to previous versions if needed. This solution keeps the Git repository lightweight while maintaining version control for the large file.","upvote_count":"11","timestamp":"1705908000.0"},{"timestamp":"1735379640.0","poster":"dddddddddddww12","comment_id":"1332898","upvote_count":"2","content":"Selected Answer: AB\nThe git-fat extension is a tool for managing large files in Git repositories by offloading their content to an external storage system while keeping lightweight references in the Git repository. This allows Git to manage large files more efficiently without bloating the repository size."},{"comments":[{"poster":"Freyr","timestamp":"1737273480.0","comment_id":"1342917","upvote_count":"1","content":"I think, (E) is not going to be the answer because it is taking git out of the equation which we need as per the question."}],"timestamp":"1716820920.0","comment_id":"1219616","upvote_count":"2","content":"Selected Answer: BE\nB to handle the large file\nE to handle the storage and versioning.","poster":"UrbanRellik"},{"poster":"FeriAZ","comments":[{"upvote_count":"1","content":"Number 2 i wrong. The correct explanation is in below:\n\nStore files in Azure Storage and enable blob versions (E): While Git LFS doesn't require a specific storage solution, using Azure Blob storage with enabled versioning aligns well with the requirements. Azure Blob storage provides a reliable and scalable location to store the actual content of the large file referenced by Git LFS. Enabling blob versions ensures that historical versions of the file are retained, matching the versioning requirement.","comment_id":"1184669","poster":"FeriAZ","timestamp":"1711618020.0"}],"timestamp":"1710229020.0","content":"Selected Answer: BE\n1. Install the Git LFS (Large File Storage) extension and associate the extension to ZIP files.\n\nGit LFS is designed specifically for handling large files in Git repositories.\nIt stores the large file content (the 3-GB ZIP in this case) outside the main Git repository, typically on a server.\nGit LFS keeps track of the file using a pointer within the repository, ensuring versioning and association with the corresponding code commits.\n2. Use GZip to compress the file before adding it to Git LFS.\n\nWhile not strictly necessary for Git LFS functionality, compressing the ZIP file with GZip can further reduce its size before storing it externally.\nThis can optimize storage space and potentially reduce upload/download times.","comment_id":"1171510","upvote_count":"2"},{"poster":"mcabrito","timestamp":"1709456820.0","content":"Selected Answer: BD\nI believe the BD option is the right choice because at the beginning of the question, it states: 'You use Git for source control.' So, to me, it doesn't make sense to send the file to Azure Storage since it has no relation to Git whatsoever. I understand that it's an option for versioning the file, but in my opinion, this option doesn't align with the context of the question. Therefore, if this question appears on my exam, I will select options BD.","comments":[{"upvote_count":"1","timestamp":"1731149880.0","comment_id":"1309059","content":"I agree, that is a key benefit of lfs, I think.\n\"Same Git workflow\nWork like you always do on Git—no need for additional commands, secondary storage systems, or toolsets.\"","poster":"p2006"}],"upvote_count":"3","comment_id":"1164619"},{"comment_id":"1159469","content":"Selected Answer: BE\nB & E, correct answer","poster":"TheMCT","upvote_count":"1","timestamp":"1708934040.0"},{"poster":"Tuki93","content":"https://learn.microsoft.com/en-us/azure/devops/repos/git/manage-large-files?view=azure-devops","comment_id":"1147403","upvote_count":"1","timestamp":"1707665880.0"},{"poster":"Rkmylambton","comments":[{"poster":"mcabrito","timestamp":"1709456880.0","comment_id":"1164621","content":"I agree with you.","upvote_count":"2"}],"timestamp":"1707068100.0","content":"It is not mentioned where we are going to save file. Github LFS Server or Azure Storage. I think B and D can be option.","comment_id":"1140365","upvote_count":"4"}]},{"id":"T9OIpCFAjWoUWUHqTQ4q","answers_community":["C (75%)","E (25%)"],"answer":"C","answer_images":[],"timestamp":"2024-08-22 10:18:00","answer_description":"","isMC":true,"url":"https://www.examtopics.com/discussions/microsoft/view/146296-exam-az-400-topic-5-question-51-discussion/","choices":{"B":"git checkout\ngit clean -d data.txt --force","D":"git rm data.txt\ngit push --force","F":"git revert -edit data.txt\ngit push -force","E":"git filter-repo --invert-paths --path data.txt\ngit push origin --force --all","C":"bfg --delete-files data.txt\ngit push --force","A":"git checkout\ngit reset -hard -pathspec data.txt"},"question_text":"You manage source control by using GitHub.\n\nYou have a file named Data.txt that contains sensitive data. A user pushes Data.txt to a repository.\n\nYou need to purge the file from the repository.\n\nWhich two commands can you use? Each correct answer presents a complete solution.\n\nNOTE: Each correct solution is worth one point.","question_id":263,"question_images":[],"answer_ET":"C","unix_timestamp":1724314680,"exam_id":55,"discussion":[{"upvote_count":"1","comment_id":"1330868","timestamp":"1734969540.0","content":"Selected Answer: C\nNot two options, two commands, and each options has two commands. Because it's a simple delete and doesn't require \"Complex history rewrites\", I'm going with BFG","poster":"Dankho"},{"timestamp":"1732814580.0","poster":"fuchsm999","comment_id":"1319386","upvote_count":"2","content":"Selected Answer: E\nC and E should be selected, not only one option"},{"timestamp":"1731180660.0","poster":"p2006","comment_id":"1309183","content":"Selected Answer: E\nbfg, filter","upvote_count":"1"},{"comment_id":"1298622","poster":"Emil_Topics","content":"Selected Answer: C\nBFG & Filter","upvote_count":"2","timestamp":"1729070580.0"},{"poster":"Mattt","timestamp":"1728330300.0","comment_id":"1294454","content":"Selected Answer: C\nC & E are correct.\nWe need 2 options","upvote_count":"2"},{"poster":"DevopsRock","timestamp":"1725788580.0","comments":[{"comment_id":"1280288","timestamp":"1725788700.0","content":"C and E, BFG repo cleaner and git filter-","poster":"DevopsRock","upvote_count":"2"}],"comment_id":"1280286","content":"Selected Answer: C\nBFG Repo cleaner","upvote_count":"1"},{"upvote_count":"4","poster":"a58817","content":"C & E: https://graphite.dev/guides/how-to-delete-sensitive-data-from-git","timestamp":"1725117660.0","comment_id":"1275627"},{"poster":"marmila","comment_id":"1270570","content":"Selected Answer: C\nI would say C for obvious reasons","upvote_count":"3","timestamp":"1724314680.0"}],"topic":"5"},{"id":"sHZCdKTePwsaYvpD3WFS","answer_ET":"D","url":"https://www.examtopics.com/discussions/microsoft/view/146723-exam-az-400-topic-5-question-52-discussion/","choices":{"C":"Configure a required GitHub Actions workflow for all the repositories.","D":"Push a GitHub Actions workflow to all the repositories.","A":"Enable Dependabot security updates.","B":"Enable Dependabot alerts."},"discussion":[{"timestamp":"1737640320.0","poster":"swk1az400","content":"Selected Answer: D\nCOPILOT: \nYes, I'm sure. To enable CodeQL scanning for your GitHub Enterprise repositories, you should:\n\nD. Push a GitHub Actions workflow to all the repositories.\n\nHere’s a bit more detail on why this is the correct approach:\n\nCodeQL scanning is implemented through GitHub Actions workflows. By pushing a workflow file to each repository, you ensure that CodeQL analysis is configured and runs automatically on your codebase.\nThis workflow will include steps to initialize CodeQL, analyze your code, and upload the results to GitHub for review.","upvote_count":"1","comment_id":"1345427"},{"timestamp":"1732815120.0","comment_id":"1319388","upvote_count":"2","poster":"fuchsm999","content":"Selected Answer: D\nD. Push a GitHub Actions workflow to all the repositories.\n\nExplanation:\nTo enable CodeQL scanning, you need to create and configure a GitHub Actions workflow that performs the CodeQL analysis. This workflow must be added to each repository you want to scan. Dependabot security updates and alerts (options A and B) are related to dependency management, not CodeQL. While configuring a required workflow (option C) can enforce scanning, you must first deploy the workflow to the repositories (option D)."},{"poster":"MrAZ105","upvote_count":"1","content":"Copilot\nSent by Copilot:\nTo enable CodeQL scanning for your repositories in GitHub Enterprise, you should:\n\nD. Push a GitHub Actions workflow to all the repositories.\n\nThis involves adding a CodeQL workflow file to each repository, which uses the github/codeql-action to run CodeQL analysis.","comment_id":"1296196","timestamp":"1728667380.0"}],"topic":"5","isMC":true,"exam_id":55,"answer_images":[],"question_text":"You use GitHub Enterprise for source control repositories. The repositories store C# code.\n\nYou need to enable CodeQL scanning for the repositories.\n\nWhat should you do?","unix_timestamp":1725117900,"question_images":[],"answer":"D","answers_community":["D (100%)"],"answer_description":"","timestamp":"2024-08-31 17:25:00","question_id":264},{"id":"JelY7TQ41tIESC4S6HhD","isMC":false,"question_id":265,"timestamp":"2024-08-23 17:32:00","unix_timestamp":1724427120,"answer_images":["https://img.examtopics.com/az-400/image126.png"],"answers_community":[],"topic":"5","discussion":[{"timestamp":"1731234060.0","content":"organization name\nrepository name\n\n\"The OWNER of the repository is the github organization and the REPOSITORY name is docs.\"","poster":"p2006","upvote_count":"2","comment_id":"1309396","comments":[{"poster":"aks_exam","upvote_count":"1","content":"If the repo is your personal repo, then \"repo owner\", \"repo name\".\nIf the repo is owned by some org, then \"org name\", \"repo name\".","timestamp":"1736688660.0","comment_id":"1339519"},{"comment_id":"1315570","poster":"Seanm45","content":"The owner of the repo is the 'parent' of the repo, whether it's you (which the question references), an individual, or an organization. If you have a personal repo, that URL will be your GitHub username. Either way, the first part of the URL is the repository owner\n\nRepository owner\nRepository name","timestamp":"1732149240.0","upvote_count":"1"}]},{"content":"Answer is correct\n\nExample: \nhttps://github.com/OWNER/REPOSITORY/actions/workflows/WORKFLOW-FILE/badge.svg\nSee: \nhttps://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/monitoring-workflows/adding-a-workflow-status-badge","poster":"swk2az400","upvote_count":"3","comment_id":"1288922","timestamp":"1727250600.0"},{"timestamp":"1724764020.0","content":"Given answer is correct\n\nhttps://github.com/ Repository owner / Repository name / actions/workflows/WF1.yml/badge.svg\nIf WF1 is in a specific branch, you can pinpoint the badge to that branch like so:\nhttps://github.com/ Repository owner / Repository name / actions/workflows/WF1.yml/badge.svg?branch= branch name\nThis will show the status of WF1 from the specified branch.\nPlease replace Repository owner, Repository name, and branch name with actual values.","upvote_count":"1","poster":"Christian_garcia_martin","comment_id":"1273438"}],"answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/146364-exam-az-400-topic-5-question-53-discussion/","exam_id":55,"answer_ET":"","question_text":"HOTSPOT\n-\n\nYou have a GitHub repository that contains a workflow named WF1. WF1 is used to build code for an app named App1.\n\nYou need to add a build status badge to the README.md file in the repository for App1.\n\nHow should you complete the URL for the badge? To answer, select the appropriate options in the answer area.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","answer":"","question_images":["https://img.examtopics.com/az-400/image125.png"]}],"exam":{"isMCOnly":false,"isImplemented":true,"id":55,"name":"AZ-400","provider":"Microsoft","lastUpdated":"12 Apr 2025","isBeta":false,"numberOfQuestions":558},"currentPage":53},"__N_SSP":true}