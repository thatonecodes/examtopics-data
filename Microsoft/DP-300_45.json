{"pageProps":{"questions":[{"id":"d1e7Wve3y3wTEe1B089K","topic":"4","answers_community":["A (100%)"],"answer":"A","timestamp":"2021-11-20 19:25:00","unix_timestamp":1637432700,"answer_images":[],"discussion":[{"poster":"Ciupaz","upvote_count":"4","comment_id":"702079","timestamp":"1729679160.0","content":"Selected Answer: A\nWhen SET SHOWPLAN_ALL is ON, SQL Server returns execution information for each statement without executing it, and Transact-SQL statements are not executed."},{"timestamp":"1705864620.0","poster":"Chunchi","upvote_count":"3","comment_id":"529325","content":"Selected Answer: A\nlook correct"},{"upvote_count":"1","content":"looks good, what do you think?","poster":"o2091","timestamp":"1700504700.0","comment_id":"482769"}],"question_text":"You have an Azure SQL database named DB1.\nYou need to display the estimated execution plan of a query by using the query editor in the Azure portal.\nWhat should you do first?","isMC":true,"url":"https://www.examtopics.com/discussions/microsoft/view/66410-exam-dp-300-topic-4-question-18-discussion/","question_id":221,"question_images":[],"answer_ET":"A","exam_id":68,"answer_description":"","choices":{"B":"For DB1, set QUERY_CAPTURE_MODE of Query Store to All.","C":"Run the SET FORCEPLAN Transact-SQL statement.","D":"Enable Query Store for DB1.","A":"Run the SET SHOWPLAN_ALL Transact-SQL statement."}},{"id":"FAE0wGbcqJIkUge8FDPJ","answers_community":[],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04275/0021300001.png"],"unix_timestamp":1637432760,"question_id":222,"discussion":[{"upvote_count":"2","timestamp":"1723627320.0","comment_id":"808306","content":"Yes, the query is just pulling from one table so by making the nonclustered index a covering index including al the additional required fields will eliminate the need for the lookup.","poster":"BrenFa101"},{"content":"The given answer looks correct","poster":"o2091","upvote_count":"3","timestamp":"1684599960.0","comment_id":"482770"}],"answer_ET":"","url":"https://www.examtopics.com/discussions/microsoft/view/66411-exam-dp-300-topic-4-question-19-discussion/","topic":"4","exam_id":68,"timestamp":"2021-11-20 19:26:00","question_text":"HOTSPOT -\nYou have an Azure SQL database.\nYou have a query and the associated execution plan as shown in the following exhibit.\n//IMG//\n\nUse the drop-down menus to select the answer choice that completes each statement based on the information presented in the graphic.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0021200001.jpg","https://www.examtopics.com/assets/media/exam-media/04275/0021200002.png"],"isMC":false,"answer":"","answer_description":"Box 1: Key Lookup -\nThe Key Lookup cost is 99% so that is the performance bottleneck.\n\nBox 2: nonclustered index -\nThe key lookup on the clustered index is used because the nonclustered index does not include the required columns to resolve the query. If you add the required columns to the nonclustered index, the key lookup will not be required."},{"id":"u2hMFwKWGKiy3unCATsC","question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0018900001.jpg"],"timestamp":"2020-07-10 09:59:00","isMC":false,"answer":"","question_text":"HOTSPOT -\nYou have SQL Server on an Azure virtual machine that contains a database named Db1.\nYou need to enable automatic tuning for Db1.\nHow should you complete the statements? To answer, select the appropriate answer in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","answer_ET":"","exam_id":68,"question_id":223,"topic":"4","discussion":[{"content":"SET QUERY_STORE = ON (OPERATION_MODE = READ_WRITE);\nhttps://docs.microsoft.com/en-us/sql/relational-databases/performance/monitoring-performance-by-using-the-query-store?view=sql-server-ver15\n\nSET AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = ON ); \nhttps://docs.microsoft.com/en-us/sql/relational-databases/automatic-tuning/automatic-tuning?view=sql-server-ver15","timestamp":"1641808740.0","poster":"Tomi1234","upvote_count":"55","comment_id":"131257"},{"upvote_count":"32","poster":"[Removed]","content":"The right answer is as Tomi1234 say because is a VM SQL Server:\nBox1 - SET QUERY_STORE = ON (OPERATION MODE = READ_WRITE);\nBox2 - SET AUTOMATIC_TUNNING (FORCE_LAST_GOOD_PLAN = ON);\nhttps://www.sqlshack.com/understanding-automatic-tuning-in-sql-server-2017/\n\nIf the server may be Azure SQL or Managed Instance then the response should be:\nBox1. SET AUTOMATIC_TUNNIG=AUTO\nBox2. SET AUTOMATIC_TUNNING (FORCE_LAST_GOOD_PLAN = ON) \n and other options are\n SET AUTOMATIC_TUNING (FORCE_LAST_GOOD_PLAN = ON, CREATE_INDEX = ON, DROP_INDEX = OFF)\nhttps://docs.microsoft.com/es-es/azure/azure-sql/database/automatic-tuning-enable","comment_id":"149061","timestamp":"1643806920.0"},{"timestamp":"1719230400.0","upvote_count":"1","content":"The option SET AUTOMATICS TUNING = AUTO does not exist so it seems.\n\nFor <automatic_tuning_option> ::=\n{\n AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = { DEFAULT | ON | OFF } )\n}\n\nhttps://learn.microsoft.com/en-us/sql/t-sql/statements/alter-database-transact-sql-set-options?view=sql-server-ver16","poster":"OneplusOne","comment_id":"754919"},{"timestamp":"1666940100.0","poster":"prashantjoge","comment_id":"344458","content":"In case of error messages that automated recommendation management has been disabled, or simply disabled by system, the most common causes are:\n\nQuery Store is not enabled, or\nQuery Store is in read-only mode for a specified database, or\nQuery Store stopped running because it used the allocated storage space.","upvote_count":"1"},{"upvote_count":"4","content":"Answers in green (in example) are correct.\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable","comments":[{"poster":"ramelas","content":"this a VM not an azure sql database","timestamp":"1686749760.0","upvote_count":"2","comment_id":"501470"}],"comment_id":"331590","poster":"karateKid","timestamp":"1665270180.0"},{"upvote_count":"5","poster":"vicky007_87","content":"Correct Answer:\nSET QUERY_STORE = ON (OPERATION MODE = READ_WRITE);\nSET AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = ON );\n\nReason:\nAs this is SQL Server hosted on Azure VM and not Azure SQL DB / MI, Query store needs to be first enabled and then automatic plan needs to be applied.","comment_id":"280573","timestamp":"1659269400.0"},{"upvote_count":"4","comments":[{"content":"When doing this, \nALTER DATABASE Sales SET AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = ON );\n\nGot this ,\nMsg 15705, Level 16, State 1, Line 4\nAutomatic Tuning option FORCE_LAST_GOOD_PLAN cannot be enabled, because Query Store is not turned on.\nMsg 5069, Level 16, State 1, Line 4\nALTER DATABASE statement failed.","comment_id":"877882","upvote_count":"1","poster":"Pranava_GCP","timestamp":"1729659600.0"}],"comment_id":"264303","content":"And the proof. Find a database w/o Query Store enabled and run the following query. You will get an error telling you Query Store must be enabled to turn on automatic tuning.\n\nALTER DATABASE CURRENT SET AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = ON );","timestamp":"1657483200.0","poster":"JohnCrawford"},{"poster":"JohnCrawford","comment_id":"264302","content":"In reviewing this another rationale occurs to me. From the documentation Force_Last_Good_Plan_On should be correct (https://docs.microsoft.com/en-us/sql/relational-databases/automatic-tuning/automatic-tuning?view=sql-server-ver15)\n\nThe aha moment is that the cache only keeps one execution plan at a time. (Technically 2. 1 for serial execution and 1 for any parallel execution). To be able to force last good plan SQL Server needs a way to determine what the last good plan was. The only place it will get that information from is the Query Store so that HAS to be enabled first.","timestamp":"1657482720.0","upvote_count":"1"},{"timestamp":"1657200540.0","upvote_count":"3","poster":"JohnCrawford","content":"If this question was about an Azure SQL database, I'd agree. The first part is redundant, but doesn't cause any issue. The problem is that the question states that this is SQL Server on a VM. In other words, not an Azure SQL DB. In that case, for automatic tuning to work Query Store must first be enabled. https://docs.microsoft.com/en-us/sql/relational-databases/automatic-tuning/automatic-tuning?view=sql-server-ver15 \n\nBecause of that I actually think the answer should be to turn on query store and then turn on automatic tuning.","comment_id":"261939"},{"upvote_count":"5","timestamp":"1646487900.0","poster":"Colbrin","content":"The reference is wrong as it applies only to SQL Database and SQL managed instance. Tomi1234 provided the right answer","comment_id":"173913"},{"timestamp":"1645297500.0","upvote_count":"3","comment_id":"161693","poster":"rickyp","content":"As a pre-requisite, Query Store must be turned on. Then, to enable automatic tuning, you will use this command:\n\n \n\nALTER DATABASE <DBNAME>\n\nSET AUTOMATIC_TUNING ( FORCE_LAST_GOOD_PLAN = ON );\n\nhttps://blog.pythian.com/sql-server-2017-automatic-tuning/"},{"upvote_count":"2","timestamp":"1642951680.0","poster":"MagnusFA","content":"enable query store to read write then auto tuning = AUTO, check https://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable#disabled-by-the-system","comment_id":"142040"},{"upvote_count":"1","content":"You're right. What I mentioned regards to on-prem env.","timestamp":"1642189920.0","comment_id":"135142","poster":"Tomi1234"},{"comment_id":"133101","poster":"Bharat","upvote_count":"5","content":"The answer is correct. If you follow the link given, there is clear explanation supporting the selected answers.","timestamp":"1642015200.0"}],"unix_timestamp":1594367940,"url":"https://www.examtopics.com/discussions/microsoft/view/25323-exam-dp-300-topic-4-question-2-discussion/","answers_community":[],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04275/0019000001.jpg"],"answer_description":"Box 1: SET QUERY_STORE = ON (OPERATION MODE = READ_WRITE);\nMust enable the Query Store.\nIncorrect:\nIf the server may be Azure SQL or Managed Instance then the response should be SET AUTOMATIC_TUNNIG=AUTO, but as it is a SQL server the Query store needs to be first enabled.\nBox 2: SET AUTOMATIC_TUNING (FORCE_LAST_GOOD_PLAN = ON)\nTo configure individual automatic tuning options via T-SQL, connect to the database and execute the query such as this one:\nALTER DATABASE current SET AUTOMATIC_TUNING (FORCE_LAST_GOOD_PLAN = ON)\nSetting the individual tuning option to ON will override any setting that database inherited and enable the tuning option. Setting it to OFF will also override any setting that database inherited and disable the tuning option.\nReference:\nhttps://docs.microsoft.com/en-us/sql/relational-databases/automatic-tuning/automatic-tuning https://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable"},{"id":"hZuYKx3fyjjH0l03Gln4","isMC":true,"question_text":"You have an instance of SQL Server on Azure Virtual Machines that has a database named DB1.\nYou plan to implement Azure SQL Data Sync for DB1.\nWhich isolation level should you configure?","unix_timestamp":1651361760,"answers_community":["B (100%)"],"topic":"4","answer_description":"","answer_images":[],"question_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/75004-exam-dp-300-topic-4-question-20-discussion/","timestamp":"2022-05-01 01:36:00","choices":{"B":"SNAPSHOT","C":"READ UNCOMMITTED","A":"SERIALIZABLE","D":"READ COMMITTED"},"answer_ET":"B","exam_id":68,"question_id":224,"answer":"B","discussion":[{"poster":"eric0718","upvote_count":"5","content":"Selected Answer: B\nSnapshot isolation must be enabled for both Sync members and hub.\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/sql-data-sync-data-sql-server-sql-database?view=azuresql","timestamp":"1667266560.0","comment_id":"595348"},{"content":"Selected Answer: B\nSnapshot isolation must be enabled for both Sync members and hub. For more info, see Snapshot Isolation in SQL Server.\n\nTaken from:\nhttps://learn.microsoft.com/en-us/azure/azure-sql/database/sql-data-sync-data-sql-server-sql-database?view=azuresql","poster":"Lukasz1993","timestamp":"1721065440.0","upvote_count":"1","comment_id":"1123607"},{"comments":[{"poster":"Dalamain","content":"according to Microsoft documentation, it's SNAPSHOT, so you're incorrect.","upvote_count":"1","comment_id":"1196608","timestamp":"1729085160.0"}],"upvote_count":"1","timestamp":"1717090500.0","comment_id":"1084717","content":"according to my knowledge and Bing Chat the answer is Read Committed","poster":"Bluediamond"}]},{"id":"cvLGMluuTjSv8H7ahUzk","answers_community":[],"url":"https://www.examtopics.com/discussions/microsoft/view/28884-exam-dp-300-topic-4-question-21-discussion/","topic":"4","exam_id":68,"unix_timestamp":1597687740,"isMC":false,"answer_ET":"","answer_images":["https://www.examtopics.com/assets/media/exam-media/04275/0021600002.jpg"],"answer_description":"Box 1: No -\nThere is only one query plan available. Force has no effect.\n\nBox 2: No -\nAdding an index will not increase IO usage.\n\nBox 3: Yes -\nThe performance would improve.\nReference:\nhttps://docs.microsoft.com/en-us/sql/relational-databases/performance/monitoring-performance-by-using-the-query-store","question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0021500001.jpg","https://www.examtopics.com/assets/media/exam-media/04275/0021600001.jpg"],"timestamp":"2020-08-17 20:09:00","question_id":225,"discussion":[{"poster":"miguelmol","timestamp":"1617564720.0","comment_id":"193164","comments":[{"upvote_count":"3","comment_id":"421813","content":"You need to review execution plan carefully. The execution plan already complains for those keys. so we need to add within the PK to reduce execution cost!","timestamp":"1644358260.0","poster":"learnazureportal"},{"content":"Agree. By definition a clustered index includes all columns. So there are none left to include. 3 is NO.","timestamp":"1623178860.0","comment_id":"238674","poster":"Luke97","upvote_count":"5"},{"upvote_count":"4","comment_id":"527331","content":"No-Yes-No\nNew NC index with all required fields included will reduce the IO.","timestamp":"1658212800.0","poster":"Daba"},{"content":"Wrong: the clustered index and it has NOT all columns by definition. What does it meas HAS? \nWhatever index has Key column and NON-Key columns. Here we're talking to include columns in the Key (not in INCLUDE of course). So that it is possible, and this makes the index more covering than before.","timestamp":"1634741280.0","upvote_count":"1","comment_id":"339650","poster":"Save"},{"upvote_count":"3","timestamp":"1642830360.0","comment_id":"411330","content":"Correct! #3 would be \"yes\" if the index in the statement was IX_SalesOrderNe... overlooked the name. thank you so much!","poster":"pr054"},{"content":"Up-voted by mistake.","comment_id":"441184","timestamp":"1646717580.0","upvote_count":"4","poster":"lorenzopp"}],"content":"For me all the three are NO:\n1.If you force that query plan, the behaviour will be always the same, so you will not reduce or increase the I/O compared with what we see in the image. Only in the case you see in the chart another and worst query plan used by the query, choosing this one will reduce the average I/O.\n2.You can create another index in the table but if using it is worse than using the current one, the sql engine will not choose it in the plan.\n3.PK is the clustered index and it has all columns by definition.","upvote_count":"33"},{"comments":[{"timestamp":"1627130520.0","comment_id":"275359","comments":[{"comment_id":"411344","timestamp":"1642831620.0","content":"Apparently you \"added\" the columns to the \"PK\", but did not \"include\" the columns to the \"clustered index\". The page reads were reduced because PK columns were cloned to nonclustered indexes internally. You may make another test with separated clustered index and PK, you would see what actually worked for you was the change with PK but not clustered index. And the exam question is no saying PK_SalesOrderHeader_... is actually a Primary Key though the name implies so.","poster":"pr054","upvote_count":"1"},{"comments":[{"poster":"Save","timestamp":"1634741520.0","comment_id":"339653","upvote_count":"1","content":"Wrong: all columns are NOT included. Include means that they have the value in index pages. This is not the case. On a Clustered Index there are only key columns; all the others are on data pages. So the third question is NO"}],"content":"You cant have included columns in a clustered index, all columns are \"included\"","comment_id":"297377","upvote_count":"2","timestamp":"1629716340.0","poster":"DrC"}],"upvote_count":"9","content":"I manually tested the query run on sample adventureworks DB and observed saving in Logical reads. logical reads reduced from 689 to 5 which confirms the correct answer for third part is Yes. (it may not be a good design decision but it does provide improved performance). Correct answer as per my analysis - No, No, Yes","poster":"vicky007_87"},{"timestamp":"1647532380.0","content":"3) is NO. Your argument suggests that the columns would be ADDED to the primary key, but the statement in the question talks about \"INCLUDING\" the columns in the primary key INDEX, not the primary key itself.","comment_id":"446640","upvote_count":"1","poster":"Behto"}],"content":"Answers are No, No and Yes. 1) force plan - there is only one execution plan. Forcing it will not change the run time. 2) No - adding another index can incur maintenance overhead, but it is not going to INCREASE the IO. If it did the optimizer would use the plan it already has. 3) Yes - Agreed with whomever said the extra columns should not be added to the primary key, but design is not the question. Question is will it make the plan more efficient. Yes it will. Currently we have a lookup. Adding those columns will make the index a covering index for this query and eliminate the lookup.","poster":"JohnCrawford","timestamp":"1625614500.0","upvote_count":"30","comment_id":"261402"},{"content":"No, Yes, No. - Issue can be resolved by modifying the existing non-clustered index making it a covering index, or creating a new non-clustered covering index. Making the clustered index a covering index does not make any sense.","upvote_count":"2","timestamp":"1723837920.0","poster":"Ben999","comment_id":"1152239"},{"poster":"testdumps2017","timestamp":"1707562560.0","content":"1. NO - self explanatory, only one plan present.\n2. NO - query stats will improve if you create an index (you will see a decrease in the IO for the query).\n3. NO - the question mentions PK_, while the print screen shows IX_.","upvote_count":"3","comment_id":"977448"},{"poster":"Cococo","timestamp":"1700030460.0","comment_id":"898036","upvote_count":"1","content":"3rd point - interesting one, if you add these 3 columns to the Clustered Index (and you can do it, columns in clustered index are just changing the physical sorting order of all rows) execution plan likely will change to Clustered Index Scan. Estimated Number of rows is 1, Clustered Scan and Key Lookup, in that case, will be pretty much the same, because in both cases plan is looking for SalesPersonID first in a Clustered index and then scan all the filtered pages for needed data. I think the answer is NO, there will be no improvement in I/O."},{"comment_id":"440142","upvote_count":"1","timestamp":"1646555460.0","content":"PK_....does that mean it's a primary key","poster":"rosa_0617"},{"timestamp":"1645727700.0","poster":"learnazureportal","upvote_count":"2","content":"BTW, Provided Answer is correct.","comment_id":"430906"},{"comment_id":"422392","timestamp":"1644466500.0","upvote_count":"2","content":"My take on this: \n- No, there is only 1 query plan makes no sense to force it in the current context\n- Yes, by creating a non-clustered index that includes the column in the output list would yield better results\n- No, you can not *include* columns in a PK only add columns to it, and it never makes sense to add this kind of columns to PK which is used for integrity reasons and not for querying reasons and perf.","poster":"JohnAvlakiotis"},{"comment_id":"421815","poster":"learnazureportal","content":"The provided answer is correct. the item #1 and Item #2 are general topics and the item #3, check execution plan, The execution plan already complains for those keys. so we need to add within the PK to reduce execution cost!","timestamp":"1644358500.0","upvote_count":"1"},{"upvote_count":"3","comment_id":"317227","poster":"Raffer","timestamp":"1632313320.0","content":"No\nForcing this plan will not reduce I/O or query execution time, as this is the only plan available.\n\nNo\nA new index with 3 columns SalesPersonId (sole key column), subtotal & totaldue would reduce I/O and query execution time, as there would be fewer rows per 8k block, compared to using the shown nonclustered index + lookups to the clustered index.\n\nNo\nMakes no sense, as can't add same columns to a clustered index (which always includes all table columns)."},{"timestamp":"1630628100.0","comment_id":"302403","content":"For third, \"include\" may mean to ADD those additional columns into primary key as covering index, not using INCLUDE clause.","upvote_count":"2","poster":"fukaka"},{"poster":"nkav","content":"3rd option is NO. This is a clustered index. It would only be true if you created a non-clustered index.","upvote_count":"3","timestamp":"1630107060.0","comment_id":"300537"},{"comment_id":"268315","content":"@Phund...This pattern in an execution plan (lookup - either RID or straight lookup) means that there is no index that completely covers the query. For the purpose of this question if a covering index were created it would improve performance.","timestamp":"1626380760.0","poster":"JohnCrawford","upvote_count":"4"},{"timestamp":"1625967720.0","comments":[{"content":"I manually tested the query run on sample adventureworks DB and observed saving in Logical reads. logical reads reduced from 689 to 5 which confirms the correct answer for third part is Yes. (it may not be a good design decision but it does provide improved performance). Correct answer as per my analysis - No, No, Yes","poster":"vicky007_87","comment_id":"275360","upvote_count":"2","timestamp":"1627130580.0"}],"content":"1.No: Just have only one Execution Plan, so force have no other plan to be forced\n2.No: Add index increase IO at maintain time and creation time not at query time\n3.No: Cluster Index have got all columns included","comment_id":"264437","poster":"Phund","upvote_count":"7"},{"content":"so, what is the answer for this?","poster":"BurhanUddin","upvote_count":"1","comment_id":"260674","timestamp":"1625528580.0"},{"upvote_count":"2","comment_id":"225995","timestamp":"1621783860.0","poster":"John88","content":"Answers are correct as they make sense to the given conditions and questions."},{"comment_id":"217950","poster":"rux","content":"N. 1 NO: we have only a plan, doesn't make sense to force it\nN.2 NO: we already have e NCI on the table\nN.3 YES: this way you'll avoid the keylookup","timestamp":"1620820500.0","upvote_count":"8"},{"content":"I feel the option 1 is a generic statement, not related to the question. https://www.sqlshack.com/force-query-execution-plan-using-sql-server-2016-query-store/\nThe SQL Server Query Store is a nice feature introduced in SQL Server 2016, which certainly merits your time and attention, although it will take few minutes from you to configure and learn. This feature is a simple way that can be used to track performance changes and troubleshoot any degradation in the queries performance by comparing the execution plans for the same query and force the best one by overriding the one saved in the plan cache and used by the Query Optimizer. So option 1 is YES","poster":"talktorahuljoshi","comment_id":"182714","upvote_count":"1","timestamp":"1616226000.0"},{"comment_id":"164959","content":"the first option should be NO. you can't reduce i/o forcing a plan with a key lookup, you can reduce i/o avoiding the key lookup modifying the existing non clustered index or creating a new one (it depends on how the NC index is defined)","poster":"wyxh","comments":[{"content":"So you mean all no?","upvote_count":"5","comment_id":"168002","timestamp":"1614485520.0","poster":"zac874997967"}],"timestamp":"1614159240.0","upvote_count":"3"},{"poster":"wyxh","content":"The third option should be No. You should add the missing columns in the nonclustered index not in the PK(the clustered one)","timestamp":"1613592540.0","upvote_count":"9","comment_id":"160262"}],"question_text":"HOTSPOT -\nYou have SQL Server on an Azure virtual machine.\nYou review the query plan shown in the following exhibit.\n//IMG//\n\nFor each of the following statements, select yes if the statement is true. Otherwise, select no.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","answer":""}],"exam":{"isBeta":false,"id":68,"isImplemented":true,"name":"DP-300","lastUpdated":"12 Apr 2025","numberOfQuestions":360,"isMCOnly":false,"provider":"Microsoft"},"currentPage":45},"__N_SSP":true}