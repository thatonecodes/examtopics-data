{"pageProps":{"questions":[{"id":"eCXKfMH1rJbbzVRHxNo2","unix_timestamp":1687977600,"exam_id":69,"question_images":[],"question_text":"You have an Azure Cosmos DB database.\n\nYou plan to create a new container named container1 that will store product data and product category data and will primarily support read requests.\n\nYou need to configure a partition key for container1. The solution must meet the following requirements:\n\n• Minimize the size of the partition.\n• Minimize maintenance effort.\n\nWhich two characteristics should you prioritize? Each correct answer presents part of the solution.\n\nNOTE: Each correct selection is worth one point.","topic":"1","discussion":[{"upvote_count":"10","poster":"azuredemo2022three","comment_id":"937010","content":"Selected Answer: BD\nTo configure a partition key for container1 in Azure Cosmos DB, prioritizing characteristics that minimize the size of the partition and maintenance effort, you should prioritize the following two characteristics:\n\nB. High cardinality: Choosing a partition key with high cardinality means having a large number of unique values distributed across the dataset. This helps in distributing the data evenly across multiple partitions, preventing hotspots and ensuring efficient scalability.\n\nD. Static: Selecting a static partition key means choosing a key that does not frequently change. This minimizes the need for updates to the partition key value and reduces maintenance effort. It also helps in maintaining a consistent distribution of data across partitions over time.\n\nSo, the correct answers are:\n\nB. High cardinality\nD. Static","timestamp":"1703796000.0"},{"upvote_count":"1","comment_id":"1101503","poster":"xRiot007","timestamp":"1718877720.0","content":"B,D - considering products have category data, we can expect the category to be a filter, which makes it a good candidate to be a partition key. Categories are static known terms for a given business (values like \"Electronics\", \"Clothing\", \"Wellness\" etc)"},{"content":"A unique\nB high cardinality\nhttps://medium.com/codex/azure-cosmos-db-partitioning-bc851a404476","upvote_count":"3","poster":"Emil_Topics","comment_id":"993223","timestamp":"1709228400.0"},{"timestamp":"1707726900.0","comment_id":"979177","poster":"Womapoc","upvote_count":"1","content":"Selected Answer: BD\ncorrect"},{"content":"A, B\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/partitioning-overview#use-item-id-as-the-partition-key","upvote_count":"4","poster":"TT924","timestamp":"1707415020.0","comment_id":"975833"}],"question_id":26,"answer_images":[],"answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/113573-exam-dp-420-topic-1-question-32-discussion/","timestamp":"2023-06-28 20:40:00","choices":{"A":"unique","B":"high cardinality","C":"low cardinality","D":"static"},"isMC":true,"answer_ET":"BD","answers_community":["BD (100%)"],"answer":"BD"},{"id":"3mOTicZSaJpy3IBatOWo","question_images":["https://img.examtopics.com/dp-420/image124.png"],"url":"https://www.examtopics.com/discussions/microsoft/view/113574-exam-dp-420-topic-1-question-33-discussion/","answer_images":["https://img.examtopics.com/dp-420/image125.png"],"topic":"1","exam_id":69,"answer_description":"","question_text":"HOTSPOT\n-\n\nYou have an Azure Cosmos DB account named account1 that has a default consistency level of session.\n\nYou have an app named App1.\n\nYou need to ensure that the read operations of App1 can request either bounded staleness or consistent prefix consistency.\n\nWhat should you modify for each consistency level? To answer, select the appropriate options in the answer area.\n\n//IMG//","answer":"","discussion":[{"upvote_count":"15","comment_id":"945543","comments":[{"comment_id":"1326484","upvote_count":"1","content":"to clarify order in strength of consistency models is:\nStrong (side note. not applicable to Multi Region Write architecture!), \nBounded Staleness,\nSession, \nConsistent Prefix\nEventual.\n\nBounded Staleness is stronger than session so cant be overridden in the SDK level.\nConsistent Prefix is weaker than session so it can be overridden in the SDK level.","poster":"biglebowski88","timestamp":"1734184860.0"},{"poster":"[Removed]","timestamp":"1708979280.0","comment_id":"990991","upvote_count":"3","content":"Bounded staleness > account level\nConsistent prefix > request level\n\"The default consistency level configured on your account applies to all Azure Cosmos DB databases and containers under that account.\"\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/consistency-levels#configure-the-default-consistency-level\n**No option to set consistency level at database level. requirements for multiple default consistency levels = multiple accounts"}],"timestamp":"1704628260.0","content":"account level & request level options\n\n\"Consistency can only be relaxed at the SDK instance or request level. To move from weaker to stronger consistency, update the default consistency for the Azure Cosmos DB account.\"\n\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/nosql/how-to-manage-consistency?tabs=portal%2Cdotnetv2%2Capi-async","poster":"meiwein"},{"content":"\"account level & request level options\" or \"The database level options & The request level options\"?","poster":"xofowi5140","upvote_count":"1","comment_id":"961353","comments":[{"upvote_count":"1","poster":"[Removed]","comment_id":"1165543","content":"Consistency can only be relaxed at the SDK instance or request level. To move from weaker to stronger consistency, update the default consistency for the Azure Cosmos DB account.\nFor Bounded staleness --> Account\nFor Consistent prefix --> Request Level\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/nosql/how-to-manage-consistency?tabs=portal%2Cdotnetv2%2Capi-async#override-the-default-consistency-level","timestamp":"1725444120.0"}],"timestamp":"1706093340.0"},{"content":"For Bounded staleness:\nThe database level options\n\nFor Consistent prefix:\nThe request level options","upvote_count":"4","comment_id":"937014","poster":"azuredemo2022three","timestamp":"1703796360.0"}],"unix_timestamp":1687977960,"answer_ET":"","timestamp":"2023-06-28 20:46:00","answers_community":[],"question_id":27,"isMC":false},{"id":"BzX2mbhOuNO2z6ABGQMy","question_images":["https://img.examtopics.com/dp-420/image132.png"],"url":"https://www.examtopics.com/discussions/microsoft/view/127907-exam-dp-420-topic-1-question-34-discussion/","answers_community":[],"isMC":false,"timestamp":"2023-12-06 10:59:00","answer_ET":"","answer_images":["https://img.examtopics.com/dp-420/image133.png"],"answer":"","unix_timestamp":1701856740,"question_id":28,"answer_description":"","question_text":"DRAG DROP\n-\n\nYou are designing three apps named App1, App2, and App3. Each app will use a separate Azure Cosmos DB for NoSQL account. The apps have the following consistency requirements:\n• App1: Reads must always return the most recent committed version of an item, where the commit occurred during the same session.\n• App2: Reads must always return the most recent committed version of an item, even if the commit occurred during another session.\n• App3: Write latency must be minimized and data staleness can be tolerated.\n\nYou need to recommend a default consistency level for each Azure Cosmos DB for NoSQL account. The solution must minimize concurrency.\n\nWhat should you recommend for the account of each app? To answer, drag the appropriate consistency levels to the correct apps. Each consistency level may be used once, more than once, or not at all. You may need to drag the split bar between panes or scroll to view content.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","exam_id":69,"discussion":[{"comment_id":"1089169","poster":"tdetry","content":"correct","timestamp":"1733479140.0","upvote_count":"6"}],"topic":"1"},{"id":"o3PjLf20HHV3WlwYDXwx","question_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/125776-exam-dp-420-topic-1-question-35-discussion/","answer_images":[],"topic":"1","exam_id":69,"answer_description":"","question_text":"You have an Azure Cosmos DB for NoSQL account configured for global distribution across four regions.\n\nAt connection time, the SQL SDK needs to identify the optimal endpoint for reading and writing.\n\nWhich two factors can influence the SDK? Each correct answer presents a complete solution.\n\nNOTE: Each correct selection is worth one point.","answer":"DE","discussion":[{"content":"Selected Answer: DE\nIn order to take advantage of global distribution, client applications can specify the ordered preference list of regions to be used to perform document operations. Based on the Azure Cosmos DB account configuration, current regional availability and the preference list specified, the most optimal endpoint will be chosen by the SQL SDK to perform write and read operations.\n\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/nosql/tutorial-global-distribution?tabs=dotnetv2%2Capi-async#preferred-locations","timestamp":"1725444300.0","comment_id":"1165545","upvote_count":"4","poster":"[Removed]"},{"upvote_count":"4","comment_id":"1068689","poster":"SwePha","content":"Selected Answer: DE\nBased on the Azure Cosmos DB account configuration, current regional availability and the preference list specified, the most optimal endpoint will be chosen by the SQL SDK to perform write and read operations.","timestamp":"1715526480.0"},{"timestamp":"1715428860.0","comment_id":"1067874","poster":"dksks","content":"Selected Answer: BD\nanswer","upvote_count":"4"}],"unix_timestamp":1699711260,"answer_ET":"DE","timestamp":"2023-11-11 15:01:00","answers_community":["DE (67%)","BD (33%)"],"choices":{"D":"the PreferredLocations configuration","E":"a region being available","B":"regional latency","C":"the default consistency level","A":"the consistency level in RequestOptions"},"question_id":29,"isMC":true},{"id":"qSe5sQgAoXpkOiZEPfiw","question_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/125866-exam-dp-420-topic-1-question-36-discussion/","answer_images":[],"exam_id":69,"topic":"1","answer_description":"","question_text":"You have an Azure Cosmos DB for NoSQL account named account1.\n\nYou need to create a container named Container1 in account1 by using the Azure Cosmos DB .NET SDK. The solution must ensure that the items in Container1 never expire.\n\nWhat should you set?","answer":"C","discussion":[{"timestamp":"1700251380.0","comment_id":"1073597","upvote_count":"7","comments":[{"timestamp":"1703074320.0","content":"When creating a container de DefaultTimeToLive has to be set to -1 for items to never expire. Overrides are not specified in this question and even if they were, this prop cannot be null, because the SDK is expecting a non-nullable integer.","comment_id":"1101506","upvote_count":"2","poster":"xRiot007","comments":[{"poster":"xRiot007","timestamp":"1703074440.0","content":"Correction - it can be null, but in that case TTL is turned off. To have items that never expire you must set it to -1.","comment_id":"1101507","upvote_count":"1","comments":[{"poster":"xRiot007","content":"More details here: https://learn.microsoft.com/en-us/dotnet/api/microsoft.azure.documents.documentcollection.defaulttimetolive?view=azure-dotnet","upvote_count":"1","comment_id":"1101508","timestamp":"1703074440.0"}]}]}],"content":"Selected Answer: C\nSet to null will never expire.\nIf set to -1 might override by the item's ttl","poster":"bcd_6"},{"poster":"Blubb1860","timestamp":"1703835960.0","comment_id":"1108447","upvote_count":"5","content":"Selected Answer: C\nSet to null will never expire."},{"content":"Selected Answer: D\nTo create a container named Container1 in account1 using the Azure Cosmos DB .NET SDK and ensure that the items in Container1 never expire, you should configure the DefaultTimeToLive property. Setting the DefaultTimeToLive to -1 ensures that items never expire.","timestamp":"1719109440.0","comment_id":"1235673","upvote_count":"3","poster":"Examdumps2023"},{"comment_id":"1189148","poster":"Bartus007","timestamp":"1712214360.0","content":"ttl = -1 TTL is disabled. The item will never expire.","upvote_count":"1"},{"timestamp":"1709020500.0","comment_id":"1160326","upvote_count":"1","content":"Selected Answer: D\nApologies, the correct choice is option C, setting DefaultTimeToLive to null. This ensures that items in Container1 will never expire.\n\nIf you set DefaultTimeToLive to null (option C), the container items will never expire, regardless of any TTL set for individual items.\n\nOption D, setting DefaultTimeToLive to -1, is incorrect because it would prevent the container TTL from expiring, but if you set a TTL for individual items, those items would still expire based on their TTL value.\n\nFor more details, please refer to Example 1 and Example 2 in the following link: https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/time-to-live","poster":"[Removed]"},{"upvote_count":"2","poster":"[Removed]","timestamp":"1709020440.0","content":"Selected Answer: C\nApologies, the correct choice is option C, setting DefaultTimeToLive to null. This ensures that items in Container1 will never expire.\n\nIf you set DefaultTimeToLive to null (option C), the container items will never expire, regardless of any TTL set for individual items.\n\nOption B, setting DefaultTimeToLive to -1, is incorrect because it would prevent the container TTL from expiring, but if you set a TTL for individual items, those items would still expire based on their TTL value.\n\nFor more details, please refer to Example 1 and Example 2 in the following link: https://learn.microsoft.com/en-us/azure/cosmos-db/nosql/time-to-live","comment_id":"1160321"},{"content":"Selected Answer: D\nTimeToLivePropertyPath specifies a path within the JSON document that indicates the expiration time. Setting it to null disables time-to-live (TTL) for individual items, while setting it to 0 would immediately expire the items. Both options are not suitable for ensuring items never expire.\nDefaultTimeToLive sets the default expiration time for all items in the container. Setting it to -1 signifies that the items will never expire. This is the desired behavior for this scenario.","timestamp":"1708953780.0","comment_id":"1159757","comments":[],"upvote_count":"1","poster":"[Removed]"},{"timestamp":"1699809000.0","poster":"SwePha","comment_id":"1068690","content":"Selected Answer: D\n// Never expire by default\n DefaultTimeToLive = -1","upvote_count":"2"}],"unix_timestamp":1699809000,"answer_ET":"C","timestamp":"2023-11-12 18:10:00","answers_community":["C (67%)","D (33%)"],"choices":{"A":"TimeToLivePropertyPath to null","D":"DefaultTimeToLive to –1","B":"TimeToLivePropertyPath to 0","C":"DefaultTimeToLive to null"},"question_id":30,"isMC":true}],"exam":{"isMCOnly":false,"lastUpdated":"12 Apr 2025","id":69,"provider":"Microsoft","isImplemented":true,"name":"DP-420","isBeta":false,"numberOfQuestions":147},"currentPage":6},"__N_SSP":true}