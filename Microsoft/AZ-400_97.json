{"pageProps":{"questions":[{"id":"V4UDXRb1hQT6oUk2Bl9V","answers_community":[],"answer_ET":"","url":"https://www.examtopics.com/discussions/microsoft/view/96015-exam-az-400-topic-8-question-67-discussion/","answer_images":["https://img.examtopics.com/az-400/image39.png"],"isMC":false,"answer":"","question_images":["https://img.examtopics.com/az-400/image38.png"],"question_id":481,"answer_description":"","exam_id":55,"topic":"8","discussion":[{"poster":"lugia4000","content":"Eliminate task and the answer is from the least letters to most letters, to memorize better","timestamp":"1707700200.0","comments":[{"upvote_count":"2","timestamp":"1735806480.0","poster":"hotspot02103","comment_id":"1335403","content":"This is how I learned at school, now I don't remember anything. Start studying by understanding not memorizing!"},{"comment_id":"1333646","timestamp":"1735493580.0","content":"Great way to memorize it, gotta love it!","poster":"Dankho","upvote_count":"1"}],"upvote_count":"60","comment_id":"805822"},{"comment_id":"909505","content":"1. job\n2. stage\n3. pipeline root\n4. pipeline settings UI\n\nhttps://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#variable-scopes\nIn the YAML file, you can set a variable at various scopes:\n- At the root level, to make it available to all jobs in the pipeline.\n- At the stage level, to make it available only to a specific stage.\n- At the job level, to make it available only to a specific job.\nWhen you define a variable at the top of a YAML, the variable is available to all jobs and stages in the pipeline and is a global variable. Global variables defined in a YAML aren't visible in the pipeline settings UI.\n\nVariables at the job level override variables at the root and stage level. Variables at the stage level override variables at the root level.","upvote_count":"12","timestamp":"1716995640.0","poster":"zellck","comments":[{"content":"What about tasks ? The task can have and env (environment) section that maps from other values. Can those variables instead of mapping have direct assignment ? That would mean that a task can have its own variables too.","comment_id":"968825","poster":"xRiot007","timestamp":"1722497220.0","upvote_count":"2"}]},{"upvote_count":"1","timestamp":"1713317460.0","comment_id":"872272","content":"GTP: The task scope is a valid scope for defining variables in Azure Pipelines, and it has the highest precedence among all scopes. So, it is definitely a valid choice for defining variables.","poster":"Fal991l","comments":[{"comment_id":"872273","poster":"Fal991l","comments":[{"comments":[{"content":"I checked and the code below gives na error. Task can't accept property variables.\ntask:\nvariables:\n string: string # Name/value pairs","timestamp":"1727862840.0","upvote_count":"2","poster":"oskarq","comment_id":"1022987"}],"poster":"Fal991l","content":"Variables defined at the task scope have the highest precedence and will override any variables with the same name defined at lower scopes. Variables defined at the job scope will override any variables with the same name defined at the stage, pipeline settings UI, or pipeline root scopes. Variables defined at the stage scope will override any variables with the same name defined at the pipeline settings UI or pipeline root scopes. Finally, variables defined at the pipeline settings UI scope will override any variables with the same name defined at the pipeline root scope.","comment_id":"872274","timestamp":"1713317520.0","upvote_count":"2"}],"upvote_count":"2","content":"In Azure Pipelines, you can define variables at four different scopes: pipeline root, pipeline settings UI, stage, and job. The precedence of these variables from highest to lowest is as follows:\n\ne. task\nb. job\na. stage\nc. pipeline settings UI\nd. pipeline root","timestamp":"1713317520.0"}]},{"timestamp":"1705683960.0","content":"Seems correct.\n\nWhen you set a variable with the same name in multiple scopes, the following precedence applies (highest precedence first).\n\nJob level variable set in the YAML file\nStage level variable set in the YAML file\nPipeline level variable set in the YAML file\nVariable set at queue time\nPipeline variable set in Pipeline settings UI\n\nhttps://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch","comment_id":"781369","poster":"crymo99","upvote_count":"8","comments":[{"comment_id":"806223","timestamp":"1707734880.0","content":"Variable scopes\nIn the YAML file, you can set a variable at various scopes:\n\nAt the root level, to make it available to all jobs in the pipeline.\nAt the stage level, to make it available only to a specific stage.\nAt the job level, to make it available only to a specific job.\nWhen a variable is defined at the top of a YAML, it will be available to all jobs and stages in the pipeline and is a global variable. Global variables defined in a YAML are not visible in the pipeline settings UI.\n\nVariables at the job level override variables at the root and stage level. Variables at the stage level override variables at the root level.","upvote_count":"1","poster":"dottLorenz"},{"upvote_count":"2","content":"Incorrect, that article states that is the case if \"When you set a variable with the same name in multiple scopes, the following precedence appliies\"...key word here SAME NAME. Thats not what this question is asking.","timestamp":"1706201280.0","poster":"mrg998","comments":[{"content":"This is specially the case in which you want the precedence to take effect. If they are named differently, there is no need of preference. The answer from crymo99 is correct. Double checked from here: \n\nhttps://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#expansion-of-variables","upvote_count":"2","comment_id":"805318","poster":"petitbilly","timestamp":"1707663180.0"}],"comment_id":"787907"}]},{"timestamp":"1705682460.0","content":"In the YAML file, you can set a variable at various scopes:\n\nAt the root level, to make it available to all jobs in the pipeline.\nAt the stage level, to make it available only to a specific stage.\nAt the job level, to make it available only to a specific job.","poster":"mrg998","upvote_count":"1","comment_id":"781327"},{"comment_id":"781325","upvote_count":"1","timestamp":"1705682400.0","poster":"mrg998","content":"correct"}],"question_text":"DRAG DROP\n-\n\nYou have an Azure Pipeline.\n\nYou need to store configuration values as variables.\n\nAt which four scopes can the variables be defined, and what is the precedence of the variables from the highest precedence to lowest precedence? To answer, move the appropriate scope from the list of scopes to the answer area and arrange them in the correct order.\n\n//IMG//","unix_timestamp":1674146400,"timestamp":"2023-01-19 17:40:00"},{"id":"zOcb1ph52uED0hbQ5teJ","url":"https://www.examtopics.com/discussions/microsoft/view/96017-exam-az-400-topic-8-question-68-discussion/","question_images":[],"topic":"8","timestamp":"2023-01-19 17:43:00","answer_description":"","isMC":true,"discussion":[{"upvote_count":"14","comment_id":"784115","content":"Selected Answer: B\nI think it's B","poster":"Iaminall","timestamp":"1690010400.0"},{"poster":"Firdous586","upvote_count":"5","timestamp":"1714323660.0","comment_id":"1056341","content":"B is the correct answer using deployment slot you have the option to give the some percentage for few users for testing purpose and remaining for normal usage\n\nAzure traffic manager is a dns base traffic load balancer which works on region based therefore there is no use of traffic manager in this question."},{"content":"D\nScenario1: Tutorial: Direct traffic to specific endpoints based on user subnet using Traffic Manager\nhttps://learn.microsoft.com/en-us/azure/traffic-manager/tutorial-traffic-manager-subnet-routing","poster":"kzmain","upvote_count":"1","comment_id":"1209730","timestamp":"1731332820.0"},{"upvote_count":"3","comment_id":"1209296","content":"Selected Answer: B\nDeployment slots are useful for managing different versions and environments!!","timestamp":"1731237600.0","poster":"4bd3116"},{"upvote_count":"1","timestamp":"1729092360.0","content":"B is the correct answer as you can adjust Traffic Percentage for each slot","comment_id":"1196654","poster":"tainguyenit"},{"content":"Selected Answer: B\nB for me","comment_id":"1104695","upvote_count":"1","timestamp":"1719235980.0","poster":"vsvaid"},{"comment_id":"1104693","timestamp":"1719235920.0","upvote_count":"2","poster":"vsvaid","content":"I would go with B. In deploymnets we can alos control the percentage of users. Slowly increase the % of users"},{"upvote_count":"2","poster":"RayD7","comment_id":"1081098","timestamp":"1716764400.0","content":"I think this has to be D. There are two separate environments (app services) so how could you use deployment slots."},{"upvote_count":"2","poster":"kevin9988","comment_id":"1061428","content":"Selected Answer: B\nvote for B","timestamp":"1714732200.0"},{"poster":"ieboaix","comment_id":"984318","timestamp":"1708254540.0","upvote_count":"3","content":"D. B works for web app which wasn't specified here. even for web app, B works only for traffic %, not targeted users which is part of the question."},{"upvote_count":"2","poster":"tanmacao","comment_id":"979447","content":"Selected Answer: B\nSetup env1 is a slot. Env2 prod. \nDeploy to env1 and swap to env2.\nAfter swap env2 is the latest","timestamp":"1707760320.0"},{"comment_id":"976434","poster":"ieboaix","upvote_count":"2","timestamp":"1707479520.0","content":"D is the answer."},{"poster":"yana_b","comment_id":"974588","timestamp":"1707309060.0","upvote_count":"4","content":"IMHO correct answer is B, as evidenced in the simulation solution of question 35, in which we have to set a rolling deployment of up to 10% of the user who will get the new version (in this question it is said a subset of users).\nIn case of the Traffic Manager, there is no option to set the traffic up to a given percentage of users."},{"timestamp":"1707308940.0","upvote_count":"1","comment_id":"974584","content":"IMHO correct answer is B, as evidenced in the simulation solution of question 35, in which we have to set a rolling deployment of up to 10% of the user who will get the new version.\nIn case of the Traffic Manager, there is no option to set the traffic up to a given percentage of users.","poster":"yana_b"},{"upvote_count":"2","content":"Answer is D - traffic manager. \nYou need to route your traffic to both apps. \nB - deployments slots does not do that, it only makes multiple deployments available.","poster":"xRiot007","comment_id":"968828","comments":[{"comment_id":"976525","timestamp":"1707483780.0","content":"Revisiting deployment slots, I think the actual answer is B. You can choose how much traffic (in %) a deployment slot will get. Traffic manager might also do the job, but deployment slots is definitely more human friendly and solves the requirement","upvote_count":"2","poster":"xRiot007"}],"timestamp":"1706779740.0"},{"upvote_count":"1","content":"Traffic Manager - you can configure the 'weighting' of users.","timestamp":"1701859560.0","comment_id":"916064","poster":"kay000001"},{"content":"Selected Answer: D\nD is the answer.\n\nhttps://learn.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview\nTraffic Manager uses DNS to direct client requests to the appropriate service endpoint based on a traffic-routing method. Traffic manager also provides health monitoring for every endpoint. The endpoint can be any Internet-facing service hosted inside or outside of Azure. Traffic Manager provides a range of traffic-routing methods and endpoint monitoring options to suit different application needs and automatic failover models. Traffic Manager is resilient to failure, including the failure of an entire Azure region.","poster":"zellck","upvote_count":"5","comment_id":"913145","timestamp":"1701575160.0"},{"poster":"Pamban","upvote_count":"3","timestamp":"1701312900.0","content":"Selected Answer: D\nClearly answer is D. it is traffic manager\nhttps://learn.microsoft.com/en-us/azure/traffic-manager/traffic-manager-manage-profiles","comment_id":"910680"},{"poster":"ShomaV","comment_id":"908633","upvote_count":"1","content":"Answer will be B","timestamp":"1701181200.0"},{"upvote_count":"2","comment_id":"883940","poster":"Ravindu","timestamp":"1698538260.0","content":"Selected Answer: B\nthe answer is a B"},{"timestamp":"1698515340.0","comment_id":"883797","poster":"Madbo","content":"Answer is D) Azure Traffic Manager, because it allows for traffic routing based on several different methods, including priority routing and weighted routing, which can help gradually increase the number of users that can access environment2. This satisfies the requirement of gradually increasing the number of users that can access environment2. Additionally, Traffic Manager allows for routing based on geographic location, which can help ensure that new releases are available to only a subset of users. In contrast, options A, B, and C are not designed to gradually increase the number of users or restrict new releases to a subset of users in the same way that Traffic Manager can.","upvote_count":"3"},{"content":"Guys, where in the question is it stated that it's about deploying to any kind of web app?\nThe target environment in the question is general, so, it can be be anything from vm, containers, web app, and so on - that's why the response can only be: D - Traffic Manager.","timestamp":"1698419100.0","poster":"Cardin2000","upvote_count":"4","comment_id":"882758"},{"content":"Selected Answer: B\nB is cost effect. With deployment slots, you can implement swapping. Assign each slot to a env. and you can quickly expose tested environment to large set of users by swapping the slots.","comment_id":"836190","upvote_count":"1","timestamp":"1694437560.0","poster":"Rams_84zO6n"},{"poster":"andrei_20","content":"Selected Answer: D\nI would go with Traffic Manager.\nIt is not clear how deployment slots help to deploy gradually.","timestamp":"1693631700.0","upvote_count":"4","comment_id":"826585"},{"poster":"buzzerboy","timestamp":"1692210000.0","content":"We dont know if this is deployed on Azure Web Services. If so, deployment slots would work.","comment_id":"811077","upvote_count":"2"},{"comment_id":"805691","upvote_count":"1","content":"why deployment slots???\nTraffic Manager = subset of users\nENVIRONMENT != same web app \nENVIRONMENT == same app architecture (for example vm + db + storage account + ...)","poster":"Hieronimusov","comments":[{"timestamp":"1691782500.0","upvote_count":"1","poster":"Hieronimusov","content":"iam going with D","comment_id":"805692"}],"timestamp":"1691782440.0"},{"timestamp":"1691176320.0","content":"Selected Answer: D\nsubset of users can be done via deployment slot so answer is D.","comment_id":"798368","upvote_count":"3","poster":"AKhalid"},{"content":"Selected Answer: B\nB - deployment slot should be right","comment_id":"797634","timestamp":"1691121240.0","poster":"anhtvux","upvote_count":"2"},{"content":"Azure Traffic Manager is a DNS-based traffic load balancer that enables you to distribute traffic optimally to services across global Azure regions, while providing high availability and responsiveness. Correct response is B","upvote_count":"2","comment_id":"797230","timestamp":"1691076480.0","poster":"dottLorenz"},{"comment_id":"791549","timestamp":"1690619280.0","poster":"basiltomato","upvote_count":"3","content":"Selected Answer: D\nI would say D Traffic Manager.\n\nIt can get a bit messy with deployment slots. There's no word about web app but 2 environments. We don't know what is in each but to my mind an environment consists of a set of the same components e.g. 1xAppSvc, 1xAppInsights. Therefore to easily distribute traffic between the two the best seems to be Traffic Manager."},{"content":"I think it is D) Traffic Manager, because with Traffic Manager, you can distribute traffic according to one of several traffic routing methods, e.g. priority routing, weighted routing, etc. This relates to one of the conditions about a subset of users. With e.g., weighted routing, one can have traffic distributed to the subset, but with deployment slots, you cannot have that -- all the traffic is switched from one slot to the other and vice versa. https://learn.microsoft.com/en-us/azure/traffic-manager/traffic-manager-routing-methods","comment_id":"786273","poster":"Petya27","comments":[{"upvote_count":"3","content":"the traffic manager still relies on something else to do the swapping aka the deployment slots. Where as deployment slots functionality can achieve the stated goal without the use of traffic manager","comment_id":"787916","timestamp":"1690296660.0","comments":[{"poster":"Petya27","comment_id":"788560","timestamp":"1690354980.0","content":"You are right actually, I change my answer to deployment slots.","upvote_count":"2"}],"poster":"mrg998"}],"timestamp":"1690177380.0","upvote_count":"2"},{"content":"Selected Answer: D\nI feel like it's D Traffic Manager.","poster":"m4mayur","comment_id":"783821","timestamp":"1689976860.0","upvote_count":"2"},{"timestamp":"1689778860.0","poster":"crymo99","comment_id":"781361","content":"Selected Answer: D\nCorrect answer is Traffic manager.\nhttps://learn.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview","upvote_count":"2"},{"timestamp":"1689777780.0","poster":"mrg998","content":"Hard one because deployment slots and traffic manager both do this! I would go for deployment slots (B) because there is no mention of different instances of Azure web app","comment_id":"781333","upvote_count":"1","comments":[{"comment_id":"802910","poster":"warchoon","upvote_count":"1","content":"\"the latest version IS deployed to environment2\"\nnot \"going to be\"\nso deployment slots are already used","timestamp":"1691557620.0"}]}],"question_text":"You have a project in Azure DevOps named Project1 that contains two environments named environment1 and environment2.\n\nWhen a new version of Project is released, the latest version is deployed to environment2, and the previous version is redeployed to environment1.\n\nYou need to distribute users across the environments. The solution must meet the following requirements:\n\n• New releases must be available to only a subset of the users.\n• You must gradually increase the number of users that can access environment2.\n\nWhat should you use?","exam_id":55,"answer_ET":"B","answer_images":[],"unix_timestamp":1674146580,"answer":"B","question_id":482,"choices":{"D":"Azure Traffic Manager","A":"VIP swaping","B":"web app deployment slots","C":"Azure Load Balancer"},"answers_community":["B (55%)","D (45%)"]},{"id":"vsxqxukXTDwZ49UlASjL","question_id":483,"isMC":false,"topic":"8","answer_ET":"","discussion":[{"upvote_count":"22","timestamp":"1674146640.0","content":"I would say:\nMinor\nMajor\nPatch","poster":"mrg998","comments":[{"upvote_count":"5","content":"patch is for bugfixing\n\nMajor\nMinor\nMinor","timestamp":"1728541620.0","poster":"Mattt","comment_id":"1295436"}],"comment_id":"781337"},{"comments":[{"content":"i change my comment, this is the right answer","timestamp":"1674146760.0","comment_id":"781341","upvote_count":"6","poster":"mrg998"}],"comment_id":"781146","content":"correct\n1- https://learn.microsoft.com/en-us/aspnet/core/diagnostics/mvc1004?view=aspnetcore-7.0#:~:text=Renaming%20a%20parameter%20on%20a%20public%20type%20could%20be%20considered%20a%20breaking%20change%20since%20it%20changes%20a%20library%27s%20public%20API%20surface.\n2,3 - https://semver.org/#:~:text=Minor%20version%20Y,version%20is%20incremented.","upvote_count":"13","poster":"meee21","timestamp":"1674133500.0"},{"comment_id":"1399757","poster":"3a6495b","timestamp":"1742235120.0","upvote_count":"1","content":"1 patch, you rename parameter so i assume you try to fix something, i would say patch.\n2. No new implementation, just deprecating old stuff, i would say minor\n3. New stuff, mayor","comments":[{"poster":"3a6495b","comment_id":"1399763","timestamp":"1742235480.0","upvote_count":"1","content":"Please ignore. I learned something new here"}]},{"content":"Major\nMinor\nMinor","comment_id":"1305730","timestamp":"1730455560.0","upvote_count":"1","poster":"Gooldmember"},{"content":"Correct","upvote_count":"1","timestamp":"1715333160.0","poster":"4bd3116","comment_id":"1209300"},{"timestamp":"1688310240.0","comment_id":"940997","upvote_count":"12","comments":[{"poster":"Mattt","content":"correct","upvote_count":"1","comment_id":"1291666","timestamp":"1727725560.0"}],"poster":"renzoku","content":"MAJOR, Rename a parameter in an API, potential to cause backward-incompatibility if the parameter is referenced in some part of the code\n\nMINOR, Deprecate a funcionality in an API, it won't cause backward-incompatibility inmediatly because you only mark it like deprecated and provide the warning that the funcionality will be removed in future versions\n\nMINOR, Add a feature and maintain backwards compatibility, because won't cause backward-incompatibility"},{"comment_id":"912434","comments":[{"timestamp":"1685666520.0","comment_id":"912435","upvote_count":"4","poster":"zellck","content":"https://semver.org/#how-should-i-handle-deprecating-functionality\nDeprecating existing functionality is a normal part of software development and is often required to make forward progress. When you deprecate part of your public API, you should do two things: (1) update your documentation to let users know about the change, (2) issue a new minor release with the deprecation in place. Before you completely remove the functionality in a new major release there should be at least one minor release that contains the deprecation so that users can smoothly transition to the new API."}],"poster":"zellck","upvote_count":"6","timestamp":"1685666460.0","content":"1. Major\n2. Minor\n3. Minor\n\nhttps://semver.org/\nGiven a version number MAJOR.MINOR.PATCH, increment the:\n- MAJOR version when you make incompatible API changes\n- MINOR version when you add functionality in a backward compatible manner\n- PATCH version when you make backward compatible bug fixes"},{"content":"Rename parameter in API - Major (incompatible API change)\nDeprecate functionality in API - Major (incompatible API change)\nAdd a feature and maintain backward compatibility - Minor (backward compatible \"feature\")\n\nhttps://semver.org/","comment_id":"869159","comments":[{"comment_id":"968839","upvote_count":"1","timestamp":"1690875360.0","poster":"xRiot007","content":"You clearly didn't read the semver site content, did you ? \nLet me cite it for you : https://semver.org/#spec-item-7 \n\"\nMinor version Y (x.Y.z | x > 0) MUST be incremented if new, backward compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.\""},{"timestamp":"1690875240.0","comment_id":"968836","upvote_count":"2","poster":"xRiot007","content":"Deprecate is Minor - you are just informing the user that some contract methods are obsolete. Those methods will still work, so it's totally compatible API change because you just inform the users that these methods are obsolete. Later releases will remove these methods altogether (this is a major change, not the deprecation)."}],"upvote_count":"2","poster":"aut0pil0t","timestamp":"1681368420.0"},{"upvote_count":"5","poster":"le129","timestamp":"1677109320.0","comment_id":"818551","comments":[{"timestamp":"1680198720.0","comment_id":"856022","poster":"OpOmOp","comments":[{"comments":[{"poster":"PDR","timestamp":"1688120640.0","comments":[{"timestamp":"1735806960.0","upvote_count":"1","content":"deprecating != removing \nfunctionality is still there, you can use it, just you (should) receive a ton of warnings. At the time the functionality is __removed__ then it becomes a Major SemVer change","comment_id":"1335407","poster":"hotspot02103"}],"upvote_count":"2","comment_id":"938997","content":"I would argue that it could break existing code if something relies on that API functionality to obtain certain responses it relies on. Debatable of course as to 'whos problem' that is and could say it was a result of not handling errors properly but the reality of the situation remains the same."}],"content":"a minor change is one that adds new functionality in a backward-compatible manner, or deprecates existing functionality in a backward-compatible manner.\n\nSince deprecating functionality in an API does not break existing code, it is considered a minor change.","timestamp":"1680198780.0","upvote_count":"4","poster":"OpOmOp","comment_id":"856024"}],"upvote_count":"3","content":"In semver, a change is considered major if it breaks backward compatibility, meaning that existing code that relies on the API will no longer work as expected after the change is made"}],"content":"how is renaming a parameter major but not deprecating functionality? both are breaking changes?"},{"poster":"Frefren","comment_id":"781160","content":"Correct.\nMajor, Minor, Minor\nThe last one is not patch, because it adds a feature, not fix a bug.","upvote_count":"3","timestamp":"1674134700.0"}],"answer_description":"","unix_timestamp":1674133500,"question_text":"DRAG DROP\n-\n\nYou are designing a versioning strategy for Git-based packages.\n\nYou plan to use a Semantic Versioning (SemVer)-based strategy.\n\nYou need to identify when to change the build version.\n\nWhat should you identify for each scenario? To answer, drag the appropriate versions to the correct scenarios. Each version may be used once, more than once, or not at all. You may need to drag the split bar between panes or scroll to view content.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","question_images":["https://img.examtopics.com/az-400/image40.png"],"timestamp":"2023-01-19 14:05:00","url":"https://www.examtopics.com/discussions/microsoft/view/95996-exam-az-400-topic-8-question-69-discussion/","answer_images":["https://img.examtopics.com/az-400/image41.png"],"exam_id":55,"answers_community":[],"answer":""},{"id":"2lSEw3vXyHcNckyP9uT8","isMC":false,"answer_ET":"See explanation below.","topic":"8","discussion":[{"timestamp":"1726269180.0","upvote_count":"8","comment_id":"1173014","content":"I got this and 7more of this labs in a single shot and 1 use case, labs\nwhen you start a lab you will have the labs in a right panel and a kind of virtual machine in the middle (this will be a simulator where it will open a browser with the azure portal page)","poster":"Willsmt"},{"poster":"vsvaid","timestamp":"1719141900.0","comment_id":"1104036","content":"Correct answer","upvote_count":"1"},{"timestamp":"1683715020.0","upvote_count":"4","comments":[{"timestamp":"1707475980.0","comment_id":"976387","upvote_count":"2","content":"Technically the answer is correct without the scope because the requirement does not say to restrict all other events.","poster":"xRiot007"},{"upvote_count":"2","timestamp":"1688875860.0","content":"The scope probably should be set as “image:dotnetapp”","comment_id":"770070","poster":"AzureJobsTillRetire","comments":[{"poster":"mfawew223","comments":[{"upvote_count":"2","timestamp":"1717429740.0","comment_id":"1086995","poster":"mfawew223","content":"'Bar' must be the tag. So in this case, the repo is az400123456789acr1, so thats the first part of the scope. It doesnt say that the image dotnetapp is tagged, but if it were tagged with 'dotnetapp', then you would do:\n\n'az400123456789acr1:dotnetapp' as the scope. I am not 100% on this, because its possible that images in a repo are treated as separate \"repos\" under the scope parameter. I wasnt able to dig up many examples of it."}],"comment_id":"1086994","timestamp":"1717429740.0","upvote_count":"1","content":"My first inclination was to agree with image:dotnetapp, but:\n\nhttps://learn.microsoft.com/en-us/cli/azure/acr/webhook?view=azure-cli-latest#az_acr_webhook_create-optional-parameters\n\nThis source defines the optional 'scope' parameter as:\n\nThe scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means events for all repositories."}]}],"poster":"makros88","content":"I think that solution is partially correct. \nWe also need to setup scope to \"dotnetapp:*\"\n\nbased on https://learn.microsoft.com/en-us/azure/container-registry/container-registry-webhook: \"The scope at which the webhook works. If not specified, the scope is for all events in the registry. It can be specified for a repository or a tag by using the format \"repository:tag\", or \"repository:*\" for all tags under a repository.\"\n\nexample here https://learn.microsoft.com/en-us/azure/app-service/deploy-ci-cd-custom-container?tabs=acr&pivots=container-linux\naz acr webhook create --name <webhook-name> --registry <registry-name> --resource-group <group-name> --actions push --uri $ci_cd_url --scope '<image>:<tag>'","comment_id":"715223"}],"unix_timestamp":1668083820,"question_id":484,"question_images":[],"answer_description":"1. Sign in to the Azure portal.\n2. Navigate to the container registry az400123456789acr1.\n3. Under Services, select Webhooks.\n4. Select the existing webhook https://contoso.com/statushook, and double-click on it to get its properties.\n5. For Trigger actions select image push\nExample web hook:\n\nReference:\nhttps://docs.microsoft.com/en-us/azure/container-registry/container-registry-webhook","answers_community":[],"question_text":"SIMULATION -\nYou need to ensure that the https://contoso.com/statushook webhook is called every time a repository named az400123456789acr1 receives a new version of an image named dotnetapp.\nTo complete this task, sign in to the Microsoft Azure portal.","answer_images":["https://www.examtopics.com/assets/media/exam-media/04257/0041200001.jpg"],"exam_id":55,"timestamp":"2022-11-10 13:37:00","url":"https://www.examtopics.com/discussions/microsoft/view/87249-exam-az-400-topic-8-question-7-discussion/","answer":"See explanation below."},{"id":"M0aEcv2Xf2y9wPrIjxXl","topic":"8","timestamp":"2023-01-19 17:47:00","choices":{"D":"modifier","B":"major","A":"minor","C":"micro"},"answer_images":[],"unix_timestamp":1674146820,"question_images":[],"question_id":485,"exam_id":55,"answers_community":["D (100%)"],"isMC":true,"answer_ET":"D","url":"https://www.examtopics.com/discussions/microsoft/view/96018-exam-az-400-topic-8-question-70-discussion/","answer_description":"","question_text":"You use Calendar Versioning (CalVer) for code assets.\n\nYou need to store an optional tag of beta as part of the version.\n\nWhich part of the version should you use for the tag?","discussion":[{"comment_id":"781343","upvote_count":"25","poster":"mrg998","comments":[{"comment_id":"1333653","content":"big thumbs up for explaining that!","timestamp":"1735494600.0","upvote_count":"1","poster":"Dankho"},{"poster":"funny_penguin","timestamp":"1675617900.0","content":"thanks for explaining the difference between them","comment_id":"799029","upvote_count":"3"}],"timestamp":"1674146820.0","content":"Selected Answer: D\nD\n\"Major - The first number in the version. 2 and 3 are Python's famous major versions. The major segment is the most common calendar-based component.\nMinor - The second number in the version. 7 is the most popular minor version of Python.\nMicro - The third and usually final number in the version. Sometimes referred to as the \"patch\" segment.\nModifier - An optional text tag, such as \"dev\", \"alpha\", \"beta\", \"rc1\", and so on.\"\nfrom https://calver.org/"},{"content":"just have to be careful with Americans, their CalVer is minor.major.micro-modifier ;]\n\nbut seriosly, the provided answer seems correct","timestamp":"1727776140.0","comment_id":"1291893","upvote_count":"1","poster":"Yameo"},{"upvote_count":"1","content":"Selected Answer: D\nCorrect answer","timestamp":"1703432400.0","poster":"vsvaid","comment_id":"1104705"},{"content":"Selected Answer: D\nMAJOR.MINOR.MICRO-MODIFIER\n2.1.7-alpha","upvote_count":"4","poster":"renzoku","comment_id":"941094","timestamp":"1688317020.0"},{"content":"Selected Answer: D\nD is the answer.\n\nhttps://calver.org/\nThere are multiple calendar versioning schemes, long used by projects big and small. Rather than declaring a single scheme to be CalVer, it's important to recognize the practicality of each and design the scheme to fit the project. First, the parts of the version:\n- Major - The first number in the version. 2 and 3 are Python's famous major versions. The major segment is the most common calendar-based component.\n- Minor - The second number in the version. 7 is the most popular minor version of Python.\n- Micro - The third and usually final number in the version. Sometimes referred to as the \"patch\" segment.\n- Modifier - An optional text tag, such as \"dev\", \"alpha\", \"beta\", \"rc1\", and so on.","poster":"zellck","timestamp":"1685666220.0","upvote_count":"4","comment_id":"912432"},{"timestamp":"1682703960.0","comment_id":"883794","content":"Answer is D.\nThe CalVer versioning scheme uses the following format: {year}.{month}{modifier}. The modifier can be used to indicate a pre-release version or a special build, among other things.\n\nSince the tag of \"beta\" is a pre-release version, it is appropriate to include it in the modifier part of the version.","upvote_count":"2","poster":"Madbo"},{"comment_id":"781380","timestamp":"1674148500.0","upvote_count":"1","poster":"crymo99","content":"Selected Answer: D\ncorrect.\nhttps://calver.org/"}],"answer":"D"}],"exam":{"id":55,"isMCOnly":false,"name":"AZ-400","isImplemented":true,"isBeta":false,"numberOfQuestions":558,"provider":"Microsoft","lastUpdated":"12 Apr 2025"},"currentPage":97},"__N_SSP":true}