{"pageProps":{"questions":[{"id":"mHks6gEbxUzSMM2DVazI","answers_community":["A (100%)"],"question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0019400001.jpg"],"answer_description":"","topic":"4","answer":"A","answer_images":[],"discussion":[{"poster":"MartinHBA","comment_id":"310418","content":"correct is A","comments":[{"timestamp":"1663234740.0","content":"Agree, 1221065 has the lower execution time. Therefore, the better option is A","upvote_count":"11","comment_id":"311363","poster":"Prada"}],"timestamp":"1663140480.0","upvote_count":"41"},{"comment_id":"877909","content":"Selected Answer: A\nA is correct answer.\n\nhttps://learn.microsoft.com/en-us/sql/relational-databases/performance/query-store-usage-scenarios?view=sql-server-ver16#pinpoint-and-fix-queries-with-plan-choice-regressions","timestamp":"1729661760.0","upvote_count":"3","poster":"Pranava_GCP"},{"poster":"LarsLarsgren","comment_id":"644443","upvote_count":"3","content":"Answer should be A.\nThere is an example given at:\nhttps://azure.microsoft.com/de-de/blog/query-store-a-flight-data-recorder-for-your-database/\n\nsee: Step 3: Fix performance for regressed queries","timestamp":"1707480840.0"},{"comment_id":"631697","timestamp":"1705322580.0","upvote_count":"1","content":"Selected Answer: A\nAnswer A: Need to force the planid 1221065","poster":"Itsalwaymethecap"},{"timestamp":"1698364260.0","poster":"Chunchi","content":"Selected Answer: A\nThe answer is A . 1221065 has the lower execution time/more faster.","upvote_count":"1","comment_id":"592714"},{"poster":"kcocaep","comment_id":"581537","content":"yes, force execution plan for 1221065 is low. So we are forcing 1220917 to use change the query plan (to use 1221065 plan). Its a word game guys","upvote_count":"4","timestamp":"1696557360.0"},{"content":"Selected Answer: A\n1221065 Is much faster as can be seen in the image","timestamp":"1693851540.0","poster":"CaptainJameson","comment_id":"561025","upvote_count":"2"},{"comment_id":"479677","content":"Shows the duration in milliseconds . The queyr 1221065 is close to o ms, and 1220917 is over 250000 ms. Then A is ok","upvote_count":"1","timestamp":"1684264980.0","poster":"quermi"},{"poster":"TheSwedishGuy","upvote_count":"1","timestamp":"1681819140.0","content":"The answer \"A. Force the query execution plan for plan 1221065\" is obviously correct.","comment_id":"464103"},{"poster":"alzahrani3","comments":[{"timestamp":"1679902980.0","content":"This explanation make me laugh. :)","poster":"valente_sven1","upvote_count":"9","comment_id":"452232"},{"comment_id":"446667","upvote_count":"3","content":"This is the ID of the execution plan, not its duration. You can see its duration in the chart and clearly conclude that the execution plan with the id 1221065 is the fastest.","poster":"Behto","timestamp":"1679072820.0"}],"comment_id":"440414","content":"1220917 < 1221065 so the correct answer is C","timestamp":"1678122420.0","upvote_count":"2"},{"content":"The provided answer is correct. Not sure, WHY your are pointing to A. Make sure to review the query store result carefully.","timestamp":"1675925760.0","comment_id":"421931","upvote_count":"1","poster":"learnazureportal","comments":[{"poster":"SQLHell","timestamp":"1687151460.0","comment_id":"504680","upvote_count":"2","content":"If you see any point, write here. instead of speading wrong information."},{"timestamp":"1682802720.0","upvote_count":"1","comment_id":"470401","content":"The correct answer is A, plan ID 1221065 is the fastest.","poster":"Beneque"}]},{"upvote_count":"1","content":"I agree it is A","comment_id":"419582","poster":"Daemon69","timestamp":"1675505880.0"},{"upvote_count":"4","timestamp":"1671370980.0","content":"correct answer is A","comment_id":"384778","poster":"tarun_sati_rs"}],"isMC":true,"question_text":"You have SQL Server on an Azure virtual machine that contains a database named DB1.\nYou view a plan summary that shows the duration in milliseconds of each execution of query 1178902 as shown in the following exhibit:\n//IMG//\n\nWhat should you do to ensure that the query uses the execution plan which executes in the least amount of time?","timestamp":"2021-03-14 10:28:00","answer_ET":"A","choices":{"B":"Run the DBCC FREEPROCCACHE command.","C":"Force the query execution plan for plan 1220917.","A":"Force the query execution plan for plan 1221065.","D":"Disable parameter sniffing."},"unix_timestamp":1615714080,"question_id":236,"exam_id":68,"url":"https://www.examtopics.com/discussions/microsoft/view/47032-exam-dp-300-topic-4-question-5-discussion/"},{"id":"ICYMpARBBhfaamzPp7a5","discussion":[{"comment_id":"331647","timestamp":"1617931380.0","upvote_count":"20","content":"Answer given is correct. Refer to current state, is ON","poster":"cck21"},{"comment_id":"323901","upvote_count":"14","content":"Should be No, NO, Yes, As Azure defaults are FORCE_LAST_GOOD_PLAN is enabled, CREATE_INDEX is disabled, and DROP_INDEX is disabled.\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable","timestamp":"1617068040.0","poster":"humpy","comments":[{"upvote_count":"2","timestamp":"1628485200.0","content":"You're not correct for the item #1.","poster":"learnazureportal","comment_id":"421933"},{"content":"Raffer is right. The point of this question is that new values are given in the screenshot","upvote_count":"3","comment_id":"393929","poster":"Eleonora77","timestamp":"1624980000.0"},{"timestamp":"1617180600.0","comment_id":"324882","content":"The defaults have been overridden in this scenario.","poster":"Raffer","upvote_count":"8"}]},{"content":"https://learn.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable?view=azuresql\nThe answer is correct: NNY\n\"On the server level you can choose to inherit automatic tuning configuration from Azure Defaults or not.\" This is the case.\n\"Azure Defaults are FORCE_LAST_GOOD_PLAN enabled, CREATE_INDEX disabled and DROP_INDEX disabled\"","upvote_count":"1","timestamp":"1713534720.0","comment_id":"1198643","poster":"sca88"},{"poster":"susejzepol","comment_id":"913704","timestamp":"1685803920.0","content":"Answer is fine, according to the documentation of microsoft: Azure defaults are FORCE_LAST_GOOD_PLAN enabled, CREATE_INDEX disabled, and DROP_INDEX disabled.","upvote_count":"3"},{"comment_id":"737981","upvote_count":"4","content":"Why the first statment is NO if the current state is ON (even when it is INHERIT)","comments":[{"upvote_count":"1","timestamp":"1723393980.0","comment_id":"1264224","content":"I'm wondering the same thing.","poster":"jtrain"}],"poster":"des2907","timestamp":"1670424960.0"},{"timestamp":"1648815420.0","upvote_count":"12","poster":"cusman","comment_id":"579470","content":"Yes - It will create nonclustered indexes\nNo - It can't add columns to existing indexes\nYes - It will revert to prior plans automatically in case of regression"},{"upvote_count":"8","timestamp":"1640167380.0","comments":[{"content":"Agreed, should be 'YNY', to use Current State instead of 'desired state'","upvote_count":"2","timestamp":"1682229000.0","comment_id":"877920","poster":"Pranava_GCP"}],"content":"Raffer is right. The point of this question is that new values are given in the screenshot\nNow I see current state ON (for All settings) - IN RIGHT SIDE\n1 Y - ( Create Index ON )\n,N\n,Y \nSo given answer is correct","poster":"Fedor","comment_id":"506945"},{"timestamp":"1639897980.0","comment_id":"504682","poster":"SQLHell","content":"No, No , Yes\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable","upvote_count":"1"},{"timestamp":"1639141980.0","content":"https://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable\nAs of March, 2020 new Azure defaults for automatic tuning are as follows:\nâ€¢ FORCE_LAST_GOOD_PLAN = enabled\n, CREATE_INDEX = disabled, and DROP_INDEX = disabled.\nAs CREATE_INDEX = disabled - so 1-st seems to be inherited and NO","upvote_count":"3","poster":"Fedor","comment_id":"498645"}],"isMC":false,"answer":"","topic":"4","timestamp":"2021-03-30 03:34:00","question_id":237,"answer_ET":"","answer_description":"Box 1: No -\nBy default CREATE INDEX is disabled. It is here configured as INHERIT so it is disabled.\n\nBox 2: No -\nBy default DROP INDEX is disabled.\n\nBox 3: Yes -\nFORCE LAST GOOD PLAN (automatic plan correction) - Identifies Azure SQL queries using an execution plan that is slower than the previous good plan, and queries using the last known good plan instead of the regressed plan.\nReference:\nhttps://docs.microsoft.com/en-us/azure/azure-sql/database/automatic-tuning-enable","answer_images":["https://www.examtopics.com/assets/media/exam-media/04275/0019600002.png"],"question_images":["https://www.examtopics.com/assets/media/exam-media/04275/0019500001.jpg","https://www.examtopics.com/assets/media/exam-media/04275/0019600001.png"],"answers_community":[],"unix_timestamp":1617068040,"exam_id":68,"question_text":"HOTSPOT -\nYou have an Azure SQL database named DB1. The automatic tuning options for DB1 are configured as shown in the following exhibit.\n//IMG//\n\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","url":"https://www.examtopics.com/discussions/microsoft/view/48488-exam-dp-300-topic-4-question-6-discussion/"},{"id":"UwJwymSFyeUChaAwWXlq","timestamp":"2021-05-01 07:37:00","question_text":"You have an Azure SQL database named DB1. You run a query while connected to DB1.\nYou review the actual execution plan for the query, and you add an index to a table referenced by the query.\nYou need to compare the previous actual execution plan for the query to the Live Query Statistics.\nWhat should you do first in Microsoft SQL Server Management Studio (SSMS)?","answers_community":["C (73%)","D (27%)"],"question_images":[],"unix_timestamp":1619847420,"question_id":238,"answer_ET":"C","answer_images":[],"exam_id":68,"url":"https://www.examtopics.com/discussions/microsoft/view/51353-exam-dp-300-topic-4-question-7-discussion/","answer_description":"","isMC":true,"choices":{"B":"Run the SET SHOWPLAN_ALL Transact-SQL statement.","D":"Enable Query Store for DB1.","C":"Save the actual execution plan.","A":"For DB1, set QUERY_CAPTURE_MODE of Query Store to All."},"topic":"4","discussion":[{"timestamp":"1623581340.0","content":"C: is correct.","upvote_count":"13","comment_id":"381037","poster":"examtry"},{"content":"Selected Answer: C\nAzure SQL DB - Query Store is enabled by default, so no need for D. Just save the actual execution plan as .sqlplan, then right click plan in Live Query Statistics -> Compare Showplan, select the saved plan, and SSMS will compare the plans.","upvote_count":"1","comment_id":"1341754","timestamp":"1737045300.0","poster":"voodoo_sh"},{"upvote_count":"2","poster":"Vitos25","comment_id":"1290678","timestamp":"1727535780.0","content":"Selected Answer: C\nQuery Store is enabled by default in Azure SQL Database. so C is the correct answer."},{"timestamp":"1724757840.0","content":"Selected Answer: C\nI take my last answer (D) back - C is correct","comment_id":"1273398","poster":"dorwai","upvote_count":"1"},{"upvote_count":"1","content":"Selected Answer: D\nBy enabling Query Store, you can retain historical query performance data, including execution plans, which allows you to compare different execution plans over time, including after schema changes like adding an index.","timestamp":"1724757600.0","poster":"dorwai","comment_id":"1273393"},{"comment_id":"1164164","poster":"Ben999","content":"Answer should be D. C does not allow comparing a Live query statistics, only 2 save query plans. D allows you to compare a previous query plan against a plan of a running query. https://learn.microsoft.com/en-us/sql/relational-databases/performance/query-store-usage-scenarios?view=sql-server-ver16","timestamp":"1709391120.0","comments":[{"content":"On Azure SQL Database The Query Store is enabled by default, so D can't be the correct answer. C is the right one.","timestamp":"1713535200.0","poster":"sca88","comment_id":"1198651","upvote_count":"1"}],"upvote_count":"2"},{"comment_id":"877926","poster":"Pranava_GCP","timestamp":"1682229720.0","content":"Selected Answer: C\nIf before adding the index, you have saved the plan, then C is correct answer for sure.\nBut if you didn't save it then need to get it from Query Store. \n\n\nFrom the context of the question itself, seem to be C is the nearest answer.","upvote_count":"3"},{"upvote_count":"1","timestamp":"1678912560.0","content":"Selected Answer: C\nC is correct: https://learn.microsoft.com/en-us/sql/relational-databases/performance/compare-execution-plans?view=sql-server-ver16","comment_id":"840306","poster":"dryd"},{"comment_id":"827703","poster":"KIET2131","comments":[],"upvote_count":"2","timestamp":"1677824160.0","content":"Selected Answer: D\nD. Enable Query Store for DB1.\n\nBy enabling Query Store for the database, you can compare the previous execution plan to the new one. This feature allows you to view query performance over time, identify regressions, and diagnose issues caused by changes in the execution plan. The Query Store saves the history of queries, execution plans, and runtime statistics, making it easy to compare the actual execution plan before and after the index addition."}],"answer":"C"},{"id":"nFJq6SFDFjtHUVrCnYKN","answers_community":["C (75%)","D (25%)"],"question_images":[],"question_text":"You have an Azure SQL database.\nUsers report that the executions of a stored procedure are slower than usual. You suspect that a regressed query is causing the performance issue.\nYou need to view the query execution plan to verify whether a regressed query is causing the issue. The solution must minimize effort.\nWhat should you use?","answer_images":[],"topic":"4","answer_ET":"C","isMC":true,"unix_timestamp":1623293220,"question_id":239,"discussion":[{"timestamp":"1623293220.0","content":"The answer is correct verified in microsoft docoument","upvote_count":"18","comment_id":"378670","poster":"Nishitan"},{"comment_id":"1295941","upvote_count":"1","content":"- Query Store in SSMS is specifically designed to track query performance over time, including execution plans, runtime statistics, and performance regressions. It automatically captures and retains historical execution plans, which allows you to easily compare current and past execution plans to identify regressions.\nIt provides a low-effort solution for troubleshooting performance issues and regressed queries, as the information is readily available without needing to set up additional monitoring tools.","poster":"bingomutant","timestamp":"1728640800.0"},{"timestamp":"1693413780.0","content":"Selected Answer: C\nhttps://learn.microsoft.com/en-us/sql/relational-databases/performance/monitoring-performance-by-using-the-query-store?view=sql-server-ver16#Regressed","poster":"bsk1983","comment_id":"994319","upvote_count":"3"},{"content":"https://learn.microsoft.com/en-us/sql/relational-databases/performance/monitoring-performance-by-using-the-query-store?view=sql-server-ver16\nUse the Regressed Queries feature.","poster":"vcloudpmp","upvote_count":"1","comment_id":"948592","timestamp":"1689040440.0"},{"timestamp":"1688235300.0","comments":[{"comment_id":"1196574","timestamp":"1713270480.0","poster":"Dalamain","upvote_count":"2","content":"Did you read the Microsoft documentation before posting that - because if you had you'd know there is nothing mentioned about being able to view an execution plan via QPI..... https://learn.microsoft.com/en-us/azure/azure-sql/database/query-performance-insight-use?view=azuresql\n\nyour welcome"}],"content":"Selected Answer: D\n\"Query Performance Insight\" (option D) in the Azure portal.","upvote_count":"1","comment_id":"940256","poster":"yousiftech"},{"content":"C: is correct","poster":"Chunchi","timestamp":"1642790460.0","upvote_count":"2","comment_id":"529300"}],"url":"https://www.examtopics.com/discussions/microsoft/view/55028-exam-dp-300-topic-4-question-8-discussion/","answer":"C","choices":{"A":"Performance Recommendations in the Azure portal","B":"Extended Events in Microsoft SQL Server Management Studio (SSMS)","D":"Query Performance Insight in the Azure portal","C":"Query Store in Microsoft SQL Server Management Studio (SSMS)"},"answer_description":"","exam_id":68,"timestamp":"2021-06-10 04:47:00"},{"id":"6wWGFUt44k1oNbpvzJax","answer":"BE","answer_images":[],"topic":"4","answers_community":["BE (83%)","AE (17%)"],"isMC":true,"discussion":[{"content":"B and E is correct.","timestamp":"1705866840.0","poster":"mphils","upvote_count":"11","comment_id":"411076"},{"content":"Selected Answer: AE\nWhen queries are executed on a columnstore index with archival compression:\nThe decompression process requires additional CPU resources.\nThe higher compression ratio may lead to more frequent disk I/O, as the system needs to load and decompress smaller chunks of data on demand.\nThe correct answer is A, E","comment_id":"1330528","timestamp":"1734894240.0","poster":"learnazureportal","comments":[{"content":"It says may. So not always","poster":"iceonfire","upvote_count":"1","comment_id":"1359746","timestamp":"1740142200.0"}],"upvote_count":"1"},{"poster":"eric0718","upvote_count":"4","content":"Selected Answer: BE\nCompressing columnstore indexes with archival compression, causes the index to perform slower than columnstore indexes that do not have the archival compression. Use archival compression only when you can afford to use extra time and CPU resources to compress and retrieve the data.\nThe benefit of archival compression, is reduced storage, which is useful for data that is not accessed frequently. For example, if you have a partition for each month of data, and most of your activity is for the most recent months, you could archive older months to reduce the storage requirements.","comment_id":"595285","timestamp":"1730328720.0"},{"upvote_count":"1","comment_id":"578824","content":"Selected Answer: BE\nhttps://docs.microsoft.com/en-us/sql/relational-databases/data-compression/data-compression?view=sql-server-ver15","timestamp":"1727696520.0","poster":"nicolase"},{"poster":"erssiws","content":"The answer is correct","timestamp":"1707591840.0","comment_id":"422884","upvote_count":"4"}],"timestamp":"2021-07-21 19:54:00","exam_id":68,"choices":{"E":"Queries that use the index will consume more CPU resources.","C":"The index will consume more disk space.","A":"Queries that use the index will consume more disk I/O.","B":"Queries that use the index will retrieve fewer data pages.","D":"The index will consume more memory."},"unix_timestamp":1626890040,"question_id":240,"question_images":[],"answer_ET":"BE","url":"https://www.examtopics.com/discussions/microsoft/view/58307-exam-dp-300-topic-4-question-9-discussion/","question_text":"You have an Azure SQL database. The database contains a table that uses a columnstore index and is accessed infrequently.\nYou enable columnstore archival compression.\nWhat are two possible results of the configuration? Each correct answer presents a complete solution.\nNOTE: Each correct selection is worth one point.","answer_description":""}],"exam":{"numberOfQuestions":360,"provider":"Microsoft","name":"DP-300","isMCOnly":false,"id":68,"isBeta":false,"lastUpdated":"12 Apr 2025","isImplemented":true},"currentPage":48},"__N_SSP":true}