{"pageProps":{"questions":[{"id":"jURY1Fizafa7Ur8xHmDN","unix_timestamp":1617807720,"answer_ET":"","discussion":[{"poster":"Aneta_ane","comment_id":"488360","comments":[{"poster":"confetti","timestamp":"1666003320.0","comment_id":"587173","content":"Can you please share dumps you referred to for the exam?","upvote_count":"3"}],"timestamp":"1653666480.0","upvote_count":"50","content":"Appeared on the exam on 27/11/2021. Correct answer NYN"},{"content":"Answer should be Yes-Yes-No","comments":[{"content":"The API confugured at the account level not the database level","upvote_count":"2","timestamp":"1734877740.0","poster":"MSCertfied","comment_id":"1330414"},{"comment_id":"521466","timestamp":"1657529700.0","upvote_count":"21","poster":"iooj","content":"Only one API for one account, not for the database. You cannot have different API in one Azure Cosmos DB account"},{"timestamp":"1678117560.0","comment_id":"661286","upvote_count":"15","poster":"pallmall","content":"Answer is N-Y-N\nAs my predecessors say, API configuration is done when account is created, not per database."},{"timestamp":"1661014800.0","content":"answer is N-Y-N. \nNo for 1st because API configuration is done while provisioning the cosmos db account only.","poster":"rajat7878","upvote_count":"12","comment_id":"552168"}],"timestamp":"1638940320.0","poster":"yeanlingmedal71","comment_id":"377184","upvote_count":"32"},{"comment_id":"1162713","timestamp":"1724935440.0","content":"No\nY\nNo","poster":"AGTraining","upvote_count":"1"},{"timestamp":"1685280660.0","poster":"Dusica","comment_id":"729324","content":"No Yes No","upvote_count":"2"},{"comment_id":"679519","timestamp":"1679816700.0","upvote_count":"15","content":"Confirmed, the answer is No-Yes-No\nIt was in 26/09/2022 exam and I scored 1000.","poster":"studysmart"},{"upvote_count":"2","timestamp":"1674140160.0","content":"Exam: 19.07.22","poster":"Breeze21","comment_id":"633571"},{"upvote_count":"1","poster":"Abhi100889","comment_id":"616545","content":"THis question have different answer on different websites E.g Freebraindump have complete different answers","timestamp":"1671089520.0"},{"upvote_count":"8","poster":"krs_02","content":"Given answer is correct. To clear up question 1: It is false because the API is only configured separately for every Cosmos DB Account, not the databases with the account","timestamp":"1659608880.0","comment_id":"540408"},{"comments":[{"upvote_count":"1","comment_id":"729268","content":"It asks for ITEMS in the partition. And item can be in only one partition","poster":"Dusica","timestamp":"1685280180.0"}],"poster":"banemid986","upvote_count":"1","content":"Why the last one is no? Every logical partition have different value for partition key.. please correct me if I'm wrong","comment_id":"455932","timestamp":"1648885320.0"},{"comment_id":"452231","content":"I think the first one is No. You can see this: https://docs.microsoft.com/en-us/azure/cosmos-db/sql/create-cosmosdb-resources-portal\nThe API determines the type of account to create..... Currently, you must create a separate account for each API. \nThe question says \"in an Azure Cosmos account\" is wrong.","upvote_count":"5","poster":"shihyoyun","timestamp":"1648366320.0"},{"poster":"AB15","content":"Answer should be - Yes, Yes, No","comment_id":"451520","timestamp":"1648238100.0","upvote_count":"1"},{"timestamp":"1647972120.0","comments":[{"poster":"JayBee65","comment_id":"505860","timestamp":"1655786040.0","content":"The first is No. Your API defines your account type, so you can only have one API for each account or database.","upvote_count":"6"}],"poster":"WillyMac","content":"Yes, Yes, NO\nAbout the First Yes: \nWhen you create an Azure Cosmos DB Account, you must specify the API Property, that identifies the Type of Account to create, (Core(SQL), MongoDB, Gremlin, Azure Table or Cassandra)\nJust follow the Azure Portal to create an Azure Cosmos DB Resource and look at the \"Create Azure Cosmos DB Account\" page.\nTry it pls !!!","comment_id":"449617","upvote_count":"1"},{"comment_id":"445566","poster":"cadio30","content":"No, Yes, No are the correct combinations\n\nPartition - https://docs.microsoft.com/en-us/azure/cosmos-db/partitioning-overview","upvote_count":"7","comments":[{"content":"one should select the API first before the creation of its database and one API is equivalent to one CosmosDB","comment_id":"445567","poster":"cadio30","upvote_count":"2","timestamp":"1647402360.0"}],"timestamp":"1647402060.0"},{"upvote_count":"2","content":"\"Yes\" for the first one. I asked this question in Microsoft AZ Fundamental exam preparation event. The answer was that currently it's one account per API.","comment_id":"443590","timestamp":"1647119640.0","poster":"CyLa"},{"poster":"sam2k","upvote_count":"4","timestamp":"1646914680.0","comment_id":"442424","content":"Azure Cosmos DB API is configured at the account level and not at DB level. Hence, first answer is No, which is correct."},{"comments":[{"timestamp":"1646172000.0","upvote_count":"4","comment_id":"437456","poster":"Surjit24","content":"Change it is NO,YES,NO\nreference states that you must configure an API for a database and must create a separate account for each API."}],"timestamp":"1646058660.0","content":"YES,YES,NO","poster":"Surjit24","upvote_count":"1","comment_id":"434577"},{"poster":"mnfatboy1","comment_id":"417347","timestamp":"1643550420.0","content":"The explanation given below is correct for the 1st question. When creating a CosmosDB - you much choose the API for the Account, not the DB. The answer is NO.","upvote_count":"5"},{"content":"Why No in the first statement, if Yes is correct?","upvote_count":"14","timestamp":"1636815960.0","comment_id":"356412","poster":"eggheadsv","comments":[{"timestamp":"1640231580.0","upvote_count":"12","poster":"chigar","comment_id":"388427","content":"No is correct, the reference states that you must configure an API for a database and must create a separate account for each API."}]},{"timestamp":"1635783360.0","content":"Correct","comment_id":"347048","upvote_count":"4","poster":"NDash"},{"poster":"Bosta","content":"Yes!\nA good source you can find here: https://mostafaelmasry.com/2020/07/27/azure-cosmos-db-api-architecture/","comments":[{"content":"Unfortunately the English is quite poor in this link/website","upvote_count":"2","comment_id":"406939","poster":"wando5000","timestamp":"1642244520.0"}],"upvote_count":"3","comment_id":"331124","timestamp":"1633692060.0"},{"poster":"Drummer","timestamp":"1633618920.0","comment_id":"330474","content":"Totally agree","upvote_count":"3"}],"question_text":"HOTSPOT -\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","question_id":36,"answer_description":"Box 1: No -\nThe API determines the type of account to create. Azure Cosmos DB provides five APIs: Core (SQL) and MongoDB for document data, Gremlin for graph data,\nAzure Table, and Cassandra. Currently, you must create a separate account for each API.\n\nBox 2: Yes -\nAzure Cosmos DB uses partitioning to scale individual containers in a database to meet the performance needs of your application. In partitioning, the items in a container are divided into distinct subsets called logical partitions. Logical partitions are formed based on the value of a partition key that is associated with each item in a container.\n\nBox 3: No -\nLogical partitions are formed based on the value of a partition key that is associated with each item in a container.\nReference:\nhttps://docs.microsoft.com/en-us/azure/cosmos-db/partitioning-overview","exam_id":73,"topic":"1","question_images":["https://www.examtopics.com/assets/media/exam-media/04277/0014600001.jpg"],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04277/0014600002.jpg"],"answer":"","url":"https://www.examtopics.com/discussions/microsoft/view/49513-exam-dp-900-topic-1-question-131-discussion/","timestamp":"2021-04-07 17:02:00","answers_community":[],"isMC":false},{"id":"NSyxCRXpE8dVAaOmPony","timestamp":"2021-02-01 23:50:00","answers_community":["C (70%)","B (30%)"],"answer":"C","question_images":[],"answer_images":[],"discussion":[{"timestamp":"1612219800.0","poster":"etudient","comment_id":"281482","upvote_count":"72","comments":[{"comment_id":"283009","timestamp":"1612391700.0","upvote_count":"2","poster":"mandyfervor","content":"I have the same doubt. I think JSON file is also document."},{"comment_id":"340185","upvote_count":"26","content":"Not only Document databases can store JSON files. From link https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview\nDocument - \"Each document type can use its own schema.\"\nKey/Value - \"Any schema information must be provided by the application.\"\nSo a document store is a document defined schema, while the question specifically refers to an application defined schema which makes the answer key/value.","comments":[{"content":"Not the best one!Answer is wrong, Key/Value databases can not query json objects, you need to fully retrieve and then process...that means you have really litle query options, just a simple group by query will take lonher than on a Document type database(the right answer)","comment_id":"454316","upvote_count":"5","poster":"PGG","timestamp":"1632933240.0"},{"comment_id":"461391","upvote_count":"3","timestamp":"1634104740.0","content":"the reference link this site provided is also indicating it's \"Document\" Database","poster":"jkseo"}],"poster":"user54321","timestamp":"1618993800.0"}],"content":"large volume of JASON Documents? document DB..."},{"comment_id":"284821","upvote_count":"27","content":"C is the answer","poster":"SunnySunnySun","timestamp":"1612616640.0"},{"timestamp":"1732795980.0","comment_id":"1319214","upvote_count":"1","content":"Selected Answer: C\nThe best choice of data store for this scenario is:\n\nC. Document\n\nExplanation:\nA document store is ideal for storing JSON data because:\nIt natively supports JSON-like data formats (e.g., BSON, JSON).\nIt allows for an application-defined schema, meaning the structure of the data can vary across documents without predefined constraints.\nIt is optimized for high-volume write operations and query flexibility.\nDocument stores like MongoDB or Azure Cosmos DB (using the SQL API) are commonly used in such cases.","poster":"Bin_Hashim"},{"content":"option C","timestamp":"1709218980.0","comment_id":"1162724","poster":"AGTraining","upvote_count":"1"},{"content":"Selected Answer: C\nDocument databases are optimized for storing and querying structured or semi-structured data as JSON documents. They allow for flexible schema design, which is defined by the application rather than being enforced by the database itself.","comment_id":"1149790","poster":"jxs221","timestamp":"1707879900.0","upvote_count":"1"},{"poster":"Rudramina","upvote_count":"3","timestamp":"1704879180.0","content":"Based on the requirement of writing high volume of JSON data with an application-defined schema, the best option is to use a document data store, which can efficiently handle semi-structured data like JSON.","comment_id":"1118405"},{"poster":"Joharios","content":"Answer C- Documents. \nBecause key/values There is no schema enforcement.\n\nhttps://learn.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview#keyvalue-stores","timestamp":"1703800680.0","upvote_count":"2","comment_id":"1108125"},{"poster":"[Removed]","content":"This exact question appeared in the Coursera DP-900 course by Microsoft, the answer is confirmed to be B, which is key/value.\n\n\n5. Developers are designing an application that has an application-defined schema and is made up of write-intensive JSON data. \n\nWhich type of data store should you implement in Azure?\n\nCorrect\nA key/value store associates each data value with a unique key.\nAn application can store arbitrary data as a set of values. Any schema information must be provided by the application. The key/value store simply retrieves or stores the value by key.","upvote_count":"2","timestamp":"1701500580.0","comment_id":"1085830"},{"poster":"AdventureKatEXP","upvote_count":"3","content":"Selected Answer: B\nThere are 2 very similar questions on the same practice exams for this one and the important difference seems to be the phrase \"application-defined schema.\" \n\nQ1) Developers are designing an application that has an application-defined schema and is made up of write-intensive JSON data. Which type of data store should you use?\nA1) Key/Value\n\nQ2) You have been asked to design an application that will write a large amount of JSON Data. Which type of data store should you use?\nA2) Document Data Store. \n\nSo based on this logic (and the fact I kept getting this stupid question wrong) it's B.","comment_id":"991208","timestamp":"1693111140.0"},{"comment_id":"967724","poster":"srgopalkr","timestamp":"1690774920.0","upvote_count":"1","content":"Answer - C: Document DB\nBoth Key/Value DB & Document DB allow for the application to define the schema, to bring optimal application performance. \nWhile Key/Value are optimized to look-up for a single line-item against for a given key value ( e.g integer, string, even a simple JSON structure, or an array), they are NOT well suited when the data being stored are 'High Value' JSON."},{"poster":"fiksarion","content":"In the given scenario, where the application will write a high volume of JSON data and has an application-defined schema, the most suitable type of data store would be a document database.","comment_id":"947038","timestamp":"1688893260.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"933365","timestamp":"1687679880.0","poster":"Ahmadov_10","content":"answer of chatGPT : When dealing with a high volume of JSON data with an application-defined schema, a document data store is often a suitable choice. Document databases, such as Azure Cosmos DB with its JSON document support, are designed to handle flexible, semi-structured data like JSON documents. They allow you to store, retrieve, and query JSON data efficiently, while also providing features like indexing and scalability to handle large volumes of data. ---> document"},{"content":"I took the exam 12.04.2023; this question appeared, correct answer:\ndocument","upvote_count":"11","poster":"mamahani","timestamp":"1681297980.0","comment_id":"868240"},{"timestamp":"1679450040.0","content":"a NoSQL database would be the most appropriate type of data store. Examples of NoSQL databases that can handle JSON data include MongoDB, Couchbase, and DocumentDB.","poster":"XtraWest","comment_id":"846572","upvote_count":"1"},{"comment_id":"835574","poster":"Azurre","content":"Correct answer is C. Document\n\nA document data store is designed to store and retrieve semi-structured data, such as JSON, XML, or BSON documents. These data stores can handle a high volume of writes and are optimized for querying and indexing document data.\n\nColumnar and key/value data stores are designed for storing structured data in tables and key-value pairs, respectively. They may not be well-suited for storing and querying semi-structured data such as JSON.\n\nGraph data stores are designed for managing relationships between entities, which may not be relevant for an application that writes a high volume of JSON data with an application-defined schema.","timestamp":"1678501080.0","upvote_count":"2"},{"content":"I got a similar question elsewhere:\n\n\"Developers are designing an application that will have an application-defined schema and will be made up of write-intensive JSON data. \nWhich type of data store should you implement in Azure? \n\n• Key/value \n• Graph \n• Document \n• Columnar\"\n\nand the correct answer to this one was Graph.","comment_id":"792762","poster":"98761234","upvote_count":"1","timestamp":"1675084260.0"},{"content":"Selected Answer: C\nA document store such as MongoDB or Couchbase would be a good choice for storing high volumes of JSON data and an application-defined schema.\n\nDocument stores are a type of NoSQL database that store data in the form of semi-structured or unstructured documents, which can be represented in JSON format. They allow for storing and querying data in a flexible, schema-less way, which is well-suited for storing high volumes of JSON data with an application-defined schema. They provide built-in support for indexing and querying JSON data, which can be useful for performing complex queries and aggregations on the data.\n\nAlternatively, a key-value store such as Redis or Riak, could also be a good option for storing high volumes of JSON data, as they provide very fast read and write access and are optimized for retrieving data based on a single key. They can be used to store data in memory, which can provide very low latency.","timestamp":"1674644700.0","upvote_count":"2","comment_id":"787532","poster":"Stuurwiel1"},{"poster":"StressFree","timestamp":"1674642060.0","content":"Does anyone know how those questions and answers are collected? I mean, should I trust on what examtopics says it's right or not?","comment_id":"787494","upvote_count":"1"},{"timestamp":"1666190100.0","comment_id":"699107","upvote_count":"2","poster":"OldSchool","content":"Selected Answer: C\nhttps://learn.microsoft.com/en-us/azure/architecture/guide/technology-choices/images/document.png"},{"content":"Selected Answer: C\nagreed, answer should be \"C\" given all the links provided. 2x Key points: 1) \"write\" a \"high volume\" of JSON data and will have 2) \"an application-defined schema\".","poster":"JA2018","comment_id":"688305","timestamp":"1665118740.0","upvote_count":"1"},{"upvote_count":"1","comment_id":"648119","content":"Selected Answer: B\nFrom the suggested link: \"An application can store arbitrary data as a set of values. Any schema information must be provided by the application.\"","timestamp":"1660747140.0","poster":"noems"},{"upvote_count":"2","content":"Answer is C. \nJSON data can be more than simple key/values. They can contain nested objects and arrays, which cannot be stored as key/values.","poster":"wanchihh","timestamp":"1660177980.0","comment_id":"645208"},{"timestamp":"1657781640.0","upvote_count":"2","poster":"hunno_basha","content":"the answer is correct ..\nkey value can be used when schema is defined on application level not on database level","comment_id":"631227"},{"upvote_count":"1","timestamp":"1656012120.0","content":"Selected Answer: C\nI vote for","comment_id":"621242","poster":"M81"},{"content":"Selected Answer: C\nDocument seems like legit","comment_id":"614514","poster":"bogomol312","timestamp":"1654860600.0","upvote_count":"1"},{"poster":"YwanYwan","timestamp":"1654398840.0","upvote_count":"1","comment_id":"611663","content":"Selected Answer: B\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview \n\nAn application can store arbitrary data as a set of values. Any schema information must be provided by the application. The key/value store simply retrieves or stores the value by key."},{"comment_id":"606524","timestamp":"1653375660.0","poster":"cmohl2013","upvote_count":"1","content":"Selected Answer: C\njson files can define multiple keys and values, thus it is documents"},{"poster":"cp2323","timestamp":"1650715680.0","upvote_count":"2","comment_id":"590595","content":"Selected Answer: C\nits Document DB - Azure Cosmos"},{"poster":"RichMelbourne","upvote_count":"2","timestamp":"1650006360.0","content":"Shown on test 15/04/2022","comments":[{"upvote_count":"1","comment_id":"588881","content":"what is the answer according to you?","timestamp":"1650478260.0","poster":"rojha"}],"comment_id":"586219"},{"timestamp":"1647243120.0","comment_id":"567488","upvote_count":"2","content":"High volume of JSON, key word for Documents, Key/Values not suitable for high volume of data instead a simply lookup.","poster":"act7656"},{"upvote_count":"1","comment_id":"558660","poster":"suspect_source","content":"Selected Answer: C\nIt is C","timestamp":"1646121240.0"},{"comment_id":"549297","timestamp":"1645095360.0","content":"Selected Answer: B\nAnswer is B, key word \"application defined schema\". Only Key/value can do this. Document DB defines its own schema.","upvote_count":"4","poster":"Moezey"},{"poster":"Olenka","timestamp":"1644527220.0","upvote_count":"2","content":"Selected Answer: C\nYou can do it with Key/Value, but why would anybody do that? You have JASON documents already. Just use them!","comment_id":"544879"},{"content":"Selected Answer: C\nI think C is the correct answer","poster":"mark55665","timestamp":"1642827240.0","upvote_count":"1","comment_id":"529601"},{"poster":"RogerQueraltP","timestamp":"1641974880.0","upvote_count":"1","comment_id":"521983","content":"Selected Answer: C\nI think is C"},{"comments":[{"poster":"Krissy90","upvote_count":"2","comment_id":"563663","timestamp":"1646793480.0","content":"But the schema for a document database doesn't have to be enforced. Therefore it can be also application-defined."}],"upvote_count":"4","content":"Key Value Pair\nThe important observation in the question is also about the Schema. \n\nAn application can store arbitrary data as a set of values. Any schema information must be provided by the application. The key/value store simply retrieves or stores the value by key","poster":"Siva12345","timestamp":"1640137080.0","comment_id":"506572"},{"poster":"floop92","comment_id":"505601","timestamp":"1640022960.0","content":"Selected Answer: C\nC is correct","upvote_count":"4"},{"content":"Please pay attention to \"write\" a \"high volume\" of JSON data and will have an \"application-defined schema\". \nhttps://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/analytical-data-stores\n\nKey/value databases hold a single serialized object for each key value. They're good for storing large volumes of data where you want to get one item for a given key value and you don't have to query based on other properties of the item.","timestamp":"1639594140.0","poster":"linyuyouxiang","upvote_count":"1","comment_id":"502421"},{"upvote_count":"1","content":"C is the best answer because doc db API can query the json object","poster":"shuiho","comment_id":"495380","timestamp":"1638820020.0"},{"upvote_count":"1","timestamp":"1633855800.0","poster":"pritish4u","content":"Correct ans is Document","comment_id":"459981"},{"comment_id":"451266","poster":"Ahamed1997","timestamp":"1632552420.0","content":"C is the answer","upvote_count":"1"},{"upvote_count":"3","comment_id":"450971","timestamp":"1632498840.0","content":"It's definitely C, and anyone who says B shouldn't in this industry.","poster":"mattwhitby"},{"comments":[{"content":"That link explains why the answer is C.","comment_id":"451059","upvote_count":"2","poster":"mattwhitby","timestamp":"1632509400.0"}],"upvote_count":"2","comment_id":"445569","poster":"cadio30","timestamp":"1631757120.0","content":"B is the appropriate answer for this item. Refer to the link provided as it provides clarity\n\nhttps://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/analytical-data-stores"},{"timestamp":"1630497840.0","upvote_count":"1","content":"high volume and application defined are keywords, answer is correct.","poster":"fkaracan","comment_id":"437122"},{"poster":"SnottyPudding","timestamp":"1629337560.0","comment_id":"427147","upvote_count":"7","content":"It has to be key/value. With key/value, the schema is provided by the application. But with a document db, it's not: \"Each document type can use its own schema. Document data is semi-structured, meaning that data types of each field are not strictly defined.\" Therefore, the answer is correct: key/value.\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview"},{"poster":"Art3","timestamp":"1629112080.0","upvote_count":"1","content":"So, I think that document DB will be more appropriate, but we can store JSON in key/value DB. I have a doubt...","comment_id":"425737"},{"comment_id":"422777","timestamp":"1628602440.0","poster":"hoangton","content":"C. document\nJson are the keyword","upvote_count":"1"},{"comment_id":"417716","poster":"ravi86","timestamp":"1627708080.0","content":"question talks about high \"VOLUME\" and not high \"read\". This suggests that input needs be more performant and thus document model makes more sense as Key/Value store will have relative performance penalty in write operation.\nSo for me answer is C. Document","upvote_count":"3"},{"upvote_count":"5","timestamp":"1627634940.0","content":"Key-value is correct:\n\"HIGH VOLUME\" = focus on performance\n\"application-defined schema\" = opaque \nJSON can be used in documents and key-value stores, but key-value has higher performance and REQUIRES application-defined schemas, while document doesn't...","comment_id":"417274","poster":"jolerasioo"},{"upvote_count":"1","poster":"Haywhizzy","content":"There’s no context about what the right answer should be aside Documents, hence C is the correct answer","timestamp":"1626288180.0","comment_id":"406472"},{"timestamp":"1625594640.0","content":"document is the right answer","poster":"Prabu_K","comment_id":"400232","upvote_count":"1"},{"content":"Its Document for sure.\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/images/document.png","comment_id":"398817","upvote_count":"1","timestamp":"1625457180.0","poster":"Dhimant"},{"comment_id":"361729","timestamp":"1621468800.0","poster":"hus1975","content":"Document based on document key","upvote_count":"2"},{"upvote_count":"2","comment_id":"352050","timestamp":"1620399480.0","content":"ans is C","poster":"Mustafeed"},{"comment_id":"350652","upvote_count":"2","poster":"kimalto452","timestamp":"1620264780.0","content":"obviously C, nothing justify choose B..."},{"poster":"NoNameP","content":"correct","comment_id":"346705","timestamp":"1619857500.0","upvote_count":"1"},{"timestamp":"1619798280.0","poster":"kawsar","content":"Applications can store different data in documents as business requirements change. So Document Database","upvote_count":"1","comment_id":"346309"},{"content":"Has to be B (key/value)\n\nC (document) is NOT correct. According to following link, \"Azure Cosmos DB is scheme-less... \" \nhttps://docs.microsoft.com/en-us/azure/cosmos-db/introduction\nhttps://docs.microsoft.com/en-us/azure/cosmos-db/introduction","timestamp":"1617778560.0","poster":"fflyin2k","comment_id":"330110","upvote_count":"2"},{"comment_id":"328271","comments":[{"timestamp":"1619086920.0","upvote_count":"2","poster":"Y_J","comment_id":"340967","content":"Document database is a Key/Value db where the document is the Value. If you need to extract information of the document directly from the db, it is only feasible with a Document db. In this case, as mention by Snake, the document will be read by an application. There is nothing to justify the use of Document db. Therefore, B is the correct answer."}],"content":"B. Key/Value store.\nYou can't use a Document database in this case, because of the conditions:\n- High volume, so Quick storage is needed\n- Application defined schema, so the value (containing JSON fields) is opaque to the DBMS\nReferences:\nhttps://en.wikipedia.org/wiki/Document-oriented_database\nhttps://medium.com/bb-tutorials-and-thoughts/200-practice-questions-for-azure-data-dp-900-fundamentals-exam-ea2446ee3a0","poster":"SnakePlissken","timestamp":"1617576360.0","upvote_count":"11"},{"comment_id":"325118","timestamp":"1617197640.0","poster":"hmAZtime","upvote_count":"6","content":"I think it's B, because of the application-defined schema. Not only Document store can hold JSON files."},{"poster":"overhill","upvote_count":"1","comment_id":"320803","content":"I Think Document is better","timestamp":"1616735640.0"},{"comments":[{"comment_id":"317648","poster":"pinakeep","content":"I meant Document, answer is C","upvote_count":"1","timestamp":"1616460780.0"}],"content":"Answer is D","timestamp":"1616460780.0","comment_id":"317646","poster":"pinakeep","upvote_count":"1"},{"poster":"nieups","timestamp":"1616027160.0","content":"B is the answer,it says \"application-defined schema\"","comment_id":"313685","upvote_count":"4"},{"upvote_count":"2","poster":"Lhouss","timestamp":"1615281840.0","comment_id":"306283","content":"C. Document."},{"comment_id":"304765","content":"For json only answear is document.","timestamp":"1615052580.0","upvote_count":"2","poster":"sirdawidd"},{"poster":"redjme","comment_id":"292777","timestamp":"1613587140.0","upvote_count":"3","content":"This article doesnt mention anything about Documents in a Key/Value database and does mention that schemas can be in a Document DB, https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview"},{"timestamp":"1613182800.0","content":"i think it's D! \"Nodes are similar to table rows or JSON documents\" from the link below \nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview#graph-databases","comment_id":"289279","poster":"makins","upvote_count":"1"},{"poster":"joeljohnrm","upvote_count":"1","timestamp":"1613151900.0","comment_id":"289044","content":"will have an application-defined schema, so the answer is key/value because need a application to define its schema"},{"poster":"spiitr","content":"My vote for document DB\nJSON data, Application-defined schema (data type can be defined in application code)","upvote_count":"3","timestamp":"1612715280.0","comment_id":"285622"}],"question_id":37,"topic":"1","answer_description":"","exam_id":73,"question_text":"Your company is designing an application that will write a high volume of JSON data and will have an application-defined schema.\nWhich type of data store should you use?","isMC":true,"unix_timestamp":1612219800,"url":"https://www.examtopics.com/discussions/microsoft/view/43724-exam-dp-900-topic-1-question-132-discussion/","choices":{"D":"graph","C":"document","B":"key/value","A":"columnar"},"answer_ET":"C"},{"id":"hAa7FWx3uCqFO3dF9uq4","answers_community":["C (100%)"],"answer_images":[],"question_id":38,"question_images":[],"unix_timestamp":1613182320,"answer_ET":"C","exam_id":73,"choices":{"A":"key/value","B":"columnar","D":"document","C":"object"},"timestamp":"2021-02-13 03:12:00","isMC":true,"answer":"C","discussion":[{"comment_id":"328035","timestamp":"1633357320.0","content":"correct answer is C","poster":"98_s_padayachee","upvote_count":"21"},{"content":"option C","upvote_count":"1","comment_id":"1162725","poster":"AGTraining","timestamp":"1724936580.0"},{"content":"Object storage is optimized for storing and retrieving large binary objects (images, files, video and audio streams, large application data objects and documents, virtual machine disk images). Large data files are also popularly used in this model, for example, delimiter file (CSV), parquet, and ORC. Object stores can manage extremely large amounts of unstructured data.","upvote_count":"2","timestamp":"1724071620.0","poster":"gabo","comment_id":"1154026"},{"timestamp":"1704638100.0","poster":"VNR25","content":"This question appeared in the 07/07/23 exam and the answer is correct.","comment_id":"945656","upvote_count":"1"},{"poster":"Joanna0","timestamp":"1692435960.0","upvote_count":"1","content":"Selected Answer: C\nhttps://learn.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview#object-storage","comment_id":"813991"},{"upvote_count":"1","content":"Exam: 20/10/2022","timestamp":"1681994280.0","comment_id":"699914","poster":"reza88"},{"poster":"Breeze21","upvote_count":"2","timestamp":"1674140220.0","content":"Exam: 19.07.22","comment_id":"633572"},{"timestamp":"1664257800.0","poster":"gaem","content":"Selected Answer: C\nC is the answer","comment_id":"575961","upvote_count":"2"},{"comment_id":"533172","timestamp":"1658856060.0","poster":"Satyapn9","upvote_count":"1","content":"Yes, Object is right"},{"timestamp":"1645074480.0","poster":"researched_answer_boi","comment_id":"426089","upvote_count":"1","content":"Object storage is the right answa.\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview#object-storage"},{"comment_id":"414628","comments":[{"content":"Can't handle files with large sizes, like Videos.","poster":"p6wruv","upvote_count":"2","timestamp":"1645389120.0","comment_id":"428340"}],"timestamp":"1643205600.0","upvote_count":"1","poster":"Sanaullah102","content":"possibly D .. as mentioned a unique ID for each file"},{"content":"have exams today. hope i clear it","comments":[{"timestamp":"1649496960.0","upvote_count":"1","poster":"Shinigami_Asta","comment_id":"459575","content":"how did your exam turnout ?"}],"poster":"mousomgogoi","comment_id":"397353","upvote_count":"3","timestamp":"1641196620.0"},{"content":"Videos and audio streams are object.","upvote_count":"1","comment_id":"385101","poster":"adelazhu","timestamp":"1639882140.0"},{"comment_id":"363107","content":"correct","timestamp":"1637513460.0","poster":"samkuli","upvote_count":"4"},{"poster":"makins","comment_id":"289276","timestamp":"1628813520.0","content":"Correct Answer","upvote_count":"2"}],"topic":"1","question_text":"You need to recommend a non-relational data store that is optimized for storing and retrieving text files, videos, audio streams, and virtual disk images. The data store must store data, some metadata, and a unique ID for each file.\nWhich type of data store should you recommend?","answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/44582-exam-dp-900-topic-1-question-133-discussion/"},{"id":"YlTSR2072sEBP9cLpgYA","answer":"B","isMC":true,"answer_images":[],"answers_community":["B (100%)"],"answer_description":"","unix_timestamp":1612302120,"choices":{"B":"time series","D":"columnar","A":"relational","C":"graph"},"question_text":"Your company is designing a data store for internet-connected temperature sensors.\nThe collected data will be used to analyze temperature trends.\nWhich type of data store should you use?","question_images":[],"answer_ET":"B","question_id":39,"exam_id":73,"timestamp":"2021-02-02 22:42:00","url":"https://www.examtopics.com/discussions/microsoft/view/43848-exam-dp-900-topic-1-question-134-discussion/","topic":"1","discussion":[{"timestamp":"1642193220.0","content":"I never come across time series in any of the modules.","poster":"Haywhizzy","comment_id":"406473","upvote_count":"17","comments":[{"content":"Time series for IoT\nhttps://learn.microsoft.com/en-us/azure/data-explorer/time-series-analysis","upvote_count":"2","timestamp":"1681208880.0","comment_id":"691998","poster":"AnonymousJhb"}]},{"content":"Link for time series \n\nhttps://docs.microsoft.com/en-us/azure/architecture/data-guide/technology-choices/analytical-data-stores\n\n\nTelemetry and time series databases are an append-only collection of objects. Telemetry databases efficiently index data in a variety of column stores and in-memory structures, making them the optimal choice for storing and analyzing vast quantities of telemetry and time series data.","timestamp":"1643329320.0","comment_id":"415738","upvote_count":"11","poster":"[Removed]"},{"poster":"AGTraining","upvote_count":"1","comment_id":"1162726","timestamp":"1724936640.0","content":"option B"},{"comment_id":"851033","timestamp":"1695733740.0","poster":"ahmedkmj","upvote_count":"3","content":"Was in the exam 26/03"},{"timestamp":"1690276260.0","content":"Selected Answer: B\nA time series database such as InfluxDB, TimescaleDB or OpenTSDB would be a good choice for storing and analyzing temperature data from internet-connected temperature sensors.\n\nTime series databases are designed to handle high-frequency, time-stamped data, and they are optimized for storing and querying large amounts of time-series data. They provide built-in support for time-based queries and aggregations, which can be useful for analyzing temperature trends over time.\n\nThese databases also provide efficient compression and data retention policies that allow the data to be stored for long periods of time with minimal storage overhead, making it a good fit for IoT scenarios where data is generated over time.","upvote_count":"2","comment_id":"787536","poster":"Stuurwiel1"},{"upvote_count":"2","comment_id":"703063","content":"Selected Answer: B\ni think b. time series","poster":"nmbuff","timestamp":"1682343540.0"},{"timestamp":"1676141640.0","comment_id":"645554","content":"Was in exam 11/08","upvote_count":"4","poster":"ria97"},{"upvote_count":"3","content":"01/08.......EXAM","poster":"Drchattss","comments":[{"content":"B OR D ?","timestamp":"1675430400.0","upvote_count":"1","poster":"tidi7","comment_id":"641789"}],"comment_id":"640273","timestamp":"1675215000.0"},{"upvote_count":"3","timestamp":"1674140280.0","content":"Exam: 19.07.22","comment_id":"633574","poster":"Breeze21"},{"upvote_count":"2","poster":"StudyChimp","timestamp":"1673610300.0","content":"Answer: D - columnar\n\nColumn-family databases: Examples: Weather and other time-series data\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview","comment_id":"630858"},{"comment_id":"616431","content":"Because in Q internet in mentioned the answer is B","timestamp":"1671066060.0","poster":"jav355","upvote_count":"1"},{"content":"https://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview#time-series-databases","poster":"harishkode","comment_id":"547315","upvote_count":"2","timestamp":"1660496640.0"},{"comment_id":"455207","upvote_count":"2","comments":[{"comment_id":"461613","upvote_count":"3","poster":"Sandy1998","timestamp":"1649863620.0","content":"No - Time-series is a datastore only. Time series databases typically collect large amounts of data in real time from a large number of sources.\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/data-store-overview"}],"timestamp":"1648774380.0","content":"Time-series is not a data store, it is a data-type. You use Columlar datastore for it.","poster":"currysing"},{"poster":"GetulioJr","content":"Time series data is a set of values organized by time. Time series databases typically collect large amounts of data in real time from a large number of sources. Updates are rare, and deletes are often done as bulk operations. Although the records written to a time-series database are generally small, there are often a large number of records, and total data size can grow rapidly.","timestamp":"1639163700.0","upvote_count":"1","comment_id":"379177"},{"poster":"solozano0725","content":"Agree!","comment_id":"324570","timestamp":"1632959220.0","upvote_count":"2"},{"comment_id":"282211","content":"I think it's correct","timestamp":"1627933320.0","upvote_count":"2","poster":"Amir_Abed"}]},{"id":"KQ46ES357qPv2doeAaAa","topic":"1","answer_images":["https://www.examtopics.com/assets/media/exam-media/04277/0015000001.png"],"answer_description":"Reference:\nhttps://docs.microsoft.com/en-us/azure/data-lake-store/data-lake-store-get-started-portal https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview https://azure.microsoft.com/en-us/pricing/details/bandwidth/","discussion":[{"content":"Correct","timestamp":"1666792020.0","poster":"bfan95","comment_id":"592478","upvote_count":"8"},{"poster":"1544cc3","content":"Y Y N, \nTo use Azure Data Lake Storage, you must specifically create an Azure Storage account with the Gen2 option. Simply creating a regular Azure Storage account will give you access to Blob Storage, not Data Lake Storage.","upvote_count":"1","timestamp":"1738086420.0","comment_id":"1348066"},{"timestamp":"1724936700.0","poster":"AGTraining","upvote_count":"2","comment_id":"1162728","content":"yes\nyes\nyes"},{"upvote_count":"3","timestamp":"1724439420.0","content":"Yes:: You implement ADLS as a Storage Account. Azure Data Lake Storage is a type of storage account in Azure, specifically optimized for big data analytics workloads. \n\nWhen you create an Azure Data Lake Storage Gen2 account, you are essentially creating a specialized type of Storage Account with additional capabilities tailored for data lake scenarios.\n\nWhen you create an ADLS Gen2 account, it is provisioned under the hood as a hierarchical namespace on top of Blob storage, which is part of Azure Storage. This means that you can use your Azure Data Lake Storage account to store and analyze large amounts of structured and unstructured data, leveraging features such as fine-grained access control, hierarchical namespaces, and integration with big data analytics services like Azure Databricks, Azure HDInsight, and Azure Synapse Analytics.","poster":"Yomzie","comment_id":"1157502"},{"timestamp":"1709557680.0","content":"YES YES NO.\nNo, you cannot implement Azure Data Lake Storage by creating an Azure Storage account. Azure Data Lake Storage and Azure Storage accounts are separate and distinct services in Azure.","upvote_count":"3","comment_id":"998480","poster":"rmeng"},{"poster":"DavidFedor","content":"Im not sure the question is asking of GEN1 or GEN2 as two different things. If we think of GEN1 it is a service in Azure , but if GEN 2 it sits on top of Blobs which is part of Azure Container so that would make sense for go with the YES in the last option.","timestamp":"1708959420.0","upvote_count":"1","comment_id":"990751"},{"poster":"fiksarion","upvote_count":"1","content":"Correct","timestamp":"1704798480.0","comment_id":"947046"},{"content":"Data transfer prices for ADLS\nWhen you write data into GRS accounts, that data will be replicated to another Azure region. The Geo-Replication Data Transfer charge is for the bandwidth of replicating that data to another Azure region. This charge also applies when you change the account replication setting from LRS to GRS or RA-GRS. View the Data transfer prices on Blobs pricing page.\n\nhttps://azure.microsoft.com/en-us/pricing/details/storage/data-lake/#pricing\n\nAzure Blob Storage pricing\n\nhttps://azure.microsoft.com/en-us/pricing/details/storage/blobs/","comment_id":"688308","timestamp":"1680843840.0","poster":"JA2018","upvote_count":"3"},{"content":"Correct","timestamp":"1652335260.0","comment_id":"476779","poster":"reinizzzz","upvote_count":"4"},{"poster":"mattzocsgogod","content":"Correct","upvote_count":"4","comment_id":"475455","timestamp":"1652182380.0"}],"timestamp":"2021-11-10 14:33:00","question_text":"HOTSPOT -\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","question_id":40,"question_images":["https://www.examtopics.com/assets/media/exam-media/04277/0014900001.png"],"exam_id":73,"isMC":false,"url":"https://www.examtopics.com/discussions/microsoft/view/65764-exam-dp-900-topic-1-question-135-discussion/","answer_ET":"","answer":"","answers_community":[],"unix_timestamp":1636551180}],"exam":{"id":73,"isImplemented":true,"numberOfQuestions":290,"isMCOnly":false,"name":"DP-900","provider":"Microsoft","isBeta":false,"lastUpdated":"12 Apr 2025"},"currentPage":8},"__N_SSP":true}