{"pageProps":{"questions":[{"id":"sTekNMTX2iejYMo5uGkB","answer_images":[],"choices":{"A":"Service Bus","B":"Event Hub","D":"Queue","C":"Event Grid"},"answer_description":"","unix_timestamp":1591535760,"exam_id":48,"timestamp":"2020-06-07 15:16:00","question_text":"You are developing a solution that will use Azure messaging services.\nYou need to ensure that the solution uses a publish-subscribe model and eliminates the need for constant polling.\nWhat are two possible ways to achieve the goal? Each correct answer presents a complete solution.\nNOTE: Each correct selection is worth one point.","answers_community":["AC (100%)"],"question_images":[],"topic":"6","answer_ET":"AC","url":"https://www.examtopics.com/discussions/microsoft/view/22444-exam-az-204-topic-6-question-14-discussion/","discussion":[{"content":"Correct Ans is A & C\nhttps://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber#issues-and-considerations","upvote_count":"53","poster":"Amankothari","comments":[{"content":"\"In Azure, consider using Service Bus or Event Grid. \"","timestamp":"1595858160.0","poster":"rrongcheng","comment_id":"145028","upvote_count":"9"},{"content":"Agree, but publish/subscribe is a feature of event-hub as well, but event-based receiving is not. That is why option B falls off.","upvote_count":"3","timestamp":"1666071120.0","comment_id":"697935","poster":"coffecold"}],"timestamp":"1594570680.0","comment_id":"133052"},{"content":"The article has been updated, the new text says \"In Azure, consider using Service Bus, Event Hubs or Event Grid.\"\n\nSo A, B and C should be all correct.\n\nhttps://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber#issues-and-considerations","timestamp":"1613177760.0","poster":"lion2k6","comments":[{"upvote_count":"1","comment_id":"697943","content":"Event Hubs : event-based receiving is not possible, you still need to poll. So B falls off","timestamp":"1666071720.0","poster":"coffecold"}],"comment_id":"289246","upvote_count":"51"},{"poster":"overhill","content":"Service bus Requires Polling but you can do long polling.\nSo the keyword is actually \"Constant Polling\"\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/compare-messaging-services","upvote_count":"1","comments":[{"poster":"overhill","timestamp":"1731612840.0","comment_id":"1312301","content":"So you don't have to constantly poll for\n\nService Bus\nEvent Grid\n\nBut you have to constantly poll for\n\nEvent Hubs \nQueue Storage","upvote_count":"1"}],"comment_id":"1312298","timestamp":"1731612480.0"},{"poster":"Vichu_1607","timestamp":"1727776920.0","content":"Selected Answer: AC\nA. Service Bus: Azure Service Bus supports a publish-subscribe model through its Topics and Subscriptions. It allows for messages to be published to a topic and then sent to all subscriptions to that topic, eliminating the need for constant polling.\n\nC. Event Grid: Azure Event Grid is a fully managed event routing service that uses a publish-subscribe model. It allows for event-based architecture and eliminates the need for constant polling by pushing the events to the subscribers.","upvote_count":"1","comment_id":"1291898"},{"poster":"raymond_abcd","content":"Still no convinced why event hub is not a correct answer. Some say that the event hub consumer is polling? I read the following in the doc:\n\nAny entity that reads event data from an event hub is an event consumer. All Event Hubs consumers connect via the AMQP 1.0 session and events are delivered through the session as they become available. The client doesn't need to poll for data availability.","comment_id":"1137694","timestamp":"1706798400.0","upvote_count":"2","comments":[{"upvote_count":"1","comment_id":"1243509","poster":"ProtossOR89144","timestamp":"1720292940.0","content":"You are right, event hub can utilize push, in fact it does both now: pull and push models: https://learn.microsoft.com/uk-ua/training/modules/azure-event-hubs/6-event-hubs-programming-guide - as u see pull \"with\" ReadEventsFromPartitionAsync and push with Event Processor client. Seems the key thing here services that supports ONLY push ways"}]},{"upvote_count":"1","poster":"AndySmith","timestamp":"1699024920.0","content":"On exam 3-Nov-2023. Went with proposed answer - 932/1000.","comment_id":"1061539"},{"comment_id":"944432","upvote_count":"3","poster":"juanckar","content":"This was on the exam (July 2023). Went with AC. Scored 917","timestamp":"1688631360.0"},{"content":"Selected Answer: AC\nA & C Correct","poster":"OPT_001122","comment_id":"715023","upvote_count":"3","timestamp":"1668067200.0"},{"content":"Got it in exam 20/10/2022","comment_id":"700397","timestamp":"1666310760.0","upvote_count":"5","poster":"elequiel"},{"timestamp":"1655639880.0","content":"Selected Answer: AC\nA and C as both service bus and event grid implement publish-subscribe and don't require polling.","upvote_count":"3","poster":"AZAdam22","comments":[{"poster":"renzoku","content":"exactly, Event HUB needs to poll and process an event","comment_id":"625373","timestamp":"1656609000.0","upvote_count":"1"}],"comment_id":"618666"},{"comment_id":"611676","upvote_count":"2","content":"A, B and C should be all correct.\nIt is strongly recommended to use available messaging products and services that support a publish-subscribe model, rather than building your own. In Azure, consider using Service Bus, Event Hubs or Event Grid. Other technologies that can be used for pub/sub messaging include Redis, RabbitMQ, and Apache Kafka.\nhttps://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber","poster":"liuliangzhou","timestamp":"1654404000.0"},{"upvote_count":"3","timestamp":"1647145620.0","poster":"meoukg","content":"Got it on 03/2022, I chose A. Service Bus & C. Event Grid","comment_id":"566551"},{"comment_id":"539442","poster":"heisenberg33","content":"Selected Answer: AC\nCorrect answer is A and C Ref: https://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber#issues-and-considerations.\nWrong answer B (eliminate the need for constant polling)Ref: https://docs.microsoft.com/en-us/azure/connectors/connectors-create-api-azure-event-hubs#trigger-polling-behavior","upvote_count":"8","timestamp":"1643869980.0"},{"comment_id":"528468","content":"It seems that the selected answers are correct: \"Existing technologies. It is strongly recommended to use available messaging products and services that support a publish-subscribe model, rather than building your own. In Azure, consider using Service Bus, Event Hubs or Event Grid. Other technologies that can be used for pub/sub messaging include Redis, RabbitMQ, and Apache Kafka.\"\n\nhttps://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber","timestamp":"1642688700.0","upvote_count":"2","poster":"[Removed]"},{"upvote_count":"3","poster":"lugospod","comment_id":"527619","content":"Got this one 01/2022. Went with most voted (to avoid writing answers again)","timestamp":"1642603920.0"},{"comment_id":"392282","content":"Service bus\nEvent Grid","upvote_count":"3","timestamp":"1624816980.0","poster":"kondapaturi"},{"comment_id":"361900","timestamp":"1621495620.0","upvote_count":"6","content":"A & C\nTriggers of Event hub are long-polling, so B is not correct.\nhttps://docs.microsoft.com/en-us/azure/connectors/connectors-create-api-azure-event-hubs#trigger-polling-behavior","poster":"mprokopy"},{"timestamp":"1621192140.0","content":"I believe MS is rather picky about the distinction between events and messages, that why I go for Service Bus and Queues... However Event Hubs and Grid are also capable of delivering the requested functionality (as far as I understand them... but I'm still studying on them :-) )","poster":"Frakandel","comments":[{"poster":"ferut","content":"Agree, see:\nhttps://docs.microsoft.com/en-us/azure/event-grid/compare-messaging-services?toc=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fazure%2Fservice-bus-messaging%2Ftoc.json&bc=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fazure%2Fbread%2Ftoc.json","comments":[{"content":"Buddies, although there is a distinction between events and messages, all of these services (Service Bus Topics, Service Bus Queues, Event Grid, Event Hubs) are under the \"Azure Messaging\" umbrella. \n\nQueues do not satisfy the pub-sub model and Event Hub is long polling https://docs.microsoft.com/en-us/azure/connectors/connectors-create-api-azure-event-hubs#trigger-polling-behavior","comment_id":"568692","upvote_count":"2","timestamp":"1647385560.0","poster":"iamstudying"}],"upvote_count":"2","comment_id":"361171","timestamp":"1621412580.0"}],"upvote_count":"5","comment_id":"359010"},{"poster":"wtkwsk","upvote_count":"4","content":"A, B and C are all correct:\n\nExisting technologies. It is strongly recommended to use available messaging products and services that support a publish-subscribe model, rather than building your own. In Azure, consider using Service Bus, Event Hubs or Event Grid. Other technologies that can be used for pub/sub messaging include Redis, RabbitMQ, and Apache Kafka.\n(https://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber)","comment_id":"334759","timestamp":"1618326960.0"},{"comment_id":"321152","content":"A & C correct answer","upvote_count":"2","timestamp":"1616765100.0","poster":"Dnyaneshwar"},{"upvote_count":"5","poster":"vb3d","comment_id":"318924","timestamp":"1616573880.0","content":"The link provided in the answer says that Event Grid, Event Hub and Service bus all support pub/sub"},{"content":"Answer:\nService bus\nevent grid","poster":"paru123456789","upvote_count":"1","comment_id":"302255","timestamp":"1614718560.0"},{"upvote_count":"2","content":"sorry A,C., the answer is correct.","timestamp":"1610175660.0","poster":"khoant","comment_id":"263058"},{"comment_id":"263056","timestamp":"1610175600.0","poster":"khoant","upvote_count":"2","content":"B.C correct.","comments":[{"content":"B is incorrect Ref: https://docs.microsoft.com/en-us/azure/connectors/connectors-create-api-azure-event-hubs#trigger-polling-behavior","upvote_count":"2","poster":"heisenberg33","comment_id":"539444","timestamp":"1643870100.0"}]},{"timestamp":"1609874700.0","content":"the service bus is 1-1 subscriber, while the SB- Topic, Event grid and event hub fit into multiple subscribers (publish and subscribe)","poster":"27close","comment_id":"260512","upvote_count":"1"},{"poster":"27close","timestamp":"1605548160.0","comment_id":"220502","upvote_count":"3","content":"In Azure, consider using Service Bus or Event Grid. Other technologies that can be used for pub/sub messaging include Redis, RabbitMQ, and Apache Kafka.\nA & C- clearly defined in MS DOC"},{"poster":"jishnujrk","content":"Answer A,C-\nYou can use Service Bus topics and Event Grid for implementing a publish-subscribe model","comment_id":"219838","upvote_count":"2","timestamp":"1605461580.0"},{"upvote_count":"3","comment_id":"210428","poster":"Nicolay33","content":"I found this comparing of Storage queues and Service Bus queues, documenting that Service Bus does not need constant polling:\n\n\"As a solution architect/developer, you should consider using Service Bus queues when:\n\n* Your solution must be able to receive messages without having to poll the queue. With Service Bus, this can be achieved through the use of the long-polling receive operation using the TCP-based protocols that Service Bus supports.\"\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted","timestamp":"1604234400.0"},{"content":"For Evnt Grid I think there's no doubt about it and for Service Bus recall that also has Topics.\nAs per the doucmentation:\n\"Service Bus topics and subscriptions support a publish/subscribe messaging communication model. \"\nreference: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-topics-subscriptions-portal","upvote_count":"1","comment_id":"199619","poster":"sebainones","timestamp":"1602661680.0"},{"poster":"kiwibird","content":"The given answer is correct. https://docs.microsoft.com/en-us/azure/architecture/patterns/publisher-subscriber#issues-and-considerations","timestamp":"1602567660.0","upvote_count":"2","comment_id":"198976"},{"upvote_count":"2","content":"I find these answers a little confusing. Apparently, Event Grid is, like a Message Service Bus, a messaging service too. I suppose they meant that it is an messaging (abstract) service, rather than a message-based solution. On the other hand, Event Hub uses consumer groups which also follow the publisher-subscribe model.","poster":"Faith83","timestamp":"1602236280.0","comment_id":"196627"},{"content":"I don't understand the bit of the question \"Each correct answer presents a complete solution.\" Surely Service Bus is not a complete solution, it would only be a complete solution if you added a topic?","upvote_count":"1","comment_id":"192360","timestamp":"1601736000.0","poster":"AidanT"},{"timestamp":"1599656040.0","content":"Event Grid and Event Hub are event-based system. Service Bus and Queue Storage are message-based system . Therefore A and D.\nhttps://docs.microsoft.com/en-us/learn/modules/choose-a-messaging-model-in-azure-to-connect-your-services/3-choose-azure-storage-queues","poster":"adiko","comment_id":"176519","comments":[{"comment_id":"229807","content":"Queue is not pub-sub I think. Queue refers to storage queue (Azure Queue Storage) while Service Bus refers to Service Bus Queue. I'll go with Service Bus and Event Grid.","upvote_count":"4","poster":"Cornholioz","timestamp":"1606588860.0"}],"upvote_count":"8"},{"content":"Isn't Service Bus polling?\nhttps://docs.microsoft.com/en-us/azure/event-grid/compare-messaging-services#service-bus","upvote_count":"4","comment_id":"117264","timestamp":"1592903400.0","comments":[{"content":"That may depend on the implementation or the subsriber: \n\nA consumer of a Service Bus queue constantly polls Service Bus to check if new messages are available. The client SDKs and Azure Functions trigger for Service Bus abstract that model. When a new message is available, the consumer's callback is invoked, and the message is sent to the consumer.\nhttps://docs.microsoft.com/en-us/azure/architecture/guide/technology-choices/messaging","upvote_count":"3","timestamp":"1593137580.0","comments":[{"poster":"uzairahm007","timestamp":"1597577400.0","upvote_count":"3","comment_id":"159181","content":"It says it abstracts on polling model and does poling until a new message is available than consumer's callback is invoked, and the message is sent to the consumer.In essence it is still polling. It's a bit fuzzy"}],"comment_id":"120099","poster":"soham83"}],"poster":"Deli_SK"},{"timestamp":"1591535760.0","comments":[{"comment_id":"106145","upvote_count":"27","poster":"perry230","comments":[{"timestamp":"1592362020.0","comment_id":"112082","upvote_count":"6","poster":"Charlie80","content":"I’m not sure about that. MS says,\n\"Choose between Azure messaging services - Event Grid, Event Hubs, and Service Bus\" ref: https://docs.microsoft.com/en-us/azure/event-grid/compare-messaging-services\n\nOne justification for the answer is that Event Hubs use the terminology publisher/consumer vs publisher/subscriber. That’s just semantics. A consumer is a non-polling, data stream subscriber."}],"timestamp":"1591722540.0","content":"Event Hub is a data streaming service; not a messaging service"},{"poster":"Adol","content":"The answer is correct according to a course in Udemy. It's because queue and other options do not have either the multi subscription capability or are only storage","comment_id":"264052","timestamp":"1610291280.0","upvote_count":"2"},{"comment_id":"279354","poster":"profesorklaus","timestamp":"1611930180.0","content":"Maybe both answers are correct and Microsoft grants 1 point if you choose one of them.","upvote_count":"2"}],"content":"Event Hub is also publish and subscribe.","upvote_count":"4","poster":"subbupro","comment_id":"104545"}],"question_id":391,"isMC":true,"answer":"AC"},{"id":"55IYE9eErU1QxWzMxA6F","question_images":[],"exam_id":48,"answer":"D","topic":"6","answer_description":"","discussion":[{"upvote_count":"65","poster":"Ritesh073","content":"Agreed on D\nClientsubcriber object initialization is done, so B incorrect.\nHere Nothing to do with Rule and closeclient so A and C incorrect","comment_id":"164148","timestamp":"1598160900.0","comments":[{"content":"On my exam 2022-12-26.\nChose：D","upvote_count":"3","poster":"KingChuang","comment_id":"758024","timestamp":"1672103820.0"}]},{"upvote_count":"7","timestamp":"1614718560.0","poster":"paru123456789","content":"Answer: D","comment_id":"302256"},{"comments":[{"comment_id":"1312316","upvote_count":"1","timestamp":"1731615120.0","content":"This is Legacy API \nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.azure.servicebus.queueclient.registermessagehandler?view=azure-dotnet-legacy","poster":"overhill"}],"timestamp":"1731614940.0","comment_id":"1312315","poster":"overhill","upvote_count":"1","content":"This is Legacy"},{"comment_id":"1291899","upvote_count":"1","timestamp":"1727776980.0","poster":"Vichu_1607","content":"Selected Answer: D\nD. subscriptionClient.RegisterMessageHandler(ProcessMessagesAsync, messageHandlerOptions);\n\nThe RegisterMessageHandler method is used to start processing messages that have been sent to the Service Bus Topic. It takes two parameters: a function delegate that defines the processing of messages, and an options object that defines the settings for message processing. This is the method that actually starts the message pump and begins receiving and processing messages."},{"upvote_count":"4","comment_id":"907805","content":"Appeared in my exam on 27 May 2023. \nI chose 'D'","timestamp":"1685168820.0","poster":"Vmwarevirtual"},{"upvote_count":"2","poster":"AlexeyG","timestamp":"1676532960.0","comment_id":"810369","content":"Got this in 16/02/2023"},{"comment_id":"715024","upvote_count":"4","poster":"OPT_001122","content":"Selected Answer: D\nD is correct","timestamp":"1668067260.0"},{"content":"Old library : Microsoft.Azure.ServiceBus v5.2.0\nI think nowadays (Azure.Messaging.ServiceBus v7.11.0) you simply would use : \nprocessor = client.CreateProcessor(queueName, new ServiceBusProcessorOptions());\nprocessor.ProcessMessageAsync += MessageHandler;\nStill : the anwer is correct","timestamp":"1666074360.0","comment_id":"697967","poster":"coffecold","upvote_count":"5"},{"upvote_count":"4","content":"Selected Answer: D\nD is correct","timestamp":"1658317680.0","poster":"Perplex","comment_id":"634015"},{"comment_id":"566552","timestamp":"1647145680.0","content":"Got it on 03/2022, I chose D. subscriptionClient.RegisterMessageHandler(ProcessMessagesAsync, messageHandlerOptions);","upvote_count":"4","poster":"meoukg"},{"content":"Agreed on D when we use Microsoft.Azure.ServiceBus package.\n \nFurthermore, with the new version (Azure.Messaging.ServiceBus), we use a processor to receive/handle messages.\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-dotnet-get-started-with-queues#add-the-code-to-receive-messages-from-the-queue","upvote_count":"3","comment_id":"556491","timestamp":"1645845840.0","poster":"vulht"}],"unix_timestamp":1598160900,"question_text":"A company is implementing a publish-subscribe (Pub/Sub) messaging component by using Azure Service Bus. You are developing the first subscription application.\nIn the Azure portal you see that messages are being sent to the subscription for each topic. You create and initialize a subscription client object by supplying the correct details, but the subscription application is still not consuming the messages.\nYou need to ensure that the subscription client processes all messages.\nWhich code segment should you use?","question_id":392,"answer_ET":"D","isMC":true,"timestamp":"2020-08-23 07:35:00","choices":{"D":"subscriptionClient.RegisterMessageHandler(ProcessMessagesAsync, messageHandlerOptions);","B":"subscriptionClient = new SubscriptionClient(ServiceBusConnectionString, TopicName, SubscriptionName);","A":"await subscriptionClient.AddRuleAsync(new RuleDescription(RuleDescription.DefaultRuleName, new TrueFilter()));","C":"await subscriptionClient.CloseAsync();"},"answer_images":[],"answers_community":["D (100%)"],"url":"https://www.examtopics.com/discussions/microsoft/view/29327-exam-az-204-topic-6-question-15-discussion/"},{"id":"Fr6gfc8t9Kr1bMZBkhHo","question_images":[],"exam_id":48,"answer":"B","topic":"6","answer_description":"","discussion":[{"timestamp":"1622958120.0","upvote_count":"55","content":"the reason that the solution is service bus because of this message \"Use first-in-first-out (FIFO) ordering of messages.\" \n\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted#foundational-capabilities\nStorage account does not have ordering guarantee","comments":[{"timestamp":"1624859700.0","comment_id":"121654","upvote_count":"19","poster":"xRiot007","comments":[{"comments":[{"timestamp":"1648030860.0","poster":"rdemontis","content":"I totally agree with you all. Only a doubt for VM usage: In addition to save costs I thing it's not possible to interact with a service bus queue. in than case i believe you have to use a storage queue.","upvote_count":"1","comment_id":"317972"}],"upvote_count":"17","timestamp":"1627158960.0","content":"I think the reason for not using a VM is the 'Minimize Azure costs' requirement","comment_id":"142994","poster":"lautaro_sw"}],"content":"I also think the explanation should be corrected. Size <80GB + FIFO guarantee is what makes Service Bus a good option, not the existence of a VM or not."},{"upvote_count":"2","poster":"edengoforit","content":"Absolutely correct. There are so many questions related to this. FIFO and business transactions. If anything related, it seems to be the Service Bus","comment_id":"529452","timestamp":"1674338760.0"}],"comment_id":"103593","poster":"Lkk51"},{"timestamp":"1630383600.0","upvote_count":"7","content":"Answer is correct . but explanation is confusing ..","poster":"Nabeelcp","comments":[{"comments":[{"poster":"PoTermin","timestamp":"1660050180.0","comment_id":"422146","upvote_count":"2","content":"Your explanation sounds good."}],"poster":"Codenoob","upvote_count":"8","content":"It is confusing indeed. But the reason the explanation pointed out about VMs is because of VMs are expensive and won't match with the \"Minimize azure costs\" requirement. Azure Functions is the best way to handle Service Bus Queue events by utilizing its trigger functionality and providing minimal costs to it.","timestamp":"1631541180.0","comment_id":"178746"}],"comment_id":"170532"},{"comment_id":"967187","timestamp":"1722347820.0","upvote_count":"2","content":"got this question today, answer N - 7/30/2023, score 895/1000","poster":"applepie"},{"timestamp":"1720253760.0","content":"This was on the exam (July 2023). Went with NO. Scored 917","comment_id":"944433","upvote_count":"3","poster":"juanckar"},{"upvote_count":"1","comment_id":"728422","content":"Selected Answer: B\nB. No - is the correct","timestamp":"1701102360.0","poster":"OPT_001122"},{"poster":"elequiel","content":"Got it in exam 20/10/2022","timestamp":"1697846820.0","upvote_count":"2","comment_id":"700398"},{"upvote_count":"2","comment_id":"621639","poster":"Eltooth","content":"Selected Answer: B\nB is correct answer. \nNO","timestamp":"1687608360.0"},{"poster":"Udoyen","timestamp":"1659965820.0","upvote_count":"4","comment_id":"421653","content":"This is the kind of question we need ..."},{"poster":"paru123456789","comment_id":"302257","timestamp":"1646254620.0","upvote_count":"1","content":"Answer: NO"},{"upvote_count":"1","comments":[{"poster":"Tom87","comment_id":"327859","timestamp":"1649059620.0","content":"Queues in general should be FIFO. But not Azure Storage Queue. Ordering is not guaranteed. See this:\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted#foundational-capabilities","upvote_count":"3"}],"comment_id":"301052","content":"I think the given option of using Azure Storage queue is right, refer this document\nhttps://docs.microsoft.com/en-us/azure/storage/queues/scalability-targets#scale-targets-for-queue-storage\n- You can store upto 500TB of data in queue, queue works in FIFO. \n\nThe approach of using VM for processing the queue messages is overkill. So given quesition the answer is B.\nStill its a stilly question","poster":"svaza","timestamp":"1646097660.0"},{"content":"Answer: A. Yes\n1.Your solution requires the queue to provide a guaranteed first-in-first-out (FIFO) ordered delivery.\n2.Your queue size won't grow larger than 80 GB.\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted#consider-using-service-bus-queues","comment_id":"229250","poster":"_nma","upvote_count":"1","comments":[{"poster":"_nma","comment_id":"229252","content":"Apologies, wrong discussion. This was meant for the net question.","timestamp":"1638048000.0","upvote_count":"1"}],"timestamp":"1638047760.0"}],"unix_timestamp":1591422120,"question_id":393,"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou are developing an Azure Service application that processes queue data when it receives a message from a mobile application. Messages may not be sent to the service consistently.\nYou have the following requirements:\n✑ Queue size must not grow larger than 80 gigabytes (GB).\n✑ Use first-in-first-out (FIFO) ordering of messages.\n✑ Minimize Azure costs.\nYou need to implement the messaging solution.\nSolution: Use the .Net API to add a message to an Azure Storage Queue from the mobile application. Create an Azure VM that is triggered from Azure Storage\nQueue events.\nDoes the solution meet the goal?","answer_ET":"B","isMC":true,"timestamp":"2020-06-06 07:42:00","answers_community":["B (100%)"],"choices":{"A":"Yes","B":"No"},"answer_images":[],"url":"https://www.examtopics.com/discussions/microsoft/view/22275-exam-az-204-topic-6-question-16-discussion/"},{"id":"3chjCu2i4UYKnl6Rxeaq","timestamp":"2020-05-10 19:49:00","isMC":true,"choices":{"B":"No","A":"Yes"},"answer_images":[],"answer":"B","answer_ET":"B","unix_timestamp":1589132940,"topic":"6","discussion":[{"upvote_count":"46","poster":"cbn","comments":[{"comment_id":"421655","upvote_count":"6","content":"So if I may ask, if the cost wasn't an issue would Windows VM be okay?","comments":[{"upvote_count":"3","timestamp":"1635771120.0","poster":"dohnalr","comment_id":"471213","content":"Yes. It would be ok","comments":[{"content":"I think every solution would be OK then.","timestamp":"1666075320.0","poster":"coffecold","comment_id":"697977","upvote_count":"2"}]}],"timestamp":"1628429880.0","poster":"Udoyen"}],"comment_id":"290012","timestamp":"1613277060.0","content":"Using Service bus is fine, however having a Windows VM does not address the cost requirement.\n\nAnswer is 'NO'"},{"comment_id":"86677","poster":"neosri","timestamp":"1589132940.0","content":"answer explanation is wrong. It should be azure service bus queues and not storage queues trigger for Azure functions","upvote_count":"25"},{"comment_id":"1319465","content":"Selected Answer: B\nsince messages are not sent constantly the VM (which is always running) is not cost optimized. an azure function would be more suited for such a sparse workload.","upvote_count":"1","poster":"cmmr","timestamp":"1732830060.0"},{"poster":"applepie","comment_id":"967188","timestamp":"1690725420.0","content":"got this question today, answer N - 7/30/2023, score 895/1000","upvote_count":"2"},{"content":"Selected Answer: B\nAzure Service Bus Queue trigger","upvote_count":"1","poster":"OPT_001122","timestamp":"1669566360.0","comment_id":"728424"},{"timestamp":"1669472580.0","upvote_count":"3","comment_id":"727568","content":"Selected Answer: B\nQueue size must not grow larger than 80 gigabytes (GB) - yes that's fine\nUse first-in-first-out (FIFO) ordering of messages. - yes, you can get it with service bus\nMinimize Azure costs & Create an Azure Windows VM that is triggered from Azure Service Bus Queue - Firstly there's nothing like an AzureVM triggering, but Azure Functions triggering instead. Secondly - using vm with queue is more expensive, but of course it depends on multiple factors.","poster":"hubekpeter"},{"poster":"Eltooth","content":"Selected Answer: B\nB is correct answer.\nNO","comment_id":"621642","timestamp":"1656072420.0","upvote_count":"3"},{"poster":"Dev666","content":"Selected Answer: B\nI choose B as think A will be expensive","comment_id":"585532","timestamp":"1649910900.0","upvote_count":"1"},{"comment_id":"566548","poster":"meoukg","content":"Got it on 03/2022, I chose B. No","timestamp":"1647145380.0","upvote_count":"1"},{"upvote_count":"2","content":"Here I guess following line meant to mention that VM will unnecessarily increase cost.\n\n\"Messages may not be sent to the service consistently.\"","poster":"altafpatel1984","timestamp":"1637489400.0","comment_id":"483160"},{"upvote_count":"1","comments":[{"upvote_count":"2","comment_id":"549635","content":"Requirement clearly says minimize Azure costs","poster":"grappigekerel","timestamp":"1645123860.0"}],"comment_id":"483156","content":"If B is answer then question is confusing because theriotically VM is not bad idea since there is no mentioned of cost saving etc.","timestamp":"1637489220.0","poster":"altafpatel1984"},{"comment_id":"384740","timestamp":"1624012440.0","poster":"Idkhow","content":"why do we need the Azure Windows VM for? Service bus is already fine","upvote_count":"3"},{"upvote_count":"1","content":"The given answer is incorrect. Service Bus queue meets the requirements","poster":"silva_831","comment_id":"382963","timestamp":"1623800520.0"},{"poster":"Cholo981","timestamp":"1622976660.0","upvote_count":"1","comment_id":"375927","content":"StorageQueue doens't guarantees FIFO. Must be ServiceBus."},{"timestamp":"1614718620.0","comment_id":"302258","upvote_count":"2","content":"Answer: NO","poster":"paru123456789"},{"upvote_count":"2","comments":[{"upvote_count":"10","comment_id":"252846","timestamp":"1609010100.0","poster":"Cornholioz","content":"Wrong because of the VM use in the solution which is an overkill and increases cost."}],"comment_id":"229253","content":"Answer: A. Yes\n1.Your solution requires the queue to provide a guaranteed first-in-first-out (FIFO) ordered delivery.\n2.Your queue size won't grow larger than 80 GB.\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted#consider-using-service-bus-queues","poster":"_nma","timestamp":"1606512120.0"},{"poster":"javayung","upvote_count":"2","timestamp":"1604137860.0","content":"Answer is No: \nAs a solution architect/developer, you should consider using Storage queues when:\nYour application must store over 80 GB of messages in a queue.","comment_id":"209820"},{"comment_id":"144672","comments":[{"comment_id":"222943","comments":[{"upvote_count":"7","comment_id":"229861","content":"In the famous words of Gandalf, \"cloud_exam1, you shall not pass\"!","poster":"Cornholioz","timestamp":"1606594500.0"}],"poster":"cloud_exam1","timestamp":"1605805320.0","content":"I think the answer is wrong. In the requirement, said 'Queue size must not grow larger than 80 gigabytes (GB)'. And FIFO. So should be Service Bus Queue. \n\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted","upvote_count":"1"}],"upvote_count":"3","poster":"Dirk","content":"Yes - I think explanation is wrong, but answer is correct.\nSee this link: https://www.serverless360.com/blog/azure-storage-queue-vs-service-bus-queue#:~:text=Message%20Size,incoming%20messages%20throwing%20an%20exception.","timestamp":"1595834340.0"},{"timestamp":"1592368920.0","comment_id":"112154","poster":"axaptaMaster","upvote_count":"2","content":"According to this:\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted\nShouldn't the answer be: B. No?\n\nThere is an explanation:\nAs a solution architect/developer, you should consider using Storage queues when:\n\nYour application must store over 80 GB of messages in a queue.\nYour application wants to track progress for processing a message inside of the queue. This is useful if the worker processing a message crashes. A subsequent worker can then use that information to continue from where the prior worker left off.\nYou require server side logs of all of the transactions executed against your queues.","comments":[{"content":"No, requirement is <80GB and FIFO - so Service Bus is fine.","poster":"nazzzu","upvote_count":"13","comment_id":"114910","timestamp":"1592673600.0"},{"content":"\"Queue size must not grow larger than 80 gigabytes (GB)\" + FIFO order guarantee means you need an Azure Service Bus Queue.","comment_id":"121641","timestamp":"1593321960.0","poster":"xRiot007","upvote_count":"4"}]}],"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou are developing an Azure Service application that processes queue data when it receives a message from a mobile application. Messages may not be sent to the service consistently.\nYou have the following requirements:\n✑ Queue size must not grow larger than 80 gigabytes (GB).\n✑ Use first-in-first-out (FIFO) ordering of messages.\n✑ Minimize Azure costs.\nYou need to implement the messaging solution.\nSolution: Use the .Net API to add a message to an Azure Service Bus Queue from the mobile application. Create an Azure Windows VM that is triggered from\nAzure Service Bus Queue.\nDoes the solution meet the goal?","question_images":[],"question_id":394,"url":"https://www.examtopics.com/discussions/microsoft/view/20228-exam-az-204-topic-6-question-17-discussion/","answers_community":["B (100%)"],"answer_description":"","exam_id":48},{"id":"79HyeLRBlbrXxhhfi71g","answer_ET":"","question_id":395,"answer_images":["https://www.examtopics.com/assets/media/exam-media/04273/0057200001.png"],"topic":"6","answer":"","url":"https://www.examtopics.com/discussions/microsoft/view/48912-exam-az-204-topic-6-question-18-discussion/","exam_id":48,"question_images":["https://www.examtopics.com/assets/media/exam-media/04273/0057100001.png"],"answer_description":"Box 1: on-error -\nPolicies in Azure API Management are divided into inbound, backend, outbound, and on-error.\nIf there is no on-error section, callers will receive 400 or 500 HTTP response messages if an error condition occurs.\n\nBox 2: context -\n\nBox 3: context -\n\nBox 4: set-status -\nThe return-response policy aborts pipeline execution and returns either a default or custom response to the caller. Default response is 200 OK with no body.\nCustom response can be specified via a context variable or policy statements.\nSyntax:\n<return-response response-variable-name=\"existing context variable\">\n<set-header/>\n<set-body/>\n<set-status/>\n</return-response>\n\nBox 5: on-error -\nReference:\nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-error-handling-policies https://docs.microsoft.com/en-us/azure/api-management/api-management-transformation-policies","discussion":[{"upvote_count":"44","content":"Just want to add that \"set-status\" also has code and reason (e.g. set-status code=\"409\" reason=\"Conflict\").\n\nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#SetStatus","comments":[{"upvote_count":"9","content":"Thanks. set-status on it's own seemed a bit strange. \nMinor detail: Last on-error must be preceded by a slash.","comment_id":"358782","poster":"SnakePlissken","timestamp":"1637078400.0"}],"comment_id":"327268","timestamp":"1633254360.0","poster":"jokergester"},{"upvote_count":"17","comment_id":"472405","poster":"armoniyem","timestamp":"1651637400.0","content":"THE ANSWER IS CORRECT."},{"timestamp":"1722181380.0","comment_id":"1134305","upvote_count":"3","poster":"Maskoo","content":"Given answer is correct\n\nBut tbh as a developer in this situation I would fix the API to return a 409 in case of conflicts instead of tweaking it using a Azure Policy..."},{"poster":"jaf19f","content":"I got this question (12-Aug-2023) and I chose the given answers - 932 passed","comment_id":"980250","upvote_count":"4","timestamp":"1707859020.0"},{"timestamp":"1706539320.0","comment_id":"966407","upvote_count":"4","poster":"BaoNguyen2411","content":"got this question on 29/06/2023"},{"upvote_count":"4","poster":"AbidooKing","content":"Got this 2023July13. Went with given and scored 917.","comment_id":"953183","timestamp":"1705401900.0"},{"content":"I got this on 6/29/2023 and passed with 850. Answer is correct.","timestamp":"1703861820.0","comment_id":"938131","upvote_count":"3","poster":"JH81"},{"content":"Question was on 19-MAR-2023 exam","timestamp":"1696257840.0","upvote_count":"3","poster":"Indhumathi_Saravanan","comment_id":"858929"},{"poster":"seila1331","content":"Did my exam on 8/12/2022. This question was on it.","comment_id":"738966","upvote_count":"5","timestamp":"1686217080.0"},{"content":"Did my exam on 15th November 2022. This question was on it.","poster":"TheExamMaster2020","comment_id":"718802","timestamp":"1684151760.0","upvote_count":"3"},{"content":"Got this in 11/2022\nWent with on-error, context, context, set-status, override-status, on-error\nOne more blank space after <otherwise />, I selected override-status","upvote_count":"5","comments":[{"poster":"Ciupaz","timestamp":"1721141820.0","content":"Override-status where?","upvote_count":"1","comment_id":"1124368"}],"timestamp":"1683857700.0","comment_id":"716461","poster":"at_sayali"},{"comment_id":"700400","upvote_count":"4","content":"Got it in exam 20/10/2022","poster":"elequiel","timestamp":"1682035620.0"}],"question_text":"DRAG DROP -\nYou are developing a REST web service. Customers will access the service by using an Azure API Management instance.\nThe web service does not correctly handle conflicts. Instead of returning an HTTP status code of 409, the service returns a status code of 500. The body of the status message contains only the word conflict.\nYou need to ensure that conflicts produce the correct response.\nHow should you complete the policy? To answer, drag the appropriate code segments to the correct locations. Each code segment may be used once, more than once, or not at all. You may need to drag the split bar between panes or scroll to view content.\nNOTE: Each correct selection is worth one point.\nSelect and Place:\n//IMG//","timestamp":"2021-04-03 11:46:00","isMC":false,"answers_community":[],"unix_timestamp":1617443160}],"exam":{"numberOfQuestions":452,"lastUpdated":"12 Apr 2025","id":48,"isBeta":false,"isImplemented":true,"isMCOnly":false,"provider":"Microsoft","name":"AZ-204"},"currentPage":79},"__N_SSP":true}