{"pageProps":{"questions":[{"id":"c5o77h5Go6nohWFC0AmA","answer_description":"","discussion":[{"timestamp":"1573053240.0","poster":"Oz","comments":[{"poster":"user_name","upvote_count":"2","timestamp":"1599596580.0","comment_id":"176104","content":"Great link and post!"},{"content":"correct answer.","upvote_count":"1","poster":"azurecert2021","comment_id":"288287","timestamp":"1613047200.0"}],"comment_id":"19549","upvote_count":"105","content":"Box1: see p.3 below. It refers to Azure AD, so the answer is Azure AD\nBox2: See p.5 and it talks about configuring policy in API Management, so the answer is API Management.\n\nHere is how you protect API with Azure AD\n1) Register an application (backend-app) in Azure AD to represent the API.\n2) Register another application (client-app) in Azure AD to represent a client application that needs to call the API.\n3) In Azure AD, grant permissions to allow the client-app to call the backend-app.\n4) Configure the Developer Console to call the API using OAuth 2.0 user authorization.\n5) Add the validate-jwt policy to validate the OAuth token for every incoming request.\nref: https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad"},{"comment_id":"36723","content":"1) Azure AD\n2) APIM\n\nRef: \nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad\n\nhttps://docs.microsoft.com/en-us/azure/api-management/set-edit-policies","timestamp":"1578488940.0","upvote_count":"32","poster":"Ekramy_Elnaggar"},{"comment_id":"596550","poster":"Teringzooi","timestamp":"1651645560.0","comments":[{"poster":"kilowd","upvote_count":"1","content":"This one u got it wrong I bet â€¦AD & APIM","comment_id":"634804","timestamp":"1658438100.0"}],"content":"Today in AZ-305 exam.\nI chose APIM and APIM\nPAssed.","upvote_count":"1"},{"content":"It is about  block unauthorized requests, not Block whole apps... given answers are correct.","poster":"nabylion","comment_id":"341773","upvote_count":"1","timestamp":"1619217840.0"},{"poster":"glam","upvote_count":"2","content":"Box1 :- Azure AD\nBox 2 :- Api Management","timestamp":"1611918660.0","comment_id":"279254"},{"poster":"AtulS","content":"Premium P2\nPrivileged Identity Management for the Azure resources\n\"Don't get confused with Just in time Access. Users will be marked eligible to get required access, Only when they need it. This will be done using Access Review, which is a PIM feature and available in P2.","upvote_count":"1","timestamp":"1611244440.0","comment_id":"273004"},{"comment_id":"260724","timestamp":"1609903860.0","upvote_count":"2","content":"Correct ans\n1. Use CORS policy in API Management\n2. Use JWT Policy for in-bound requests in API Management","poster":"openidshanks1"},{"poster":"sanketshah","content":"1) Azure AD\n2) Azure API Management\ncorrect answer","timestamp":"1609465620.0","comment_id":"256591","upvote_count":"1"},{"poster":"multcloud","content":"I have implemented it myself this requirement for several applications using Graph API. Now for Graph API Azure API mgmt is not required, as it is managed by Microsoft, only Azure AD is enough. In Azure AD you need to configure or define apps as a Service Application and select what access it has, and how it accesses the graph api (Oauth). Now because, here I am not dealing with Graph API but I have my own apps to be called by various apps. Hence, within Azure API management, I need to configure them to be called on OAUTH. Hence, answer is Azure AD and Azure API Mgmt. Below link explains the step, above is just an explanation why it needs to be done in desired fashion. \nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad","upvote_count":"2","timestamp":"1600695600.0","comment_id":"183709"},{"poster":"Rooh","timestamp":"1599540780.0","upvote_count":"3","content":"1- AD\n2- Azure API","comment_id":"175630"},{"comment_id":"170869","upvote_count":"2","content":"1- AD\n2- Azure API\nThere are two sources I found: as already mentioned \"https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad\" - and also:\n\"Protecting an API with Azure API Management and OAuth 2.0\" found in \"Pfeiffer, Mike. Exam Ref AZ-300 Microsoft Azure Architect Technologies (p. 174). Pearson Education.\"","timestamp":"1598885520.0","poster":"tmurfet"},{"comment_id":"156707","timestamp":"1597260780.0","upvote_count":"4","content":"oz's response is accurate. answer is Azure AD and API management","poster":"cj93s3"},{"timestamp":"1595353080.0","poster":"[Removed]","content":"1. Azure AD \nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad#grant-permissions-in-azure-ad\n\n2. API Management \nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad#configure-a-jwt-validation-policy-to-pre-authorize-requests","upvote_count":"5","comment_id":"140477"},{"timestamp":"1594037100.0","content":"1- AD\n2- Azure API","poster":"aelhalawany","upvote_count":"4","comment_id":"127777"},{"timestamp":"1593256440.0","upvote_count":"4","comment_id":"121177","content":"This should be AAD & APIM","poster":"Prash85"},{"comment_id":"119297","content":"Answer is Box1 :- Azure AD & Box 2 :- Api Management","upvote_count":"4","timestamp":"1593077520.0","poster":"DeveshSolanki"},{"comment_id":"103231","content":"ans: 1) Azure AD\n 2) APIM\n\nHere is a quick overview of the steps:\nRegister an application (backend-app) in Azure AD to represent the API.\nRegister another application (client-app) in Azure AD to represent a client application that needs to call the API.\nIn Azure AD, grant permissions to allow the client-app to call the backend-app.\nConfigure the Developer Console to call the API using OAuth 2.0 user authorization.\nAdd the validate-jwt policy to validate the OAuth token for every incoming request.","timestamp":"1591370160.0","poster":"anagar","upvote_count":"3"},{"content":"1. Azure AD\n2. APIM","comment_id":"99801","upvote_count":"3","timestamp":"1590995880.0","poster":"corona2020"},{"content":"Answer: Box1: AD (AZure portal: Manage users). Box2: API Management (Api Management consists API gateway which verifies API keys, JWT tokens, certs and other credentials) Without assigning APP users in AD you cannot assign users in API managements. First you need assign users to APP. To use API developer needs to subscribe to APP which users should be assigned through the AD, And then can call the API which that process goes through the API Gateway.\nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-key-concepts","poster":"P0d","timestamp":"1590916500.0","upvote_count":"1","comment_id":"99183"},{"poster":"milind8451","comment_id":"95627","upvote_count":"4","timestamp":"1590435600.0","content":"1) Azure AD\n2) Apim"},{"content":"Box1 :- Azure AD \nBox 2 :- Api Management","timestamp":"1587718200.0","poster":"Rajuuu","comment_id":"79025","upvote_count":"14"},{"poster":"silverdeath","comments":[{"comments":[{"comment_id":"84819","upvote_count":"2","timestamp":"1588822020.0","content":"Azure AD is not the answer for part 2. Azure AD cannot validate the token for your application. Azure AD issues the token which your application must validate, or in this instance APIM can do this using the JWT validation policy, which is the correct answer here.","poster":"pieixoto"}],"poster":"nieuw","upvote_count":"1","comment_id":"81488","content":"Correct. Per requirement, we need to use AD-generated claims and minimal effort. So Azure AD for both. First we register the app, expose the API, and define token, all in AD.","timestamp":"1588211160.0"}],"upvote_count":"3","content":"Access tokens enable clients (web app in our case) to securely call APIs protected by Azure. Microsoft identity platform access tokens are JWTs, Base64 encoded JSON objects signed by Azure. Clients should treat access tokens as opaque strings, as the contents of the token are intended for the resource only. For validation and debugging purposes, developers can decode JWTs using a site like jwt.ms. Your client can get an access token from either the v1.0 endpoint or the v2.0 endpoint using a variety of protocols.\n\nWhen your client requests an access token, Azure AD also returns some metadata about the access token for your app's consumption. This information includes the expiry time of the access token and the scopes for which it's valid. This data allows your app to do intelligent caching of access tokens without having to parse the access token itself.\nSo the second answer is Azure AD\nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens","timestamp":"1586336940.0","comment_id":"72346"},{"upvote_count":"1","timestamp":"1586336580.0","content":"1- API Management \n2- Azure AD","poster":"silverdeath","comment_id":"72344"},{"content":"1) Azure AD\n2) APIM","upvote_count":"6","poster":"mlourh","timestamp":"1586052420.0","comment_id":"71289"},{"timestamp":"1581852720.0","content":"1) AD\n2) API Management","upvote_count":"8","poster":"mykolaantoniv","comment_id":"51196"},{"upvote_count":"4","content":"I believe first answer is Azure AD\n\nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-configure-app-access-web-apis","poster":"Ahmed911","comment_id":"46170","timestamp":"1580740440.0"},{"upvote_count":"2","content":"should be both apim\nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-protect-backend-with-aad","comment_id":"34941","poster":"wlfjck","timestamp":"1578057600.0"},{"comment_id":"26401","poster":"pradjhun","content":"the second one should be API Management \nhttps://docs.microsoft.com/en-us/azure/active-directory-b2c/secure-api-management?tabs=applications","upvote_count":"5","timestamp":"1575415380.0"},{"content":"The 1st one should be Azure AD as per below document \nhttps://docs.microsoft.com/en-us/azure/active-directory-b2c/active-directory-b2c-tutorials-web-api?tabs=applications","upvote_count":"5","timestamp":"1575415140.0","comment_id":"26400","poster":"pradjhun"},{"upvote_count":"1","timestamp":"1573118220.0","comment_id":"19678","content":"Azure API Management is correct in both","poster":"kondapaturi"},{"poster":"powertechnet","comment_id":"17881","upvote_count":"1","timestamp":"1572231540.0","comments":[{"upvote_count":"1","comments":[{"content":"1) Azure AD\n2) Azure API Management","comment_id":"181228","upvote_count":"14","timestamp":"1600380420.0","poster":"tartar"}],"content":"It appears \"Azure API Management\" based on the premise of the scenario: \nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-howto-add-products","comment_id":"18272","poster":"AzureGC","timestamp":"1572380100.0"}],"content":"to me, the answer is Web API\nhttps://docs.microsoft.com/en-us/azure/active-directory-b2c/active-directory-b2c-tutorials-web-api"}],"exam_id":51,"question_images":["https://www.examtopics.com/assets/media/exam-media/02744/0004600001.png"],"answers_community":[],"answer_ET":"","topic":"2","timestamp":"2019-10-28 03:59:00","unix_timestamp":1572231540,"question_id":91,"answer":"","url":"https://www.examtopics.com/discussions/microsoft/view/7356-exam-az-301-topic-2-question-10-discussion/","isMC":false,"question_text":"HOTSPOT -\nYour company has 20 web APIs that were developed in-house.\nThe company is developing 10 web apps that will use the web APIs. The web apps and the APIs are registered in the company's Azure Active Directory (Azure\nAD) tenant. The web APIs are published by using Azure API Management.\nYou need to recommend a solution to block unauthorized requests originating from the web apps from reaching the web APIs. The solution must meet the following requirements:\nâœ‘ Use Azure AD-generated claims.\nâœ‘ Minimize configuration and management effort.\nWhat should you include in the recommendation? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","answer_images":["https://www.examtopics.com/assets/media/exam-media/02744/0004600002.png"]},{"id":"Rh7O9m87HEiBTd8oMcAi","question_images":["https://www.examtopics.com/assets/media/exam-media/02744/0004700004.png"],"discussion":[{"comments":[{"poster":"marco1","upvote_count":"10","content":"JIM is the feature of PIM.\nI would answer: P2 and JIM","timestamp":"1578498960.0","comment_id":"36770"},{"comment_id":"114562","upvote_count":"4","content":"Tell me how you would start a VM with JIT access ?","timestamp":"1592638080.0","comments":[{"poster":"sripradeep324","comments":[{"content":"@PatMan meant if a VM is stopped as in shutdown, how would you start it with JIT access. PIM is the correct answer","timestamp":"1596060840.0","poster":"aMaineCloud","comment_id":"146967","upvote_count":"2"}],"content":"You will grant the contributor access to developer only for a certain period using JIT","timestamp":"1594126440.0","comment_id":"128972","upvote_count":"1"}],"poster":"PatMan"}],"poster":"examamos","comment_id":"26396","upvote_count":"33","content":"We need JIT, feature of PIM, available in P2 only, therefore the answers are correct. Conditional access doesn't \"provide permissions only when needed\".\nhttps://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-configure","timestamp":"1575412260.0"},{"timestamp":"1578493980.0","upvote_count":"23","content":"after thinking again , the provided answer is correct , we don't need access ( RDP ) to the VM , we just need access to stop/restart VMs .","comment_id":"36747","poster":"Ekramy_Elnaggar"},{"content":"Given answers are correct.\nDo not confuse jit vm is network feature under security center, here we need create eligible users under pim, access will be granted for few hours after user request is validated by an administrator...","upvote_count":"2","timestamp":"1618620300.0","poster":"nabylion","comment_id":"337280"},{"upvote_count":"1","timestamp":"1615270560.0","content":"It's the correct answer https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-configure","comment_id":"306163","poster":"zosoabi"},{"upvote_count":"1","poster":"lodalasan","content":"https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/azure-ad-pim-approval-workflow?tabs=new","comment_id":"295781","timestamp":"1613913420.0"},{"poster":"glam","comment_id":"279265","content":"1. Premium P2\n2. Privileged Identity Management for the Azure resources","upvote_count":"1","timestamp":"1611919500.0"},{"poster":"openidshanks1","timestamp":"1609903980.0","upvote_count":"1","content":"Use Access Reviews which is available only in P2","comment_id":"260729"},{"timestamp":"1609466040.0","poster":"sanketshah","comment_id":"256593","content":"P2\nJIT\n is correct answer","upvote_count":"3"},{"content":"The answer is correct:\nhttps://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-configure\n\"just-in-time (JIT) access - A model in which users receive temporary permissions to perform privileged tasks, which prevents malicious or unauthorized users from gaining access after the permissions have expired. Access is granted only when users need it. Using this feature requires an Azure AD Premium P2 license.\"","comment_id":"224006","timestamp":"1605909720.0","poster":"kcinofni","upvote_count":"1"},{"comment_id":"188216","poster":"a_Ri","upvote_count":"2","timestamp":"1601194260.0","content":"Just in time should be under Security Center\n\nhttps://docs.microsoft.com/en-us/azure/security-center/just-in-time-explained"},{"poster":"multcloud","upvote_count":"1","content":"answer is correct. solution should be combination of Dynamics Groups and PIM, PIM only available in Azure AD p2. See link below:\nhttps://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-configure#:~:text=Privileged%20Identity%20Management%20(PIM)%20is,Microsoft%20365%20or%20Microsoft%20Intune.","comment_id":"183715","timestamp":"1600696140.0"},{"timestamp":"1599471960.0","comment_id":"175089","upvote_count":"1","poster":"Afz","content":"It has to be P2 and PIM. Since PIM is part of P2. Note the JIT Access is just a time bound NSG rule for VM access but does not provide the right to start/stop VMs."},{"upvote_count":"1","content":"P2 and PIM","comment_id":"172039","timestamp":"1599049320.0","poster":"piggy_2020"},{"content":"The provided answer is correct","upvote_count":"1","comment_id":"171164","timestamp":"1598933520.0","poster":"Rooh"},{"upvote_count":"1","timestamp":"1598696700.0","comment_id":"169139","content":"P2 and PIM would be the best solution since there is a high turn over of users in the dev group. Intial cost might be higher but operation cost of changing user roles is much lower in this solution. Looking at overall cost this is the best answer","poster":"GvWaesberghe"},{"timestamp":"1597680240.0","upvote_count":"1","content":"answer: P2 & JIT","comment_id":"160165","poster":"dumbu"},{"upvote_count":"2","poster":"cj93s3","comment_id":"156710","timestamp":"1597261080.0","content":"box 1 - P2\nbox 2 - PIM"},{"upvote_count":"3","comment_id":"139621","content":"Given Answer is correct","timestamp":"1595255220.0","poster":"gboyega"},{"comment_id":"124886","content":"1) P2\n2) Just in Time VM","poster":"Aaru","comments":[{"comments":[{"poster":"A_z_u_r_e","upvote_count":"1","comment_id":"133920","content":"https://docs.microsoft.com/en-us/azure/security-center/security-center-just-in-time?tabs=jit-config-asc%2Cjit-request-asc","comments":[{"timestamp":"1597360980.0","upvote_count":"1","comment_id":"157658","content":"But if you can access managment ports, you can stop/start/restart VM, no?","poster":"KCjoe"}],"timestamp":"1594642500.0"}],"upvote_count":"4","content":"Not Just in Time VM. JIT VM access only opens up management ports (eg. 3389) to an Azure VM, but it does nothing to help you to stop/start/restart VMs. \n\nWhat we need is temporary RBAC permissions using Azure AD PIM","comment_id":"133919","timestamp":"1594642440.0","poster":"A_z_u_r_e"}],"upvote_count":"3","timestamp":"1593686280.0"},{"comments":[{"comment_id":"144664","content":"Just in Time VM Access opens port. Cant be used to turn VMs on off","poster":"sourabh7257","upvote_count":"1","timestamp":"1595833800.0"}],"upvote_count":"4","content":"1. P2 as JIT is only available in PIM which requires P2\n2. JIT as the security feature in PIM","poster":"am20","comment_id":"121406","timestamp":"1593282600.0"},{"timestamp":"1593077700.0","content":"Answer is Premium P2 & PIM","comment_id":"119300","poster":"DeveshSolanki","upvote_count":"1"},{"upvote_count":"2","content":"Answer is Correct:\nConditional access is not solution in this situation. Only JIT or PIM. JIT has less privilege then PIM. Both of JIT and PIM need P2 license. And it's good to use P2 license and PIM.","poster":"P0d","comment_id":"98842","timestamp":"1590844200.0"},{"upvote_count":"1","timestamp":"1590514560.0","content":"looms to me both answers are correct. Second is not JIT VM access because that is for opening a security port on a VM. Since given option says JIT VM, hence I will go with PIM for azure resources.","comment_id":"96295","poster":"vrana"},{"comment_id":"95628","poster":"milind8451","timestamp":"1590435780.0","upvote_count":"4","content":"1) Premium P2\n2) PIM"},{"timestamp":"1589746800.0","comment_id":"90841","poster":"AmineHZ","content":"for me the two answers are correct","upvote_count":"3"},{"poster":"JP167","timestamp":"1589440500.0","upvote_count":"1","comment_id":"88803","content":"JIT is more about access to VMs and not about accessing console which is necessary if you want to start a VM. PIM would be the only option that'd work here and PIM requires P2."},{"comment_id":"87099","upvote_count":"2","content":"P2 and PIM","timestamp":"1589198340.0","poster":"pandeya442"},{"timestamp":"1588673520.0","comment_id":"84046","content":"Ans is correct:\nP2\nand \nPrivileged Identity Management for Azure Resources (With Privileged Identity Management, users can request for Just-in-time access to get the required temporary access)","poster":"Shiven","upvote_count":"2"},{"content":"PIM comes with P2 license and JIT is available in PIM via P2â€¦\nHence Premium p2 is the valid answer for 1.","timestamp":"1587719880.0","comment_id":"79033","poster":"Rajuuu","upvote_count":"1"},{"comment_id":"79030","content":"There is no documentation to prove that JIT access is used to Stop and Start the VMâ€™s ..Only port level access.","upvote_count":"2","timestamp":"1587719580.0","poster":"Rajuuu"},{"upvote_count":"1","timestamp":"1586268660.0","poster":"Daren","comment_id":"72134","content":"Given answers are correct to me. Dynamic grous needed, pim needed for \"onky when needed, and P2. Just in time vm access lets you access the vm, not start, stop, or any other management operations."},{"content":"Box1- Virtual Machine contributor --> AD Free\nBox2. Security Center standard tier provides JIT. --> Just In Time VM Access","upvote_count":"1","poster":"pinchocr","timestamp":"1586167680.0","comment_id":"71732","comments":[{"comment_id":"72341","content":"Sorry I was wrong.\nBox1- Premium P2\nBox2- PIM","timestamp":"1586335860.0","upvote_count":"3","poster":"pinchocr"}]},{"timestamp":"1580094240.0","upvote_count":"1","comment_id":"43120","comments":[{"comment_id":"43122","content":"Man I wish you could delete/edit your own posts Haha. Ignore my second comment above. As others have said JIT requires P2 licensing.","comments":[{"upvote_count":"2","poster":"MarkChow","content":"JIT uses Security Centre updated to Standard edition","comment_id":"51490","timestamp":"1581911280.0","comments":[{"comment_id":"189094","upvote_count":"1","timestamp":"1601301720.0","content":"There are two JITs\n1. JIT access in PIM\n2. Jit VM access included in Security Center (https://azure.microsoft.com/en-us/blog/just-in-time-vm-access-is-generally-available)","poster":"toja1234"}]}],"poster":"bbbb","timestamp":"1580094420.0","upvote_count":"2"},{"content":"JIT is for opening ports to VM for specific scenarios; it has nothing to do with ability to start/stop VMs.","upvote_count":"13","timestamp":"1584356580.0","comment_id":"64668","poster":"starnb"}],"content":"It's a tricky question as P2 and PIM is really the logical choice. However, if the goal is to reduce licensing costs over administration, then free users with JIT would work.","poster":"bbbb"},{"upvote_count":"6","comment_id":"36744","timestamp":"1578493140.0","content":"- The development team changes often >> so we need to create \"Dynamic Groups\" which updates the group membership based on attributes, and such dynamic groups can be created only in P1 or P2.\n\n- Minimize costs >> then P1 , as P2 is much expensive than P1\n\n- Provide access only when needed >> this can be achieved by \"Just in Time VM Access\"","comments":[{"comment_id":"144659","poster":"sourabh7257","timestamp":"1595833500.0","content":"Just in Time VM Access is feature of P2 license","upvote_count":"2"}],"poster":"Ekramy_Elnaggar"},{"upvote_count":"1","comments":[{"poster":"sourabh7257","upvote_count":"1","content":"JIT does not work in free edition.","timestamp":"1595833440.0","comment_id":"144658"},{"content":"surely not, because JIT is about access to the VMs, I.e. logging on to them?","comment_id":"144817","timestamp":"1595843760.0","poster":"ct84","upvote_count":"2"}],"comment_id":"26010","timestamp":"1575299280.0","content":"With free edition we can do RBAC. SO free edition and JIT","poster":"pradjhun"},{"comments":[{"upvote_count":"3","comment_id":"184423","content":"But with conditional acces you coulnÂ´t let them just access \"when requeired\".....","poster":"David_986969","timestamp":"1600780140.0"}],"comment_id":"17884","poster":"powertechnet","timestamp":"1572233400.0","content":"jit (just in time) needs standard policy that isn't in answers. Conditional access needs min. P1 lic and PIM needs P2. howerver, lowest cost will be conditional access with P1.","upvote_count":"9"},{"poster":"powertechnet","comment_id":"17883","timestamp":"1572233040.0","content":"the requirement is only least privileged with only required permission and LOW COST!! according to this online chart, base should do the work. it doesn't even say if needed UNLIMITED users\nhttps://www.genesis-technologies.com/forms/azureactivedirectoryfeatures.pdf","upvote_count":"3","comments":[{"comment_id":"181229","poster":"tartar","upvote_count":"5","timestamp":"1600380660.0","content":"Premium P2\nPrivileged Identity Management for the Azure resources"}]}],"url":"https://www.examtopics.com/discussions/microsoft/view/7357-exam-az-301-topic-2-question-11-discussion/","question_id":92,"exam_id":51,"answer":"","question_text":"HOTSPOT -\nYou are designing an access policy for the sales department at your company.\nOccasionally, the developers at the company must stop, start, and restart Azure virtual machines. The development team changes often.\nYou need to recommend a solution to provide the developers with the required access to the virtual machines. The solution must meet the following requirements:\nâœ‘ Provide permissions only when needed.\nâœ‘ Use the principle of least privilege.\nâœ‘ Minimize costs.\nWhat should you include in the recommendation? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","topic":"2","answer_ET":"","answers_community":[],"answer_images":["https://www.examtopics.com/assets/media/exam-media/02744/0004800001.png"],"unix_timestamp":1572233040,"answer_description":"","timestamp":"2019-10-28 04:24:00","isMC":false},{"id":"vnqRhwuh8Cx8WEJfKiTz","exam_id":51,"answer_description":"References:\nhttps://docs.microsoft.com/en-us/azure/active-directory/governance/access-reviews-overview","answer_images":[],"answer":"A","topic":"2","url":"https://www.examtopics.com/discussions/microsoft/view/14260-exam-az-301-topic-2-question-12-discussion/","unix_timestamp":1581852840,"isMC":true,"discussion":[{"content":"\"A\" is correct","upvote_count":"11","comment_id":"51198","timestamp":"1581852840.0","comments":[{"timestamp":"1600380840.0","comments":[{"upvote_count":"1","timestamp":"1643304960.0","content":"OK is A","comment_id":"533979","poster":"us3r"}],"content":"A is ok","upvote_count":"3","poster":"tartar","comment_id":"181230"}],"poster":"mykolaantoniv"},{"content":"A. Azure AD access reviews","upvote_count":"1","poster":"glam","timestamp":"1611919560.0","comment_id":"279268"},{"poster":"zic04","comment_id":"273592","upvote_count":"1","timestamp":"1611307440.0","content":"a correct"},{"content":"A is correct","timestamp":"1609466100.0","poster":"sanketshah","upvote_count":"1","comment_id":"256594"},{"comment_id":"163289","upvote_count":"1","timestamp":"1598062140.0","poster":"Kamal_SriLanka","content":"A correct"},{"content":"Yea, I just saw It can send a message! A is correct","poster":"passnow","upvote_count":"1","comment_id":"161786","timestamp":"1597868820.0"},{"timestamp":"1597868640.0","upvote_count":"1","content":"Access review i dont think can send email","poster":"passnow","comment_id":"161784"},{"comment_id":"139627","content":"Given Answer is Correct","poster":"gboyega","upvote_count":"3","timestamp":"1595255460.0"},{"poster":"DeveshSolanki","comment_id":"119303","upvote_count":"1","timestamp":"1593077760.0","content":"Answer is Azure AD access reviews"},{"content":"\"A\" correct ans.","upvote_count":"1","timestamp":"1590435900.0","comment_id":"95629","poster":"milind8451"},{"content":"A is the right answer","comment_id":"90842","poster":"AmineHZ","upvote_count":"1","timestamp":"1589746860.0"},{"comment_id":"79076","timestamp":"1587725040.0","content":"A is correct.","poster":"Rajuuu","upvote_count":"3"}],"question_id":93,"question_text":"Your network contains an on-premises Active Directory forest.\nYou discover that when users change jobs within your company, the membership of the user groups are not being updated. As a result, the users can access resources that are no longer relevant to their job.\nYou plan to integrate Active Directory and Azure Active Directory (Azure AD) by using Azure AD Connect.\nYou need to recommend a solution to ensure that group owners are emailed monthly about the group memberships they manage.\nWhat should you include in the recommendation?","choices":{"B":"Tenant Restrictions","D":"conditional access policies","C":"Azure AD Identity Protection","A":"Azure AD access reviews"},"answers_community":[],"timestamp":"2020-02-16 12:34:00","question_images":[],"answer_ET":"A"},{"id":"HWNOSyPW80Djh8dPkiW3","answer_description":"References:\nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v1-dotnet-webapi","discussion":[{"comment_id":"19551","upvote_count":"40","content":"The reference https://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api\nhas the picture with clear authentication path.\nWeb App requests the token and Azure AD generates the token.\nWeb App then makes a decision on user authorization, based on return token\nExplicit statement is that The web API cannot perform any authorization based on the user identity. All authorization decisions are made by the web application.\nSo correct answers are\nBox 1: Azure AD\nBox 2: Web App","timestamp":"1573053840.0","comments":[{"comment_id":"35272","upvote_count":"7","poster":"onlyfunmails","content":"in your link provided, please check below.\n\nAuthenticating in the web API\nThe web API has to authenticate the bearer token.","timestamp":"1578146580.0"},{"poster":"heftjustice","timestamp":"1583869200.0","upvote_count":"8","comment_id":"61924","content":"incorrect its AD and Web Api"},{"comment_id":"72342","content":"Box1: Azure AD\nBox2: AIP\nRelated the reference you mention, see \"The web API makes authorization decisions based on the user identity.\"","upvote_count":"2","poster":"pinchocr","timestamp":"1586336100.0","comments":[{"timestamp":"1586336100.0","comment_id":"72343","upvote_count":"2","content":"Sorry, typo:\nBox2:API","poster":"pinchocr"}]},{"content":"Its incorrect. \nGiven Answer is correct. \nAuthenticating in the web API \nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api#register-the-web-api-in-azure-ad","comment_id":"145266","poster":"ablab","upvote_count":"1","timestamp":"1595882340.0"},{"poster":"unknown4noone","content":"Authenticating:\nThe web API has to authenticate the bearer token.","comment_id":"145954","upvote_count":"1","timestamp":"1595956140.0"},{"comment_id":"69895","poster":"Daren","upvote_count":"17","timestamp":"1585672620.0","content":"The answer is indeed in the link you shared. But I think your interpretation is wrong. The doc says there are 2 approaches you can take: use user identyty (exactly what our requirement is) or use web app identity. Your copy/paste is from the second scenario, bit the one we need. For the spproach where we have to use user's identity the doc says \"the web api makes authorization decisions based on the user identity\". So that's why I think the correct answer is AAD + web api"}],"poster":"Oz"},{"comment_id":"46073","timestamp":"1580718840.0","poster":"bolbol","content":"The provided answer is correct. accorded to the scenario: it's delegated access:\n\nThere are two main approaches you can take:\n\nDelegated user identity. The web application authenticates with the user's identity.\nApplication identity. The web application authenticates with its client ID, using OAuth 2 client credential flow.\nDelegated user identity:\n\nThe bearer token sent to the web API contains the user identity.\nThe web API makes authorization decisions based on the user identity.\nRef Link:\nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api","upvote_count":"6"},{"upvote_count":"1","poster":"Preeto18","timestamp":"1647422280.0","content":"Answer is :\nAzure AD and Web API ....100% correct!!!\nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api","comment_id":"568950"},{"comment_id":"294115","timestamp":"1613729580.0","poster":"levo017","upvote_count":"1","content":"The authorization should be done by API, this is OAuth2 standard. Front-end initiated the login ( Auth + Authorize) process, but Front-end does NOT know the user's claims ( permission / capabilities ).\n\nSee following pdf:\nhttps://tools.ietf.org/pdf/rfc6749.pdf#page=24&zoom=100,-5,76"},{"comment_id":"279276","timestamp":"1611919920.0","poster":"glam","upvote_count":"2","content":"Question 1: Azure AD\nQuestion 2: A web app"},{"comment_id":"256595","content":"Azure AD\nWeb ApI\ncorrect answer","upvote_count":"3","timestamp":"1609466160.0","poster":"sanketshah"},{"comments":[{"upvote_count":"1","comments":[{"content":"correct","comment_id":"254271","timestamp":"1609179900.0","poster":"wgre","upvote_count":"1"}],"comment_id":"253995","poster":"shapgi","timestamp":"1609153200.0","content":"this the correct one"}],"content":"The given answer is correct:\nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api\nThe web app must authenticate by using the identities of individual users.\n\"Delegated user identity. The web application authenticates with the user's identity.\n- The bearer token sent to the web API contains the user identity.\n- The web API makes authorization decisions based on the user identity.\"","poster":"kcinofni","timestamp":"1605911160.0","comment_id":"224017","upvote_count":"2"},{"upvote_count":"1","content":"AAD\nWebApp - if you need to provide user level RBAC","comment_id":"210045","timestamp":"1604166180.0","poster":"AhmedAL"},{"poster":"multcloud","upvote_count":"1","timestamp":"1600696320.0","content":"webapp can make authorization decision. You do not need to push it to WebAPI","comment_id":"183719"},{"poster":"user_name","upvote_count":"1","comment_id":"176113","content":"Box 1: Azure AD\nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api\nFor client credentials, an application might get the token from the IDP or host its own token server. (But don't write a token server from scratch; use a well-tested framework like IdentityServer4.) If you authenticate with Azure AD, it's strongly recommended to get the access token from Azure AD, even with client credential flow.\n\nBox 2: Web App","timestamp":"1599597840.0"},{"upvote_count":"3","timestamp":"1597261380.0","poster":"cj93s3","content":"web app makes authz decisions. \nbox 1 - Azure AD\nbox 2 - Web App","comment_id":"156711"},{"poster":"Neetiniti","timestamp":"1595032920.0","upvote_count":"3","comment_id":"137535","content":"Answer-Box 1: Azure AD- Before calling the web API, the web application gets an access token from Azure AD. Box 2: Web API-The web API makes authorization decisions based on the user identity. https://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api#register-the-web-api-in-azure-ad"},{"poster":"Prash85","upvote_count":"1","content":"given answers are correct","timestamp":"1593256560.0","comment_id":"121179"},{"timestamp":"1590996360.0","content":"I believe the answers are correct.\n\n Fundamentally if webapp needs to prove to webapi that it has require authorization, then webapi need to authenticate that webapp is right, if webapp itselft says I have credentials and have authorized my self it would be so funny.","comment_id":"99804","poster":"corona2020","upvote_count":"1"},{"poster":"P0d","upvote_count":"1","content":"Oz mentioned correctly: The give link says: Application identity:\nThe web API does not get information about the user.\nThe web API cannot perform any authorization based on the user identity. \nAll authorization decisions are made by the web application.\nSo correct answers is: AD & WebApp","timestamp":"1590916920.0","comment_id":"99188"},{"poster":"Rajuuu","upvote_count":"2","comment_id":"79114","content":"Answer is correct ..Access token is generated by Active Directoy but Authorization is always provided by Web aPi or any Web application .","timestamp":"1587730620.0"},{"poster":"mykolaantoniv","content":"1) Azure AD\n2) Web App","upvote_count":"1","comment_id":"51199","comments":[{"timestamp":"1581853020.0","content":"AD and API (not web app)","comment_id":"51200","poster":"mykolaantoniv","upvote_count":"18"}],"timestamp":"1581852960.0"},{"comment_id":"50579","upvote_count":"2","timestamp":"1581701820.0","content":"Believe answer is correct see link\nhttps://docs.microsoft.com/en-gb/azure/active-directory/azuread-dev/v1-protocols-oauth-code","poster":"CP007"},{"poster":"JohnAvlakiotis","upvote_count":"1","timestamp":"1581338700.0","comment_id":"48705","content":"Since the users of the surveys are AAD users then IdP used is Azure AD. This means the scenario is \"delegated user identity\" in which case as the docs read: \"The web API makes authorization decisions based on the user identity.\" \nhttps://docs.microsoft.com/lb-lu/azure/architecture/multitenant-identity/web-api"},{"timestamp":"1575502680.0","poster":"pradjhun","content":"The answer is correct... In any Oauth system token is generated by the authentication system which is in this case is Azure AD and token validation by the final backend system which in this case is web API... so answer is correct","comment_id":"26729","upvote_count":"4"},{"poster":"dciti","upvote_count":"2","content":"Not sure this is right. The link states \"The web API cannot perform any authorization based on the user identity. All authorization decisions are made by the web application.\"","comment_id":"16352","timestamp":"1571630100.0","comments":[{"comments":[{"poster":"tartar","upvote_count":"5","timestamp":"1600600440.0","comment_id":"182905","content":"Question 1: Azure AD\nQuestion 2: A web app"}],"upvote_count":"1","timestamp":"1600381200.0","poster":"tartar","comment_id":"181232","content":"Azure AD\nWeb App"}]}],"exam_id":51,"question_images":["https://www.examtopics.com/assets/media/exam-media/02744/0005000001.png"],"answer_ET":"","answers_community":[],"topic":"2","unix_timestamp":1571630100,"timestamp":"2019-10-21 05:55:00","question_id":94,"answer":"","isMC":false,"url":"https://www.examtopics.com/discussions/microsoft/view/6869-exam-az-301-topic-2-question-13-discussion/","question_text":"HOTSPOT -\nYou are designing a software as a service (SaaS) application that will enable Azure Active Directory (Azure AD) users to create and publish surveys. The SaaS application will have a front-end web app and a back-end web API. The web app will rely on the web API to handle updates to customer surveys.\nYou need to design an authorization flow for the SaaS application. The solution must meet the following requirements:\nâœ‘ To access the back-end web API, the web app must authenticate by using OAuth 2 bearer tokens.\nâœ‘ The web app must authenticate by using the identities of individual users.\nWhat should you include in the solution? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","answer_images":["https://www.examtopics.com/assets/media/exam-media/02744/0005000002.png"]},{"id":"n6i9f6XIhjgnyDnVA287","topic":"2","url":"https://www.examtopics.com/discussions/microsoft/view/9782-exam-az-301-topic-2-question-14-discussion/","timestamp":"2019-12-05 14:24:00","answer":"","answers_community":[],"answer_description":"","question_id":95,"answer_ET":"","exam_id":51,"discussion":[{"comments":[{"poster":"onlyfunmails","upvote_count":"6","timestamp":"1578040440.0","comments":[{"upvote_count":"32","content":"System-assigned managed identity: Workloads that are contained within a single Azure resource\nWorkloads for which you need independent identities.\nFor example, an application that runs on a single virtual machine\n\nUser-assigned managed identity: Workloads that run on multiple resources and which can share a single identity.\nWorkloads that need pre-authorization to a secure resource as part of a provisioning flow.\nWorkloads where resources are recycled frequently, but permissions should stay consistent.\nFor example, a workload where multiple virtual machines need to access the same resource\n\nItÂ´s clear, Box1: User-assigned managed identity","comments":[{"comment_id":"181235","timestamp":"1600381680.0","poster":"tartar","content":"- Create a user Assigned Managed Identities for Azure resources\n- An Azure Instance Metadata Service Identity","upvote_count":"6"}],"poster":"pinchocr","comment_id":"72345","timestamp":"1586336760.0"}],"content":"As minimize admin efforts, should be System-assigned managed identity.\n\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview\nThe lifecycle of a system-assigned identity is directly tied to the Azure service instance that it's enabled on. If the instance is deleted, Azure automatically cleans up the credentials and the identity in Azure AD.","comment_id":"34844"},{"comment_id":"50989","content":"questions says only when running on the 10 machines. if used user assigned then it could be used on other machines hence answer should be to allow access for the 10 system assigned virtual machine identities","poster":"mpknz","timestamp":"1581793560.0","upvote_count":"3"},{"upvote_count":"5","comment_id":"74547","poster":"dtvAzh","content":"kewl is correct, please refer the below url in comparison table below the diagram, 3rd Row. \nAnd also refer the section How a user-assigned managed identity works with an Azure VM, point 5.\n, https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview.","timestamp":"1586882280.0"},{"poster":"SaurabhAzure","content":"I agree It should be \"user assigned managed identity\"","upvote_count":"5","comment_id":"52532","timestamp":"1582101840.0"}],"timestamp":"1575552240.0","content":"Box 1 should be user assigned managed identity as the requirement states 'ensure that the applications can authenticate by using the same Azure Active Directory (Azure AD) identity'. If we use a system assigned managed identity, it would create different ad identities for each VM","upvote_count":"56","poster":"kewl","comment_id":"26887"},{"comment_id":"53257","content":"Answer correct.\n1. System assigned\n2. Metadata Service ID","upvote_count":"14","poster":"Moon","timestamp":"1582255500.0"},{"timestamp":"1611920040.0","poster":"glam","content":"1 - Create a user Assigned Managed Identities for Azure resources\n2 - An Azure Instance Metadata Service Identity","comment_id":"279277","upvote_count":"3"},{"timestamp":"1609466280.0","comments":[{"poster":"sejalo","upvote_count":"1","timestamp":"1613316480.0","comment_id":"290363","content":"wrong,\nBox 1 : 2 \nBox 2: 3"}],"poster":"sanketshah","comment_id":"256596","content":"Box 1 : 1 \nBox 2: 3\ncorrect answer","upvote_count":"1"},{"content":"- System Assigned Managed Identity (As System Assigned allows for it to tagged to instance automatically, currently instance in question is just VM, hence it will minimize administration effort and follow lifecycle management process of VM, i.e. when VMs are deleted managed identity also get deleted)\n- Azure Instance Metadata Service Identity","timestamp":"1600700160.0","poster":"multcloud","comments":[{"upvote_count":"1","timestamp":"1608629760.0","comment_id":"249988","content":"how you going to make sure that the authentication request is not coming from one of the 10 servers? each server gets a unique id when you use SAMI","poster":"nesith"}],"upvote_count":"1","comment_id":"183766"},{"upvote_count":"4","comment_id":"182557","poster":"Anju17","content":"System-Assigned Managed Identity vs. User-Assigned Identity\nThey are the same in the way they work. The only difference is that if you enable System-Assigned Managed Identity for an Azure resource, the Managed Identity gets automatically created and assigned to that Azure resource, and will also get deleted when you delete the resource.\n\nUser-Assigned Managed Identity is created manually and likewise manually assigned to an Azure resource. The lifecycle of a User-Assigned Managed Identity is NOT tied to the lifecycle of the Azure resource to which it is assigned. That means it the Azure resource gets deleted, the User-Assigned Managed Identity will not be deleted from Azure.","timestamp":"1600561020.0"},{"upvote_count":"1","poster":"Hisagenda","comment_id":"177651","content":"A system assigned managed identity can be enabled on the VM or one or more user assigned managed identities can be assigned to the VM. Tokens for managed identities can then be requested from Instance Metadata Service. These tokens can be used to authenticate with other Azure services such as Azure Key Vault.\n\nSystem assigned\nMetadata service","timestamp":"1599825900.0"},{"timestamp":"1599376200.0","upvote_count":"1","comment_id":"174364","poster":"Duyons","content":"Box1: Create a user-asssigned Managed Identities for Azure Resources (https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)\nBox 2: An Azure Instance Metadata Service Identity (https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview)"},{"upvote_count":"2","comment_id":"170887","poster":"tmurfet","content":"1. \"user assigned managed identity\" -- has to be the same id for all VMs so cannot be system assigned.\n2. Outh2 is authorization \"not\" authentication -- authenticate using Azure Instance Metadata Service (IMDS) which is accessible only from within the VM. Ref. https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview#how-does-the-managed-identities-for-azure-resources-work","timestamp":"1598887860.0"},{"content":"It is in my exam, there was only 3 options for box 3, and last one is Metadata Service ID Oauth Ednpoint, which is the correct answer.","poster":"KCjoe","upvote_count":"3","comment_id":"160398","timestamp":"1597707720.0"},{"poster":"duytran216","upvote_count":"1","content":"Answer is: User and IDMS.\nTo minimize admin operations, user assigned act like a group of VMs. So we can easily rule them.","timestamp":"1597466520.0","comment_id":"158446"},{"upvote_count":"5","content":"1. User Assigned Managed Identities\n2. Azure Instance Metadata Service Identity\n\nQuote from: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/instance-metadata-service#managed-identity-via-metadata-service\n\nA system assigned managed identity can be enabled on the VM or one or more user assigned managed identities can be assigned to the VM. Tokens for managed identities can then be requested from Instance Metadata Service. These tokens can be used to authenticate with other Azure services such as Azure Key Vault.","poster":"[Removed]","comment_id":"140567","timestamp":"1595360460.0"},{"content":"Given Answer is Correct","comments":[{"timestamp":"1596869100.0","content":"NO, its wrong. Check the contrast between User Assigned and System Assigned Managed Identities clearly at https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview","poster":"Faizy","comment_id":"152899","upvote_count":"1"}],"upvote_count":"3","poster":"gboyega","timestamp":"1595344560.0","comment_id":"140382"},{"comment_id":"137548","upvote_count":"2","timestamp":"1595035200.0","poster":"Neetiniti","content":"Box1: User-assigned managed identity- Can be shared-The same user-assigned managed identity can be associated with more than one Azure resource. Workloads that run on multiple resources and which can share a single identity. Box-2 Azure Instance Metadata Service Identity- Your code that's running on the VM can request a token from the Azure Instance Metadata Service identity endpoint, accessible only from within the VM. https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview"},{"content":"box-1 user assigned managed identity\nbox-2 Azure Instance Metadata Service (IMDS) identity endpoint\n \nuser assigned managed identity can be used with multiple VMs.\nsee https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/msi-tutorial-linux-vm-access-arm","upvote_count":"1","poster":"learnazure63","timestamp":"1593341460.0","comment_id":"121807"},{"poster":"Prash85","upvote_count":"1","comment_id":"121181","content":"Applications can authenticate and minimize admin effort... using the same Azure Active Directory (Azure AD) identity not necessarily mean users.. This should be System-assigned managed identity.","timestamp":"1593256860.0"},{"timestamp":"1591030620.0","comment_id":"100187","upvote_count":"1","content":"Key word here is \"by using the same Azure Active Directory (Azure AD) identity. \". Hence you will have to create a user identity so first answer should be user identity.","poster":"vrana"},{"poster":"corona2020","content":"I will go with Given answers,\n\nFor Box 1 I choose system assigned over user assigned because we need to \" Minimize administrative effort.\" which is the keyword here.","timestamp":"1590996840.0","upvote_count":"3","comment_id":"99806"},{"poster":"rwrogers11","content":"To Provision the Azure AD Identity:\nThere's nothing there that says the VM's are running in a scale set, without that, the only way to have the Same Managed Identity (Requirement) is User Assigned. \n\nThe second question is: To AUTHENTICATE request token:\nYou can request a token using Metadata Service Identity, but can it Authenticate the token.\nI would say OAuth2 Endpoint.\n\nSo my answers would be:\nCreate a User-Assigned Managed Identity\nOAuth2 Endpoint","comment_id":"97644","timestamp":"1590678360.0","upvote_count":"2"},{"poster":"vrana","content":"first answer should be user assigned since it is created once, give proper permission and can be reused on all the vms. If no of VMs were 1 then I would have picked system generated. But since they are 10, it looks less work to use user identity.","upvote_count":"2","comment_id":"96317","timestamp":"1590515820.0"},{"poster":"yemma","comments":[{"content":"agree:Your code that's running on the VM can request a token from the Azure Instance Metadata service endpoint, accessible only from within the VM: http://169.254.169.254/metadata/identity/oauth2/token","upvote_count":"1","timestamp":"1595163000.0","poster":"dudus999","comment_id":"138678"}],"content":"1. User-assigned managed identity\n2. Azure instance metadata service identity\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/tutorial-windows-vm-ua-arm","upvote_count":"3","timestamp":"1589635440.0","comment_id":"89957"},{"comment_id":"87528","poster":"ruval","content":"https://docs.microsoft.com/nl-nl/azure/active-directory/managed-identities-azure-resources/overview\n\nYour code that's running on the VM can request a token from the Azure Instance Metadata service endpoint, accessible only from within the VM: http://169.254.169.254/metadata/identity/oauth2/token\n\nThe resource parameter specifies the service to which the token is sent. To authenticate to Azure Resource Manager, use resource=https://management.azure.com/.\nAPI version parameter specifies the IMDS version, use api-version=2018-02-01 or greater.","upvote_count":"1","timestamp":"1589275320.0"},{"timestamp":"1588674300.0","content":"Given Ans is correct","upvote_count":"2","comment_id":"84056","poster":"Shiven"},{"upvote_count":"1","content":"Box 2 - Azure Instance Metadata Service (IMDS) is incorrect. The Metadata service does not generate Tokens .\nBox 1 - I think should be system assigned and not user assigned ..","comments":[{"upvote_count":"1","timestamp":"1590592740.0","content":"The IMDS does indeed return tokens (AAD generates but IMDS retrieves these on your apps behalf) see \nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview#how-does-the-managed-identities-for-azure-resources-work\n\n\"Your code that's running on the VM can request a token from the Azure Instance Metadata service endpoint, accessible only from within the VM: http://169.254.169.254/metadata/identity/oauth2/token\"\n\nBox 1 should be user assigned for the reasons other commenters have covered: You need to use only 1 identity across 10 azure resources, the VMs.","comment_id":"96879","poster":"pieixoto"}],"comment_id":"79121","timestamp":"1587731820.0","poster":"Rajuuu"},{"timestamp":"1586952840.0","comment_id":"74846","comments":[{"content":"In addition: \"User-assigned managed identity\" can be assign to \"The same user-assigned managed identity can be associated with more than one Azure resource.\"\nWhich isn't the case for \"System-assigned managed identity\"","timestamp":"1586953320.0","comment_id":"74850","poster":"jack25","upvote_count":"3"}],"poster":"jack25","content":"The question says \"using the same Azure Active Directory (Azure AD) identity\" so Box one should be \"User-assigned managed identity\" because \"System-assigned managed identity\" are \"Created as part of an Azure resource (for example, an Azure virtual machine or Azure App Service)\" link: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview?WT.mc_id=thomasmaurer-blog-thmaure","upvote_count":"2"},{"comment_id":"74114","upvote_count":"1","timestamp":"1586787600.0","content":"OK. This is not authenticating a user, it is authenticating an application \"ensure that the applications can authenticate by using the same Azure Active Directory (Azure AD) identity\".\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview\n\nMy previous answer is incorrect","poster":"xofowi5140"},{"timestamp":"1586785860.0","content":"For me is \na) Register each application in Azure AD (https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-v2-aspnet-core-webapp)\nb) An Azure AD v2.0 endpoint (https://github.com/Azure-Samples/active-directory-aspnetcore-webapp-openidconnect-v2/)","upvote_count":"1","poster":"xofowi5140","comment_id":"74100"},{"timestamp":"1586785680.0","upvote_count":"5","poster":"Happiman","content":"Answer is User/OAuth2","comment_id":"74097"},{"comments":[{"poster":"pinchocr","timestamp":"1586337120.0","upvote_count":"3","comment_id":"72348","content":"1)User-assigned Managed Identity\n2)Auth2.0\nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow"}],"upvote_count":"7","comment_id":"69531","timestamp":"1585572480.0","poster":"jokl","content":"1) User-assigned Managed Identity\n2) Azure Instance Metadata Service (IMDS) endpoint\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token"},{"upvote_count":"6","timestamp":"1583771760.0","poster":"xfit","comments":[{"upvote_count":"3","timestamp":"1590592500.0","poster":"pieixoto","content":"\"Since there is nothing explicitly preventing the creation of a Scale Set in this example\" But there is. The question says 5 .NET apps in 10 VMs. It would really be a stretch to say you could do that in a single scale set. This combined with the requirement to use a single identity and not multiple means the correct answer for 1) can only be User-assigned Managed Identity.","comment_id":"96877"}],"content":"Tricky question, researching the differences of both MSIs (System and User) I feel the System MSI edges out the User MSI for one reason only, the condition to \"Minimize Administrative Effort\". \n\nBefore I get to that, it is true that a System identity cannot be associated to multiple VMs unless the VMs in question are part of a Scale Set which sadly this scenario does not specify. Here is the Microsoft link;\n\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-rest-vmss\n\nSince there is nothing explicitly preventing the creation of a Scale Set in this example and based on the article, a System MSI would require less administrative effort than a User MSI for these reasons;\n\n- Managed Identity Contributor role to create a user-assigned managed identity.\n- Managed Identity Operator role to assign and remove a user-assigned identity from and to a virtual machine scale set.","comment_id":"61177"},{"content":"System-assigned managed identity It can only be associated with a single Azure resource. So is it possible to use in 10 Vms ....","upvote_count":"1","timestamp":"1582638060.0","poster":"Mathew","comment_id":"55005"},{"timestamp":"1581864960.0","content":"1) system-assigned\n2) oauth","upvote_count":"3","poster":"mykolaantoniv","comments":[{"poster":"Andy001","timestamp":"1581970440.0","comment_id":"51821","content":"The question is that the applications can authenticate by using the SAME Azure AD identity. Thus, I agree with KEWL - Box 1 should be the \"User-assigned managed identity\". I would choose \"User-assigned managed identity\" and \"OAuth2\"","upvote_count":"4"}],"comment_id":"51273"}],"question_text":"HOTSPOT -\nYou have five .NET Core applications that run on 10 Azure virtual machines in the same subscription.\nYou need to recommend a solution to ensure that the applications can authenticate by using the same Azure Active Directory (Azure AD) identity. The solution must meet the following requirements:\nâœ‘ Ensure that the applications can authenticate only when running on the 10 virtual machines.\nâœ‘ Minimize administrative effort.\nWhat should you include in the recommendation? To answer, select the appropriate options in the answer area.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","unix_timestamp":1575552240,"isMC":false,"question_images":["https://www.examtopics.com/assets/media/exam-media/02744/0005100003.jpg"],"answer_images":["https://www.examtopics.com/assets/media/exam-media/02744/0005200001.jpg"]}],"exam":{"name":"AZ-301","numberOfQuestions":232,"id":51,"provider":"Microsoft","isMCOnly":false,"isBeta":false,"isImplemented":true,"lastUpdated":"12 Apr 2025"},"currentPage":19},"__N_SSP":true}