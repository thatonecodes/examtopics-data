{"pageProps":{"questions":[{"id":"eDTfxsDKLsCIN9SL4fsX","question_id":236,"answer_ET":"","unix_timestamp":1674129120,"answer":"","answer_description":"","timestamp":"2023-01-19 12:52:00","url":"https://www.examtopics.com/discussions/microsoft/view/95986-exam-az-400-topic-5-question-27-discussion/","topic":"5","question_images":["https://img.examtopics.com/az-400/image18.png"],"discussion":[{"comment_id":"784519","upvote_count":"47","content":"The correct solution is : git submodule add \nPlease check the following link : https://git-scm.com/book/en/v2/Git-Tools-Submodules","poster":"prodev1995","timestamp":"1690038840.0"},{"comments":[{"upvote_count":"3","timestamp":"1690026420.0","content":"To add a new submodule you use the git submodule add command with the absolute or relative URL of the project you would like to start tracking","comment_id":"784349","poster":"memoor"}],"comment_id":"781071","content":"I think this should be : git submodule add ...","poster":"crymo99","upvote_count":"9","timestamp":"1689760320.0"},{"poster":"AnishGS","timestamp":"1725700440.0","comment_id":"1167926","content":"git submodule add https://github.com/contoso/afeed.git path/to/afeed","upvote_count":"2"},{"timestamp":"1718835300.0","content":"correct solution \ngit submodule add","comment_id":"1101080","upvote_count":"1","poster":"vsvaid"},{"upvote_count":"3","poster":"flafernan","comment_id":"976679","content":"the correct command: \ngit submodule add https://github.com/contoso/afeed afeed","timestamp":"1707492060.0"},{"upvote_count":"6","content":"1. submodule add\n\nhttps://git-scm.com/book/en/v2/Git-Tools-Submodules\nLet’s start by adding an existing Git repository as a submodule of the repository that we’re working on. To add a new submodule you use the git submodule add command with the absolute or relative URL of the project you would like to start tracking.","timestamp":"1701097320.0","comment_id":"908002","poster":"zellck"},{"comment_id":"784301","upvote_count":"3","content":"its git submodule add - look here https://git-scm.com/book/en/v2/Git-Tools-Submodules","timestamp":"1690022760.0","poster":"mrg998"},{"timestamp":"1689780600.0","upvote_count":"8","content":"\"git clone branch\" is not a valid git command.\n\nI believe the correct answer is \"git submodule add\"\nhttps://git-scm.com/book/en/v2/Git-Tools-Submodules","comment_id":"781396","poster":"Wengatz"}],"answers_community":[],"answer_images":["https://img.examtopics.com/az-400/image19.png"],"isMC":false,"question_text":"DRAG DROP\n-\n\nYou have a GitHub repository that contains the code for an app named App1.\n\nApp1 depends on a library of functions from a repository at https://github.com/contoso/afeed.\n\nYou need to keep a clone of the afeed repository as a subdirectory of the App1 repository.\n\nHow should you complete the Git command? To answer, drag the appropriate values to the correct targets. Each value may be used once, more than once, or not at all. You may need to drag the split bar between panes or scroll to view content.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","exam_id":55},{"id":"krqfkUuhhwDA89Okvpk3","url":"https://www.examtopics.com/discussions/microsoft/view/96483-exam-az-400-topic-5-question-28-discussion/","answer_images":["https://img.examtopics.com/az-400/image21.png"],"answers_community":[],"exam_id":55,"discussion":[{"upvote_count":"16","poster":"surensaluka","timestamp":"1691986740.0","comments":[{"poster":"djhyfdgjk","timestamp":"1723122780.0","upvote_count":"1","content":"Is this the only question from here which came in your exam ??","comment_id":"1144610"}],"content":"This question came today (2023-02-14)","comment_id":"808140"},{"comments":[{"timestamp":"1702172640.0","upvote_count":"8","comment_id":"919676","content":"Gotten this in Jun 2023 exam.","poster":"zellck"}],"content":"1. reflog\n2. gc, now\n\nhttps://git-scm.com/docs/git-reflog\nhttps://git-scm.com/docs/git-gc#Documentation/git-gc.txt-gcpruneExpire\nThe value \"now\" may be used to disable this grace period and always prune unreachable objects immediately","comment_id":"907999","upvote_count":"14","poster":"zellck","timestamp":"1701097080.0"},{"content":"https://stackoverflow.com/a/29203553/15442631\ngit reflog expire --expire=now --all && git gc --prune=now --aggressive","poster":"Irving93","timestamp":"1703113680.0","comment_id":"928811","upvote_count":"2"},{"poster":"imanonion","upvote_count":"2","comment_id":"804891","timestamp":"1691707620.0","content":"Answer given is correct and the explanation can be found here: https://stackoverflow.com/a/29203553/15442631"},{"upvote_count":"3","content":"Given Answer Correct \n$ git reflog expire --expire=now --all && git gc --prune=now --aggressive","comment_id":"784361","poster":"memoor","timestamp":"1690026840.0"},{"timestamp":"1690023180.0","content":"correct","comment_id":"784306","poster":"mrg998","upvote_count":"2"}],"answer":"","question_id":237,"unix_timestamp":1674391980,"answer_description":"","timestamp":"2023-01-22 13:53:00","answer_ET":"","question_text":"HOTSPOT\n-\n\nYou use Git for source control.\n\nYou need to optimize the performance of a repository. The solution must meet the following requirements:\n\n• Permanently remove all items referenced only in the reflog.\n• Remove history that is NOT in any current branch.\n\nHow should you complete the command? To answer, select the appropriate options in the answer area.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","isMC":false,"topic":"5","question_images":["https://img.examtopics.com/az-400/image20.png"]},{"id":"DGHXT4MqucXVFuHupP1Z","timestamp":"2023-01-19 18:48:00","question_images":["https://img.examtopics.com/az-400/image22.png"],"answer_description":"","exam_id":55,"topic":"5","answers_community":[],"question_text":"DRAG DROP\n-\n\nYou have an Azure Repos Git repository named repo1.\n\nYou need to ensure that you can authenticate to repo1 by using SSH.\n\nWhich four actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\n\nNOTE: More than one order of answer choices is correct. You will receive credit for any of the correct orders you select.\n\n//IMG//","isMC":false,"answer":"","question_id":238,"unix_timestamp":1674150480,"discussion":[{"upvote_count":"30","comments":[{"poster":"Akc0","upvote_count":"8","timestamp":"1699465260.0","comment_id":"892303","content":"There's no reason why you can't sign into Azure Devops first, it doesn't require the keys created beforehand. Seems like 1 and 2 can be interchanged which is also part of the question \"More than one order of answer choices is correct.\""},{"comment_id":"786594","poster":"CrystalMath","upvote_count":"3","content":"According to the official documentation, this is correct. Microsoft states:\nStep 1: Create your SSH keys\nStep 2: Add the public key to Azure DevOps (but you would need to sign in first if not already logged in).\nStep 3: Clone the Git repository with SSH\n\nhttps://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops","timestamp":"1690200960.0"}],"comment_id":"784312","content":"Create ssh keys using ssh-keygen\nSign into azure devOps\nAdd the SSH public key\nClone repo1","poster":"mrg998","timestamp":"1690023420.0"},{"timestamp":"1689781680.0","content":"It feels like the order of the first two does not matter. You can generate the SSH keys before logging into Azure DevOps.","poster":"Wengatz","upvote_count":"14","comment_id":"781425"},{"content":"Create ssh keys using ssh-keygen\nSign into azure devOps\nAdd the SSH public key\nClone repo1","upvote_count":"2","timestamp":"1724364420.0","comment_id":"1156797","poster":"ozbonny"},{"timestamp":"1719067260.0","content":"Keygen is a SAD Public Clone","comment_id":"1103514","upvote_count":"1","poster":"hanzocodes"},{"upvote_count":"1","timestamp":"1716646680.0","comment_id":"1080156","content":"We can create SSH key gen via putty or powershell without login to portal initially \nafter creating you will get one public key and one private key so in order to authenticate you need to upload the public key \nSo the sequence will be:\nCreate ssh keygen\nLogin to azure devops\nadd the public key \nand finally clone it","poster":"Firdous586"},{"poster":"yana_b","timestamp":"1708510260.0","comment_id":"986315","content":"https://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops\n\nSolution is fully described in this url provided by zellck https://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops","upvote_count":"1"},{"upvote_count":"2","content":"According to MS documention order should be\n\nCreate ssh keys using ssh-keygen\nSign into azure devOps\nAdd the SSH public key\nClone repo1\nhttps://www.examtopics.com/exams/microsoft/az-400/view/4/#\nreferance: https://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops","poster":"Pamban","timestamp":"1701242700.0","comment_id":"909056"},{"poster":"zellck","upvote_count":"10","content":"1. Create SSH keys using ssh-keygen\n2. Sign into Azure DevOps\n3. Add the SSH public key\n4. Clone repo1\n\nhttps://learn.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops","comments":[{"timestamp":"1703000040.0","content":"you are on fire my friend","poster":"SandCloud","comment_id":"927547","upvote_count":"2"}],"comment_id":"907994","timestamp":"1701096540.0"},{"timestamp":"1693649460.0","upvote_count":"5","content":"got this in 02 March 2023 exams. scored 870 marks.","comment_id":"826830","poster":"AlexeyG"},{"comment_id":"805228","content":"1. Create ssh Keys using ssh-keygen\n2. Login to Azure DevOps\n3. Add SSH Public key to User Settings\n4. Clone Repo","timestamp":"1691752860.0","poster":"Mcelona","upvote_count":"1"}],"url":"https://www.examtopics.com/discussions/microsoft/view/96029-exam-az-400-topic-5-question-29-discussion/","answer_ET":"","answer_images":["https://img.examtopics.com/az-400/image23.png"]},{"id":"ysP9U0bZkXOM8k2SQDWn","isMC":true,"question_images":[],"choices":{"B":"Configure pre-deployment approvals in the deployment pipeline.","A":"Configure post-deployment approvals in the deployment pipeline.","D":"Integrate Azure DevOps and Azure DevTest Labs.","C":"Integrate Azure DevOps and SonarQube."},"exam_id":55,"answers_community":["BC (94%)","6%"],"url":"https://www.examtopics.com/discussions/microsoft/view/23054-exam-az-400-topic-5-question-3-discussion/","answer_description":"","answer":"BC","answer_images":[],"question_id":239,"answer_ET":"BC","unix_timestamp":1592049900,"discussion":[{"comments":[{"comments":[{"upvote_count":"4","content":"No, you are thinking about Azure DevOps Test Plans. Azure DevTest Labs is s a service for easily creating, using, and managing infrastructure-as-a-service (IaaS) virtual machines (VMs) and platform-as-a-service (PaaS) environments in labs.","comment_id":"707260","timestamp":"1667055180.0","poster":"Yatoom"}],"upvote_count":"3","timestamp":"1614015720.0","poster":"Luisete22222","comment_id":"296810","content":"It has to do, because if you increase testing, you decrease technical debt."},{"comment_id":"718251","content":"B seems to be correct\nhttps://learn.microsoft.com/en-us/training/modules/identify-technical-debt/5-measure-manage-technical-debt","upvote_count":"1","poster":"warchoon","timestamp":"1668458700.0"}],"upvote_count":"38","timestamp":"1593113880.0","content":"What Azure DevTest Labs has to do with technical debt? Correct answer: B & C","comment_id":"119786","poster":"ttm_19"},{"comments":[{"content":"B and C is correct, from pre-approval, you can set quality gate with sonarqube","poster":"rreeey","comments":[{"poster":"Sylph","comment_id":"328643","upvote_count":"1","content":"Correct\nhttps://azuredevopslabs.com/labs/vstsextend/sonarcloud/","timestamp":"1617625080.0"}],"timestamp":"1596025200.0","comment_id":"146471","upvote_count":"25"},{"comment_id":"158279","content":"Pre-deployment approval means, that senior engineer can look at your code and perform code review before deploying. He can also take a look at Sonar analysis and decide if it will introduce any technical debt. Its helpful.","timestamp":"1597434660.0","upvote_count":"10","poster":"maniak5576"}],"poster":"ttm_19","upvote_count":"21","content":"Is there a correct answer at all among those options? Checking for technical debt tasks should be an automated task (via SonarQube). But deployment approvals are for manual action by a team member. For automated check it should have been: implementing a pre-deployment gate with SonarQube action. Since there is not such option, the closes one is B&C.","timestamp":"1593460980.0","comment_id":"123032"},{"timestamp":"1730237280.0","poster":"MrAZ105","comment_id":"1304713","content":"Selected Answer: BC\nBC are correct","upvote_count":"2"},{"poster":"vsvaid","comment_id":"1100110","upvote_count":"1","timestamp":"1702941840.0","content":"Selected Answer: BC\nAgree with B and C"},{"poster":"yana_b","comment_id":"982203","timestamp":"1692163200.0","upvote_count":"2","content":"Selected Answer: BC\nCorrect"},{"poster":"Aravindking","upvote_count":"3","comment_id":"911062","timestamp":"1685527080.0","content":"Selected Answer: BC\ngiven answers is correct and supported by bard AI frm google :\nThe correct answers are:\n\nIntegrate Azure DevOps and SonarQube. SonarQube is a static code analysis tool that can be used to identify technical debt in Java code. By integrating SonarQube with Azure DevOps, you can automatically scan your code for technical debt and generate reports that can be used to prioritize and track the debt.\nConfigure pre-deployment approvals in the deployment pipeline. Pre-deployment approvals can be used to prevent code with technical debt from being deployed to production. By requiring approval from a designated approver, you can ensure that only code that meets the quality standards is deployed."},{"poster":"zellck","timestamp":"1685274540.0","content":"Selected Answer: BC\nBC is the answer.\n\nhttps://learn.microsoft.com/en-us/training/modules/identify-technical-debt/5-measure-manage-technical-debt","comment_id":"908608","upvote_count":"2","comments":[{"upvote_count":"1","comment_id":"908610","poster":"zellck","content":"https://learn.microsoft.com/en-us/azure/devops/pipelines/release/approvals/?view=azure-devops&tabs=yaml\nTeams can also take advantage of the Approvals and Gates feature to control the workflow of the deployment pipeline. Each stage in a release pipeline can be configured with pre-deployment and post-deployment conditions that can include waiting for users to manually approve or reject deployments, and checking with other automated systems that specific conditions are met.","timestamp":"1685274660.0"}]},{"upvote_count":"2","comment_id":"692723","content":"Selected Answer: BC\nSeems to be BC","poster":"ehurfheiz","timestamp":"1665554400.0"},{"poster":"alexPera84","content":"Selected Answer: BC\nI think that having a check on pre deploy and sonar for static analysis help us to avoid the tech debt.","timestamp":"1664366100.0","upvote_count":"4","comment_id":"681666"},{"comment_id":"677946","content":"This isn't a great question. I'd lean towards C/D just because they are specifically aimed at further testing. But a \"Pre-deployment approval\" helps with the process which is still part of technical debt. Hopefully this question has been updated as its subjective.","upvote_count":"1","poster":"Atos","timestamp":"1664034180.0"},{"comment_id":"662658","poster":"giuliohome","upvote_count":"1","timestamp":"1662565500.0","content":"Selected Answer: CD\nC of course plus more testing, hence D see already presents comments of chaudh, pepepecas, Luisete22222 and Morettimaxi (all those should be transformed to voting comment to be more visible)"},{"timestamp":"1624733760.0","poster":"francis6170","content":"Got this in the AZ-400 exam (June 2021).","upvote_count":"2","comment_id":"391513"},{"upvote_count":"2","content":"B C checked","poster":"Pniaq","timestamp":"1616359740.0","comment_id":"316661"},{"poster":"laweg","timestamp":"1615563900.0","comment_id":"308979","content":"C & D. D isn't actually clear why it makes sense, but you could assume that it means there's testing in place. However, I believe it cannot be A & B because creating approval barriers in your deployments is known to increase technical debt.","upvote_count":"3"},{"upvote_count":"1","poster":"passtest100","comments":[{"timestamp":"1606918320.0","upvote_count":"2","poster":"passtest100","comment_id":"233048","content":"change to B C \nSince post deployment approval is also done before specific stage"}],"content":"A C is making more sense. \nthe reason A is better than B is:\n1 the question ask the STRATEGY rather than prevention before the debt happen. \n2 the debt is necessary in a short term request, but how to reduce the cost the debt create is the strategy jobs. \n3 in practical experience, it did happen from time to time that we did the job first and supplement the approval later. \n4 so the post approval makes more sense than B","comment_id":"228705","timestamp":"1606443300.0"},{"comment_id":"218889","upvote_count":"1","content":"Correct answer (BC)","poster":"azahran","timestamp":"1605323460.0"},{"content":"B&C are correct answer.","timestamp":"1603898280.0","comment_id":"207870","poster":"swati17","upvote_count":"10"},{"timestamp":"1597684380.0","comment_id":"160217","content":"https://www.azuredevopslabs.com/labs/vstsextend/sonarcloud/\nDefinitely SonarQube. \nAnd logically pre-deployment approval. If something goes wrong the guy who approves the build to go to production just won't approve it. So nothing is wrong, the service quality is good as in prod always works. So I think B & C correct.","upvote_count":"11","poster":"TechieBloke"},{"upvote_count":"2","poster":"Atanu","comment_id":"120378","timestamp":"1593163680.0","content":"A and C"},{"timestamp":"1592680920.0","comment_id":"114957","poster":"Morettimaxi","content":"I think c and d","upvote_count":"4"},{"poster":"pepepecas","content":"I agree with chaudh. It should be C & D.\nTechnical debt includes anything the team must do to deploy production quality code and keep it running in production:\nhttps://docs.microsoft.com/en-us/azure/architecture/framework/devops/development#technical-debt","upvote_count":"8","comment_id":"114908","timestamp":"1592673120.0"},{"content":"I think C & D\nA&B seem incorrect. Nothing mentions that the deployment approval would help to manage the technical debt.\nC: SonarQube is a set of static analyzers that can be used to identify areas of improvement in your code. It allows you to analyze the technical debt in your project and keep track of it in the future\nD: will help to remove the technical debt (QA & refactoring code).","comment_id":"109419","timestamp":"1592049900.0","upvote_count":"9","poster":"chaudh"}],"question_text":"Your company uses Azure DevOps for the build pipelines and deployment pipelines of Java-based projects.\nYou need to recommend a strategy for managing technical debt.\nWhich two actions should you include in the recommendation? Each correct answer presents part of the solution.\nNOTE: Each correct selection is worth one point.","timestamp":"2020-06-13 14:05:00","topic":"5"},{"id":"6ILKHhvWgIRS2vlANKQs","answers_community":[],"unix_timestamp":1674065220,"answer_ET":"","isMC":false,"answer_description":"","answer":"","url":"https://www.examtopics.com/discussions/microsoft/view/95879-exam-az-400-topic-5-question-30-discussion/","exam_id":55,"discussion":[{"comment_id":"788099","comments":[{"upvote_count":"5","timestamp":"1713030900.0","poster":"vLabz","comment_id":"1042870","comments":[{"comment_id":"1325206","content":"and just to add further why stashing not needed - Use Stashing when context-switching or if you need to set aside incomplete work without committing.","upvote_count":"1","timestamp":"1733946720.0","poster":"Dankho"},{"content":"Actually to unstage the file you need to you do\ngit restore --stageg path-to-file\n\nwe could imagine we wanted just to continue working with unstaged files without commiting anything, but this can't work, because git restore is missing a parameter.\nThis enforces the log / checkout / commit as the solution.","comment_id":"1042877","poster":"vLabz","upvote_count":"1","timestamp":"1713031860.0"}],"content":"Approved.\n1. git log is necessary to get the hash\n2. git checkout hash~1 file-path retrieves the file in STAGED state. The work in progress is not supposed to be staged. And obviously there is no conflict in this scenario because we talk about a single file that is no longer here. So stash is useless.\n3. the commit writes the recoverd file to repo, and you can continue your work in progress with your unstaged files\n\ngit restore is missing the --source parameter if used to retrieve the lost file\ngit restore can be used to unstage the recovered file which is not what we want.\ngit stash is actually useless here"},{"comment_id":"791885","content":"git log isnt needed.\n\ngit stash (to keep the current uncommitted changes)\ngit checkout [hash]~1 path/to/file\ngit commit -m \"undeleted files\"","timestamp":"1690644720.0","poster":"buzzerboy","upvote_count":"4","comments":[{"content":"You need a log to find the hash","upvote_count":"22","comment_id":"792723","timestamp":"1690712100.0","poster":"warchoon"}]}],"upvote_count":"39","poster":"kkop","content":"TESTED:\ngit log\ngit checkout [hash]~1\ngit commit -m 'undeleted file'","timestamp":"1690308300.0"},{"upvote_count":"18","timestamp":"1689783060.0","comment_id":"781447","comments":[{"comments":[{"comment_id":"862111","content":"remark: there's an invalid double dash in the \"--path/to/file\" which I suspect is just another typo.","upvote_count":"1","timestamp":"1696509540.0","poster":"FNog"}],"content":"That's true if you checkout the entire commit without specifying a path/file.\nIn the given checkout example, you specify the path to the deleted file, which, since the file no longer exists, will be restored without conflicting with any pending changes hence no need to to stash.\n\n1. git log\n2. git checkout [hash]~1 path/to/file\n3. git commit -m '\"undeleted files'","upvote_count":"8","timestamp":"1696509360.0","comment_id":"862108","poster":"FNog"}],"poster":"Wengatz","content":"The question says \"you continue to work\" after you committed the deletion, which means you have in progress changes. In order not to lose those changes, you would need to run a git stash command.\n\nTo get the hash of the commit that deleted the file, run git log.\n\ngit checkout [hash]~1 will get 1 commit prior to the commit that deleted the file, which will recover the file. git restore is not needed.\n\nSo I think the right answer is:\ngit stash\ngit log\ngit checkout [hash]~1"},{"upvote_count":"1","poster":"4bd3116","timestamp":"1733274540.0","content":"You use Git for source control.\n\nYou delete a file, commit the changes, and continue to work.\n\nYou need to recover the deleted file.\n\nWhich three commands should you run in sequence?","comments":[{"content":"git log -- path/to/file\ngit checkout [previous_commit_hash]~1 -- path/to/file\ngit commit -m 'Restore deleted file'","comment_id":"1223827","poster":"4bd3116","timestamp":"1733274600.0","upvote_count":"1"}],"comment_id":"1223826"},{"timestamp":"1719067920.0","poster":"hanzocodes","upvote_count":"1","content":"Log Checkout Commit - Og Checkout that Comet","comment_id":"1103521"},{"upvote_count":"1","poster":"yuu_oppai","timestamp":"1712221020.0","content":"Find the commit hash where the file was last changed: Use git log with the path to the deleted file to find the commit where it was last changed.\ngit log -- [file_path]\nThis will return a list of commits affecting that file. Take note of the commit hash of the commit just before the file was deleted.\nRestore the deleted file: Use git restore followed by the source option -s or --source and the commit hash, then the path to the deleted file to restore it.\ngit restore -s [commit_hash]^ -- [file_path]\nThe caret (^) symbol refers to the parent commit, effectively restoring the file to its state in the commit just before it was deleted.\nCommit the restored file: Finally, commit the changes to add the restored file back into your current working branch.\ngit commit -m \"Restored [file_path]\"\n\nif you use the git restore command, you don't need to use git checkout to restore a deleted file. The git restore command is a more modern and direct way to recover deleted files or reset modified ones. It's designed to make this process simpler and more intuitive.","comment_id":"1024593"},{"content":"git restore will restore the file to the last committed version, effectively undoing any changes that have been made since then, but we already got to the file using the git checkout, so the correct order should be \ngit stash (to save current work, optional)\ngit log\ngit checkout\ngit commit","timestamp":"1711415460.0","upvote_count":"1","comment_id":"1017240","poster":"gabo"},{"poster":"xRiot007","content":"This question is such a troll. \nIn a REAL project, the FIRST thing you would do is STASH any work in progress you have. \nThen, you do a git LOG to see the previous commits. \nThen, you identify the faulty commit, and do a git CHECKOUT of the prior commit \nThen, you will do a git COMMIT, to commit the deleted file back to the repo. \nThis question needs serious updating.","upvote_count":"5","timestamp":"1705567560.0","comment_id":"955060"},{"comment_id":"900452","timestamp":"1700254020.0","upvote_count":"4","content":"git log\ngit checkout <commit> -- <file>\ngit add <file>\ngit commit -m \"Recover deleted file\"","poster":"ShomaV","comments":[{"content":"git checkout retrieves the file in staged state. the add is useless.","timestamp":"1713031080.0","poster":"vLabz","upvote_count":"1","comment_id":"1042872"},{"timestamp":"1705219200.0","poster":"Dani_ac7","comment_id":"951275","upvote_count":"1","content":"3, NOT 4 STEPS"}]},{"poster":"RonZhong","comment_id":"872796","content":"git log -- <filename>\ngit checkout <hash>~1 <file name>\ngit commit -m 'undeleted file'\n\nhttps://4ddig.tenorshare.com/windows-recovery-solutions/git-restore-deleted-file.html#f1","timestamp":"1697553120.0","upvote_count":"2","comments":[{"content":"This URL is for files, not for branches","poster":"yana_b","timestamp":"1708519080.0","upvote_count":"1","comment_id":"986406"}]},{"timestamp":"1694174700.0","upvote_count":"3","content":"kkop answer is right. The question doesn't say anything about saving your current work (even though it is a good practice). git log -> gives you info on which commit you want to checkout. git checkout will discard your current work and checkout the specific commit. then you commit the change to undelete the file.","poster":"Rams_84zO6n","comment_id":"833032"},{"poster":"AlexeyG","upvote_count":"5","comment_id":"826831","timestamp":"1693649520.0","content":"got this in 02 March 2023 exams. scored 870 marks."},{"upvote_count":"3","poster":"Frefren","timestamp":"1689854520.0","comment_id":"782308","content":"Given answer is correct!\n\nAlthough, I think it's being a bit overcomplicated with the restore. Since I haven't pushed the commit yet, it's only local. So why not:\ngit log\ngit reset --mixed [hash of previous commit]\ngit checkout [filename]\nThis will uncommit the latest commit, bring back the changes to the working tree and then just remove the file deletion, so you can then commit the changes with the same name, ultimately just removing the file deletion."},{"comment_id":"780291","poster":"Iaminall","content":"Correct","timestamp":"1689696420.0","upvote_count":"1"}],"answer_images":["https://img.examtopics.com/az-400/image25.png"],"topic":"5","question_images":["https://img.examtopics.com/az-400/image24.png"],"question_id":240,"question_text":"DRAG DROP\n-\n\nYou use Git for source control.\n\nYou delete a file, commit the changes, and continue to work.\n\nYou need to recover the deleted file.\n\nWhich three commands should you run in sequence? To answer, move the appropriate commands from the list of commands to the answer area and arrange them in the correct order.\n\n//IMG//","timestamp":"2023-01-18 19:07:00"}],"exam":{"numberOfQuestions":558,"id":55,"name":"AZ-400","isImplemented":true,"lastUpdated":"12 Apr 2025","provider":"Microsoft","isMCOnly":false,"isBeta":false},"currentPage":48},"__N_SSP":true}