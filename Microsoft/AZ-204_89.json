{"pageProps":{"questions":[{"id":"wjdMItA5JX1RgEyaw0uU","answer_images":[],"answer_ET":"A","unix_timestamp":1730382300,"answer_description":"","timestamp":"2024-10-31 14:45:00","answer":"A","choices":{"B":"Timestamp","C":"Session identifier","A":"Sequence number","D":"Partition key"},"exam_id":48,"question_text":"Case study -\n\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\n\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\n\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\n\nTo start the case study -\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. When you are ready to answer a question, click the Question button to return to the question.\n\n\nBackground -\n\nFourth Coffee is a global coffeehouse chain and coffee company recognized as one of the world’s most influential coffee brands. The company is renowned for its specialty coffee beverages, including a wide range of espresso-based drinks, teas, and other beverages. Fourth Coffee operates thousands of stores worldwide.\n\n\nCurrent environment -\n\nThe company is developing cloud-native applications hosted in Azure.\n\n\nCorporate website -\nThe company hosts a public website located at http://www.fourthcoffee.com/. The website is used to place orders as well as view and update inventory items.\n\n\nInventory items -\nIn addition to its core coffee offerings, Fourth Coffee recently expanded its menu to include inventory items such as lunch items, snacks, and merchandise. Corporate team members constantly update inventory. Users can customize items. Corporate team members configure inventory items and associated images on the website.\n\n\nOrders -\nAssociates in the store serve customized beverages and items to customers. Orders are placed on the website for pickup.\n\nThe application components process data as follows:\n\n1. Azure Traffic Manager routes a user order request to the corporate website hosted in Azure App Service.\n2. Azure Content Delivery Network serves static images and content to the user.\n3. The user signs in to the application through a Microsoft Entra ID for customers tenant.\n4. Users search for items and place an order on the website as item images are pulled from Azure Blob Storage.\n5. Item customizations are placed in an Azure Service Bus queue message.\n6. Azure Functions processes item customizations and saves the customized items to Azure Cosmos DB.\n7. The website saves order details to Azure SQL Database.\n8. SQL Database query results are cached in Azure Cache for Redis to improve performance.\n\nThe application consists of the following Azure services:\n\n//IMG//\n\n\n\nRequirements -\n\nThe application components must meet the following requirements:\n\n• Azure Cosmos DB development must use a native API that receives the latest updates and stores data in a document format.\n• Costs must be minimized for all Azure services.\n• Developers must test Azure Blob Storage integrations locally before deployment to Azure. Testing must support the latest versions of the Azure Storage APIs.\n\n\nCorporate website -\n• User authentication and authorization must allow one-time passcode sign-in methods and social identity providers (Google or Facebook).\n• Static web content must be stored closest to end users to reduce network latency.\n\n\nInventory items -\n• Customized items read from Azure Cosmos DB must maximize throughput while ensuring data is accurate for the current user on the website.\n• Processing of inventory item updates must automatically scale and enable updates across an entire Azure Cosmos DB container.\n• Inventory items must be processed in the order they were placed in the queue.\n• Inventory item images must be stored as JPEG files in their native format to include exchangeable image file format (data) stored with the blob data upon upload of the image file.\n• The Inventory Items API must securely access the Azure Cosmos DB data.\n\n\nOrders -\n• Orders must receive inventory item changes automatically after inventory items are updated or saved.\n\n\nIssues -\n\n• Developers are storing the Azure Cosmos DB credentials in an insecure clear text manner within the Inventory Items API code.\n• Production Azure Cache for Redis maintenance has negatively affected application performance.\n\n\nYou need to implement the processing of enqueue inventory items.\n\nWhich message value should you use?","discussion":[{"content":"Selected Answer: C\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#sequencing-vs-sessions\n\nWritten in above link - \nIf messages just need to be retrieved in order, you don't need to use sessions. If messages need to be processed in order, use sessions.","upvote_count":"2","comment_id":"1348775","timestamp":"1738183920.0","poster":"d90b583"},{"timestamp":"1737824280.0","comment_id":"1346553","poster":"Zezere","content":"Selected Answer: C\nAzure documentation (not chatGPT bullshit): \"To create a first-in, first-out (FIFO) guarantee in Service Bus, use sessions. Message sessions enable exclusive, ordered handling of unbounded sequences of related messages. To allow for handling sessions in high-scale, high-availability systems, the session feature also allows for storing session state, which allows sessions to safely move between handlers. For more information, see Message sessions: first in, first out (FIFO).\"","upvote_count":"1"},{"comment_id":"1339873","upvote_count":"2","content":"Selected Answer: C\nOne of the requirements is \"Inventory items must be processed in the order they were placed in the queue.\"\nSo the sequence number is not sufficient, since \"Sequence number on its own guarantees the queuing order and the extractor order of messages, but not the processing order, which requires sessions.\" https://learn.microsoft.com/en-us/azure/service-bus-messaging/message-sequencing#sequence-number\nWe have to use sessions here https://learn.microsoft.com/en-us/azure/service-bus-messaging/message-sessions","timestamp":"1736770200.0","poster":"lamvit"},{"comment_id":"1336663","timestamp":"1736058840.0","content":"Selected Answer: A\nOn the one hand, documentation says: \"Sequence number ... is more precise than a time stamp as an order criterion\"\nAnd Timestamp is more for cases when we need to check whether a work item was submitted before a deadline.\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/message-sequencing#sequence-number\n\nOn the other hand, they can use partitioned queue for Azure Service Bus, because: \"Fourth Coffee operates thousands of stores worldwide\"\nDocumentation says: \"For partitioned entities, the sequence number is issued relative to the partition.\"\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-partitioning#how-it-works\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/message-sequencing\n\nThe case study says nothing about the partitions, so I'll hope they aren't used.","upvote_count":"2","poster":"examtopicsLogin123"},{"comments":[{"comment_id":"1349366","content":"I fed all the articles to AI and AI says A. It first started off with C until I gave it the articles everyone posted.","poster":"Dan696969","upvote_count":"1","timestamp":"1738290060.0"}],"comment_id":"1305467","upvote_count":"3","content":"Selected Answer: A\n- inventory items must be processed in the order they were placed in the queue\n\nSequence Number: Using a sequence number ensures that each message can be uniquely identified and processed in the exact order it was enqueued. This is crucial for maintaining the correct processing order of inventory items, especially when multiple items may be processed simultaneously or when they are related to a single user session.","poster":"Mattt","timestamp":"1730382300.0"}],"topic":"6","answers_community":["A (50%)","C (50%)"],"question_id":441,"isMC":true,"question_images":["https://img.examtopics.com/az-204/image535.png"],"url":"https://www.examtopics.com/discussions/microsoft/view/150590-exam-az-204-topic-6-question-62-discussion/"},{"id":"C0G5wYoUfG4KjZtn5FJJ","answers_community":[],"unix_timestamp":1731995520,"answer_images":["https://img.examtopics.com/az-204/image549.png"],"topic":"6","question_text":"HOTSPOT -\n\n\nCase study -\n\nThis is a case study. Case studies are not timed separately. You can use as much exam time as you would like to complete each case. However, there may be additional case studies and sections on this exam. You must manage your time to ensure that you are able to complete all questions included on this exam in the time provided.\n\nTo answer the questions included in a case study, you will need to reference information that is provided in the case study. Case studies might contain exhibits and other resources that provide more information about the scenario that is described in the case study. Each question is independent of the other questions in this case study.\n\nAt the end of this case study, a review screen will appear. This screen allows you to review your answers and to make changes before you move to the next section of the exam. After you begin a new section, you cannot return to this section.\n\n\nTo start the case study -\nTo display the first question in this case study, click the Next button. Use the buttons in the left pane to explore the content of the case study before you answer the questions. Clicking these buttons displays information such as business requirements, existing environment, and problem statements. When you are ready to answer a question, click the Question button to return to the question.\n\n\nBackground -\n\nFourth Coffee is a global coffeehouse chain and coffee company recognized as one of the world’s most influential coffee brands. The company is renowned for its specialty coffee beverages, including a wide range of espresso-based drinks, teas, and other beverages. Fourth Coffee operates thousands of stores worldwide.\n\n\nCurrent environment -\n\nThe company is developing cloud-native applications hosted in Azure.\n\n\nCorporate website -\nThe company hosts a public website located at http://www.fourthcoffee.com/. The website is used to place orders as well as view and update inventory items.\n\n\nInventory items -\nIn addition to its core coffee offerings, Fourth Coffee recently expanded its menu to include inventory items such as lunch items, snacks, and merchandise. Corporate team members constantly update inventory. Users can customize items. Corporate team members configure inventory items and associated images on the website.\n\n\nOrders -\nAssociates in the store serve customized beverages and items to customers. Orders are placed on the website for pickup.\n\nThe application components process data as follows:\n\n1. Azure Traffic Manager routes a user order request to the corporate website hosted in Azure App Service.\n2. Azure Content Delivery Network serves static images and content to the user.\n3. The user signs in to the application through a Microsoft Entra ID for customers tenant.\n4. Users search for items and place an order on the website as item images are pulled from Azure Blob Storage.\n5. Item customizations are placed in an Azure Service Bus queue message.\n6. Azure Functions processes item customizations and saves the customized items to Azure Cosmos DB.\n7. The website saves order details to Azure SQL Database.\n8. SQL Database query results are cached in Azure Cache for Redis to improve performance.\n\nThe application consists of the following Azure services:\n\n//IMG//\n\n\n\nRequirements -\n\nThe application components must meet the following requirements:\n\n• Azure Cosmos DB development must use a native API that receives the latest updates and stores data in a document format.\n• Costs must be minimized for all Azure services.\n• Developers must test Azure Blob Storage integrations locally before deployment to Azure. Testing must support the latest versions of the Azure Storage APIs.\n\n\nCorporate website -\n• User authentication and authorization must allow one-time passcode sign-in methods and social identity providers (Google or Facebook).\n• Static web content must be stored closest to end users to reduce network latency.\n\n\nInventory items -\n• Customized items read from Azure Cosmos DB must maximize throughput while ensuring data is accurate for the current user on the website.\n• Processing of inventory item updates must automatically scale and enable updates across an entire Azure Cosmos DB container.\n• Inventory items must be processed in the order they were placed in the queue.\n• Inventory item images must be stored as JPEG files in their native format to include exchangeable image file format (data) stored with the blob data upon upload of the image file.\n• The Inventory Items API must securely access the Azure Cosmos DB data.\n\n\nOrders -\n• Orders must receive inventory item changes automatically after inventory items are updated or saved.\n\n\nIssues -\n\n• Developers are storing the Azure Cosmos DB credentials in an insecure clear text manner within the Inventory Items API code.\n• Production Azure Cache for Redis maintenance has negatively affected application performance.\n\n\nYou need to implement a function by using Azure Functions to process customized items.\n\nHow should you implement the function? To answer, select the appropriate options in the answer area.\n\nNOTE: Each correct selection is worth one point.\n\n//IMG//","answer_ET":"","timestamp":"2024-11-19 06:52:00","question_id":442,"url":"https://www.examtopics.com/discussions/microsoft/view/151609-exam-az-204-topic-6-question-63-discussion/","answer":"","discussion":[{"comment_id":"1354942","timestamp":"1739268060.0","upvote_count":"2","poster":"tafa_had","content":"-Item customizations are placed in Azure Service Bus, making it the correct event source.\n-A function should automatically start execution when a new message arrives in Service Bus. Therefore, an Azure Service Bus Trigger is required."},{"poster":"DamuKeesh","comment_id":"1352171","timestamp":"1738816860.0","upvote_count":"1","content":"I thought \nInput Binding \nService Bus"},{"timestamp":"1737625800.0","poster":"Regex37","content":"This is a very poorly stated question! Its not made clear when the new processing of the customized item should happen or what it should achieve. I can only guess that the new processing function should pick up processing on an already created item. That's why I am going with **CosmosDB** for the trigger option.","upvote_count":"1","comment_id":"1345283"},{"content":"Based on below:\n5. Item customizations are placed in an Azure Service Bus queue message.\n6. Azure Functions processes item customizations and saves the customized items to Azure Cosmos DB.\n\nI think Even source is for sure Service Bus, regarding Azure Functions feature it should be Trigger, because the event from service bus will trigger the function","poster":"mr_wilkrafal","comment_id":"1316512","upvote_count":"3","timestamp":"1732314360.0"},{"comment_id":"1314446","timestamp":"1731995520.0","poster":"dimondk","content":"Who has any thoughts on this question?","upvote_count":"2"}],"exam_id":48,"question_images":["https://img.examtopics.com/az-204/image535.png","https://img.examtopics.com/az-204/image548.png"],"answer_description":"","isMC":false},{"id":"mWjo1q718pIPdOyN8nF6","exam_id":48,"url":"https://www.examtopics.com/discussions/microsoft/view/153494-exam-az-204-topic-6-question-64-discussion/","answer":"A","choices":{"A":"An advanced filter using a Boolean condition that evaluates multiple data fields, including a season field within the event data","C":"A subscription filter that uses label filter to include events tagged with seasonal promotional codes","D":"A static subject filter that targets events with a subject ending in “/seasonal/inventory”","B":"A prefix filter on the event type field that matches the current season's name"},"unix_timestamp":1735288800,"timestamp":"2024-12-27 09:40:00","question_id":443,"discussion":[{"timestamp":"1735288800.0","content":"Selected Answer: A\nProvided answer is correct:\nhttps://learn.microsoft.com/en-us/azure/event-grid/event-filtering?utm_source=chatgpt.com#advanced-filtering","upvote_count":"1","poster":"ArturoM64","comment_id":"1332314"}],"question_text":"A large retail company operates online and physical stores. The company tracks inventory levels in real time to manage stock efficiently across all locations. You develop an Azure Event Grid solution to handle events generated by the inventory management system deployed to Azure.\n\nYou need to implement a subscription filter that dynamically adjusts to seasonal changes in product demand.\n\nWhich event filter should you use?","topic":"6","answer_ET":"A","isMC":true,"answers_community":["A (100%)"],"answer_description":"","question_images":[],"answer_images":[]},{"id":"5wlZCdmAFSLwedW3IlMs","timestamp":"2021-03-23 22:03:00","unix_timestamp":1616533380,"question_images":[],"exam_id":48,"choices":{"B":"No","A":"Yes"},"question_id":444,"answers_community":["B (100%)"],"answer_images":[],"topic":"6","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou are developing an Azure Service application that processes queue data when it receives a message from a mobile application. Messages may not be sent to the service consistently.\nYou have the following requirements:\n✑ Queue size must not grow larger than 80 gigabytes (GB).\n✑ Use first-in-first-out (FIFO) ordering of messages.\n✑ Minimize Azure costs.\nYou need to implement the messaging solution.\nSolution: Use the .Net API to add a message to an Azure Storage Queue from the mobile application. Create an Azure Function App that uses an Azure Storage\nQueue trigger.\nDoes the solution meet the goal?","answer_description":"","discussion":[{"comments":[{"comment_id":"618552","timestamp":"1655620320.0","upvote_count":"6","poster":"xRiot007","content":"The most important thing is not capacity, but the FIFO guarantee that is provided only by the service bus and not the service queue. The link you provided is specifying that as well."},{"comment_id":"986499","poster":"ay_m","timestamp":"1692621660.0","upvote_count":"1","content":"great link, thanks a lot!"}],"upvote_count":"26","comment_id":"393049","poster":"Laaptu","content":"Answer is B (NO),\nBecz FIFO is supported by Service bus queue and Service bus queue should be use for data less than 80GB\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted","timestamp":"1624894080.0"},{"content":"Got it in exam 20/10/2022","timestamp":"1666311300.0","upvote_count":"5","poster":"elequiel","comment_id":"700408"},{"timestamp":"1727776260.0","comment_id":"1291895","upvote_count":"2","content":"Selected Answer: B\nAns B. \nInstead use azure service bus queue","poster":"Vichu_1607"},{"comment_id":"1174526","poster":"cb98160","timestamp":"1710539220.0","content":"Selected Answer: B\nNo, Azure Queue doesn't support FIFO!","upvote_count":"2"},{"content":"Selected Answer: B\nStorage Queue is not guaranteed FIFO, and also should be used for size larger than 80 gigabytes. For this scenario a service bus queue is a better option.\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted","upvote_count":"2","comment_id":"1137610","poster":"raymond_abcd","timestamp":"1706790240.0"},{"comment_id":"829480","content":"The solution uses Azure Storage Queue, which provides FIFO ordering of messages, and can handle a large volume of messages. By using the .Net API to add a message to the Azure Storage Queue, the mobile application can send messages to the queue reliably.\n\nThe Azure Function App with a Storage Queue trigger can process the messages in the queue as soon as they are added, ensuring that messages are processed in the order in which they are received. This helps meet the FIFO requirement.\n\nAdditionally, by using Azure Storage Queue, the solution can ensure that the queue size does not grow larger than 80 GB, as specified in the requirement. This can help minimize Azure costs as well, as storage usage is a key factor in determining Azure costs.\n\nOverall, the proposed solution meets all the requirements and can provide a reliable, scalable, and cost-effective messaging solution for the given scenario. YES ChatGPT","timestamp":"1677972120.0","poster":"adilkhan","upvote_count":"2","comments":[{"timestamp":"1677972420.0","poster":"adilkhan","content":"ChatGPT is wrong.B is correct as Azure Service Bus Queue can ensure that the queue size does not grow larger than 80 GB","comment_id":"829485","upvote_count":"3"},{"poster":"paunski7","timestamp":"1682240640.0","upvote_count":"2","comment_id":"878093","content":"ChatGPT answered NO - 3.5V paid"}]},{"upvote_count":"1","content":"Selected Answer: B\nCorrect","poster":"Bear_Polar","comment_id":"728394","timestamp":"1669563960.0"},{"comment_id":"713979","content":"Selected Answer: B\nB is correct answer.","timestamp":"1667925300.0","upvote_count":"2","poster":"OPT_001122"},{"upvote_count":"3","poster":"Eltooth","timestamp":"1656072300.0","content":"Selected Answer: B\nB is correct answer.","comment_id":"621638"},{"content":"Selected Answer: B\nAnswer is No. Ref: https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted","comment_id":"538621","poster":"heisenberg33","upvote_count":"1","timestamp":"1643801280.0"},{"timestamp":"1642603800.0","comment_id":"527614","poster":"lugospod","content":"Got this one 01/2022. Went with NO","upvote_count":"4"},{"comment_id":"392273","upvote_count":"4","content":"Answer is No","poster":"kondapaturi","timestamp":"1624815840.0"},{"comments":[{"comment_id":"318506","comments":[{"timestamp":"1616701980.0","upvote_count":"11","comment_id":"320509","poster":"Didi123","content":"agreed, also FiFo is only guaranteed in Service Bus Queues and not in Azure Storage Queues"},{"poster":"Franz22","comment_id":"464948","comments":[{"poster":"warchoon","comment_id":"831549","content":"And it has no Push-style API.\nhttps://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-azure-and-service-bus-queues-compared-contrasted#:~:text=Push%2Dstyle%20API-,No,-Yes%0A%0AOur%20.NET","timestamp":"1678162920.0","upvote_count":"1"}],"timestamp":"1634710680.0","content":"I think that here, the size is not the thing that should let you think \"oh, it's not the right answer\", because you can use storage queue even with less than 80gb of data. The answer \"No\" should be given because the storage queue doesn't support FIFO.","upvote_count":"8"}],"content":"I take back my previous comment. 'No' is the correct answer. It says 'Queue size should not grow larger than 80 GB'","poster":"idrisfl","timestamp":"1616534580.0","upvote_count":"9"}],"comment_id":"318493","timestamp":"1616533380.0","poster":"idrisfl","upvote_count":"3","content":"Shouldn't this be Yes? I'm not sure where \"Service Bus\" came into the picture in their answer."}],"isMC":true,"answer":"B","url":"https://www.examtopics.com/discussions/microsoft/view/48036-exam-az-204-topic-6-question-7-discussion/","answer_ET":"B"},{"id":"06nfYmVowa3y1fJ9BgNx","exam_id":48,"isMC":false,"answer_ET":"","answer":"","question_images":["https://www.examtopics.com/assets/media/exam-media/04273/0055600001.png"],"unix_timestamp":1615595280,"answer_description":"Box 1: Create a single Service Bus Namespace\nTo begin using Service Bus messaging entities in Azure, you must first create a namespace with a name that is unique across Azure. A namespace provides a scoping container for addressing Service Bus resources within your application.\nBox 2: Create a Service Bus Topic for each restaurant for which a driver can receive messages.\nCreate topics.\nBox 3: Create a Service Bus subscription for each restaurant for which a driver can receive orders.\nTopics can have multiple, independent subscriptions.\nReference:\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview","question_id":445,"answers_community":[],"question_text":"DRAG DROP -\nYou develop software solutions for a mobile delivery service. You are developing a mobile app that users can use to order from a restaurant in their area. The app uses the following workflow:\n1. A driver selects the restaurants for which they will deliver orders.\n2. Orders are sent to all available drivers in an area.\n3. Only orders for the selected restaurants will appear for the driver.\n4. The first driver to accept an order removes it from the list of available orders.\nYou need to implement an Azure Service Bus solution.\nWhich three actions should you perform in sequence? To answer, move the appropriate actions from the list of actions to the answer area and arrange them in the correct order.\nSelect and Place:\n//IMG//","url":"https://www.examtopics.com/discussions/microsoft/view/46813-exam-az-204-topic-6-question-8-discussion/","discussion":[{"comments":[{"comment_id":"515923","poster":"lugospod","content":"One thing to note in this scenario if we have 20 drivers... and 19 of them are busy (talking to their spouse, ...) it will take 19 timeouts for that one order to finally get picked up by the 20th driver. So yes, this is less evil then the resto of the options, but still I would rather use queues so that each driver SEES all of the orders... by using subscriptions the driver doesnt have a list..s/he only sees the current message that was delegated by the round robin algorithm.","upvote_count":"1","timestamp":"1641229080.0"},{"comments":[{"poster":"SnakePlissken","upvote_count":"1","comments":[{"upvote_count":"3","comment_id":"359200","content":"SnakePlissken you need read better documentation) There no reason for have only one topic...","poster":"kimalto452","timestamp":"1621218540.0"},{"poster":"coffecold","upvote_count":"2","content":"Please come with the phrase in the article that one topic is the way to go instead of multiple topics. \nStill I would go for one topic per restaurant.","comment_id":"697550","timestamp":"1666024140.0"}],"content":"Sorry BrettusMaximus, but I think you have to read the documentation about Service Bus first... There's a good reason that NH is highly voted!\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-overview","comment_id":"358641","timestamp":"1621164900.0"},{"comments":[{"content":"in this case you get a concurrency problem.. because now you introduced an additional layer of deciding which DRIVER clicked first, and additional component that has to notify the rest of the drivers that the message they received is no longer valid or introduce a new API to check if the order is still valid.. all in all, smells...","upvote_count":"1","poster":"lugospod","comment_id":"515920","timestamp":"1641228900.0"}],"poster":"ferut","comment_id":"361154","upvote_count":"5","timestamp":"1621410720.0","content":"I agree with BrettusMaximus.\nAlthough one topic is workable but multiple topics are more efficient.\n\nConsider the 1 topic scenario. On the driver's application, it will remember the restaurants it subscribes. Because there's only one topic, the app will receive all messages from all restaurants, and the app should filter out messages not in interest.\n\nWhen using multiple topics, the driver's queue will be much cleaner, receiving only messages of interest. \n\nAll drivers subscribe to the same restaurant will receive the same message. Basically each driver will have their own queue and the message will be deleted from the queue once it's processed. \n\nI think the 'removing' part should be a separate message sent to all subscribers (finally only the restaurant can remove it from the list upon accepting a driver's request)."}],"content":"If you create a single topic, why bother creating a topic at all as it has all the data","comment_id":"348416","upvote_count":"5","poster":"BrettusMaximus","timestamp":"1620029520.0"},{"poster":"MiraA","timestamp":"1633066500.0","upvote_count":"2","comment_id":"455311","comments":[{"content":"Did you mean 2.000 drivers at most?","poster":"mattvasc","comment_id":"558944","upvote_count":"4","timestamp":"1646160120.0"}],"content":"Note there is a limit of \"Number of subscriptions per topic\" set to \"2,000 per-topic for the Standard tier and Premium tier.\".\nhttps://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#service-bus-limits\n\nDoes this mean 2.000 restaurants at most? :-)))"},{"poster":"sashasasha","timestamp":"1622561520.0","content":"If you create a single Service Bus Topic, two different drivers who subscribed to the same restaurant will each receive a copy of the order that could process independently and it's in conflict with the condition: \"4. The first driver to accept an order removes it from the list of available orders.\"","upvote_count":"5","comment_id":"371997","comments":[{"poster":"jay158","content":"In fact all the drivers, who have subscribed to restaurant will get notification.\nThe first driver, who accepts it, will click the order, and it shall be dequeued.","comment_id":"377233","comments":[{"content":"That is completely correct. This question is also in Whizlabs where the explanation is the same as jay158s.","comment_id":"445120","upvote_count":"2","timestamp":"1631698500.0","poster":"hstml"},{"poster":"lugospod","comment_id":"515917","timestamp":"1641228720.0","upvote_count":"4","content":"No it won't get dequeued because this is not a queue. \nThere is no option for SUBSCRIPTION PER DRIVER, only PER RESTAURANT or a SINGLE subscription. So only SINGLE listener will receive the notification and until s/he accepts it, rejects it or it times out no one else will see the message. If this were a QUEUE than it would be as you described. This question sucks on so many levels - too many open questions arise to be able to give a valid response, plus, the final one, I would rather use queues for this problem then subscriptions..."}],"upvote_count":"12","timestamp":"1623128880.0"},{"poster":"coffecold","comment_id":"697553","content":"Why ? One order is placed solely with the restaurant topic applicable. No copy. Then \none subscriber locks the message, and then deletes it. Once locked it cannot be accessed by other subscribers.","upvote_count":"2","timestamp":"1666024440.0"}]},{"upvote_count":"1","comment_id":"618554","timestamp":"1655620440.0","poster":"xRiot007","content":"You can implement one topic, but then it will not scale so well if more and more restaurants are added. You should have a new topic for each new restaurant added so that you can properly distribute the messages in a timely manner to the drivers."},{"poster":"TaoLu","comments":[{"poster":"TonyMel","timestamp":"1679739300.0","comment_id":"850003","content":"correct, in 2023Mar24, score: 904/1000.","upvote_count":"6"}],"comment_id":"791254","content":"This is obviously wrong. The examtopic answser is correct.","timestamp":"1674952620.0","upvote_count":"5"},{"content":"You are correct. Azure Service Bus supports filtering messages at the subscription level by using SQL-like syntax called \"SQL filters\".\n\nSo in this case, it is possible to create only one topic and have different subscriptions for each restaurant and filter the messages at the subscription level based on the restaurant name. This would allow drivers to only receive orders from the selected restaurants, without having to create a separate topic for each restaurant.","poster":"naivecoder786","comment_id":"828086","timestamp":"1677857460.0","upvote_count":"2"}],"content":"Create a single Service Bus Namespace.\nCreate a single Service Bus Topic.\nCreate a Service Bus subscription for each restaurant for which a driver can receive orders.","upvote_count":"175","poster":"NH","timestamp":"1615856280.0","comment_id":"311879"},{"comment_id":"315009","content":"Correct. If you create only one topic there won't be any filtering of messages depending on the restaurant. So every driver will have access to all the the orders. With a topic by restaurant, message from one restaurant will go to only one topic, from which the driver can choose to subscribe.","comments":[{"content":"I don't think that's correct. You can filter the messages on subscription, so the subscription can get a message from a specific restaurant even with just one topic created.","poster":"Phenr","timestamp":"1616409660.0","upvote_count":"9","comment_id":"317065","comments":[{"timestamp":"1616504340.0","upvote_count":"7","comments":[{"timestamp":"1617784320.0","comment_id":"330183","content":"so how would the driver remove the order if he has his own subscription? The order would still be visible in other subscriptions.","comments":[{"comment_id":"347443","poster":"anvimi","upvote_count":"3","content":"multiple drivers can share a single restaurant subscription thus only one driver will handle an order","timestamp":"1619937420.0"}],"poster":"kwaazaar","upvote_count":"1"},{"timestamp":"1646566560.0","content":"exactly, you cant have each driver on their own sub because that duplicates the orders into each sub queues, meaning one guy accepts the order, another guy still sees it in their own sub queue. the subs has to be on restaurant level, and you can do that by filters on the sub","upvote_count":"1","poster":"mandynotmandy","comment_id":"561971"}],"poster":"rdemontis","content":"Exactly and creating one topic for each restaurant doesn't cover two of the four requirements:\n- \"Orders are sent to all available drivers in an area\"\n- \"The first driver to accept an order removes it from the list of available orders\"\n\nThis means that one restaurant can be server by more drivers. So how can you think to manage order acceptance from one driver if you duplicate the same in more topics? It's a big deal that cause a lot of overwork not necessary.\n\nIt's all simpler by managing all orders with a topic and using the filters for each subscription to allow drivers to view only the orders that compete with them. I also inform you that on a paid test platform such as https://www.testpreptraining.com/ there is the same question and the correct answer requires only one topic.","comment_id":"318097"}]},{"content":"I agree. A driver (subscriber) can subscribe to a topic once he is near the restaurant and un-subscribe if he is at a distance. I don't get the high vote of NH.","upvote_count":"2","poster":"coffecold","comment_id":"697557","timestamp":"1666024740.0"}],"upvote_count":"18","poster":"Opimer","timestamp":"1616169780.0"},{"comment_id":"1291514","upvote_count":"1","content":"The correct sequence of actions to implement an Azure Service Bus solution for this scenario would be:\n\n1. Create a single service bus Namespace: \nA namespace is a container for all messaging components. It provides a unique scoping container, in which you can create queues, topics, and subscriptions.\n\n2. Create a single service bus topic: \nA topic is a communication channel in Azure Service Bus that sends messages to multiple subscriptions. In this case, orders are sent to the topic.\n\n3. Create a service bus subscription for each restaurant for which a driver can receive orders: \nA subscription is a named, independently configurable entity within a topic. Each driver can have a subscription for each restaurant they deliver for, allowing them to receive only the orders for those restaurants.","timestamp":"1727690520.0","poster":"Vichu_1607"},{"timestamp":"1706857260.0","content":"Create a single Service Bus Namespace. Create a single Service Bus Topic. Create a Service Bus subscription for each restaurant for which a driver can receive orders.\nTopics are used for one-to-many communication with multiple subscribing systems. By creating a topic for each restaurant, you can efficiently route messages (orders) to drivers who have selected that they will deliver orders for those restaurants. This setup allows for orders to be sent to a specific set of drivers (those interested in deliveries for a particular restaurant).","upvote_count":"1","comment_id":"1138217","poster":"FeriAZ"},{"poster":"arunkuml","upvote_count":"1","timestamp":"1702540080.0","comment_id":"1096164","content":"Got it in the exam 14/12/23. Went with provided answer. Scored 912/1000. All questions are from ExamTopics. Case study - VanArsdel, Ltd (11 questions)"},{"content":"Create a single Service Bus Namespace.\nCreate a single Service Bus Topic.\nCreate a Service Bus subscription for each restaurant for which a driver can receive orders.\nExplanation: \nwe create different topics if we are having different categories of messages such as Consider an e-commerce platform that handles order notifications, inventory updates, and customer support messages. Using separate topics, such as \"order-notifications,\" \"inventory-updates,\" and \"customer-support-messages,\" allows for clear separation of message categories and efficient routing to respective consumers. \nHowever in this case, we don't have different topics, we only have one topic which is order processing and we can enable partioning on this topic so messages can be under the same partion with the restaurant id","comment_id":"1082543","timestamp":"1701173880.0","poster":"Weam","upvote_count":"3"},{"poster":"AndySmith","upvote_count":"2","content":"On exam 3-Nov-2023. Went with most-voted answer - 932/1000.\n1) single namespace\n2) single topic\n3) subscription for each restaurant.","timestamp":"1699024860.0","comment_id":"1061537"},{"upvote_count":"4","content":"I got this question (12-Aug-2023) and I chose the given answers - 932 passed","timestamp":"1691954160.0","poster":"jaf19f","comment_id":"980248"},{"content":"This was on the exam (July 2023). Went with single/single/subscription for each restaurant. Scored 917","upvote_count":"4","comment_id":"944431","poster":"juanckar","timestamp":"1688631360.0"},{"content":"Correct\n1: Namespace is about the solution\n2: Topics are about restaurant messages\n3: Subscriptions are about driver's orders","timestamp":"1678167480.0","poster":"warchoon","upvote_count":"3","comment_id":"831585"},{"poster":"apparaog99","upvote_count":"2","content":"Got in exam 12/31","comment_id":"762993","timestamp":"1672532280.0"},{"timestamp":"1666310700.0","comment_id":"700394","content":"Got it in exam 20/10/2022","upvote_count":"5","poster":"elequiel"},{"content":"The provided answer is the most correct. There is a 2000 subscription limit for topics, so you would only allow 2000 drivers TOTAL for the entire app if you chose this as a solution. You need one topic per restaurant or the application cannot scale. You can absolutely have 1 topic, that will still work as intended, it's just not the best solution. Source: https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-subscription-service-limits#service-bus-limits","comment_id":"653584","timestamp":"1661795820.0","poster":"bipinboops","upvote_count":"3"},{"upvote_count":"1","timestamp":"1654472760.0","poster":"zhongzi","content":"It's the same question in ESI. The given answer is the same as highly voted.","comment_id":"612053"},{"timestamp":"1649698380.0","comment_id":"584340","upvote_count":"1","content":"Got this on 04/05/22","poster":"AZ204Cert"},{"comment_id":"568588","poster":"iamstudying","content":"BUDDIES, listen listen..\n\n1. Single Service Bus Namespace\n2. Topic per restaurant (10k limit of restaurants). \n\n(A single topic would work, but requires subscription filters or another component to decide which drivers receive which restaurant orders. But this isn't specified so imo not an option)\n\n3. Single subscription per topic. Each drivers who wants to deliver for a restaurant will periodically peek the subscription for messages (no lock, message not removed). Once they decide they want to deliver the order, they dequeue the message and away they go, other drivers who attempt to do so will not be able to. \n\n(At first, I also thought multiple subscriptions - but this introduces another complexity of syncing the orders across all the subscriptions if someone accepts the order delivery first... how can we notify other subscriptions? we can't.)\n\nAll in all, agree the solution sucks a$$ but this is the best bet.","timestamp":"1647369420.0","upvote_count":"6","comments":[{"comment_id":"697560","poster":"coffecold","timestamp":"1666024980.0","upvote_count":"1","content":"Multi subscriptions (drivers) per topic. How can we notify other subscriptions?> the message is locked.\nhttps://learn.microsoft.com/en-us/rest/api/servicebus/peek-lock-message-non-destructive-read"}]},{"poster":"petitbilly","comment_id":"564364","content":"Got it in exam 03/22","timestamp":"1646860260.0","upvote_count":"1"},{"content":"Single topic is less complex and more flexible solution from the client applications which submit orders. A single topic is less complex from the perspective of infrastructure management effort.\n\nCreate a single Service Bus Namespace.\nCreate a single Service Bus Topic.\nCreate a Service Bus subscription for each restaurant for which a driver can receive orders.","upvote_count":"3","poster":"leonidn","timestamp":"1642231980.0","comment_id":"523994"},{"comment_id":"486207","timestamp":"1637781900.0","poster":"altafpatel1984","content":"I guess options are incomplete. There should be option to have subscription for each driver. So in that case topic for each restaurant with subscription for each driver will make sense to have pub-sub architecture.","upvote_count":"4"},{"upvote_count":"1","poster":"altafpatel1984","timestamp":"1637781720.0","comment_id":"486203","content":"I guess options are incomplete. There should be option to have subscription for each driver. So in that case topic for each restaurant with subscription for each driver will make sense to have pub-sub architecture."},{"timestamp":"1633686840.0","content":"Single Bus Namespace > Single Bus Topic > Service Bus subscription for each restro","poster":"debanjan10","comment_id":"459150","upvote_count":"2"},{"content":"This answer is correct! \nInstead, if you create a single Service Bus Topic but don't apply a filter...\n\"Each newly created topic subscription has an initial default subscription rule. If you don't explicitly specify a filter condition for the rule, the applied filter is the true filter that enables all messages to be selected into the subscription. The default rule has no associated annotation action.\"","comments":[{"upvote_count":"2","poster":"xortan","timestamp":"1631534220.0","comment_id":"443956","content":"It is not.\n\"A driver selects the restaurants for which they will deliver orders.\" -> You set up the filter."}],"poster":"[Removed]","timestamp":"1629360540.0","upvote_count":"2","comment_id":"427324"},{"content":"This answer is correct! \nInstead, if you create a single Service Bus Topic but don't apply a filter...\n\"Each newly created topic subscription has an initial default subscription rule. If you don't explicitly specify a filter condition for the rule, the applied filter is the true filter that enables all messages to be selected into the subscription. The default rule has no associated annotation action.\"\nhttps://docs.microsoft.com/en-us/azure/service-bus-messaging/topic-filters#filters","timestamp":"1629360420.0","comment_id":"427319","poster":"[Removed]","upvote_count":"1"},{"comments":[{"comment_id":"425789","poster":"ning","content":"Drivers only see messages from subs, not from topic directly ...\nAs long as the subs can filter for restaurant, we are all good ...","comments":[{"content":"Nice explanation","timestamp":"1643446980.0","comment_id":"535334","poster":"mariodarken","upvote_count":"1"}],"timestamp":"1629116400.0","upvote_count":"4"}],"poster":"ning","upvote_count":"3","timestamp":"1629115920.0","content":"I think one namespace, one topic, then multiple subs, each sub can filter on restaurant id / name, so one sub is denoted to one restaurant. No need for each restaurant to have its own topic, though it might work as well.","comment_id":"425781"},{"poster":"GigaCaster","upvote_count":"2","content":"to me, this \"You are developing a mobile app that users can use to order from a restaurant in their area\" plays a role in the many topics part as it would be easier to have area topics and under them the current restaurant in that area .","comment_id":"416709","timestamp":"1627545360.0","comments":[{"timestamp":"1627545540.0","poster":"GigaCaster","upvote_count":"1","content":"Or you can have a resturaunt as a topic and all the areas they are established under it like the awnser provided.","comment_id":"416710"}]},{"comment_id":"402618","content":"It should be topic for each restaurant. Please focus to Point 3. Only orders for the selected restaurants will appear for the driver. All restaurants are not dealing with very drivers. To put this choice we need to go with multiple topic and relevant subscribers.","poster":"somenkr","upvote_count":"3","timestamp":"1625825640.0"},{"poster":"sujitwarrier11","timestamp":"1625277720.0","upvote_count":"3","comments":[{"upvote_count":"1","comments":[{"content":"https://azure.microsoft.com/en-us/pricing/details/service-bus/#pricing","comment_id":"558957","timestamp":"1646160660.0","upvote_count":"1","poster":"mattvasc"}],"content":"\"Additionally creating, reading (listing), updating, and deleting a queue, topic, or subscription will each incur an operation charge.\"\n\nBoth are charged.","comment_id":"558956","timestamp":"1646160660.0","poster":"mattvasc"}],"content":"A single topic should be created with multiple subscriptions with filter for resteraunt Id. the moment any driver accepts its take out of the queue. If you need to create a topic for each resteraunt i think registering of new resteraunts would have to include topic creation as a process. which means additional payment. Creating only one topic means only subscriptions need to be created which are free.","comment_id":"397249"},{"poster":"kondapaturi","timestamp":"1624816020.0","comment_id":"392274","content":"Create a single Service Bus namespace \nCreate a Service Bus topic for each restaurant for which the driver can receive messages \nCreate a Service Bus subscription for each restaurant for which each driver can receive orders","upvote_count":"4"},{"comment_id":"372189","timestamp":"1622578380.0","content":"\"The first driver to accept an order removes it from the list of available orders.\" - I don't think that point matters when discussing single topic vs many topics, because in both cases there are no duplicates in topic / between topics. With 1 topic per restaurant you can't have messages for restaurant A in topic for restaurant B. All messages are simply partitioned between topics. So if driver accepts order and deletes message from topic, no one else can see it, because it wasn't duplicated anywhere else.\nSo from my point of view both options (single / multiple topics) works. However single topic seems cheaper.","poster":"Spooky7","upvote_count":"3"},{"poster":"PoundingCode","timestamp":"1618481220.0","upvote_count":"2","comments":[{"upvote_count":"1","poster":"Arrrqqq","timestamp":"1626279000.0","comment_id":"406389","content":"More recent version on Udemy has topic per restaurant like here"}],"content":"Single topic - same question in Udemy Developing Solutions for Microsoft Azure : Practice Test","comment_id":"336145"},{"poster":"midhy","content":"Answer should be correct - You create namespace, then you create topic for every restaurant and driver is subscribing to every topic he wants to.","upvote_count":"10","timestamp":"1615890960.0","comment_id":"312217"},{"upvote_count":"10","comments":[{"timestamp":"1646160480.0","poster":"mattvasc","comment_id":"558952","upvote_count":"1","content":"Please read the Spooky7 comment above, the single topic/multiple topic won't affect this behavior."}],"content":"\"The first driver to accept an order removes it from the list of available orders.\"\nSo I think it should be one topic.","timestamp":"1615736100.0","comment_id":"310635","poster":"Kuna_Lambo"},{"content":"Correct","upvote_count":"6","timestamp":"1615595280.0","comment_id":"309297","poster":"sam365"}],"timestamp":"2021-03-13 01:28:00","topic":"6","answer_images":["https://www.examtopics.com/assets/media/exam-media/04273/0055700001.png"]}],"exam":{"isMCOnly":false,"isImplemented":true,"provider":"Microsoft","numberOfQuestions":452,"name":"AZ-204","id":48,"lastUpdated":"12 Apr 2025","isBeta":false},"currentPage":89},"__N_SSP":true}