{"pageProps":{"questions":[{"id":"z0mLB10vMJkOTlR0lkOk","unix_timestamp":1607133120,"question_text":"SIMULATION -\nPlease wait while the virtual machine loads. Once loaded, you may proceed to the lab section. This may take a few minutes, and the wait time will not be deducted from your overall test time.\nWhen the Next button is available, click it to access the lab section. In this section, you will perform a set of tasks in a live environment. While most functionality will be available to you as it would be in a live environment, some functionality (e.g., copy and paste, ability to navigate to external websites) will not be possible by design.\nScoring is based on the outcome of performing the tasks stated in the lab. In other words, it doesn't matter how you accomplish the task, if you successfully perform it, you will earn credit for that task.\nLabs are not timed separately, and this exam may more than one lab that you must complete. You can use as much time as you would like to complete each lab.\nBut, you should manage your time appropriately to ensure that you are able to complete the lab(s) and all other sections of the exam in the time provided.\nPlease note that once you submit your work by clicking the Next button within a lab, you will NOT be able to return to the lab.\n\nUsername and password -\n//IMG//\n\nUse the following login credentials as needed:\nTo enter your password, place your cursor in the Enter password box and click on the password below.\n\nUsername: Contoso/Administrator -\nPassword: Passw0rd!\nThe following information is for technical support purposes only:\n\nLab Instance: 11145882 -\n//IMG//\n\n//IMG//\n\nYou need to ensure that C:\\Scripts\\Configure.ps1 runs every time a user sign in to Client2.\nTo complete this task, sign in to the required computer or computers.","timestamp":"2020-12-05 02:52:00","topic":"3","question_id":156,"url":"https://www.examtopics.com/discussions/microsoft/view/38856-exam-md-100-topic-3-question-44-discussion/","discussion":[{"comment_id":"235354","comments":[{"upvote_count":"1","timestamp":"1619965680.0","content":"you are right. this method works fbetter than Task scheduler, because script runs even if powershell strategie is not configured (not the case for Task Scheduler).","comment_id":"347809","poster":"Perycles"},{"content":"Not really, as the question states that the script runs on the computer everytime a user logs in. The GPO approach would need to be tagged to specific users whereas the task scheduler can work for any user and is user agnostic","poster":"Shloeb","timestamp":"1626767580.0","comments":[{"upvote_count":"1","comment_id":"653408","poster":"Barrybobslee","content":"You don't have to select a user specifically. If you just open Group Policy console then it's for all users.","timestamp":"1661762880.0"}],"comment_id":"410086","upvote_count":"6"}],"timestamp":"1607133120.0","upvote_count":"14","poster":"Divy95","content":"Possible group policy approach:\n\nEdit group policy > User config. >Windows settings > Scripts (logon/logoff)"},{"timestamp":"1686819240.0","poster":"Blobbyguts","content":"You could also add a REG_SZ or REG_EXPAND_SZ entry in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run similar to\n\"%windir%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -executionpolicy bypass -file \"C:\\Scripts\\Configure.ps1\" but I'm sure M$ would not accept this as an answer\n\nMy preferred solution would be the local group policy method","comment_id":"923916","upvote_count":"1"},{"poster":"Leon666","comments":[{"content":"Basic task will set trigger only for currently logged on user.(unless you edit it after)\nIn New task you can specify at logon for 'any user' right away since the question is stating 'a user'.","comment_id":"745201","timestamp":"1671030960.0","upvote_count":"1","poster":"Hatsapatsa"}],"comment_id":"704359","timestamp":"1666755780.0","content":"why not use the \"create basic task\"? it's much easier, right?","upvote_count":"1"},{"poster":"CARIOCA","content":"Realmente os simulados (Laboratórios) que são questões práticas tem sido cobrado recentemente no final do exame sem possibilidade de retornar para verificar ? Parecidos, idênticos e que outras informações poderiam me orientar, por gentileza ? \nPor favor poderiam explicar melhor esse laboratório?","comment_id":"388355","timestamp":"1624402560.0","upvote_count":"1"},{"upvote_count":"3","poster":"edebondt","comment_id":"366890","content":"Task Scheduler can be used - but need to specify a trigger \"at log on\"","timestamp":"1622011920.0"},{"comment_id":"326621","comments":[{"poster":"VlijmenFileer","content":"Yet but as this is not a DC but a client there is no Netlogon shared, a necessity for logon scripts as these must be relative to a Netlogon share. So you should first share c:\\Scripts as Netlogon.","upvote_count":"1","comment_id":"434474","timestamp":"1630232580.0"}],"poster":"Merma","timestamp":"1617367740.0","upvote_count":"2","content":"Could this be a possible solution?\nhttps://docs.microsoft.com/en-us/troubleshoot/windows-server/user-profiles-and-logon/assign-logon-script-profile-local-user"},{"content":"This can be done in Task Scheduler, an argument is required when stipulating powershell as the program. \n\nAction: Start a program\nProgram\\script: powershell\nAdd arguments (optional): -File [Specify the file path to the script here] \n\nSource: https://blog.netwrix.com/2018/07/03/how-to-automate-powershell-scripts-with-task-scheduler/","comment_id":"286572","upvote_count":"4","poster":"MeisterPeak","timestamp":"1612841580.0"},{"content":"the answer is wrong anyway, you would need to browse to C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe and add the script as an argument. A local GP would be a better solution","upvote_count":"2","comment_id":"254746","poster":"amymay101","timestamp":"1609248000.0"},{"upvote_count":"1","comment_id":"237852","timestamp":"1607399760.0","content":"Agreed, this can also be done through Computer management and by configuring the user's profile","poster":"thecomodor"}],"answer_images":["https://www.examtopics.com/assets/media/exam-media/04292/0019100001.png","https://www.examtopics.com/assets/media/exam-media/04292/0019200001.png","https://www.examtopics.com/assets/media/exam-media/04292/0019300001.jpg"],"exam_id":95,"answer_description":"Go to the Start menu, type ג€Task Schedulerג€ and select it from the search results.\n\nTask Scheduler can also be accessed in the Control Panel under Administrative Tools.\nIn the right side of the Task Scheduler menu, under Actions, select ג€Create Task.ג€\n\nOn the General tab, enter a name and description for the task you're creating. Check the box ג€Run with highest privileges.ג€\nOnce you have filled out a name and description, click the ג€Triggersג€ tab, and then click ג€New.ג€\nIn this menu, under ג€Begin the task:ג€ select ג€At log on.ג€ Choose which user you would like the task to run for at log on. For our purposes, Any user.\nConfigure any of the applicable advanced settings you would like.\nAfter you are finished configuring the new trigger, click OK and then select the ג€Actionsג€ tab. Click ג€Newג€ to make a new action.\n\nChoose ג€Start a programג€ under the Action menu and then click ג€Browseג€ to point to C:\\Scripts\\Configure.ps1.\nClick OK to exit out of the Actions menu. The ג€Conditionsג€ and ג€Settingsג€ tabs can be left alone.\nClick OK on the Create Task menu, and you are finished.\nReference:\nhttps://www.howtogeek.com/138159/how-to-enable-programs-and-custom-scripts-to-run-at-boot/","isMC":false,"answer":"See explanation below.","answers_community":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04292/0018700001.jpg","https://www.examtopics.com/assets/media/exam-media/04292/0018900001.png","https://www.examtopics.com/assets/media/exam-media/04292/0019000001.jpg"],"answer_ET":"See explanation below."},{"id":"OeOgnYe2Is88iu064Qox","topic":"3","question_id":157,"exam_id":95,"answer_images":[],"answer":"B","discussion":[{"upvote_count":"40","content":"If, like me, you were wondering about this one, then this answer may help. https://superuser.com/questions/1334129/setting-an-environment-variable-in-windows-10-gpodder\n\nIt's noted that any CMD variable set is only available while the CMD prompt window is open. After that point it is removed.","timestamp":"1601982900.0","comments":[{"comment_id":"234441","timestamp":"1607036160.0","upvote_count":"18","content":"Forummj has provided excellent comments in this exam. Keep up the good work","poster":"Anthony_2770"}],"comment_id":"194250","poster":"forummj"},{"upvote_count":"13","comment_id":"206630","timestamp":"1603751880.0","content":"From PowerShell, you run $env:Path += \";d:\\scripts\".\nSolution provided in this question is not persistent as indicated above","poster":"Anthony_2770"},{"comments":[{"content":"By adding the D:\\Scripts folder to the list of trusted PowerShell script locations, you will be able to run PowerShell scripts located in the folder without specifying the full path.\n\nTherefore, the correct answer is B. No.\n\nHere's how:\n\n1. Open PowerShell as an administrator.\n2. Run the command \"Set-ExecutionPolicy RemoteSigned\" to allow the execution of local PowerShell scripts that are signed by a trusted publisher.\n3. Run the command \"$env:PSModulePath=$env:PSModulePath+\";D:\\Scripts\"\" to add the D:\\Scripts folder to the list of trusted PowerShell script locations.\n4. Test running a PowerShell script located in the D:\\Scripts folder without specifying the full path.","upvote_count":"1","timestamp":"1679596380.0","comment_id":"848554","poster":"Buruguduystunstugudunstuy"}],"poster":"Buruguduystunstugudunstuy","timestamp":"1679596260.0","content":"Selected Answer: B\nThe solution provided in the scenario is not correct to meet the goal of running PowerShell scripts without specifying the full path to the scripts. The command \"set.exe path=d:\\scripts\" only sets the value of the PATH environment variable to include the D:\\Scripts folder. This will allow you to run commands and executables located in the D:\\Scripts folder without specifying the full path, but it will not allow you to run PowerShell scripts without specifying the full path.\n\nTo run PowerShell scripts without specifying the full path, you should add the D:\\Scripts folder to the list of trusted PowerShell script locations. This can be done by setting the ExecutionPolicy parameter for the PowerShell session to RemoteSigned and adding the D:\\Scripts folder to the list of trusted locations.","comment_id":"848548","upvote_count":"2"},{"timestamp":"1677094020.0","content":"The command \"$env:Path += \";d:\\scripts\"\" is a valid solution to add the \"D:\\Scripts\" folder to the system path so that you can run PowerShell scripts in that folder without specifying the full path.","poster":"williamlamata","comment_id":"818293","upvote_count":"1"},{"comment_id":"818288","poster":"williamlamata","timestamp":"1677093840.0","content":"B. No.\n\nThe command \"set.exe path=d:\\scripts\" will set the value of the PATH environment variable to \"d:\\scripts\", but it will not add the path permanently or persist between PowerShell sessions. As a result, this solution will not meet the goal of allowing the PowerShell scripts to be run without specifying the full path and persisting between sessions.\n\nTo meet the goal, you can add the path to the PowerShell environment variable by running the following command in PowerShell:\n\nruby\nCopy code\n[Environment]::SetEnvironmentVariable(\"Path\", $env:Path + \";D:\\Scripts\", \"User\")\nThis command will add the \"D:\\Scripts\" path to the existing value of the PATH environment variable for the current user and persist between PowerShell sessions. After running this command, you can run the PowerShell scripts without specifying the full path.","upvote_count":"1"},{"content":"New-Variable -Name 'TestVariable' -Value 'Test Value' -Option AllScope,Constant\nI think this is the answer","upvote_count":"1","comment_id":"650810","timestamp":"1661258700.0","poster":"Wojer"},{"poster":"CARIOCA","upvote_count":"1","timestamp":"1624398960.0","comment_id":"388313","content":"Essa questão ficou muito dividida no gabarito, afinal qual seria a resposta e qual a justificativa? Após um debate de 5 comentários, o gabarito é o mesmo ou não?"},{"content":"System properties > Advanced > Environment Variables dialog","poster":"AVP_Riga","timestamp":"1616491920.0","comment_id":"317941","upvote_count":"2"},{"poster":"silicon_shady","content":"To permanently set/append the path from the command prompt (elevated): C:\\> setx path \"%PATH%;C:\\path\\to\\directory\\\"\n\nRef: https://www.shellhacks.com/windows-cmd-path-variable-add-to-path-echo-path/","upvote_count":"2","comment_id":"262204","timestamp":"1610058300.0"}],"choices":{"A":"Yes","B":"No"},"timestamp":"2020-10-06 13:15:00","unix_timestamp":1601982900,"url":"https://www.examtopics.com/discussions/microsoft/view/33776-exam-md-100-topic-3-question-45-discussion/","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou have a computer that runs Windows 10. The computer contains a folder named D:\\Scripts. D:\\Scripts contains several PowerShell scripts.\nYou need to ensure that you can run the PowerShell scripts without specifying the full path to the scripts. The solution must persist between PowerShell sessions.\nSolution: At a command prompt, you run set.exe path=d:\\scripts.\nDoes this meet the goal?","question_images":[],"answer_description":"","answers_community":["B (100%)"],"isMC":true,"answer_ET":"B"},{"id":"TG0VbDdunHciJhyaOM0N","question_id":158,"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou have a computer that runs Windows 10. The computer contains a folder named D:\\Scripts. D:\\Scripts contains several PowerShell scripts.\nYou need to ensure that you can run the PowerShell scripts without specifying the full path to the scripts. The solution must persist between PowerShell sessions.\nSolution: From a command prompt, you run set.exe PATHEXT=d:\\scripts.\nDoes this meet the goal?","answer":"B","answers_community":["B (100%)"],"question_images":[],"answer_description":"","answer_images":[],"timestamp":"2020-10-06 13:16:00","answer_ET":"B","topic":"3","isMC":true,"choices":{"B":"No","A":"Yes"},"discussion":[{"comment_id":"194251","upvote_count":"13","timestamp":"1601982960.0","content":"If, like me, you were wondering about this one, then this answer may help. https://superuser.com/questions/1334129/setting-an-environment-variable-in-windows-10-gpodder\n\nIt's noted that any CMD variable set is only available while the CMD prompt window is open. After that point it is removed.","poster":"forummj","comments":[{"poster":"jsblah","comment_id":"204849","upvote_count":"5","timestamp":"1603490940.0","content":"Thank you for posting that - I *was* wondering ;-)"}]},{"timestamp":"1679597040.0","upvote_count":"1","poster":"Buruguduystunstugudunstuy","content":"Selected Answer: B\nThe command \"set.exe PATHEXT=d:\\scripts\" only sets the value of the PATHEXT environment variable to include the D:\\Scripts folder.\n\nThe correct answer is B. No. See related question 45 with the answer, explanation, and how-to.","comment_id":"848562"},{"upvote_count":"1","content":"B. No.\n\nThe command \"set.exe PATHEXT=d:\\scripts\" will set the value of the PATHEXT environment variable to \"d:\\scripts\", but this is not the correct environment variable to modify for adding a directory to the system path. The PATHEXT environment variable is used to specify the file extensions that the command processor considers to be executable files.","poster":"williamlamata","timestamp":"1677093960.0","comment_id":"818291"}],"unix_timestamp":1601982960,"url":"https://www.examtopics.com/discussions/microsoft/view/33777-exam-md-100-topic-3-question-46-discussion/","exam_id":95},{"id":"SnfI2skIf9FcTbRqceiS","answer":"B","answer_ET":"B","question_id":159,"topic":"3","choices":{"A":"Yes","B":"No"},"url":"https://www.examtopics.com/discussions/microsoft/view/34409-exam-md-100-topic-3-question-47-discussion/","timestamp":"2020-10-13 23:30:00","answer_description":"","answers_community":["B (100%)"],"answer_images":[],"question_images":[],"isMC":true,"exam_id":95,"discussion":[{"comments":[{"comment_id":"266336","comments":[{"poster":"Alvaroll","content":"I think it's Yes. It seems that it's the profile option.\n \"On Windows, there are three methods for making a persistent change to an environment variable: setting them in your profile, using the SetEnvironmentVariable method, and using the System Control Panel.\"\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7","timestamp":"1658683020.0","upvote_count":"1","comment_id":"636159","comments":[{"comment_id":"636161","upvote_count":"2","timestamp":"1658683560.0","content":"Sorry, it's NO. The profile method needs to update a file located here $PROFILE and add the variables needed.","poster":"Alvaroll"}]}],"timestamp":"1610545500.0","upvote_count":"4","content":"You are right.\n\nTo make a persistent change to an environment variable on Windows, use the System Control Panel. Select Advanced System Settings. On the Advanced tab, click Environment Variable.... You can add or edit existing environment variables in the User and System (Machine) scopes. Windows writes these values to the Registry so that they persist across sessions and system restarts.\n\nAlternately, you can add or change environment variables in your PowerShell profile. This method works for any version of PowerShell on any supported platform.\nExample:\n$path = [Environment]::GetEnvironmentVariable('PSModulePath', 'Machine')\n$newpath = $path + ';C:\\Program Files\\Fabrikam\\Modules'\n[Environment]::SetEnvironmentVariable(\"PSModulePath\", $newpath, 'Machine')\n\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.1\n\nAnswer is NO","poster":"WalkingOnAir"}],"timestamp":"1609319820.0","poster":"Ptit_filou","upvote_count":"9","content":"https://stackoverflow.com/questions/714877/setting-windows-powershell-environment-variables\n\n\"If, some time during a PowerShell session, you need to append to the PATH environment variable temporarily, you can do it this way:\n\n$env:Path += \";C:\\Program Files\\GnuWin32\\bin\"\n\"\n\nI'd say No.","comment_id":"255470"},{"timestamp":"1679932980.0","poster":"dlast","content":"Selected Answer: B\nTested on 22H2 this does not work","comment_id":"852245","upvote_count":"2"},{"poster":"Hard1k","upvote_count":"1","comment_id":"839703","timestamp":"1678870440.0","content":"ChatGPT says YES :\nYes, running the command \"$env:Path += \";d:\\scripts\".\" in PowerShell will add the path \"D:\\Scripts\" to the system's PATH environment variable. This will allow you to run PowerShell scripts located in the \"D:\\Scripts\" folder without specifying the full path to the script. This change will persist between PowerShell sessions, allowing you to run the scripts from any location in the command prompt.","comments":[{"upvote_count":"1","timestamp":"1679598120.0","poster":"Buruguduystunstugudunstuy","comment_id":"848572","content":"The solution you provided using the `$env:Path` command is not persistent between sessions. The System Control Panel is a better option to make persistent changes to environment variables on Windows. Therefore, the correct answer is B. No.\n\nTo make a persistent change to the PATH environment variable using the System Control Panel, follow these steps:\n\n1. Open the System Control Panel by pressing the Windows key + Pause/Break\n2. Click on the Advanced system settings link on the right-hand side of the window.\n3. Click on the Environment Variables button.\n4. Under System Variables, scroll down and find the Path variable.\n5. Select the Path variable and click on Edit.\n6. Click on New and add the path to the D:\\Scripts folder (e.g., D:\\Scripts).\n7. Click OK to close all the windows.","comments":[{"upvote_count":"1","timestamp":"1679598300.0","poster":"Buruguduystunstugudunstuy","comment_id":"848576","content":"After making this change, you will be able to run PowerShell scripts located in the D:\\Scripts folder without specifying the full path, and the change to the PATH environment variable will persist across sessions and system restarts.\n\nAlternatively, you can also add or change environment variables in your PowerShell profile. This method works for any version of PowerShell on any supported platform."}]}]},{"upvote_count":"1","content":"A. Yes.\n\nThe command \"$env:Path += \";d:\\scripts\"\" is a valid solution to add the \"D:\\Scripts\" folder to the system path so that you can run PowerShell scripts in that folder without specifying the full path.\n\nThis command will append the string \";d:\\scripts\" to the existing value of the PATH environment variable for the current PowerShell session. The semicolon (;) separates each path in the PATH environment variable. The backslash () at the end of the path is required to ensure that the path is interpreted as a folder and not a file.","poster":"williamlamata","comment_id":"818295","timestamp":"1677094080.0"},{"timestamp":"1676829960.0","content":"Selected Answer: B\nAnswer is no, tested and works for a PS session but if you close and open other PS Session, doesn't work anymore","upvote_count":"1","comment_id":"814349","poster":"ccontec"},{"poster":"Hatsapatsa","upvote_count":"1","content":"Selected Answer: B\nNo.\nTested this in a globalknowledge lab and it is not persistent.","comment_id":"745209","comments":[{"comment_id":"777537","timestamp":"1673864100.0","poster":"flabezerra","upvote_count":"1","content":"I also believe this question does not reflect the answer clearly. Question 84 (which is part this series of questions) is more efficient to drive you to the System Properties."}],"timestamp":"1671031380.0"},{"upvote_count":"1","poster":"Hatsapatsa","comment_id":"745208","timestamp":"1671031320.0","content":"No.\nTested this in a globalknowledge lab and it is not persistent."},{"poster":"Crataeis","content":"Selected Answer: B\nAnswer is B","upvote_count":"1","comment_id":"704128","timestamp":"1666725480.0"},{"poster":"Henry78","upvote_count":"1","timestamp":"1658067600.0","content":"So, are all the 3 choices of this scenario NO ?","comment_id":"632580"},{"content":"Selected Answer: B\nNo. It is just for the one session","comment_id":"627708","poster":"Rickert","upvote_count":"2","timestamp":"1657079700.0"},{"content":"no is the correct answer","upvote_count":"1","comment_id":"621965","poster":"raduM","timestamp":"1656134460.0"},{"comment_id":"566201","upvote_count":"1","poster":"ikhwanulrahim","content":"Selected Answer: B\nShould be no","timestamp":"1647094980.0"},{"content":"Tested and it doesn't work, the variable is not persistent for other ps instances.\nYou can easy test it \n$env:path\n$env:path +=\";c:\\test\"\n\nopen a new ps session\n$env:path","comment_id":"546413","poster":"daye","timestamp":"1644750900.0","upvote_count":"1"},{"poster":"neobahamutk","content":"Selected Answer: B\nThe anwer is B. To make a persistent change to an environment variable on Windows, use the System Control Panel.\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.2","timestamp":"1643753280.0","upvote_count":"1","comment_id":"538228"},{"content":"NO Given answer is not persistent","upvote_count":"1","timestamp":"1637408220.0","comment_id":"482466","poster":"RoGr"},{"comment_id":"476158","content":"Tested on Powershell, \nI'd say Yes.","upvote_count":"1","timestamp":"1636628700.0","poster":"Vileita"},{"timestamp":"1631126400.0","content":"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7 if answer is no why this link looks like diferent?","upvote_count":"2","comment_id":"441609","poster":"luciaalvesnog"},{"poster":"Swieb","timestamp":"1629784500.0","upvote_count":"1","comment_id":"430486","content":"This method is not persistant, so NO. The link does contain the correct answer, however:\n\n\"To make a persistent change to an environment variable on Windows, use the System Control Panel. Select Advanced System Settings. On the Advanced tab, click Environment Variable.... You can add or edit existing environment variables in the User and System (Machine) scopes. Windows writes these values to the Registry so that they persist across sessions and system restarts.\n\nAlternately, you can add or change environment variables in your PowerShell profile. This method works for any version of PowerShell on any supported platform.\""},{"poster":"CARIOCA","comment_id":"388316","content":"Essa questão ficou muito dividida no gabarito, afinal qual seria a resposta e qual a justificativa? Após um debate de 15 comentários, o gabarito é o mesmo ou não?","upvote_count":"2","timestamp":"1624399200.0"},{"upvote_count":"4","content":"Answer is NO : just tested on my pc, the given solution only changes path for current powershell session. Open another Powershell session (without closing the first one), type $env:path and you will verify that the path doesn't include the change.","timestamp":"1619899320.0","poster":"Perycles","comment_id":"347221"},{"comment_id":"318784","timestamp":"1616562360.0","upvote_count":"4","poster":"badguytoo","content":"This should be No. see below :\nTo make a persistent change to an environment variable on Windows, use the System Control Panel. Select Advanced System Settings. On the Advanced tab, click Environment Variable.... You can add or edit existing environment variables in the User and System (Machine) scopes. Windows writes these values to the Registry so that they persist across sessions and system restarts."},{"poster":"Wilf32","timestamp":"1615223520.0","content":"I would be inclined to say its YES becasue it states \"The solution must persist between PowerShell sessions.\" it doesnt specify you close the powershell terminal....","comment_id":"305831","upvote_count":"2"},{"upvote_count":"1","timestamp":"1614013020.0","comment_id":"296785","poster":"desslok","content":"It sounds tricky, this would persist across child sessions, but not if you close the parent and re-open PS"},{"content":"It's a No. See this link: https://codingbee.net/powershell/powershell-make-a-permanent-change-to-the-path-environment-variable","upvote_count":"2","comment_id":"285946","poster":"Bong20","timestamp":"1612754220.0"},{"content":"so this will only set the variable for the session and it has to be persistent between sessions. So the answer is incorrect","comment_id":"254772","upvote_count":"1","timestamp":"1609249860.0","poster":"amymay101"},{"poster":"JoenardAF","timestamp":"1608190560.0","content":"So it is a yes or a no? I'm confused.","comment_id":"246277","upvote_count":"4"},{"comments":[{"poster":"Duyons","content":"You're a legend Tony! Keep up with the comments and correct references :)","comment_id":"235905","timestamp":"1607188860.0","upvote_count":"1"},{"poster":"redadz","comments":[{"poster":"Rstilekar","comment_id":"297656","content":"I agree. Answer is NO","upvote_count":"2","timestamp":"1614105360.0"}],"content":"Not really Correct: the Question stated clearly that the solution must be persistent. The Powershell cmdlet you provided is not persistent and will valid for the same PS Session only, another variant is to use Powershell the .NET Framework Way, or the System Properties which much easier.","comment_id":"241694","timestamp":"1607787000.0","upvote_count":"7"},{"poster":"WalkingOnAir","upvote_count":"2","content":"This way is not persistent","timestamp":"1610545620.0","comment_id":"266338"},{"poster":"AVP_Riga","timestamp":"1616492760.0","upvote_count":"1","content":"It don't work.","comment_id":"317949"}],"content":"To append ;c:\\temp to the value of the Path environment variable, use the following syntax:\n\nPowerShell\nCopy\n$Env:Path += \";c:\\temp\"","comment_id":"199426","timestamp":"1602624600.0","upvote_count":"4","poster":"Anthony_2770"}],"question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou have a computer that runs Windows 10. The computer contains a folder named D:\\Scripts. D:\\Scripts contains several PowerShell scripts.\nYou need to ensure that you can run the PowerShell scripts without specifying the full path to the scripts. The solution must persist between PowerShell sessions.\nSolution: From PowerShell, you run $env:Path += \";d:\\scripts\\\".\nDoes this meet the goal?","unix_timestamp":1602624600},{"id":"kyxpupw0k2CWJ4e8vYeS","timestamp":"2020-10-13 23:36:00","question_text":"Note: This question is part of a series of questions that present the same scenario. Each question in the series contains a unique solution that might meet the stated goals. Some question sets might have more than one correct solution, while others might not have a correct solution.\nAfter you answer a question in this section, you will NOT be able to return to it. As a result, these questions will not appear in the review screen.\nYou have a workgroup computer that runs Windows 10. The computer contains the local user accounts shown in the following table.\n//IMG//\n\nYou need to configure the desktop background for User1 and User2 only.\nSolution: From the local computer policy, you configure the Filter Options settings for the computer policy.\nDoes this meet the goal?","answer":"B","topic":"3","question_images":["https://www.examtopics.com/assets/media/exam-media/04292/0019600001.png"],"exam_id":95,"url":"https://www.examtopics.com/discussions/microsoft/view/34410-exam-md-100-topic-3-question-48-discussion/","answer_description":"","isMC":true,"question_id":160,"choices":{"A":"Yes","B":"No"},"unix_timestamp":1602624960,"answer_images":[],"discussion":[{"content":"Under Local Computer Policy, expand User Configuration, expand Administrative Templates, expand Desktop, and then click Active Desktop. Double-click Active Desktop Wallpaper. On the Setting tab, click Enabled, type the path to the desktop wallpaper that you want to use, and then click OK","comment_id":"199429","poster":"Anthony_2770","upvote_count":"18","timestamp":"1602624960.0"},{"comment_id":"206633","comments":[{"comment_id":"240514","upvote_count":"12","timestamp":"1607643840.0","content":"You would have to create 2 local group policies as 1 is an administrator and 1 is a User","comments":[{"upvote_count":"2","timestamp":"1619965920.0","content":"you're right !","poster":"Perycles","comment_id":"347814"}],"poster":"Anthony_2770"}],"content":"Additionally, you need to create a mmc and add the group policy editor and add the necessary users to this mmc.","upvote_count":"9","poster":"Anthony_2770","timestamp":"1603752060.0"},{"poster":"Tommo","timestamp":"1647247860.0","comment_id":"567522","content":"Selected Answer: B\nThis is the correct answer.","upvote_count":"1"},{"upvote_count":"1","timestamp":"1624399200.0","poster":"CARIOCA","comment_id":"388317","content":"Essa questão ficou muito dividida no gabarito, afinal qual seria a resposta e qual a justificativa? Após um debate de 4 comentários, o gabarito é o mesmo ou não?"}],"answers_community":["B (100%)"],"answer_ET":"B"}],"exam":{"lastUpdated":"12 Apr 2025","provider":"Microsoft","id":95,"numberOfQuestions":398,"name":"MD-100","isBeta":false,"isMCOnly":false,"isImplemented":true},"currentPage":32},"__N_SSP":true}