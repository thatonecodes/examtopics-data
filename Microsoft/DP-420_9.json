{"pageProps":{"questions":[{"id":"1siKymR9Xj60KpsZcSpe","answer_ET":"","answer_description":"","unix_timestamp":1715064180,"url":"https://www.examtopics.com/discussions/microsoft/view/140117-exam-dp-420-topic-1-question-46-discussion/","answer_images":["https://img.examtopics.com/dp-420/image174.png"],"question_images":["https://img.examtopics.com/dp-420/image172.png","https://img.examtopics.com/dp-420/image173.png"],"isMC":false,"topic":"1","question_id":41,"answers_community":[],"timestamp":"2024-05-07 08:43:00","answer":"","discussion":[{"timestamp":"1733427360.0","upvote_count":"3","poster":"8fe085a","content":"The answer should be:\n[{\"op\": \"increment\", \"path\": \"/items/0/OrderQty\", \"value\": -5}]\n\nSee: https://learn.microsoft.com/en-us/azure/cosmos-db/partial-document-update\n\nIncrement\nThis operator increments a field by the specified value. It can accept both positive and negative values. If the field doesn't exist, it creates the field and sets it to the specified value.\n\nAdd\nIf the target path specifies an element that already exists, its value is replaced.\n\nThe value in the question is -5 so using Add would set the node to -5 not 5.","comment_id":"1224890"},{"timestamp":"1730968980.0","upvote_count":"3","comment_id":"1207755","content":"Path option is wrong. Here is the correct JSON\n[\n {\n \"op\": \"add\",\n \"path\": \"/items/0/OrderQty\",\n \"value\": 5\n }\n]","poster":"[Removed]"}],"exam_id":69,"question_text":"HOTSPOT\n-\n\nYou have an Azure Cosmos DB for NoSQL container that contains the following item.\n\n//IMG//\n\n\nYou need to update the OrderQty value to 5 by using a patch operation.\n\nHow should you complete the JSON Patch document? To answer, select the appropriate options in the answer area.\n\n//IMG//"},{"id":"8yYC7nl8jiuXQrmKZH6y","isMC":true,"answer":"D","discussion":[{"upvote_count":"1","poster":"Examdumps2023","timestamp":"1718870280.0","content":"Selected Answer: D\nStrong:\n\nEnsures that reads always return the most recent write.\nProvides a linearizability guarantee, meaning writes are synchronously replicated to all replicas before acknowledgment.\nEnsures that reads are guaranteed to see the most recent writes, which aligns with the requirement for transactional batches.","comment_id":"1233514"},{"upvote_count":"3","timestamp":"1714761960.0","comment_id":"1206244","content":"Selected Answer: D\nIn the write region, writes must replicate synchronously across at least three replicas.\n\nOnly the Strong consistency provides the synch writing, all others are async. Therefore Strong is the answer.","poster":"[Removed]"}],"url":"https://www.examtopics.com/discussions/microsoft/view/139973-exam-dp-420-topic-1-question-47-discussion/","timestamp":"2024-05-03 20:46:00","question_images":[],"answer_ET":"D","answers_community":["D (100%)"],"exam_id":69,"choices":{"D":"Strong","B":"Bounded Staleness","C":"Eventual","A":"Consistent Prefix"},"topic":"1","question_text":"You plan to create an Azure Cosmos DB for NoSQL account that will have a single write region and three read regions.\n\nYou need to set the consistency level for the account. The solution must meet the following requirements:\n\n• In the write region, writes must replicate synchronously across at least three replicas.\n• In the read regions, reads must see writes in order for transactional batches.\n• Throughput for reads and writes must be maximized.\n\nWhich consistency level should you select?","answer_images":[],"question_id":42,"unix_timestamp":1714761960,"answer_description":""},{"id":"HoKmZ7oWbfQexqKMZEw0","discussion":[{"timestamp":"1670998380.0","upvote_count":"20","poster":"muks1003","content":"The given answers are correct, OrderId is the partition key and any query not involving the OrderId will be considered as Cross Partition (Or Fan-out) Query.","comment_id":"616030"},{"comment_id":"1164765","timestamp":"1725359160.0","content":"the given answer is correct Y-Y-N","upvote_count":"2","poster":"[Removed]"},{"comments":[{"comments":[{"upvote_count":"1","poster":"AndrySistiawan","content":"for number 2, why answer is Yes? if it will not run as a cross-partition query. t thins if \"it will not run as a cross-partition query\" answer is NO,","comment_id":"967785","timestamp":"1706686080.0"}],"timestamp":"1701884040.0","comment_id":"916411","upvote_count":"2","poster":"azuredemo2022three","content":"My Mistake\n\nAnswer is \n\nYes, it will run as a cross-partition query.\nYes, it will not run as a cross-partition query.\nNo, it will not run as a cross-partition query."}],"content":"1. SELECT * FROM c WHERE c.orderDate = \"2019-05-03\"\nYes, this query will run as a cross-partition query. Since the query does not include the partition key (orderId), it needs to scan all partitions in the container to find matching documents.\n\n2. SELECT * FROM c WHERE c.customerId = \"5425\"\nNo, this query will not run as a cross-partition query. The query includes the partition key (orderId) in the WHERE clause, allowing it to be routed to the specific partition containing documents for the given customerId.\n\n3.SELECT * FROM c WHERE c.orderDate = \"2019-05-03\" and c.orderId = \"5515d96e-5860-4fa0-a70c-c965e3ffeb49\"\nNo, this query will not run as a cross-partition query. The query includes the partition key (orderId) in the WHERE clause, allowing it to be routed to the specific partition containing the document with the matching orderId and orderDate.\n\nSo, to summarize:\nYes, it will run as a cross-partition query.\nNo, it will not run as a cross-partition query.\nNo, it will not run as a cross-partition query.","poster":"azuredemo2022three","comment_id":"914142","timestamp":"1701673320.0","upvote_count":"1"},{"timestamp":"1679750340.0","comments":[{"timestamp":"1684422660.0","upvote_count":"4","poster":"codingdown","comment_id":"721447","content":"noooope at all.\ncross partition means it will scan more than 1 partition, easy as that"}],"upvote_count":"2","comment_id":"678731","content":"NNY\nCross-pratition query means that your query hits only neccessary data from logical partition based on partition key (query has filter eg. c.orderId). If not scan whole data. IF \"orderId\" is partition key then first two queries are not cross-partition queries. \n\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/sql/how-to-query-container","poster":"Torent2005"},{"poster":"lakime","timestamp":"1666694160.0","content":"As orderid is partition key, And if we will assume that this orderid will appear in different dates and in different customers - then those answers are correct","upvote_count":"4","comment_id":"591575"}],"question_text":"HOTSPOT -\nYou have a container named container1 in an Azure Cosmos DB Core (SQL) API account. The container1 container has 120 GB of data.\nThe following is a sample of a document in container1.\n//IMG//\n\nThe orderId property is used as the partition key.\nFor each of the following statements, select Yes if the statement is true. Otherwise, select No.\nNOTE: Each correct selection is worth one point.\nHot Area:\n//IMG//","exam_id":69,"answer_ET":"","answer":"","timestamp":"2022-04-25 12:36:00","unix_timestamp":1650882960,"answer_description":"Box 1: Yes -\nRecords with different OrderIDs will match.\n\nBox 2: Yes -\nRecords with different OrderIDs will match.\n\nBox 3: No -\nOnly records with one specific OrderId will match","answers_community":[],"question_images":["https://www.examtopics.com/assets/media/exam-media/04276/0001900001.png","https://www.examtopics.com/assets/media/exam-media/04276/0002000001.png"],"isMC":false,"topic":"1","question_id":43,"url":"https://www.examtopics.com/discussions/microsoft/view/74439-exam-dp-420-topic-1-question-5-discussion/","answer_images":["https://www.examtopics.com/assets/media/exam-media/04276/0002100001.png"]},{"id":"vWnT14H8RQFWXKOqen2d","answer_images":[],"answer_ET":"D","choices":{"C":"Create a new synthetic key that contains deviceId and deviceManufacturer.","B":"Create a new synthetic key that contains deviceId and sensor1Value.","D":"Create a new synthetic key that contains deviceId and a random number.","A":"Use timestamp as the partition key."},"exam_id":69,"answer":"D","discussion":[{"poster":"muks1003","upvote_count":"13","timestamp":"1670998440.0","comment_id":"616031","content":"Selected Answer: D\nD is the correct answer, I have taken the Microsoft Official Test And the answer is D."},{"timestamp":"1734171060.0","upvote_count":"2","content":"Selected Answer: D\nI believe there is a tradeoff between the huge fragmentation for D and the possibility of hotspots you get with the other options, Since this is a write heavy high volume application then the primary concern is reducing bottlenecks associated with hotspot partitions.","comment_id":"1326414","poster":"biglebowski88"},{"timestamp":"1725359220.0","comment_id":"1164767","poster":"[Removed]","upvote_count":"2","content":"Selected Answer: D\nAnswer is correct"},{"content":"Selected Answer: D\nBecause of frequency (1s) we may not want to put too much data into the same container. The maxim quota for logical partition is 20GB, which can exhaust pretty fast.","comment_id":"652617","timestamp":"1677520440.0","poster":"Gall","upvote_count":"1"},{"content":"Correct answer is D as per this link https://docs.microsoft.com/en-us/azure/cosmos-db/sql/synthetic-partition-keys - in order to avoid a hot partition we have no option but to use a strategy like that suggested in the section \"Use a partition key with a random suffix\"","upvote_count":"2","poster":"ognamala","comment_id":"647056","timestamp":"1676449740.0"},{"timestamp":"1673627580.0","upvote_count":"3","content":"D, it's the right answer because deviceid a with pre-calculated suffixes number (Second when data is inserted) It will create 60 partitions by every deviceid","poster":"chukismit","comment_id":"630945"},{"upvote_count":"2","content":"I get the reason it is D BUT, there is context missing that would be necessary. For example, does this mean that the devicid for like devices is the same and somehow hardware bound? Also, the suggestion of a random number is not inclusive of how random the number is, obviously if its generated with each send you will create excessive partitions","poster":"jfarrell","comment_id":"611188","timestamp":"1670095800.0"},{"comment_id":"599495","timestamp":"1668080280.0","poster":"lakime","comments":[{"upvote_count":"1","comments":[{"upvote_count":"1","timestamp":"1676449800.0","content":"C and B are both wrong, the both can end up creating a hot partition because of the low cardinality","poster":"ognamala","comment_id":"647057"}],"comment_id":"599498","timestamp":"1668080400.0","poster":"lakime","content":"Sorry - I'm changing my mind ;) I guess B makes more sense in that case, we got two options (True/False) - and creating synthetic key when probably devideid will have always same manufactor - doesn't make sense"}],"content":"Selected Answer: C\nFully agree, I would either select C, or have an answer - deviceid","upvote_count":"2"},{"comment_id":"599117","upvote_count":"3","timestamp":"1668015780.0","poster":"kdsingh","content":"D, can't be the right answer because deviceid and a random number will create a new partition on every document you will write to the database."}],"isMC":true,"timestamp":"2022-05-09 17:43:00","topic":"1","question_text":"You are designing an Azure Cosmos DB Core (SQL) API solution to store data from IoT devices. Writes from the devices will be occur every second.\nThe following is a sample of the data.\n//IMG//\n\nYou need to select a partition key that meets the following requirements for writes:\n✑ Minimizes the partition skew\n✑ Avoids capacity limits\n✑ Avoids hot partitions\nWhat should you do?","unix_timestamp":1652110980,"answer_description":"","url":"https://www.examtopics.com/discussions/microsoft/view/75365-exam-dp-420-topic-1-question-6-discussion/","question_images":["https://www.examtopics.com/assets/media/exam-media/04276/0002200001.png"],"answers_community":["D (90%)","10%"],"question_id":44},{"id":"00j306oT38TJ0fC1wQpE","answers_community":["C (68%)","A (32%)"],"question_id":45,"isMC":true,"timestamp":"2022-06-03 19:32:00","answer":"C","unix_timestamp":1654277520,"choices":{"B":"Create Author, Book, and Bookauthorlnk documents in the same container.","A":"Create a container for Author and a container for Book. In each Author document, embed bookId for each book by the author. In each Book document embed authorId of each author.","D":"Create a container for Author and a container for Book. In each Author document and Book document embed the data from Bookauthorlnk.","C":"Create a container that contains a document for each Author and a document for each Book. In each Book document, embed authorId."},"topic":"1","question_images":["https://www.examtopics.com/assets/media/exam-media/04276/0002400001.png"],"url":"https://www.examtopics.com/discussions/microsoft/view/76538-exam-dp-420-topic-1-question-7-discussion/","exam_id":69,"question_text":"You maintain a relational database for a book publisher. The database contains the following tables.\n//IMG//\n\nThe most common query lists the books for a given authorId.\nYou need to develop a non-relational data model for Azure Cosmos DB Core (SQL) API that will replace the relational database. The solution must minimize latency and read operation costs.\nWhat should you include in the solution?","answer_description":"","discussion":[{"upvote_count":"18","poster":"jfarrell","timestamp":"1670095920.0","comment_id":"611190","content":"This is nonsense. Microsoft;s own documentation clearly states that for groups of data with like PKs (and it would be author here) use the same container. C is the answer"},{"upvote_count":"6","poster":"grada","timestamp":"1673790540.0","comments":[{"upvote_count":"4","poster":"essdeecee","timestamp":"1678730040.0","comment_id":"668222","content":"Perfect. A link to the exact example in the documentation for this exact question. Not clear from the question but logically it [u]is[/u] a N:N relationship."}],"comment_id":"631722","content":"Selected Answer: A\nA is the closest of what I'd model, with a little addon of both books and authors containing collections of not only the authorIds and bookIds (respectively), but also a subset of data from the documents they're referencing (for instance, authorId + authorName, and bookId + bookTitle).\n\nhttps://docs.microsoft.com/en-us/azure/cosmos-db/sql/modeling-data#hybrid-data-models"},{"timestamp":"1719647340.0","poster":"Blubb1860","content":"Selected Answer: C\nC, is correct. You should not have two separate containers and you want to embed author information in books","comment_id":"1108542","upvote_count":"3"},{"poster":"xRiot007","upvote_count":"1","comments":[{"upvote_count":"1","timestamp":"1730729400.0","poster":"rakun","content":"\"add directly to the author the list of books\" - you are assuming stuff here, which is not good. Theoretically, if the author have 1 mil of books, you can create partition distribution skew, hot partition, hit limits and so on","comment_id":"1206495"}],"comment_id":"1101444","content":"C - one container for Author and Book and a prop in Book to link the author. An even better solution would be to add dirrectly to the author the list of books, because the most used query is the list of books by author.","timestamp":"1718872920.0"},{"content":"Correct Answer is A","poster":"[Removed]","timestamp":"1714562280.0","upvote_count":"1","comment_id":"1059723"},{"timestamp":"1703450580.0","poster":"azuredemo2022three","content":"Selected Answer: C\nSelected Answer: C","upvote_count":"2","comment_id":"932847"},{"upvote_count":"3","comment_id":"856760","timestamp":"1696060980.0","poster":"imando","content":"Selected Answer: C\nC is correct answer"},{"upvote_count":"3","timestamp":"1693171680.0","poster":"Ranzzzan","comments":[{"poster":"monniq","content":"A suggests for having 2 separate containers. C is in fact the Hybrid data model.","timestamp":"1710270660.0","comment_id":"1005944","upvote_count":"1"}],"comment_id":"824228","content":"A\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/nosql/modeling-data#hybrid-data-models"},{"timestamp":"1682003700.0","comment_id":"700069","poster":"NickKazen","comments":[{"poster":"codingdown","timestamp":"1684658400.0","upvote_count":"1","content":"Then what? \nIf the number of books becomes very high, retrieving all the books per Author would require a high effort in both scenario ( A or C) . Having the Author document embedded in the same container would not cause substantial overhead, (only extra operation to do in C would be to filter out the Author document based on property \"type\" AFTER retrieving all books (N)/ and author (1) documents having same partition key.","comment_id":"723406"},{"poster":"DirectX","timestamp":"1682409720.0","upvote_count":"2","content":"\"there is no limit on the number of books authors can write (unfortunately in some cases)\".\nI think that this is not the case in real life. The ration is 1:few","comment_id":"703678"}],"content":"Selected Answer: A\nAlthough it would minimise read operation costs, there is no limit on the number of books authors can write (unfortunately in some cases). Because of that, the size of the actual document can grow enormously. That on its own will cause a huge factor of latency.\n\nhttps://learn.microsoft.com/en-us/azure/cosmos-db/nosql/modeling-data#when-not-to-embed","upvote_count":"1"},{"poster":"remz","comments":[{"comment_id":"647599","poster":"remz","timestamp":"1676551560.0","content":"i read it back , A is the Right answer!","upvote_count":"1"}],"content":"Selected Answer: C\nC is the most read cost effective","comment_id":"647596","upvote_count":"2","timestamp":"1676551500.0"},{"comment_id":"647059","content":"Selected Answer: C\nWe are explicitly required to minimise cost and latency, A although it would get the job done it would be highly inefficient - the relationship between an author and books is a one to few (1-many but bounded), hence data should be embedded - refer to the below links\n\nhttps://docs.microsoft.com/en-us/azure/cosmos-db/sql/modeling-data\nhttps://docs.microsoft.com/en-us/azure/cosmos-db/sql/how-to-model-partition-example","timestamp":"1676450700.0","poster":"ognamala","upvote_count":"5"},{"poster":"shachar_ash","upvote_count":"2","timestamp":"1670427720.0","comment_id":"612784","content":"In C you put them in the same container, and embedding to lower the latency"}],"answer_ET":"C","answer_images":[]}],"exam":{"isMCOnly":false,"provider":"Microsoft","isBeta":false,"name":"DP-420","id":69,"isImplemented":true,"numberOfQuestions":147,"lastUpdated":"12 Apr 2025"},"currentPage":9},"__N_SSP":true}