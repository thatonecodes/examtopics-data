{"pageProps":{"questions":[{"id":"hl1wEvPHGRGyrhFgZqC5","answer_images":[],"exam_id":402,"question_id":181,"answer_ET":"CBF","timestamp":"2023-01-18 19:08:00","unix_timestamp":1674065280,"discussion":[{"upvote_count":"2","comment_id":"1289576","timestamp":"1727366220.0","poster":"ASPushkin","content":"answer: BCF\nA. not right\nit is possible just without initialization like this int[][][] e = new int[1][3][];\nB. correct\nshort sh = 'A' without casting works as well\nUnicode value for 'A' is 65. So by a narrowing primitive conversion (§5.2) it doesn't require a casting operator. \nD. not right\nthe byte is converted to an int via widening primitive conversion (§5.1.2), and then the resulting int is converted to a char by narrowing primitive conversion (§5.1.3).\nE. not right\n'#' can not be used as a variable name\nF. correct\nIn Java 7 and above the underscore can be used in numeric literals\nG. not rigth\ntrue, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.","comments":[{"timestamp":"1733586600.0","upvote_count":"1","content":"D. not right\n(jls se7 5.1.2)\nshort to int, long, float, or double","poster":"ASPushkin","comment_id":"1323164"}]},{"comment_id":"995120","upvote_count":"1","timestamp":"1693486200.0","poster":"[Removed]","content":"Selected Answer: BCF\nA is not a 3-Dimensional array\nD needs a cast to a char\nE is invalid identifier name\nG is invalid identifier name as false is a reserved word"},{"content":"Selected Answer: BCF\nBCF are correctt","upvote_count":"1","comment_id":"911020","poster":"Stavok","timestamp":"1685524080.0"},{"content":"BCF are the correct answers","comment_id":"886873","upvote_count":"1","poster":"bharathdave","timestamp":"1682986980.0"},{"content":"BCF are the correct answers","poster":"Ankit1010","upvote_count":"2","comment_id":"780293","timestamp":"1674065280.0"}],"topic":"1","choices":{"E":"String contact# = “(+2) (999) (232)”;","A":"int[][][] e = {{1,1,1},{2,2,2}};","D":"byte b = 10;\nchar c = b;","F":"int x = 12_34;","C":"float x = 1f;","G":"boolean false = (4 != 4);","B":"short sh = (short)’A’;"},"question_text":"Which three initialization statements are correct? (Choose three.)","answers_community":["BCF (100%)"],"url":"https://www.examtopics.com/discussions/oracle/view/95880-exam-1z0-819-topic-1-question-7-discussion/","question_images":[],"isMC":true,"answer":"BCF","answer_description":""},{"id":"EFKeCU9Fhqk02FAXTOtR","exam_id":402,"answer":"BCE","timestamp":"2023-05-18 19:06:00","question_id":182,"url":"https://www.examtopics.com/discussions/oracle/view/109661-exam-1z0-819-topic-1-question-70-discussion/","isMC":true,"discussion":[{"poster":"ASPushkin","timestamp":"1721570460.0","content":"Selected Answer: BCE\nanswer: EBC\nE correct\nthe signature of the implementation method must be the same\nthe return type must be compatible(covariant) between the implementation and interface methods\n--\nB correct\nbecause of E\n--\nC correct\nreturn new B(str)\nAbstract classes cannot be instantiated","comment_id":"1252487","upvote_count":"1"},{"content":"Selected Answer: BCE\nBCE are correct","comment_id":"1144048","upvote_count":"1","timestamp":"1707366240.0","poster":"mendjijet"},{"upvote_count":"2","comment_id":"1116229","content":"B. A cannot be final (So B in impl throw compilation error because B cannot extends A) \nC. B cannot be abstract (so cannot do new B()). \nE. B is subclass of A (method is overriding so then => B is A","timestamp":"1704668820.0","poster":"d7bb0b2"},{"poster":"d7bb0b2","timestamp":"1702165380.0","comment_id":"1092159","upvote_count":"1","content":"B. A cannot be final. C. B cannot be abstract. E. B is a subtype of A."},{"comment_id":"954529","poster":"Stavok","timestamp":"1689618660.0","content":"Selected Answer: BCE\nThe correct answers are B. A cannot be final, C. B cannot be abstract, and E. B is a subtype of A.\n\n Since the code compiles correctly, the method build in the BuilderImpl class must be a valid implementation of the method declared in the Question70 interface. This means that the return type of the build method in the BuilderImpl class, which is B, must be a subtype of the return type of the build method in the Builder interface, which is A. Therefore, option E is correct.","upvote_count":"2"},{"poster":"Mukes877","upvote_count":"1","timestamp":"1686223920.0","content":"Selected Answer: BCE\ncorrect answer is B,C,E","comment_id":"918194"},{"timestamp":"1684832040.0","poster":"Adel2023","comment_id":"904756","upvote_count":"2","content":"Selected Answer: BCE\ncorrect answer is B,C,E"},{"poster":"xuancat","content":"Selected Answer: BCF\nB, C, F","timestamp":"1684429560.0","comment_id":"901396","upvote_count":"1"}],"topic":"1","answer_description":"","unix_timestamp":1684429560,"choices":{"B":"A cannot be final.","C":"B cannot be abstract.","A":"A cannot be abstract.","E":"B is a subtype of A.","F":"A is a subtype of B.","D":"B cannot be final."},"question_images":["https://img.examtopics.com/1z0-819/image107.png"],"answer_images":[],"question_text":"Given:\n\npublic interface Builder {\npublic A build(String str);\n}\n\nand\n\n//IMG//\n\n\nAssuming that this code compiles correctly, which three statements are true? (Choose three.)","answer_ET":"BCE","answers_community":["BCE (88%)","13%"]},{"id":"IxxP4qZ9E0pVE2zcne0J","answer_description":"","exam_id":402,"discussion":[{"content":"Selected Answer: A\nanswer : A\nEnhanced loop is actually using itterator under the hood.\nAccording to the Java API documentation [API 2014]:\nIt is not generally permissible for one thread to modify a Collection while another thread is iterating over it. In general, the results of the iteration are undefined under these circumstances.\nBut acording to sleep time delay the non-thread loop itterator will start earlier. But itettrator works directly with arraylist and itterator has to reflect the data modification.\nAnswer A is more preferable.","timestamp":"1721479500.0","poster":"ASPushkin","comment_id":"1251745","upvote_count":"1"},{"content":"Selected Answer: D\nD tested","upvote_count":"1","poster":"mendjijet","comment_id":"1144051","timestamp":"1707366840.0"},{"timestamp":"1702166100.0","comments":[{"poster":"d7bb0b2","upvote_count":"1","content":"NOTICE: foreach print 3, 4 because CopyOnWriteArrayList when is currently itering, this iterations is on a copy of original list, not in the same list. So when change 4 by four no reflected in the copy that iterate.","timestamp":"1704671280.0","comment_id":"1116247"}],"content":"is a dificult question, if run normaly D is correct, but if run with debug option step by step can modify answers because the time in breackpoint can modified output. \nBut \nThe main method in the Example class is creating a concurrent list cp with the elements \"1\", \"2\", \"3\", \"4\". Then, it creates a Runnable that sleeps for 150 milliseconds, changes the fourth element of the list to \"four\", and prints the list. After that, it creates a new thread t with the Runnable and starts it. While the thread t is sleeping and before it changes the fourth element of the list, the main thread enters a loop and starts printing the elements of the list one by one, sleeping 100 milliseconds between each print. Therefore, it's likely that the main thread prints the first elements of the list before the thread t gets a chance to change the fourth element. However, the exact behavior may vary depending on the operating system's thread scheduler and when exactly the threads are scheduled to run.","comment_id":"1092169","upvote_count":"2","poster":"d7bb0b2"},{"upvote_count":"1","content":"Selected Answer: D\nTested: D.","timestamp":"1694085300.0","comment_id":"1001457","poster":"Omnisumem"},{"comment_id":"954531","content":"Selected Answer: D\nD is Correct","poster":"Stavok","timestamp":"1689618780.0","upvote_count":"1"},{"timestamp":"1688005620.0","upvote_count":"1","comment_id":"937395","content":"Answer: D","poster":"tmuralimanohar"},{"timestamp":"1686225480.0","content":"Selected Answer: D\nD is right because Main thread will also print data and r thread is also print data and those data will be different from each other.","comment_id":"918218","poster":"Mukes877","upvote_count":"2"},{"poster":"KMLA","content":"D is correct answer","upvote_count":"3","comment_id":"825534","timestamp":"1677647280.0"}],"answer_images":[],"timestamp":"2023-03-01 06:08:00","choices":{"A":"1 2 [1, 2, 3, four] 3 four","B":"1 2 [1, 2, 3, 4] 3 4","C":"1 2 [1, 2, 3, 4] 3 four","D":"1 2 [1, 2, 3, four] 3 4"},"question_text":"Given:\n\n//IMG//\n\n\nWhat is the output?","unix_timestamp":1677647280,"url":"https://www.examtopics.com/discussions/oracle/view/101212-exam-1z0-819-topic-1-question-71-discussion/","answer":"D","topic":"1","answer_ET":"D","answers_community":["D (83%)","A (17%)"],"question_images":["https://img.examtopics.com/1z0-819/image108.png"],"isMC":true,"question_id":183},{"id":"6LnnYxfy4PGIvW7wDn62","answer_images":[],"exam_id":402,"question_id":184,"timestamp":"2023-05-18 19:07:00","answer_ET":"B","unix_timestamp":1684429620,"discussion":[{"timestamp":"1721407740.0","comment_id":"1251335","content":"there is no right answer because of raw type in UnaryOperator declaration\nA. Failed\nerror: incompatible types: incompatible parameter types in lambda expression\nUnaryOperator u = (int i)->i*2;\n ^\nB. failed\ni is type of Object because of raw type\nbad operand types for binary operator '*'\nC. failed\nwe can not skip the parenthesis in single parametr lambda\nD. failed\ni is type of Object because of raw type\nbad operand types for binary operator '*'\nand return with semicolons","upvote_count":"1","poster":"ASPushkin"},{"comment_id":"1144057","content":"Selected Answer: B\nB is ok but notice that list is immutable","poster":"mendjijet","upvote_count":"1","timestamp":"1707367260.0"},{"poster":"d7bb0b2","comments":[{"poster":"d7bb0b2","comment_id":"1116257","content":"UnaryOperator<Integer> u = (Integer i) -> i * 2; OR THIS","upvote_count":"1","timestamp":"1704672120.0"}],"upvote_count":"1","comment_id":"1116256","timestamp":"1704672000.0","content":"None correct answer:\nbut if the options have a Typed in declaration this two options are valid:\n\nB. UnaryOperator<Integer> u = (var i) -> i * 2; \nD. UnaryOperator<Integer> u = i -> i * 2;\n\nUnaryOperator<Integer> u = (int i) -> i * 2. => invalid, lamba only accepts wrapper clases not primitives\n\n C. UnaryOperator<Integer> u = var i -> { return i * 2; }; // bad sintax for var i cannot contain (var i)\n\nthat is correct"},{"timestamp":"1694151780.0","comment_id":"1002155","upvote_count":"2","poster":"Omnisumem","content":"Selected Answer: B\nTested. All are wrong. Because all left side in answers are the same we should find correct expression on right side. Let say that on left side in all answers we have \"UnaryOperator<Integer>\" instead of \"UnaryOperator\". That make sense because left side is the same in all answers. In that case only B is valid."},{"poster":"[Removed]","timestamp":"1693391280.0","content":"There's no answer here. As first of all: All of these UnaryOperators are of type UnaryOperator<Object> so there's not a single one valid.\nSecondly you can't modify a List created with List.of() so it will throw a unsupportedOperationException","comment_id":"993959","upvote_count":"1"},{"timestamp":"1689619140.0","poster":"Stavok","comment_id":"954537","content":"Selected Answer: A\nThe correct answer is `A. UnaryOperator u = (int i) -> i * 2;`. This line of code creates a `UnaryOperator` object that takes an `int` as input and returns the result of multiplying the input by 2.\n\nOption B is incorrect because the `var` keyword cannot be used in a lambda expression. Option C is incorrect because the syntax for a lambda expression with a single parameter does not allow the use of the `var` keyword. Option D is incorrect because the lambda expression is missing a closing brace.","upvote_count":"1"},{"timestamp":"1688005920.0","poster":"tmuralimanohar","content":"Answer: none of the above. list is immutable, hence throws unsupportedOperation exception","comment_id":"937396","upvote_count":"1"},{"upvote_count":"2","comment_id":"920267","poster":"MSEng","timestamp":"1686427320.0","content":"There is no correct answer here. The specified UnaryOperators can only store objects. If they had types(<Integer> for instance), then A & D with some bit of syntax correction could have worked"},{"poster":"Stavok","comment_id":"917446","timestamp":"1686159180.0","upvote_count":"2","content":"Selected Answer: B\nB is Correct"},{"content":"Selected Answer: B\nB is correct","upvote_count":"2","timestamp":"1684429620.0","comment_id":"901397","poster":"xuancat"}],"topic":"1","choices":{"D":"UnaryOperator u = i -> { return i * 2);","B":"UnaryOperator u = (var i) -> (i * 2);","C":"UnaryOperator u = var i -> { return i * 2; };","A":"UnaryOperator u = (int i) -> i * 2;"},"question_text":"Given the code fragment:\n\n//IMG//\n\n\nWhich can replace line 2?","answers_community":["B (88%)","13%"],"url":"https://www.examtopics.com/discussions/oracle/view/109662-exam-1z0-819-topic-1-question-72-discussion/","question_images":["https://img.examtopics.com/1z0-819/image109.png"],"isMC":true,"answer":"B","answer_description":""},{"id":"LwkInyVQlWQeL7ZUg45u","answer_description":"","answer":"D","choices":{"A":"C -\nC++\n\nGo -\nKotlin","B":"JAVA","D":"C -\nC++\n\nJAVA -\n\nGO -\nKOTLIN","C":"C -\nC++\n\nGO -\nKOTLIN"},"answer_images":[],"question_images":["https://img.examtopics.com/1z0-819/image110.png"],"exam_id":402,"isMC":true,"question_id":185,"topic":"1","timestamp":"2023-06-07 19:48:00","question_text":"Given the content from lines.txt:\n\n\nC -\nC++\n\nJava -\n\nGo -\n\nKotlin -\n\nand\n\n//IMG//\n\n\nWhat is the result?","unix_timestamp":1686160080,"discussion":[{"comment_id":"1285042","timestamp":"1726550160.0","content":"Ans: D TESTED","poster":"06d854e","upvote_count":"1"},{"content":"Selected Answer: D\n.filter(line -> !line.equalsIgnoreCase(\"JAVA\")\nequalsIgnoreCase(\"JAVA\")\n Two strings are considered equal ignoring case if they are of the same length and corresponding characters in the two strings are equal ignoring case.\nso all lines ARE included.","upvote_count":"1","poster":"ASPushkin","comment_id":"1250284","timestamp":"1721296020.0"},{"timestamp":"1710228660.0","content":"Selected Answer: C\nC is the correct answer, because data that is not equal to \"JAVA\" is filtered line by line from the file, so there will be no JAVA in the final output.","comment_id":"1171507","poster":"Galen86","upvote_count":"1"},{"upvote_count":"2","content":"Selected Answer: D\nD tested JAVA # JAVA-","poster":"mendjijet","timestamp":"1707367380.0","comment_id":"1144063"},{"timestamp":"1702167420.0","upvote_count":"2","poster":"d7bb0b2","comment_id":"1092189","content":"D is correct because s read line by line and JAVA has a - , and is not equals to JAVA. if no have that space or - remove java from the final list"},{"poster":"Omnisumem","content":"Selected Answer: D\nTested.","timestamp":"1694153520.0","upvote_count":"1","comment_id":"1002180"},{"comment_id":"937398","upvote_count":"1","poster":"tmuralimanohar","timestamp":"1688006040.0","content":"Answer: D"},{"comment_id":"917462","upvote_count":"1","timestamp":"1686160080.0","poster":"Stavok","content":"Selected Answer: D\nD is Correct\n\nTESTED"}],"answer_ET":"D","url":"https://www.examtopics.com/discussions/oracle/view/111426-exam-1z0-819-topic-1-question-73-discussion/","answers_community":["D (83%)","C (17%)"]}],"exam":{"isBeta":false,"id":402,"isImplemented":true,"lastUpdated":"12 Apr 2025","name":"1z0-819","isMCOnly":false,"numberOfQuestions":213,"provider":"Oracle"},"currentPage":37},"__N_SSP":true}