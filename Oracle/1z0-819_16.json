{"pageProps":{"questions":[{"id":"dfU8sWF6lD4OKELOXCmV","question_id":76,"answer_images":[],"answer_description":"","answer":"C","question_text":"Given:\n\n//IMG//\n\n\nWhat is the result?","url":"https://www.examtopics.com/discussions/oracle/view/114505-exam-1z0-819-topic-1-question-167-discussion/","question_images":["https://img.examtopics.com/1z0-819/image261.png"],"topic":"1","choices":{"E":"X is 10","C":"The compilation fails due to an error in line 2","B":"The compilation fails due to an error in line 1","A":"X is 2","D":"Error parsing value 0"},"timestamp":"2023-07-08 13:04:00","discussion":[{"timestamp":"1720553280.0","content":"Selected Answer: C\nx not can be access in catch block","poster":"d7bb0b2","upvote_count":"1","comment_id":"1117860"},{"content":"C: catch clause cannot see X create in try block","poster":"d7bb0b2","timestamp":"1718128800.0","comment_id":"1093806","upvote_count":"1"},{"content":"Selected Answer: C\nTested: C.","poster":"Omnisumem","upvote_count":"1","comment_id":"1041613","timestamp":"1712914020.0"},{"upvote_count":"1","timestamp":"1709213460.0","comment_id":"995056","content":"Selected Answer: C\nC is correct. x is out of scope in the catch block.","poster":"[Removed]"},{"upvote_count":"1","timestamp":"1705869360.0","poster":"Stavok","comment_id":"958817","content":"Selected Answer: C\nC is correct \n\nx cannot be resolved to a variable"},{"poster":"KiraguJohn","comment_id":"946418","timestamp":"1704719040.0","content":"C as x is not in the scope.","upvote_count":"1"}],"exam_id":402,"answers_community":["C (100%)"],"answer_ET":"C","unix_timestamp":1688814240,"isMC":true},{"id":"5mdi6hCOr1ilMHjcISQA","exam_id":402,"answer_images":[],"answer_description":"","answer_ET":"ADG","url":"https://www.examtopics.com/discussions/oracle/view/114508-exam-1z0-819-topic-1-question-168-discussion/","question_id":77,"answer":"ADG","answers_community":["ADG (100%)"],"unix_timestamp":1688814720,"question_text":"Given:\n\n//IMG//\n\n\nWhich three statements cause a compiler error when inserted at line l? (Choose three.)","choices":{"C":"int c = three;","D":"int a = one++;","H":"int a = ExampleInterface.one;","B":"int b = two;","E":"int f = ExampleInterface.three;","G":"int e = ExampleInterface.two++;","A":"int i = theInstance.three++;","F":"int h = theInstance.two;"},"isMC":false,"discussion":[{"poster":"Omnisumem","timestamp":"1728725940.0","upvote_count":"2","comment_id":"1041626","content":"Selected Answer: ADG\ntested: ADG"},{"timestamp":"1727951400.0","upvote_count":"1","comment_id":"1023831","poster":"dilleman","content":"ADG, tested"},{"poster":"Stavok","content":"Selected Answer: ADG\nThe three statements that cause a compiler error when inserted at line 1 are: A. int i = theInstance.three++;, D. int a = one++;, and G. int e = ExampleInterface.two++;. These statements cause errors because they attempt to increment final variables, which is not allowed in Java.","upvote_count":"1","timestamp":"1721587080.0","comment_id":"958820"},{"comment_id":"946422","upvote_count":"1","poster":"KiraguJohn","timestamp":"1720437120.0","content":"ADG all variables declared within an interface are implicitly considered as public, static, and final. This means that interface variables are constants and cannot be modified once they are assigned a value."}],"topic":"1","timestamp":"2023-07-08 13:12:00","question_images":["https://img.examtopics.com/1z0-819/image262.png"]},{"id":"t0J5nqZftGGWhdvg7WYB","answer":"D","question_id":78,"unix_timestamp":1688922960,"question_images":["https://img.examtopics.com/1z0-819/image263.png","https://img.examtopics.com/1z0-819/image264.png","https://img.examtopics.com/1z0-819/image265.png"],"isMC":true,"discussion":[{"timestamp":"1727156820.0","upvote_count":"1","comment_id":"1181360","poster":"cathDev","content":"Selected Answer: D\nD is correct .\nC is not correct. method x needs to be public not private package"},{"timestamp":"1722855360.0","comment_id":"1141101","poster":"ASPushkin","upvote_count":"1","content":"Selected Answer: D\nsee my answer below"},{"upvote_count":"1","timestamp":"1720808220.0","comment_id":"1121092","content":"C is the correct answer. tricky as method x() with weaker access is part of option B and not C.","poster":"Samps"},{"content":"Selected Answer: D\nC => is incorrect x() can't has weaker access privileges\nD= > only needs implement z because in superclass is abstract in position /*1 *! nothing is need","upvote_count":"1","comment_id":"1117863","poster":"d7bb0b2","timestamp":"1720553820.0"},{"timestamp":"1716396120.0","content":"answer : D\nclass C implements interface A \nAnd method x() comes from class B\n\nabstract class B {\n public void x() {}\n public abstract void z();\n}\nclass C extends B implements A {\n public void z() {}\n}\n--------\n C is wrong\nmethod x() in class C can not has weaker access privileges\nA and B are wrong too\n@Override on position 2 is not good\nThere is no super class for class B","poster":"ASPushkin","comment_id":"1077677","upvote_count":"1"},{"comment_id":"1023834","timestamp":"1712140620.0","upvote_count":"2","content":"D is correct.\nC is not correct since void x is public in Class B and has a weaker privilege in class C so this wont compile.","poster":"dilleman"},{"comment_id":"995060","upvote_count":"1","content":"Selected Answer: C\nC is correct as C needs to override both z() and x()","poster":"[Removed]","timestamp":"1709213760.0"},{"upvote_count":"1","poster":"Stavok","timestamp":"1705930980.0","comment_id":"959447","content":"Selected Answer: C\nC is Correct\n\nTESTED"},{"poster":"KiraguJohn","timestamp":"1704827760.0","comments":[{"content":"answser is D","comment_id":"957508","upvote_count":"2","poster":"Adel2023","timestamp":"1705758960.0"}],"comment_id":"947452","content":"Answer is B","upvote_count":"1"}],"choices":{"A":"","B":"","D":"public void z() { } // position 3","C":""},"answer_description":"","question_text":"Given:\n\n//IMG//\n\n\nand\n\n//IMG//\n\n\nand\n\n//IMG//\n\n\nWhich code, when inserted at one or more marked position, would allow classes B and C to compile?","answer_images":[],"exam_id":402,"timestamp":"2023-07-09 19:16:00","answer_ET":"D","topic":"1","url":"https://www.examtopics.com/discussions/oracle/view/114608-exam-1z0-819-topic-1-question-169-discussion/","answers_community":["D (60%)","C (40%)"]},{"id":"BOf0j0giRnyNH7JGhimO","answer_images":[],"topic":"1","unix_timestamp":1667939160,"question_text":"Given:\n//IMG//\n\nand the code fragment:\n//IMG//\n\nWhich three code fragments, at line n1, prints SPRING? (Choose three.)","answer":"CDG","isMC":true,"answers_community":["CDG (100%)"],"exam_id":402,"timestamp":"2022-11-08 21:26:00","answer_description":"","choices":{"B":"System.out.println(Season.values(1));","E":"System.out.println(Season.valueOf(‘s’));","D":"System.out.println(Season.valueOf(“SPRING”));","A":"System.out.println(Season.valueOf(“SPRING”).ordinal());","F":"System.out.println(sA[0]);","C":"System.out.println(Season.SPRING);","G":"System.out.println(sA[1]);"},"url":"https://www.examtopics.com/discussions/oracle/view/87180-exam-1z0-819-topic-1-question-17-discussion/","answer_ET":"CDG","question_images":["https://img.examtopics.com/1z0-819/image25.png","https://img.examtopics.com/1z0-819/image26.png"],"question_id":79,"discussion":[{"timestamp":"1733773140.0","poster":"d7bb0b2","upvote_count":"1","content":"values metod, not aceptt parameters , B is incorrect,\nC D AND G CORRECT","comment_id":"1092005"},{"timestamp":"1733625300.0","upvote_count":"1","content":"C,D AND E. is correct","comment_id":"1090720","poster":"d7bb0b2"},{"upvote_count":"1","comment_id":"910529","poster":"Stavok","content":"Selected Answer: CDG\nANSWER IS C,D & G","timestamp":"1717093860.0"},{"timestamp":"1717063800.0","poster":"Stavok","upvote_count":"2","comment_id":"911074","content":"Selected Answer: CDG\nA prints 1\nB produces an error : method values in enum Question17 cannot be applied to given types;\nE produces an error : no suitable method found for valueOf(char)\nF prints Winter"},{"upvote_count":"3","timestamp":"1711616340.0","poster":"JGR_77","content":"CDG\nSystem.out.println(Season.SPRING);\n System.out.println(Season.valueOf(\"SPRING\"));\nSystem.out.println(sA[1]);","comment_id":"852899"},{"comment_id":"800168","timestamp":"1707247140.0","poster":"Ankit1010","upvote_count":"2","content":"C, D, G is the correct answer.\n\n System.out.println(sA[1]);\n System.out.println(Season.valueOf(\"SPRING\"));\n System.out.println(Season.SPRING);"},{"comment_id":"787211","poster":"RP384","content":"Selected Answer: CDG\ncardinal will not print String, valueOf(c) will produce exception.","upvote_count":"2","timestamp":"1706149800.0"},{"comment_id":"714105","poster":"Leksh_geeth","content":"Answer is CDG","upvote_count":"1","timestamp":"1699475160.0"}]},{"id":"5MRpBBdXdYrixpub5Sv5","question_text":"Given:\n\n//IMG//\n\n\nWhich two code fragments remove the elements from the original list? (Choose two.)","answers_community":["AC (86%)","14%"],"answer_description":"","topic":"1","discussion":[{"timestamp":"1720064820.0","poster":"aruni_mishra","comment_id":"1241792","upvote_count":"1","content":"Note: question ask which code fragments remove the elements from the \"original list\".\nanswer is None.\n\nif question would has been which code compiles, then answer is A and C.\nbecause \n\"for-each\" loop use Iterator, and with regular list, we get : ConcurrentModificationException"},{"poster":"cathDev","timestamp":"1712815920.0","content":"Selected Answer: AC\nTested A C","comment_id":"1193478","upvote_count":"1"},{"timestamp":"1707050340.0","poster":"ASPushkin","content":"Selected Answer: A\nA : ConcurrentLinkedQueue is ok because it will never throw any ConcurrentModificationException, even if you remove or add item. Note that those are all in java.util.concurrent package.","upvote_count":"1","comment_id":"1140086"},{"timestamp":"1704837060.0","poster":"d7bb0b2","content":"Only correct is A, \nConcurrentLinkedQueue and CopyOnWriteArrayList=> WORK A COPY not reference to list so elemments in original list are not removed \n Collections.synchronizedList => thows excpetion","comment_id":"1117868","comments":[{"content":"I mean say B sorry :D","poster":"d7bb0b2","comment_id":"1117869","upvote_count":"1","timestamp":"1704837060.0"}],"upvote_count":"1"},{"poster":"ASPushkin","timestamp":"1700669760.0","comment_id":"1077529","upvote_count":"1","comments":[{"upvote_count":"1","timestamp":"1704837600.0","poster":"d7bb0b2","content":"A is correct, can modified original list if you create other arraylist from the original list.\nD: only work if create a copy of syncronizedliss as follow:\n\nList<Integer> sl = Collections.synchronizedList(list);\n\nsynchronized (sl) {\n List<Integer> copyList = new ArrayList<>(sl);\n for (Integer i : copyList) {\n sl.remove(i);\n }\n}\n\nor else thown exception.","comment_id":"1117874"}],"content":"answer: A and maybe D\nA : ConcurrentLinkedQueue is ok because it will never throw any ConcurrentModificationException, even if you remove or add item. Note that those are all in java.util.concurrent package.\nB: For-each loops are not appropriate when you want to modify the ArrayList. Iterator should be used.\nC: is not good. \ncwa - new collection with new copy of the elements. So, it doesn't remove anything from the original.\nD: looks like it can work if put synchronized(al) before loop. Should be checked."},{"poster":"Omnisumem","timestamp":"1697112840.0","comment_id":"1041713","comments":[{"upvote_count":"1","timestamp":"1704837300.0","comment_id":"1117871","content":"THat is incorect you print cwa in line CopyOnWriteArrayList ...\nmust be print original for know if list original is empty.\nif you print original\n System.out.println(cwa); =>[]\n System.out.println(original);=> [1, 2, 3, 4, 5]\nthen option With concurrent-queue-arrayslist work in a copy not in the original list.\nSO THAT OPTIONS ARE INVALID for remove items from original list","poster":"d7bb0b2"}],"upvote_count":"1","content":"Selected Answer: AC\nTested AC. With a lot of modification...:\nimport java.util.*;\nimport java.util.concurrent.*;\n\npublic class q170 {\npublic static void main(String[] args) {\nList<Integer> original = new ArrayList<>(Arrays.asList(1,2,3,4,5));\nSystem.out.println(original);\n\nQueue<Integer> clq = new ConcurrentLinkedQueue<>(original);\nfor (Integer w : clq) {clq.remove(w);}\nSystem.out.println(clq);\n\n//List<Integer> al = new ArrayList<>(original);\n//for (Integer w : al) {al.remove(w);}\n//System.out.println(al);\n\nList<Integer> cwa = new CopyOnWriteArrayList<>(original);\nfor (Integer w : cwa) {cwa.remove(w);}\nSystem.out.println(cwa);\n\n//List<Integer> sl = Collections.synchronizedList(original);\n//for (Integer w : sl) {sl.remove(w);}\n//System.out.println(sl);\n}\n}"},{"upvote_count":"2","timestamp":"1693482060.0","comment_id":"995064","content":"Selected Answer: AC\nArrayList & synchronizedList would throw a ConcurrentModificationException when removing elements while iterating over it.","poster":"[Removed]","comments":[]},{"comment_id":"959451","poster":"Stavok","upvote_count":"2","content":"Selected Answer: AC\nC creates a new CopyOnWriteArrayList from the original list and then iterates over it, removing each element. The CopyOnWriteArrayList class is thread-safe and allows for concurrent modification, so it is safe to remove elements while iterating over it.\n\nOption A is incorrect because ConcurrentLinkedQueue does not have a remove method that takes an object as an argument.","comments":[{"content":"ConcurrentLinkedQueue has a method remove that takes an object as argument!","upvote_count":"1","comment_id":"1117864","timestamp":"1704836580.0","poster":"d7bb0b2"}],"timestamp":"1690026540.0"}],"exam_id":402,"timestamp":"2023-07-22 13:49:00","question_images":["https://img.examtopics.com/1z0-819/image269.png"],"answer_ET":"AC","choices":{"B":"","A":"","C":"","D":""},"question_id":80,"answer":"AC","answer_images":[],"url":"https://www.examtopics.com/discussions/oracle/view/116068-exam-1z0-819-topic-1-question-170-discussion/","unix_timestamp":1690026540,"isMC":true}],"exam":{"name":"1z0-819","numberOfQuestions":213,"isBeta":false,"isImplemented":true,"lastUpdated":"12 Apr 2025","id":402,"isMCOnly":false,"provider":"Oracle"},"currentPage":16},"__N_SSP":true}